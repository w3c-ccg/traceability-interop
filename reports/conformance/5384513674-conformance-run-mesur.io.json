{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e8c59936-a699-4aa6-b97c-5bebf9f2499a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cbf77c8e-a059-45f1-b700-edfc45958d96",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b5ef7747-d1c8-410d-8f19-2bb160146b27",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d88a0674-cb9f-46ac-a43f-3eced817f19a"
                }
              }
            ]
          },
          {
            "id": "c34e7d5d-1efe-4f8b-a894-66c81269bcf3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c29105fe-35fb-463f-a282-795f90af3172",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0f1e2a5c-c5a8-4fd6-b860-7ecb7f43f9dc"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a276d962-1e8d-433f-81c4-4bb29b645936",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "65ee0fc6-600d-43bd-94ac-103bc577fb2b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2e0b2622-ddaa-46f3-a2c4-a11d4741e55a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5941085-a2e4-4657-85dd-f268635e625e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "64e04b30-4e0e-4087-aed1-f2dc6d25f1f2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f9f12eb3-1128-4b00-9167-251b861643dc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8c90d0af-0a91-4923-b80f-86811b30e362"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "41af523d-7d8e-44b6-a448-1119eaa8e4a7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "853cf630-02e2-4ca1-aac3-22f990ee385f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8df1a85d-8e76-4e41-87cb-0c3ccf5ea8fe",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "745e38ba-6531-4667-9f29-89df78cda911"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b541fc15-fb21-4887-8fe6-08edef8e3dc9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1911463e-2432-4454-897c-596b495d9e06"
            }
          }
        ]
      },
      {
        "id": "44f49d66-ea71-4714-8f9f-c81fb84dd765",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "189f651c-a36f-428e-89ae-df8ee1ab0436",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3df7b425-0a3c-436a-80f1-bb7a2411d835",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cd1d1853-8f90-4510-8fb1-bca7b021621a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7d79a6-a672-4dc5-beb6-cdde8830661f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1f569e3-6cca-4681-a668-e27af52821d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa8a5b2-905c-4ef5-a3d1-1486b05277ec",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d8cc01-f0cc-48a5-8699-57bf6f732d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7d956b2-624c-4c29-8396-108935bcdc49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5736a3d1-afc6-4c23-b286-b2a3de575817",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10bb555-fce0-4d06-a3f3-b4f73a9b7a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a816c73-0357-4c7f-b7b2-be8cd9d7d727"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "143229d7-d644-4cf4-a598-c818c6b4541b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "45c1ccca-0f9b-4435-b3de-c8d14bce0776",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056b9ed0-e1b6-4e83-b91e-caa0515f5297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b948281-f5b3-446c-acec-db9a372911cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897809dd-8a1e-49aa-ad7f-4a3e2c2eb3e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "661444d6-cc76-41c0-88a3-b2e33917f6b2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1ebd2ac6-7e19-4707-b9f7-7792c9e5e947",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7767681f-a44a-4d0c-bdbd-f50201b5bb84",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59fd57b0-3600-4c27-b77f-39c91f66d2f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2768cc9f-2121-42b3-9fbb-dd5e9e9c9510"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e48b64ea-823d-4e55-b9ca-40d973411a9e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "75c058f5-55e4-4a17-9144-9630e706e336"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0fd64b52-4fbb-4230-ab34-5899cc548a1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0822fa55-7c9f-4e08-a115-891fa67bf4e2"
            }
          }
        ]
      },
      {
        "id": "07105542-db61-4e95-9a18-b27d0dd2fab0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "83e73a04-08de-480e-90c2-d85a511e9db4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea235acc-cb06-40ac-94bb-44f665cc05d1",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "76866073-150e-4fe9-b1fa-c194b8c0fd47",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d45730a-d8bc-4c93-886b-02770b77b34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc15ca7-e002-47e7-86df-52668aca9202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7417a9a5-e04f-460b-b0aa-5751c4bb919f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2b973de-80dd-44e8-acb2-ae158f08be5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30f1c7e-2fcb-4e63-abcf-01ec08ef41a4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6298374-4a2b-4d94-b4fb-4cb7f035e776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1723b16a-2195-4433-b2f7-9f43669c09b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eed1196-3914-4dd9-9280-581729b8e297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcd76e09-4ccd-4dfb-8b70-67fa54a1134d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe420df-d7c8-4d83-af9c-45ebec2809d0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f8ea93-fef6-4465-9035-357cad434840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da1911df-af2b-4f73-98b7-633291cbe512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f990871b-9cd0-4646-b2f7-c387a7f053e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "234eb3b9-ddde-4360-a155-d5b3b0a952f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4cae1b-ce6f-40a0-b7c9-4eded8d1a051",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e124e2a3-162e-449f-bc0b-95d733642fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a70ece32-c4e2-447f-904b-b7a512683847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1fd168c-d093-4c9b-bd2b-ac76b2eb21cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cb1a6f2-8557-4d5d-9134-0abe1bd1cc94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38eb8561-f4f4-4894-b6ca-f3d82f2dc747",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b878fa5f-b774-47a0-afd7-9a58bfa6e4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee5b9ac-01e3-4556-88ff-4aa0df80b7f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c1fc06-dfe7-43e1-a5b6-856e32557f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0afa35bb-a314-4933-81b2-25f608000a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e3a39c-0586-4dba-9c95-d163b183168e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38413339-b21e-4218-ac2e-311ad0a1021b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eddc92e5-44cc-4ecd-b0ec-fd085f896937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a059fd4-fed7-4a08-840c-f5eec8146aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87762251-8d6a-481a-95aa-27b741dd1b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88060965-6e04-485e-9fff-6aaf95290e07",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "916a4607-0617-4d8a-9d00-e901e3da6434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20e1f6aa-4768-45fb-8220-226783736a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d282b85-1350-42d2-a16e-deae6b38dc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96b22567-2688-4983-8bf4-6c0435d8a001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c7f7f0-86e3-475f-9baa-c3420661dc0a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74a6c31-34f3-458f-8bf9-093b6e253619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57cbb6b7-7a6f-4050-ab7a-a7363ff92af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944930e5-5bce-4682-9352-794b7a94172b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12b5789d-66b7-4ceb-b8d7-e80b034924b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc7f49e-bfc0-45b9-be8c-afc041a163b2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a11e021-7e57-4491-a12c-b7decda38396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "239e07cd-7493-4ce9-befd-fe3ef5a7b71d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c9daa2-4a14-4cbf-aa44-2223cbbcebc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3cbd1902-0041-4376-8484-9447e4e4732e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acea944b-d5b0-4e11-bb0b-05657a31c6a8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785a38ab-a0d6-4609-b9c3-f8d9699b01e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5f596a9-8597-4309-a04e-d28d0f2e3b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e0443c-6787-4ea8-b7e9-65bf2865bf9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06da1b93-313f-4326-b90e-541ac8a72627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97f8329-f69c-44dd-a667-9171eb1655d1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4a73d7-37f4-4dc8-9d7b-5ec9b0bafadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf56d384-6b2c-4a27-865e-78920e2ecb83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cdcf29e-7036-457c-95ff-2b103bbf556a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd522731-c488-409a-a7f8-f9cca2cbb740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4cff92-ca35-4af2-bc5a-455d1d4375f6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f21723-a1c3-438f-b024-ff3072bed593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9486f181-455e-4652-8451-ad1f9413d8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ffa8a0-8621-41bd-937b-ace3e2c608d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8811f0fe-9188-4bdf-bfc3-1bb8329cc821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1f2da9-11f8-4e7b-b981-7b70b9b18549",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f27de3c-abbf-4fb4-aacd-96f9b5cdf018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aba9c89-d3b6-4f73-ac08-0f949b8908e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c45b48d-1e89-4926-9742-89b29ed38516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f89db409-76ee-4518-bbfb-825c365148e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7089f4-d883-417c-afb0-2f408cefce2c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b650130a-f4df-4e62-acac-77bd88410e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c1380b0-c683-4b6c-9636-c217b0943531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a02bc601-6ee0-4d37-a3c4-ce6612595071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82902375-fb8c-41fc-a444-d58eabb602a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fd7a12-6b26-47dd-9b89-7cdb378110f8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c8861b-01fb-49c2-aed4-f9006de04ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9536b1d8-66a9-4bd1-8f77-4a12b55a0165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39ad858-5e39-413d-9b98-3ebd5ddd33a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2e98dd9-399b-4dd7-a74a-3b19121c28c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458edc65-d0de-46c4-8895-caf2fd422b74",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8dab3d6-5c07-4cb6-82c5-b3605a9e038e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "442d5f37-4bcf-4605-81d4-fe8615c14ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd3318b-38d3-4b94-a2e3-83a4ff24bca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7f07610-9276-4e16-86e6-652605b7e79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a781d532-5ac1-4064-8b06-5db820f7c640",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a82d9c-afed-4383-8a92-03ec69fb86cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e13e1a79-caea-4d85-8e0b-3b274bec09e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1d083c-246a-4043-b872-73066fdc525a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57be6cde-7bff-457b-b9bf-fe4d0dd14df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80d8d29-1112-4a93-9f15-4dfa98a628ee",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2e494d-cfc4-43e9-84ca-9dc2adbef2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e0e498d-54ed-47b4-a504-ff9dec5b41d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6798d80d-4b3b-4300-ad23-e19b047563ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "321ad887-d58d-43bf-95fd-8bf722825f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaadca5d-f609-44d6-b323-7a49177fbd1e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c093de-6034-4dae-b317-c2f37b489732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fdaa722-e503-4dcf-b876-57a68b989ce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e306c2-b1e8-4ba4-82c8-8c246f43303d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "125bf82a-0a0e-4bd5-a7a4-cb10c4d2ca13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f6d130b-b6f6-42cb-ba3a-3be61e3bf88e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "032f848e-da95-4a25-832b-8520677772e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "292da3c7-7a87-4643-a1bc-32a2a4ace54d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44bf2016-4ee5-4a2d-b10a-a7617948ffe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bcc1bd7-0323-4e43-907f-cb9f2cfe938e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de92671f-5f65-4416-bbbf-833b2f840c5e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df28c63b-05ed-4192-8542-6094200ada47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c3cb221-9b01-49ea-bb5e-0b8548ccbb28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fee078-fa81-455d-a4e6-d2bf9cc4077c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f5b9533-993d-4c80-92b4-b479f5a74a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ecfce70-c9d4-44b9-966e-9b4ffcce8b00",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f188a9cd-18d8-4087-8663-1c0f5cefe75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75edd624-305e-4da2-bc83-fec8d6ac8904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b135b625-b5e2-4bcc-844f-825d904805d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "790c4ed3-c7a8-48af-8c9f-f910a7431937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db6d1bb-9f90-4702-ac13-df6b0c302158",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc935e6c-c5a0-46c2-a5b4-5412d423a19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75356a43-54e0-4fd3-8255-f0a1026df2b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97027dbd-dfc5-469c-a420-af24efbf8e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "05e51adf-8323-4319-900d-6219aa9a55c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172db442-00c7-44df-8a6e-a573014efe97",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2d69c7-ca9a-4430-8fba-9706f498db6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab72189a-2a3f-4e55-a288-2267769c124b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56e14a3-45d8-471c-9937-7d978830d837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "89beb661-6585-4453-a211-ba6a33aefa82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9925b47f-512a-4e00-a74e-f3eb809f64e3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b70093-4961-400c-b7d4-6182c1b54e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6cf88d-1d2f-42b4-8a5e-d202a81ff85c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31cab625-de64-4fea-8a8f-7219135b0028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c9d9bac-77fd-443b-9897-e798d738622a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8c285c-6591-4aea-a053-31d7449d9792",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e17b34-6f7c-496e-80ad-76ab6561bd46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b70a11-b6b7-40b5-aae3-0df98b7af91f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d941be95-5d9e-44c2-96fa-cab3c316d468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bbb1800-7514-41d2-8744-f1e9aa7c45c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0631c42-e9a8-471b-87a1-12134f2f29d4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b57fbf-4d57-4dc1-9421-c4b1dc0e9174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541505c8-1306-4557-a018-572535db7844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e6fea3-8f05-4818-9372-cb28d1c0f3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd8f8bc-45d8-4d2d-b78d-8a68c95aa563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7e2999-41cb-4e78-8885-ea22615b72bd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785da8bb-9933-4bbd-9529-4001416f8720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41869d1d-7082-4098-a3c8-810d5b51d339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be68844b-a99c-4499-8eaa-5d30bad18908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8039a785-0db5-488e-8183-1dcdfbcc5709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca686d6-cf5e-4112-bc80-df842cd393d2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e173bb27-cb3a-4b90-b6cb-2cba9ed8eb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107530d0-a2be-4e8c-85ea-95942330ba0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052f1916-b5cc-4327-a0b2-de02c77021a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fabb641-e74b-4b0b-b984-608cb3e2ba32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59956e79-72f1-4a76-86be-a3c32fc30dac",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ae2930-8fd0-4fe1-88ca-12d1294ede0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45832e05-517a-4313-b08e-bc2218f6ffba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9e80db-d4cf-486a-b3dd-720d3617d8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a666c582-477c-4dcb-b756-802275cbcd32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae2b917-088e-4eba-b8aa-5d879459093f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85106197-094d-4ba6-9840-4725690a1075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6914d92-a96f-422f-af84-a86e2f648940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25daf53d-fcf1-4a88-b35d-67d65f05bd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a764788-7753-495a-9086-63a348c44069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3897856e-c33b-4759-9420-d96e1f89cc5b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6b6ee6-b508-4d5b-befa-4e8595723af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43f5b44-ccec-437d-bb63-142464efc10c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4026176-6777-4c00-9ecb-4121dfdce1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0779fb6-9167-4e31-83a1-5a9f9e43d0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec6dcd2-79f9-42a3-a104-146b219e7554",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe695c6-0c80-4e13-bfcd-dfd06b0e12fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d0916e8-a5eb-4d9b-93a5-14cc157dacf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ff3244-ff4c-4d75-9d3f-e9880d94a264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b01caddd-7341-4373-b354-0a4bdbd43ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0411ea-5e82-482c-ac22-2bcdf7934151",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a79b491-5ae2-47c5-ab60-6e4b685e7ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd364e7-1b9a-4c27-8d68-25c2fe613667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e1a490-4eb6-4ffa-99a0-660051c27a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00e9b426-bf5a-46dd-abcd-c6919671f39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70bf34b-d196-4b86-964a-e966041d712f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e028518-8bb3-4570-96e5-3396c3494afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c2d7ca-6173-402b-8dee-21f8e764c1a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01fc3491-ddbe-46e1-9e23-412af33d5735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5cdf3935-e764-4925-bf9c-9fd7c447878f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42049d4-f5db-48e3-8f9e-0489d9cb9715",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c840be4d-7e6c-4f59-a7a9-8c49b8ad18bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ddea638-5864-470d-9092-954d02124ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82ac568-8d61-42e3-9422-4856745197ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "efde64c1-2cbf-4c57-97f6-f31b679afc17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbfc6ac5-d6d5-4674-9f90-5871be1c28f5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5295a551-df2b-4e9c-8b5c-083d6702abe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95caff21-5e50-4a79-815b-97a0db785629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c41fef2-ab05-48e7-9f45-61e02fd2a45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "152ce77c-a841-4a0f-9062-51c15b20297a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fa7738-179e-4a3d-98fe-eb54dab84d22",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b05e79-2c50-4094-8033-e8f67a469a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4535f64-0fe6-4958-b53e-69ffd9958a22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c44c8b1-dcb9-4b2b-b79d-55d74d27164a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c1e9fa8-5719-418a-90a5-75659e9aec68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283bde6f-dd17-4b98-b2f9-e39740bc5bcd",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3526f04-f14d-430b-84e1-d34ca3796bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "757651a1-c42f-4798-ac51-1cf25955af28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de190a2e-d59e-4135-b193-5cd9c525c44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c61b4d8b-d657-4bb3-8692-933d0709e4bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cffdb98-b2b6-4c9f-a7aa-a66bf2692810",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f50c83-89bb-4ea7-859f-cef0af098695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51fe9ee0-6345-4526-b72f-67c51dcaa41b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf234a31-f2ac-4cba-b539-cace663a2ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a39def3-9e7c-4a11-9a30-833dc408bbbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd3e97e-dcd1-41d2-9eee-8390f7bd26fd",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4da4200-8007-4047-a2a9-06499dbd4403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd7c3e7f-60c4-452e-a547-ca7ac02744fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0198b6-531e-47a5-9b0a-93956234b83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8cd4946-6845-40fb-806e-4e60310de591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f3c099-9676-48d4-a00a-4a3d92a710a9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fde9cc-773b-4e70-b36f-5b7dcba34d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9efad4bb-cb23-4adc-b8ae-8db9347fb71a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31759175-d8a0-432b-98f9-4e7fdb2fe387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "afbdb749-0dac-4799-8f40-0e78648b7c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a325aa-71ae-464b-9333-f42454aa9f3b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afd6533-e3f2-44a5-957a-e54a50d33f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e91830b8-af6d-456f-b7ae-efaca642b563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3dca80-d617-4945-8e1b-f09fc6f61b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2feca245-c9cc-4c77-ac1d-b4687b31b229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9320407-7f03-4841-8eec-1e9f64c77f62",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1c1020-135a-439a-8842-a5e5493561e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c56305-d1a3-4e58-b3ce-0b510b4a9a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df23002c-d52d-4f9c-aa4f-8165c59e68da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "55680f9c-39d4-4e4e-9a8b-343aaf56c1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73420689-bba5-4013-b2f1-30bfa32f7aa5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f40151-d425-4372-a1e4-08b4d438a772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fdf2229-2a0d-4225-91c6-a3033a7ef4b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae192f6-7c24-4858-8dd9-5d0ef80b15a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1926d4a-af23-49f7-9268-054b56939b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14000cd0-f0da-4077-8e8b-d8dbf498a91e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c45f9da-93e9-4864-92db-0ec8448a8f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2202e733-82c0-4dee-8763-56ffdc5acebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6645702-38b5-417c-bcdb-91bdbd178702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b5355fe-82c5-4e31-8138-c92e82f8f236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c01c90d-0ffd-438a-9fac-7e1ec606536b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b377cf-16cb-419f-8e40-eec7ec40cb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9260bee0-c84e-4f94-9a29-62a2ae34c2b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ee5354-b289-4bae-9c6f-94efe2c9accd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f593009-16a5-4545-8ae4-bda6d2b96373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27df9580-82a0-4801-b5f0-60cd9c741247",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad173ed2-31fb-4d30-b5b3-3af7df8e9f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "171b7dc5-8c84-4af4-85ce-f80cbb335dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f92fac-56e6-4e25-b569-0f1785e54b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20d9f147-1f76-4201-befb-d6a841cd6cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2954d95f-a3e5-456f-8e32-b8b3d70f7eaf",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74661c81-02c1-4740-9004-c4f38ffc6e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00ffcce9-8e6d-49bf-817c-e4cddb907f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7028ed4e-483a-4719-8ac4-c7e1fc830010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99f38ee0-d945-40d7-bc5c-24834e5274fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc7b87e-f2ef-48a3-87fa-bf031afe5bbb",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dafef4d-136c-4597-ab4e-4bffd21f511c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb2a43a1-565e-476a-a1b4-b2277c89d70d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c7b689-51e5-4e99-abae-53e66f6e5df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a888dc55-9800-4d3d-a37b-d3061fd64ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3d2b21-8485-46a0-931e-8986b1b48bb3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9ae7ac-17e5-4766-a55d-ff524eab2565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17017f3f-7664-483d-9c11-8eee0f0b664a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0eb6a0-a79b-44d2-bf78-8559f728b41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "090ee30f-e856-44db-bad1-cb57b299a9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db84de2-b337-49a0-a972-6ef9bcc5dd39",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ec9327-adbd-4ccb-b5cf-fe258ffc3e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99dbde94-00b4-436e-be43-27fcdc4073d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a924977-266b-4fee-9b41-61ff6e3521f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "95228c38-eac6-42e5-baac-f99dec8f33fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fcff542-a390-4138-abc9-a69ae1e45901",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8f3f54-ae6e-47f7-becd-89ee0eabe43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a52e09a-7dc3-4c80-9800-cce9e095e42d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73463168-77f7-4e54-aa95-497e4a2a1621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df8c7ca8-abc7-406b-993c-189b56b3ab0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992c716c-6e34-4c2e-938e-979ffe3c8959",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f332902-10a2-4763-aa7b-7f2a9d0a5f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee2ef50-9077-4e6d-8807-33e47d37a83e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb763ad-b1db-4980-8f4a-9662cce03218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04684170-2af7-4176-a2b2-f32ed02d8ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926f75c3-79bc-4d7b-a80c-b6c96b78c088",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bd30c9-4b4e-4c85-a363-5405e34dc6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f743fae-505a-4403-973f-d6a58caea91d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ccf793-3cab-484d-9b89-bebab797514f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53e3839c-2f9a-4631-9b6b-e718be29a545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26de8b99-c181-4914-8cbf-5c2a0e546ebc",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afe722e-cf78-4907-b8d6-15d8b69994e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6a9bfa-6187-4de0-8f58-7f3193999681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b01673-a20d-41f7-be66-b48547dc2b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb03051-553c-4718-98b1-778127343bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d646818b-c7e5-447a-86d2-1b67b71a1dae",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d4fc98-5b4b-48bf-8992-5124a0bf2191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b5310d-04ef-47d6-b477-a2dd61eb9eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55c116d-1ec3-43ec-b955-2a1c6c34d0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "09b29f2c-4db1-4f90-8b38-fccd6b7b0616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f0daff-7f9c-4e97-ad96-b5ee632555f4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d917d9-ab5d-4c9d-ae67-54f56db3ef1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5db7f3e-99f4-4598-b5e3-84c3ec2c92d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7bf454f-8342-4848-bad5-59f17dbc4732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b6bd83-2c6b-4e83-bf82-bd1a511f9e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c047082f-ef9f-49cb-bddb-c3557e472278",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0005e6-01bf-4506-9474-edfe935d509c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9643ddc0-e558-4919-8c3b-f5b0850004f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c275e514-cfd0-48f1-bf05-2bd72ce9be19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfe93e91-5120-4a33-9347-be24c1919efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2105e745-dac4-4914-af81-1c72f04be2c6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafdb783-9f17-4f79-bb8c-a294dd525885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2464525d-e520-43ef-8ab0-762ba058a43f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43967a73-f3cf-4da8-b293-3d25ac6f894d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1fbd6fc-8dc6-4d57-bc61-9a26ca023ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42123510-6e1e-4585-a7c2-61052521272d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3130ce-f7fd-4b33-bdfd-8a1e2f95ad35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a597f1-cb31-4827-a527-bcb97293bbad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2f411c-8f5c-4550-a1a0-3aaf9ee89ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb08a3d-8381-4f62-bccc-c819a008da9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95205137-60b5-4320-b00a-2c12448fd13f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30703e75-9db5-4e58-9115-8079787574dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c6d8aa5-56b7-4e07-9c9e-4f69d0149602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba93876-1a24-4973-8cd9-07ccccc2125c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff3ee67-c942-499e-9de9-1efd15519ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ddf07f-8784-402b-9d6c-df7ff1b5fe23",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e41bb4e-b075-4c1f-8965-c8977e12a0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33041bd1-e240-4ad6-8345-66801faae6b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d376c6b6-e8c9-42e4-95d3-1dec8fa831ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbb97a9b-2f57-41ae-9640-43b3a4f28ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e98cf5e-7229-411d-b8c5-4c50cf6d1b3d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed1d65f-6ce0-4d36-ac7d-3bb2eed3e63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e56b6f89-dfcf-41d8-af66-c3a37b480c67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e1ce92-def0-483c-98e7-24c985a92037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8496ec8c-5f12-494e-9657-188086d29a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c688f2d-42b1-471c-97a4-0dbc1c3989bf",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "531cb517-e0fb-4a90-8a44-ad4707773205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac478ab-a5b7-4c2b-9c41-955f8781b189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f897e73b-d58e-447a-b327-e8aadd928338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c8b7aca-0c5e-42b8-8ae4-f497fa194083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f9ec5e-5b52-46eb-b5e0-6991f70cfeb8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9d3cad-e21b-4894-a86e-d8ed57c9c290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ba68fd-fa4b-4095-9b25-0b8315b9a0c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6ee8e5-46a7-4c63-9652-836e55957573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0c0cff-4aa7-48c2-9199-fec08c944304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdccece3-466e-43c4-90a8-1ee260738907",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58fc4fb3-fc23-4537-a547-f7f10feb5dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d774a9b4-a1c2-4acb-b391-a9586b0ab82a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400f6022-f8a4-4ced-af8b-6c4cf1b8c907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "74ae73a9-e1e2-4eee-9f94-4f45f21fd321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fec478c-4055-466f-9af1-43a1d7660621",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9042e571-e30f-40b2-9431-068f2ccfbcec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26098b14-f288-4ba1-9956-53bcd0ad3ebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40f4d86-ed74-4cb4-96a6-c44d7d286c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "59e20efe-0963-4c08-a9ab-5c971bf9081a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5396e8-b5d1-4d21-992d-ba6e563104b7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3958d6a8-070f-4abf-9994-06a3ee622306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8900e7-0b4e-47c8-9a3f-ee0c70a5f489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18004c06-607e-49ff-ac8b-059f93b019dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0cef389-e1e5-4892-8a03-71c52ad8ccab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce08a6d-ea14-4ac2-9118-a3f30106709a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d15e73-5931-4ee9-8203-731c0d4eb475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b2aff82-c0b6-4440-b958-221f3d428e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c416faf-d6b5-427f-97d4-419015335d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "632925d4-9fe8-44f5-847f-d0d2da2cbab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f24e11-c015-47a3-9e36-8535023afcc4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98eb2e0-9f1d-4010-af1f-491b54d28d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc575b51-d4bd-4e3d-9781-6f3d3057a5c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4632f006-5440-4b4c-8403-a96f29f70f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9aaa60a4-a350-414b-8aa5-c07f881cb18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dffd4069-c0e6-43b1-b032-dfd71ccaff65",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d6b131-5211-4098-8df4-12713d4b2b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "880e55f9-df49-4426-b0c1-997c74f8daee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9985c7b6-a995-455a-9d9d-b8de9d40806a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37912f71-90c3-425e-adaf-3611d7e6df25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64c1af1-de89-40c7-9317-62241210b348",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0297a735-472a-4bfe-841f-2cb7a6df0fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3feaa5b9-df4d-4dd0-b74b-20af8048edfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf85dd0-6ead-4b53-a7f1-4caacd8d085d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "40bfe569-06e0-4ded-b008-a2b7c08b0279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a00fcd-01f4-4edc-9174-153df7150c0d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ea405b-4f85-4189-abf3-cbe5b9bd0bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74acbf18-bf88-4aba-8bd7-1c82ff656f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c134ed-be21-4b7b-bcc1-b7a17e6e547d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4183cc48-5b92-47e9-b6fc-fbbcba276af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1429bc-d6a3-40c3-88d6-59ae9b7ef6a1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190061fb-3551-4055-9663-f202cdfd95f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d69c2dc5-676a-46f5-83de-631f83e09327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc66f29-c8d6-478a-913e-13b6f1aafcac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "37b24cff-34a9-4302-8bbe-47b50eff4e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9cf3e0-f1f5-4b26-a520-82d96d922dba",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04882c2-0f79-4705-863b-7501670766fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac0c3db-38df-4439-8978-89e999008884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a437c9-0844-4f59-a119-21285734c180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1bfb2c-3a23-4140-bd96-4a8e882192bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50706316-69b6-43d3-9e20-4f875427f7b8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c2fc56-77aa-4e81-86da-437149f14786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "718aa947-6d5d-441f-b245-5aedeff7809e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de395c13-ba26-475f-91d3-115142e6045f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c21539c-b079-4f0b-9f68-ff50e2f6d18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8c9b7c-9d4b-4828-8657-f4612ed94704",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8c937c-de6f-4eee-84c6-1b5440212398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86aa48ca-ca10-4e95-b6d9-e0df7adaad36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1babac27-a2cc-4c89-a40a-4f3b22214d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "467c5ada-4036-4f7c-b197-ba4f5537ab60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0445313-8036-43eb-ae3d-8cd44e97555e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdff5864-9d44-4bd2-916b-000e4ec37371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b28e923-a43e-4796-9b1d-01cba3628dbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e3e971-2925-45d3-b8bf-28a737512aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "97a85daf-a4b3-452a-acfd-52d6dbba57f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10086c11-9283-41bb-b75e-780df6c74de2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a2d43c-1609-4a4d-b63f-462668cf5035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b53e413-dcb0-4f84-bf71-6a4471930d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ab64ad-1cbc-4d68-9ec4-287c384191fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "372bf72b-8597-4fbf-8014-aa339443f99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e6f3e1d-e4ee-468e-8d61-040f625af7b8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a984e25d-d9e3-42c7-83ed-a4eca623187f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80bb69b4-545d-45fa-816b-d5a24d717dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6de31c-7766-4453-82bf-92fd467fff70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "534f402f-01d0-4ef3-9d7a-1a3c9faa3616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa2d5bd-1a64-4a03-b55c-e31ac741a244",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59520e84-a5cb-44a0-ac0f-cf3a25bd0170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c736fa-9e90-4f0c-bbba-284d46ca89cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1021d4-db24-4da2-a73f-88a11630f7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21938a6b-d1e6-411c-9890-228e462123a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9763469b-a189-47cc-bff5-d9c5095054ac",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a2b4a9-4c5d-4d14-9887-61c2f9936dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5906e20d-dc50-4c09-a05a-746b2e34c3ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6ec9ed-3321-4d67-9e28-ef8d890987ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c09c32ae-bbe4-4f61-b667-d2a23c3e38c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0dc99fa-5e0b-4ac3-9f1a-09559c8318a8",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac40b7f-9786-4841-97e2-f966271354b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c62d3e-27f1-49f5-91a0-bf180603067b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207385e4-abe6-4b18-9b31-1c5c351c8a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf02cf38-a1d7-41fc-9766-6a93cc08e690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a843be-50e0-4de7-9f74-f3c7075676a9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538cf0f6-2086-415a-afca-5fd2f5cae352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f04b50-8b3a-491a-a8ad-2e2cfaf09e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e3f0d6-1bb7-431c-ba41-7e0f7c7ae839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd1ba88-c0cf-46e4-a90b-d791c50a723b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158d3a65-5c50-4284-985f-2f90ab76187b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f80336e-0b05-45ce-a7cf-3015bdb5145b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40fab002-be96-4557-af6c-c41c3db9d746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d806b089-e996-48a9-8a9c-fcfed2d60e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b3cc252-26f5-4988-bb5d-ec563ca76acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4cebb1f-f6f4-4399-9fa9-8ca67b9f4915",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5c896d-9fdb-4585-949f-c24182e5270f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4023b68-b76d-402c-bca7-a1f50c8d7a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b5f2e0-79ed-493e-9b1e-7d8aa8507f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3eca24d9-e98f-4beb-9c80-ea263f62a711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1e1812-4ab3-47bc-9fb1-b7b371d18cad",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bad420-693c-4cd5-9a82-fee267d45c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202a850a-723a-491e-a085-8eed182233ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd531dc8-37ce-46b4-a8a5-2f4bc4a06b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "54a2923a-1c9c-49a5-a8e5-82a302a1c799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa53b92e-2362-4bbd-94c3-e543000e29ac",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2e801a-2324-405d-8d97-d774b0f05cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784a3f0f-577a-4d45-8823-5ebe66c29607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d318b4-beeb-48e1-be23-908c732bde4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebec584d-9c0b-440e-8f4b-ba9e1d5cf316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6d1ce3-59dc-440c-8e7d-c4037a6c1298",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb07a5c-67c4-43fa-a005-ccea323d2943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe44bec2-8871-4a50-82bd-b7bc66232c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05858cf3-4464-438c-91b5-ce4ccd25bd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe76388-67ab-4d5b-a080-4526ad68ca38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad61f8c0-53a2-4e04-bbfb-ace6fc178ce5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39179914-5c04-4618-9746-a2bcf0396c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd88bff-29d5-4e1c-956b-e8714246c359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85620f5d-36c1-40cf-8fbb-c9c3146c7275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a9e8890-16d6-496e-8f0d-ebeb4d118a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24caf636-babf-4694-b33a-d5979c529cf8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e3355c-0463-4dd4-bb87-ecac0646d2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "46fbe694-9f61-4f8b-ab37-08de8dfde373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785d4c80-99f2-4155-99d9-aa57209492be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "577148a4-0026-4b9e-b5cf-235b69ea43ab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7d144e45-27aa-403c-a855-3af270d5e3be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ecb72a7e-b30b-43b6-bd57-6007b4d461f0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c94093-e3ab-4eac-81c6-99d57368bff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88b43abf-a073-4f4e-a8a9-6dc81ff0c371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea05c72f-fc83-45b2-ae6b-bcb4851110fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6df87f32-394b-4f5b-9166-5362fb99629c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c4cebc7-29b0-454e-9781-af65402d2a54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2bf38f9d-c0a2-40f4-9ee9-4216cdedefdd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b038a31-1e15-46be-8b4b-2cfa2f870d03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "837b5488-dd99-45f3-bb91-e25fab6967ab"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9dddbe2a-e4da-4495-ac35-6db56a654e8a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ae32df99-cce3-4b45-a08c-0b55aa03f2ec"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "76d8588d-9c8e-4e02-abe1-e2d34e356dc5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "007edf36-a137-4d57-865d-eaff1045a6fd"
                }
              }
            ]
          },
          {
            "id": "79a0e22c-9146-45c5-8930-18cc960c4e7f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f9976863-ba44-4af2-9976-84e8d9b4fce6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "effdcbe1-8694-4d8b-9da4-6fdf7e4bdded",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "755d502c-038a-490e-ae14-2f785dab56f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b017401-c889-45a3-bc29-b902a42df68c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9d78838f-ac05-4371-a749-ea96bb91bf9c"
                    }
                  }
                ]
              },
              {
                "id": "435037a6-c2ef-42c9-b73e-133333842213",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f473201c-22f0-41c4-90b6-4245aefd2e6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78cf02ac-66c6-4ee4-ad8d-862000cb177f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ce62369-2d3a-4e7b-bf93-3ffc01873512",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "71b3598d-636b-4047-a0f5-7a48b639745d"
                    }
                  }
                ]
              },
              {
                "id": "6d2d9bc7-d619-4e51-b594-c8e9fa9b1da0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "542a0cc7-8e68-40a8-9329-de193b39622b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bef8e04c-a900-458e-b4c9-e1b5228a310a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42d94ed3-905e-4c8d-bd4c-3e2ff8058115",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a44e35e9-fd56-4b62-a80e-4c66764a7980"
                    }
                  }
                ]
              },
              {
                "id": "3581209a-f356-4bc3-b590-0c0f37dc9797",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a98431e-259e-42ca-bd53-9193748aaeca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db0e7f9a-8bd3-4d91-b14f-f2f8a37879af"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15563364-f36b-42f9-84ca-c1fe5b4fcf89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5cc4eb5c-ed19-49a3-803a-f92335ad68b3"
                    }
                  }
                ]
              },
              {
                "id": "e351e3c3-d148-44ac-a1a8-f4ea44070ab5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ed30129-374a-4d0d-8bed-25e76cd2ebad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ad026f2-27b3-467b-9849-36ce71d4d9b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56c4113b-2a08-4390-bd2b-2c642c2a6a15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9c355430-cc7a-4122-abfa-ca834f89dad5"
                    }
                  }
                ]
              },
              {
                "id": "35c8997a-dbb1-4fae-bad8-599fa1c18bee",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c579fa1-a87c-43eb-8ed1-a90194623ec5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "54769059-0235-4886-a48c-1026010d33ca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bcbcf459-badb-4af7-b54d-b580c13c74eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "725ed5dd-5501-458b-8520-325002d3d43d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "731b27cb-b542-4467-b8c5-3bd08044850a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "75c83cff-e8c0-4098-8cfb-90bbcefb37d2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "319c1dfe-4b92-4327-9b61-d297419456d8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1775773d-d1c7-4d7b-927b-e5ec19574df1"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d476791-4e6b-43e9-9355-cb57b594d032",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1ba6d2f2-8c96-46ef-b95a-055cd9f1d0c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "03f6048f-a55a-456e-be47-4608d0115339",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "51645938-eca3-4618-953f-ac18b28d8198"
            }
          }
        ]
      },
      {
        "id": "a59136f5-230a-4ae0-a2da-237a42dcc4d3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "87423978-c3ff-4f56-9900-4f43338cfa8c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ec13bbf9-15b5-4105-ade3-c44955178ce3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6924a024-2732-407b-bd0f-179ebea5a16a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964b9b01-7d0d-4920-8a8a-46831a312304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d450fef-84c5-4006-b09a-33d43133c3c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3aa5a9-6fca-4142-8223-9ba3f3e3e209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d13607fe-f7f0-485c-82ec-8c0a3a3b1bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba22f290-e539-4ea1-901d-b36fa70dba7a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2261ba97-1daf-42b3-8d62-40d7ab0b27a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e826cf7-407b-439d-a15e-da9775ff7616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fa5f64-650b-493d-a9b1-703477b6c3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "876cb621-3bd0-4935-8022-56e8e0f53778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e64679-afd1-42d4-8005-02b9cd462503",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fba67be-5890-4cc7-aa1a-33ac1cd42a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "761186de-b1a3-455d-8137-bc4dc282b2f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355d9118-271d-4208-a57f-0e8e34a5f1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "689fff13-60d6-4b9f-9260-218f560236d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3867d31-5bbf-44f9-aee9-bb7ceb5653a7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b154733-4f37-47fe-b710-1150796203e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c364a7-5099-459c-bffa-578b8f2b86eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee9c04f-a284-468a-8705-84e7827cfe83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a293e5fd-e03e-4843-ba2c-18b1a1ca313b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6901f623-8a8e-415b-8dd3-ae2cff011db1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a45e35e-8f2f-400a-8504-1254b5ba8a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8777216-3615-4b36-aec1-73fa2c9cc356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf24f3f-cf58-4bdc-9ae3-44116b87d450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17f38d6f-78d3-4a55-9a06-23a7e1a8f517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de086e4-59fe-4827-9740-5e56c285a5bb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c20549b-61e3-490f-b868-68bf415788f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c8a25de-d599-4a93-9366-ad2d4ef510c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184fdf26-c611-4d66-bed2-27c374e7d197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e12342b-b48c-489d-8aaf-b7b95c57bcef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a16b7d-3548-4ed7-8a3c-2aceaf36ac01",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abb1f11-5ad7-4e0a-a0f7-146ebb06852d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb09d030-88f4-472c-8783-0a6633222feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff40102-89ee-4286-9297-c4d90669bdea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a28e9341-2497-442a-afee-ce9dbc2ae60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cf2ce9-d52e-4dd5-b3a5-74de10c23c82",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21956a0-1ae9-438e-bdea-11125b7aa5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d56e7b-21de-4751-8e56-b4979a2e8145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255fb799-f41c-4ea6-b98f-4ef5987c873a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae63131b-6de9-461e-a78e-a780060ad1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e7d53f-2492-4777-8971-88d0094ddad9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae5090a-3ae2-44b0-b41e-831e1ba522f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3560376-cfc9-4eed-976b-a847cb0c7a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb4572b-af09-4559-a713-841c625551dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b3c0be4-65ff-49ff-a2f4-c27d8899e6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add9da3d-089f-4364-9e70-1dcc5849c704",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af290b9f-5f03-4427-a3c6-5c7b47b0abc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6fc7f0a-8309-411c-864f-ddfaa35af0d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caace714-191a-42f1-8fb5-9489cec48dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4d687fa-2883-433e-83f0-c112d5afba00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a6f3d1-7ec9-4e46-9eab-9dc290f14cd0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb435a4-5cbf-43b9-966c-5c637c121a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2001b9d-9bba-4399-8821-242ed370ea3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21ced97-2a28-4096-ad6f-d0a2a9553561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3801502b-b9ee-41a8-b65f-af93711cfff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399c6d62-2c35-4553-8870-4b4aa2145979",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2849ab4c-1ac7-4edb-a19f-4771cc8d47e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4777de40-fb35-48c3-aa22-6122a2233ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4d0e61-bc13-4534-9919-d4ae9259be58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b25011a-e1c0-4581-b696-8a4c8739cf44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03f7f43-eb25-4e18-b7ce-8135507b8c63",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2035619a-a711-4930-a498-c6030e11fe5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e66ab7c-ffa1-4b02-b27f-31f9721c8832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed00b7e-5569-44c0-b26d-e27d23664032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6adc5bcb-d530-4de1-830a-58ed90a573a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6716877-bb5a-4eab-88b2-2e406aef9441",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd54751d-8dba-4e99-8d4c-e3547484a131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4717e0-2bb3-49b4-972c-f9f8a7291e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc45a7db-c61d-45d4-a522-d416bcad262d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "00f2bdf4-04ba-4a16-93e1-c694b77585f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2090f48b-1cab-49e4-9d53-a88047a3ac01",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e088eed8-0ac3-4be4-9352-cdf96c542605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de0b2fb5-403d-49f7-9e70-3acf3ca680c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926682a1-e1f2-4c4e-b590-a1072d3089d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "86162288-505b-481a-8419-1eebaca50bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f8b275-89db-4614-a387-f68029e9f75b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9db5da7-b1fa-402d-a4ea-11d1951bc3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "853c4383-46e9-4c05-b0e4-f8a7da74f05a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ea3cf8-0f7f-4dd3-bf38-ebf4983717e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0740211-149f-4cd1-8490-fa88b651d190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f433b4-9769-4721-aad5-a7407691afba",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6075f209-70cf-4179-9a44-3524ec7084d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d7290d4-5634-4cc6-9743-109734086c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8014439f-b47c-4cbf-a66a-1a9c6c793b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0624e53-05b1-46f0-b580-610f335ea276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2ae98f-c359-4589-bf52-cec5df2710ff",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8398752-2522-4b50-87cd-25e89ae03853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f9c7a1-6f61-40c3-b3d1-e236e57fdb1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe72c20-5e00-4d6e-8ba9-86a921d0c8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6933dba1-6aac-4c55-b770-679ce66627ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e63530c-6cc0-45eb-9769-08ae2fa57466",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "088dd255-beb8-4345-a896-2b2a371e6e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ebce20-8fe3-41aa-828f-2de831c128a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61050585-e97a-4662-816d-e54c3dca002f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee6fde04-5f62-4368-abce-6b2440c86d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbd3ecc-b4ed-4f16-8635-c2ceeb558ab8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04dafc9b-f7d8-4787-b29e-c7624746edd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e620feab-121f-4c2c-b641-bfff86566d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f5ad38-e948-4c02-9caa-3d048b950104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab66803f-7ce8-4192-a3ba-43505c779b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cc77b2-6607-4d61-8e7a-6a945be0d569",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "563dbbe6-307a-4fc3-a923-e64c5359094a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae4e19d0-8e70-4469-aee4-7700592ba6e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ebbab6-8217-4162-895d-6a753377a721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd0b241a-6d66-4792-8229-d0a17efbe261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c722fa51-7861-430c-8230-a4a06303aeaa",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf4896e-c1c0-4065-b96c-77da321e7245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d16787a2-cb88-49da-9e0f-74c22aa67f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5f91e7-0e48-4bbb-8422-421c5c6f2b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e51bcb3-6e59-478b-a53a-73c2760ff12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75897060-19e5-4b78-b2ba-1d2fd62ef7fa",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7a0242-356e-4330-9276-503aa433aba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be6284c9-4f7b-4bcc-b3dd-07cac11f30a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a356bab0-e28c-4004-bfa0-6a105e085c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e85a51-3d94-4fd7-a04c-9ae4f9fafe5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d1ed52-13aa-4374-9a33-cda80d95ce79",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f68bc7-43fa-4b81-aeb1-f2e1270a64e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "188463fb-9312-412b-ac5b-6eef66afde1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba75ad6-6dd8-4023-9f89-95a9f072ead5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1248ec9d-6199-48aa-9b7e-724a9d30bde9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8fbdae-7df9-4902-94fe-a9a8baed1915",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30f80b1-4f06-4995-b55a-3087612613e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "385cfccb-e6d5-470d-8cdf-9d25d24277c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ccbedf-ebdf-48b0-8810-587801253175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf277348-1905-43a0-bbba-3123c0889375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96dc225f-b19e-4510-a2ff-d38b4a2bb924",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f449bfdc-d39c-45ea-904e-490869c2dc53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae8d973-689d-47db-b02d-204b825298ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f774d772-359c-458b-8c6d-260161fe34d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6c65b86-a311-4f7c-a6d3-b6d7261e7b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e15498b-d543-4fe7-81aa-cade11b2a3c2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc5a839-04eb-4f8e-8368-624026ac1d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43bbf7ed-2725-4287-8f89-0585ade0cca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a209800e-18c2-495d-bc34-0037062f563b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a6ddaa8-4627-4ac0-9554-7af5b21be266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddfc8883-afa2-43f6-85c5-e3d836c5855b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceabcf91-cce0-4a97-b1b6-e0989d430a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e46a9ac-9a12-4663-876e-0e1e65b27695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cde26c1-332e-40fe-bdef-5f135f823ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93f5d5c7-919f-472e-8904-a75b17b86ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79bb39d-4c7b-43ee-8084-569d4759f95e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e95798a-bcb1-4759-b573-d0bee623158a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d91f945-6b41-45c3-98ce-78cf59719004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55601de-88f1-4b77-a7f7-09963680e6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa9127e4-97f9-4baf-a7c2-1dc323eb9c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ed1aa4-ad81-4a00-a9f6-46f6277fc0b7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c15832d-e451-4cc1-a7ec-40e3638c9bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db7700a4-4c45-42b8-80c6-1c1f79084bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a719ed7-a5f4-43cd-84b4-232d053c7ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8655b6c2-ecb0-45ae-84c2-a052f62c26ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca25190b-cfb6-462b-bafc-50e2f70aaf2b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c34edc8-7c7b-4ee6-80bd-3d589a830bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3798436a-a3e9-4143-8f7b-56c3abfb56dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a81a706-9bc3-41b2-b66a-db26b424340a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7346f9f7-621a-489c-b3f2-ef379cd22e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76742cb0-b925-405b-a784-062974e1babb",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29f888f-7142-4a0d-a079-0eb06e2a64f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db43497c-351d-4f28-86f5-8447150f1f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26766566-8dc4-48fa-bf90-b004440949d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e97e02ff-9782-4d17-88e2-8514de9287b2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f5b4b0fe-a320-47ab-a0c8-33a2ad1aa998",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7fcd5d1a-7321-43fe-a043-6ec88a1d62f5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5820213-1cca-4eba-8cad-2079a9d47b48",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d1df5d57-a1b8-4ff4-b318-7873f506ccc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad1d768-1410-47c2-8183-aa9f613c0621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "284ab92e-6073-4759-8c79-28a28e3a44db"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0131324-2f17-4a67-9f0c-03f6b8cfe546",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26f3b56a-84ea-4c55-bbe1-e61902745145"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d98dd3f0-df02-4f18-a46b-e36b9f18838c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ac49509-a958-48f9-93d2-c392e61fe465"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "37ab9077-93b1-445b-91e2-907dce84cf0f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "07837f95-f15f-41f4-a556-27ede63e0edb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12eb8998-5008-48b4-8f46-bac795160790",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f2c8141f-91a5-4112-bfb8-8201c5d6143c"
            }
          }
        ]
      },
      {
        "id": "7ffa854e-6a18-4647-80b3-100416dfa349",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ff830745-8f62-431f-a08c-fad590debdf9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08824025-abcf-48bf-833f-2ee887fe02e2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "02a71ad3-57e1-4f4b-a196-197e3c53c872",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "318dcad3-43a4-40c0-83c1-0df53d1d86e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05036278-26b5-49e4-a965-b0622090a0a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8475ad3e-411d-4d12-bc41-f04542cbced9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0056a28b-273b-4b52-9f6e-db7f7ff174a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6af40a-101d-4b08-85eb-16c6e331b997",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f8a8a6-f6bc-4a08-bff5-8f7d832642f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbcc9b71-f891-459a-99ad-a8ae38fbbebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c87c13-a7b9-4fa1-aa1b-953f29300385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f834cfbf-8ece-4cb5-a894-218ac904b4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1999db7e-674c-4280-a5b4-ae1e8c8ac718",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba0357e-5720-40ae-a55b-3c26a28d78cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f702211c-06b3-4b4a-bebd-560e4594bd21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4a8d40-3f6c-4007-8a27-adda52e48dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df8d2fe3-e167-432a-a343-0142389247eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a595fe6-fdbe-4062-9165-e6c0ef023de5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d094b141-0f58-440a-8316-b7b1bc3a62aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf46d02f-42a0-43f0-b749-e60597a00ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec0b5a5-7957-4c2d-8f8d-142965317f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef84759c-c317-4a54-be4e-5c5da7dc64be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9fdb6b-fa9f-4cd8-9553-bfb8a75993cd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce9fef5-37cf-45d1-b8ca-807068a8929e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6fb4292-5e2c-4314-ab43-1f8602985377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d5d24c-cf48-4ac1-8d23-6aaab0395c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df7f00a3-23fe-4cdc-b850-9e0f18f863b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76eadf66-d9ac-41be-b669-323c0f775848",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52da900e-3172-4ec9-b5a6-570f2279b3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f736ef1c-2747-453c-a4d0-46b8d485e72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c996c133-d419-4b58-b9c7-e3ae561d0c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "878c733c-8d26-4b25-b329-4bcf1d90af15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ccb13a-5d53-4e53-afb2-2913faa02d74",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b820b67f-4cdd-49bd-93f7-ec6af7df0e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e6ffda-ed4a-430b-ac8c-f3956ab00547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b991bd-5ca7-45e4-9181-b770915b93fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd731268-52c7-4bf6-b980-0d845265d058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c534fbe2-36ee-427b-920a-ee60feafb1fe",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380c71d2-7bc4-4f64-8caa-00baff5f0b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66b32f7a-84e4-4c8b-a2f6-b9ab08cf31c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05989013-177b-47e6-b190-fcf528d24893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87a8dff4-4f13-4c23-ab8d-7f190aa3c17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a721a4db-781f-452d-8056-b1fe32f95720",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9960b6-a4ba-4b81-b03a-425de09314b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a4c935-43b0-47c9-a095-fdeb09fbc527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e3aa8c-219f-4b6b-9314-77f3888ad138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d338e61-d7a9-415b-963f-2db47e9841f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296bcf67-5e94-4df7-b95d-05ae91078afd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57664de4-f298-4246-b029-c194cb4ba32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fca86ed-25d7-4971-af35-c7f909d6d0dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0db828-65c5-4f51-bd8f-74dc28301f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9183175f-9580-4cd1-9e88-a335f7798782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c69a4d-7324-433b-b91b-350a3bfa5dd7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16c71f7-b01d-4038-94c8-83dfc76c4323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "580d8770-d619-4549-bb1e-5ad96ad6b356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35513c94-e691-4f7a-903a-154af919633e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc96741-499d-4692-84f0-c127026fab6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1461ebbe-3c40-4ff5-8eee-a480b3bb1f16",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521ba8a8-4dcb-40ec-8cc7-c331375fd66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa907d61-f013-4e1c-aa08-6b8f6702caa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff84fd6-7225-4fd7-b1cb-9447d508d2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3fb743e-98ab-4d12-b90d-2404678ad4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a613c57-3c19-40c0-91f9-28cd2d8a05a1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fcbee79-22f9-49e1-b011-681ec6f6458c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e6089e-3b60-49a1-b621-bcfcb943913d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35e7394-7ed7-4d91-a6c4-4a7240063790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "296b47e6-2c2a-4595-a422-2a9be81dade3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c679fcd1-1601-4ad6-90b7-03cc3ae6548d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4953d26e-cee0-4fcd-8078-0a73b0b41ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a94690-ee2c-408f-b481-accb0328cec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cafbef-2256-4d8b-8974-a97dcad51fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7001b74-3fac-4b92-aa1f-f0b73b7e9403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b8b1c3-d16e-4d7c-9148-431a21833e85",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18038070-8788-4498-93a4-8f6c750600cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e72fb25-abeb-448b-95ef-63fdcea400a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66da6e68-8ed6-4262-9cfa-f6f066e71ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "65f687aa-7726-4bcf-bbfe-bd43773d1945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4259b3-a7af-4024-a5b4-f29feeec919d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375d8bcd-291e-4e65-8554-65b6299eb2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b2a303-94c2-419a-a488-5ad35ca30127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e959a0c6-7cf2-46e6-a5ca-3f62c0e99057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e240a5ed-27fb-4128-8528-a52a5fd0e826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfd08c1-0e7e-4f8b-a5fb-22854a1ca866",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab58bb4-e229-4458-9811-d96956d90356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20790ff8-3774-45d3-a194-7f83a87a140a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6848e152-959d-4abc-b8fb-082ae60ee017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "aebdc502-0ea5-4c36-b348-4a57144851fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209a578c-8ef6-4359-ab95-56f54d4be011",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "527e5e00-d19e-4967-b093-bbf3fad4e926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b07714-8ef2-4304-a53e-6fcda93d6f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3817abc-15cc-4046-bab9-61e7279c2ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "525cc9d7-815b-43fb-8f0c-103e99ceaba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd9e421-83d0-4028-8efa-b2b2fed18ee7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c229fa1-c279-411d-819e-d3c0c1bcc5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d0f0e8-91de-4558-8d25-2fb577787d1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ddc9856-8246-4710-b56a-bb3ac1dc80a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1289df3-e155-4484-b5e6-bee8f63b1b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce993d16-2f4b-4d7e-a5aa-2af04cbd6202",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56655292-e584-45fd-81ee-c50871d6b259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc253ee0-f728-4785-847f-e270b9de6d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25941412-7bcd-4b0c-ab96-bf4258a2953d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb5a3ce-f780-4efc-b0b3-1db768f2c7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b613d76-84c6-47b4-99fc-f9e3edf79cb1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5248ff5c-41d5-4299-b687-5183ec0d82e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5af0f9b-2e9d-4c80-8bab-c0cd2fec6251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17089f3e-9af8-4786-9a4c-05cf2a9d5a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "776782dd-81db-42f7-9a28-3c7ee4d14a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f15dd7a-dcd6-43ad-8fd4-cdb5b9c8b173",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea3f342-73a5-40bf-ae31-9e2cdd92a127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080b0620-0f96-4db7-ac1b-f6c03db166d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4b78e8-84e5-4306-96bb-715e98d33532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e21865-9534-44c2-91cf-7864b8b4c173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77cc83d-c758-4620-8bea-eb03236f9561",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de3d358-03d3-405f-bc7e-942f25cd64cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0513f81f-52c3-432f-90ba-3323eb70af8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf5721e-1a3b-44db-bd11-6fc9074cd176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21d45a31-ce47-41bf-8887-842280668cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3cef812-1f4e-49b9-9ff0-d1e0d7e33e18",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52592bf-8382-47f3-b28d-2af2ffeafb33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3cb76e3-3478-4ae1-90a0-0ed6f89276b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971d9a53-cbd2-4d39-b23c-bbf8f0a8b08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0da372e-83ea-4833-ad3d-211748cb5e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146f0729-8e9b-4d66-b68f-f638c8a20a42",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7ef913-b43e-4778-b517-6091be84db3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25109ed-b80e-4a84-9b01-811ea60fcc4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2791b02e-4421-4e9e-9a08-d50d5853388f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0f5d3b8-065a-4d9d-8a66-a5b9ad2060e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88d1b34-eea5-43e5-a6eb-e4e2bd621123",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c27efad-a623-48e8-a983-0089c94b2f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f5ec31-9b81-4b45-94b3-c948da1c89ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc050be-e47a-44e6-a376-24b019fbcade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b093b0c-4d00-4b55-877e-8e8ac5de1248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561ca908-cb3b-4797-9681-08a29d380670",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b155a5-5866-456a-811a-8613691a4c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d9b8641-75e7-4c84-b476-7b4871c9ba32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140c81bd-bdd8-4348-8185-9707b4a72960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97cc9544-852b-486f-b37d-fb1eeeb6d533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a0068d-f8da-4557-a083-91907ea019ba",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d52ae0b-3b11-4e8e-b850-fd41ed3e499b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9416f91f-f31f-40af-8a3e-439c1fe64d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0564c370-5a92-49cc-a730-906679d4e168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea994b9b-fb44-420a-9cce-15ce4e5befa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491b8d02-326a-4aea-ae21-36a3ff2e3fc0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ec1d5a-ab8f-4614-8b9e-e2b7a79d7586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b93bfb-014a-49ac-aff9-c3d892064703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac1f991-286d-4090-9042-33527376ff06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18f2449e-9de0-44df-9430-5b8963cd1ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39c6fa2-dbe4-4773-888f-eaad295de766",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1655f8-5ff3-4120-bc7e-26a7bcb6f0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "188367d4-a54c-4f3e-9538-ee7efaf49e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bfb7bc-db2e-46a3-89ee-db984233a101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b9b0d7-2176-4f42-b8ff-ad1f33c39615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70e9aaf-1b73-43e6-a85d-6ec29e8578a4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164967e6-4b39-4de3-ae3d-29d7ff20e0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8edfc2cc-0de5-4aff-900d-edc3219c3f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765b37f4-cfd0-4788-9e10-0812e48d80d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa09526e-bc1c-4103-90a4-ed289cef01d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9653903e-e60b-4a6a-93e9-e9575b1833b0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc45232-d75f-4854-b0c7-df556a621fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ebc682-9e69-4556-a74e-2b534a3aa211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832ff1e5-d113-45e6-9536-84ac573bcaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a78ee3-afcb-4722-b57e-cd70fb055157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca96b5c8-c73e-44a1-9fb3-32e540efd171",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b10b18-f9de-4ee7-af3f-ea48c733d7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532dd717-83db-4b23-a468-694f6f8a2395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354db38b-f624-4ed7-815c-7d45f9b7ec23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0def91d-450d-452d-8b49-2ff5897b6f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa84cde3-e8d9-4d91-bba0-ae5d0afd612a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1160b5f-ee0c-4aff-a1ca-604e79c78229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64c50a7-421b-4edb-814b-c6f834f6542d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e246d60-0368-4057-a563-4414caf87a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb0da7c8-b804-484b-b0da-37976af49b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35cda4e8-6bd4-4f98-b71b-ab86b8ab2231",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84cc2eb-d79b-4a97-b369-99f02efe6822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c06bc2c2-d76d-45ce-8639-e5557795bd09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07012d31-70eb-44c5-9551-eb4ad2ab0d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19fd6020-854b-4be3-b76f-222a6974a5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76c4606-b2ca-4092-8057-ad97bdc3e500",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0b84eb-dead-49cb-ad7b-66f9b8b71899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d459ba-80c9-4a41-b463-02d3005481d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455bb6ac-b9a7-4042-9ad9-3c06e40d7677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa5c8ec6-3111-485f-aca8-03a35313a8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52bd34ae-093f-4299-93e1-88734a520606",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff9dcd5-9a24-472f-addf-7748d39cffe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d114a3d-d66f-4daa-a6bc-0dbfc94d3c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac647ec8-78b1-489c-85c0-fd9d170099d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b96c07e1-fc68-4490-87de-33a0f386f9a5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a1ff2a28-dc46-45c1-9b59-39ba1b05346c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "daa8176d-0a21-46d8-b62a-6201fec2fae3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ecf44e9-8fe3-4c23-a9f1-d0fdba345bd0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8036eb12-3b47-4614-b0f3-e7b7c11ac591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16e47d9-2c2f-473d-8569-d720825602af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb479a86-65e5-4036-84da-a6bb4ca1a00c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc0af3d8-8be5-4a32-ad79-d758b1c2cfa8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8ce9d2c-763e-40c4-ac56-9967f2fac1ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b27a5e72-55f8-468f-9eb8-95c9c8d955f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2fbd1d0-1b59-4a5a-a7a0-c6902e11be6e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc6c60a1-5f92-48a7-ba93-b154b5454ed9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d2cabd2e-867b-43ca-918c-87063f751b67"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57b4dbe9-ea7f-4abd-ac4e-ae2cafcfb89b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79268ba2-7d17-4f9d-84af-6ad94789e051"
            }
          }
        ]
      },
      {
        "id": "db14c640-c595-4708-95bc-027e33f81ab6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a8221236-8878-40fe-baf5-604f005a67ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b55f1a9-dceb-4984-a1dd-6d6d1c85ece4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "750dc80e-95e6-4786-a1f4-85cf78fc0d04",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d96567-12ac-4170-97e9-f72207597b01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f703eab3-cac4-499b-950f-da55b8b222dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1daa7c-593e-4819-9153-06c7b4336bd8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f17517e-66c5-43b3-8081-3bd6c1f75c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbefa1b1-fe12-4419-8b18-6eca9defccd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5b701d-f1dd-49f1-a84d-2190f7ea1484",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f923a508-a1f3-429b-b84e-5d82844527fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a633259-a1d2-4a92-8318-1b671da4f9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5b0f8d-86f6-40a3-99cc-a5f4836db4ee",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362f0f44-4054-4c0f-aacd-21da5a74dc22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f61a1ad-ba0d-49bb-be68-c1438c2b043b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a038da13-95e3-4048-a139-46a62a863b01",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53b1be4-fe80-4aba-9bef-52f7abf651e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29c21f36-e10a-4c75-99ee-7c448a5b0801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454d7797-9526-488e-b68d-fa9bcfe44584",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72727351-dbd2-4c2a-bfb2-ba3fd39fec8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a3bcde-8bfa-4459-a566-8fd88111191d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3989672-17de-4e72-aa80-bf86a643fde5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5dccfda-ba67-4e2a-82cd-d6014a96cf73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac59e654-1752-4428-85b4-34900fd88944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d754c3-8655-4d2e-92c8-45f5cc570f36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f43ef8-b8ab-455b-8355-1ec4eaaef0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14e08a0-4a1a-4070-94bb-5671da2b5090",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efd2855-a043-460d-8342-33823ee32be6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e036ca78-5ecc-4f77-8bda-22be9947bc2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1414022-c2eb-4b2b-a285-3810ca84fb75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5206af79-0826-4542-ba83-65758414d5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f45249-7797-4275-b8e4-cc539d82de43",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2bd4b5-ad16-4191-96bb-520b84b91e72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6340ae9-566d-43c1-83f5-9b264e3d9a07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1181cd-b0ac-43a0-a0b7-42411805f68b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b298700e-7b32-45bf-86fe-aa90da3e3902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80d9a16-c745-441b-a8a5-7baf4517042e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed2c5dd-5088-4f0c-8705-4218088f6914",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3fe3e50-580a-4914-ab1a-322b707b801e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eddc08a-af07-457c-88ed-bd75ff4c212c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b7d56bf-a718-4589-983f-51c8ad84cb09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b91c17-0289-40c6-aed2-fda87a0f03e9",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f0e42f-cf13-47d0-9f2c-81da40158d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4bb8f9-d9fa-4e77-b5e7-b955fbe8a8b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b032d768-9f92-4054-a15b-695cae399d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6591fc4-692c-4b27-a096-34964cbe07ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480e9988-6295-4fa5-b6d7-a44c72d8533f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b64ceb-62c3-4433-8173-fe72379573db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "492eb5b2-3e5c-4f0a-af96-a0336319d08e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfa973c-4dae-4c2a-81ef-e5294996bb87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "994df1bd-eb5c-4820-9d94-93ff5747ae57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56200064-8d85-4870-88f0-29dffff65ce1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad76c78-5f40-4279-b1fe-64919ed4704b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb9ca0ba-b1de-425f-ba7e-6ce0acadca38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae9c1eb-fb1c-4da7-a44d-825ff65eb261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6454525-7c7e-4116-a2b5-5280e4ef4edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b1d85b-2b95-4a74-a8b8-4d55903438b3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d1b139-0fbf-4bac-bd85-cebff41080a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeb0a202-df26-4169-80d7-a304f103a39f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f81dff-648d-48ba-a6c4-554a584539d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ac8ac1-7691-44b7-ac16-6684fedd4892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e1a744-66cf-4d9b-b61c-8097db0de477",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c9388b-6e36-402f-9b01-63b965610c1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49aa0b86-95bc-49c3-8357-f058807e0a58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d14537-2031-40e2-8819-62b141f69131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f174ba-f5ac-484a-af65-c5edb91e232b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55c533a-c072-41c8-857a-58d23470954a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5320d315-26a8-40de-bd66-e0b983274e1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "216e4df9-1dfe-468b-9a54-c83a3fabefac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54e4e6f-ac73-4e4b-b4eb-d03a33e82c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddf87b5d-26e9-4009-bdef-cf10f227e035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e512d095-3709-4d94-9956-a16453d7c054",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed6ad3f-1d29-4828-916c-356b539e3b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "916f6c0b-91ad-423e-bf58-aeb3cf7d92ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7b8a10-c0a8-4fed-bf3b-81216a87a5da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83bfb95e-3e2c-4219-b7db-7262e5b42615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eecc47c-1d41-4c83-988d-281ff4e163a7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d152b3-1961-4caa-8c6f-bb2359b97221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f729d7-eb27-42b8-9985-c11be26c0fd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c623b233-e97a-4555-936e-6baf24313639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b30738fb-ccdc-48df-afb1-ace023d57e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b6d496-3e94-4ea2-93fd-56f7bf4ced84",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ac688d-fce0-44e8-aa1a-c910485e57a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82614e2e-e784-463d-90e6-0a4581e19d17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd090043-1edb-4395-b808-1ee06a816337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3028e9a6-0372-469f-b43d-c1ffa956fc6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66bcc7d7-4653-4c7e-9d06-6a8a00970eab",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb970214-e1f9-4fe5-8c8c-a5cf258dc954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a1876f2-337d-4b0a-80bf-b7a487a333de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a04820-9930-4dbb-bd2c-e80da53de86e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10712c3f-c7d2-42de-80ad-2ecd2c20f0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816ceca0-6266-463b-8c84-311d265c9d89",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6b8685-0e6e-46e0-8a99-bef55d986888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0487325-ac11-495d-b11c-99b529e2a74f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c37b41-e706-4b23-81ff-f7a6e1841fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c5e395-29d3-4472-a045-891b47c075c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723ac5ec-53a5-4e2c-af21-b2cc91f8fa47",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4befd6ca-deb5-4038-9b1d-2b61daf8bd09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f372b37-a0da-4e3d-8c6e-c4201da6aa83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c14220-097f-4811-ba0b-9775315d5302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1093f5e-6355-41bc-9d1e-d6a500a768e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b26af07-e0e4-4b81-87ab-7857fd299306",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8606a9-8cbe-46a0-b770-7a85c8c8d37c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d0f5db7-02ac-4683-83da-73438a9fae46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5542172-02ff-466a-8ece-36f175a4c7b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a15fbbc-30a0-41d3-b11f-b63ddf29be1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9dac45d-f7b6-430e-8772-50309ba9aade",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5d5cc8-6ecc-4aa4-b482-2d79244d7392",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a0285a8-6a74-4344-949e-4bd54409d05c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa44464-6be5-4039-9b6f-6533c664d2a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e9c209e-550b-4111-9165-cf6e31de9b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cf505f-b159-48a9-872b-cabcc116776a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69bb76c5-34f1-429b-b4b2-2da823fe79e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a3fd1d6-fccc-4c0a-ba78-bbb44e294015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f2d0f9-e22b-4b9f-8e74-e6db3e73fd3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "785bc49c-b5a3-4ac7-81df-6f70a8760a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d26993-cc77-4f9c-b3d5-657c9fcd457a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3449c7-d04f-45cf-8507-0985b3c54300",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de3cf1d4-f212-486b-9516-36c3ba46dbd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "798145d8-022a-4b2a-b72e-48e1cd675c64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d33221d1-bd2a-4f32-bedd-83cc4382075c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd597a9b-e6b7-447c-9abf-fca788f47211",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95567fe8-9537-494f-b5f7-461f3b795172",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bbb2855-77b6-44f8-8e35-717744af6ea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e20abfb-c9b2-47fe-ae97-b1a5a05daad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91d90b0c-56cd-4729-b55d-bfbd4956de10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb91ad7-f5ce-4828-b3be-d7c605727393",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd245fe-55cd-4f14-83da-ad1259f6db73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e327a56-c261-499e-baf5-846af892a72e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "989ad0fe-6809-4e4c-b88b-65d977229733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c3ce91-5d2c-427a-9b44-94dbb62bf548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf040ef1-02b3-4ee7-ac69-966cfdea4396",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44132e4-e8f9-4cd3-af9f-e133f850e55f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56f08cd8-5adb-46e2-a67c-c8af157f343e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f3f192-6e77-4507-b9f6-a11139e6dbd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f617bdc8-dfbd-438a-aed4-3cbb638196b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ac3094-f701-42c9-890d-c1ddaf752f78",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9faa93ae-7ba4-4c81-9a5e-3a2034295c8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b5b61db-bdbf-4dae-91af-f6b382bc97ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cce47a-796e-4385-b118-33e9dd6e9cb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b0693a-ee67-4ceb-ad98-bfee45c9cc2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d890a0-4fa5-474b-872a-50313cab75af",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad668efa-e751-41c1-9320-46fddd6ddc0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aaa8d92-2a39-4b1b-9b7c-70ac6881cb2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec2fe81-67ec-45f0-874d-723f247297d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b195ec-1618-48f7-89a7-d87beb3bdb07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49bbbc7b-04be-4d18-9428-067c9e0544fb",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f4d3e6-dd89-45c8-a4a9-ba9e0e77fb0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ebfbf51-c498-4600-8bbe-d9911cbdb6c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7cc461-5df2-4055-ac96-5ad9ae0947f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd8c5f99-6408-47e5-a617-fa7b1bc13ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6b755a-a27f-422b-ae7d-4c971156b9b9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a2f9f3-435a-4353-afd5-1b81b6b33e1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38b5b111-4ed6-455d-975a-d25dda6cb9f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a38822c-f326-4d4d-b1ce-31e304b0c5a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11052861-71b2-44c4-91b1-657e6c3999bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a3ca46-efcd-47e3-9b27-477403f95bb2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c235d7f0-1093-454e-9579-6045133ed775",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed0d61f7-f767-4566-9e67-e8c28aa8d7d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f513bdf-2439-491c-93bb-db9e1b9bb880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69113329-f03d-4411-8583-2a06338f31a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0298e1b-1701-425c-b2e7-ad807553ac4f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f3a4c5-8ccc-4f3c-a0a5-bd08e6a5dc90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76cfc2c3-5398-41c2-a65b-a600d4502632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e55a1a-2df1-497b-8ef2-f00331c5dc2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0413fb-3570-4404-b428-f8e02aefb8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2062c4e7-0069-4199-a3df-b8acbc373789",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4715058d-d81e-479a-9b5e-c8396d5c2545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ceb52c-165b-4f4e-a2d2-da75e23e1226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a805002-dbdf-4b96-a3dd-9670bed455fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "635552a2-3446-4515-ab15-22d8ebe382d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a178768e-d505-49fd-927d-ec9f88b02a2e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166ad6cb-cb00-4a42-8215-5d75ede118cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9358054d-1e5e-4792-8356-1ffaf872f34c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd3f985-318f-4240-ba44-ab407d3b4620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73db8598-1bc5-4f41-9331-5217e32a7c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb38051-c568-4f21-965b-98b497516745",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee378321-8f75-40ec-bbe5-12c9552a2970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1810e2d-2f10-468b-bd76-7c1589cf4dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df36babe-e0c3-4f7d-ae02-c52410ec5a06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e3f01c-09e9-4bd8-8a1b-345b0f3442d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74dd6827-270c-4937-acf0-8075426da8c8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065be2c0-016c-4422-bdee-1b87ef029d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee989a0-4760-40c5-8b0b-9bc9c5433d25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb47b311-679a-40cf-87d6-41ebb8efc157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a475b1-d57f-4a39-b311-221c769b3738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f418390-0d5f-4aad-9aa6-b2e96b1ebe2a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebda42f-77f0-484c-84c6-b1ca12da4e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c54574-1f73-4aaf-b899-3df7b0542d1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9531c8bd-931b-421d-86ee-dffb0bbad7cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb92ffb-b048-4d06-a4af-244bd60d75ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3ef55d-ceae-406d-a6c6-2c57b264da63",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e246586c-c631-4e5a-9ac4-5914b6f811c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "771607e7-384d-4bb0-ba7a-a64c4a74fb8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9c7764-b34c-40ad-9486-3db1c2b05427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6047e6f7-f44f-478d-9242-7fadef9b5d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f609ef61-9154-4189-b334-2808ff9a7571",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da5d20f-f7f8-41b4-b3ed-656324f9d0d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a2aa7f9-ba81-4032-bee2-43d92fe066e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6953ac14-4cbb-4e6d-b215-33464dc91197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf0e17c5-9f00-4c61-a47f-676b00a7b433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab3ddc2-660e-4a75-9254-3370d2332dbd",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab71782-b4e0-44e5-a34e-04808e1243e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c5c996-2868-4a8c-94e5-7647320acaf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a477aa-d9e4-4380-a6b1-9d2dfaa4f16b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f39324aa-76c1-49e3-915e-e2b20810cfce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210c941c-442c-4bfc-b62f-bcd78c5f2119",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e3b153-9897-43ae-96ac-d96e990e58d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d980d57c-7f2a-4f34-bdf4-be3652216192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6794aed-2190-4fd4-abf9-927deb73bf6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a461093-9ee7-467f-bd3d-586e595e302d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45cbfae0-9fa7-49df-826c-d46f2fddb07b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8ffda9-d300-4381-bb12-cda1ea834111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f292f5d-a902-464c-bd99-0b24bf5090d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0982a74-5ef7-48a5-91a6-02b1037c1240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d14c81-ae10-4c67-b7c1-a6f352df1415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a2aeee-a77f-4f16-a096-77a908b7218a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bafaf71-c961-4a2d-b27b-17c5dd397e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ae3760f-8ee1-4388-8ed1-c190594b5731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9de3bf2-0bd1-45c4-ac27-eda28a8260f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad678d3-3bab-4d0b-b275-026e8d41fff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7337b83e-5476-4a2f-9c6e-7ff79f8ef98f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71a3ed6-33e6-4338-8b32-52085f0f122e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "531b3211-342d-4625-b62a-8d84c5095493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c8c881-a58c-4ed7-8b37-c2e13e01df94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "529f1111-65e7-4c08-85e3-e3d785fb05e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba7e1a6-102d-42dd-afa4-f1ccbd45a775",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52816090-e551-4334-b905-4d473c1a1dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cde1cfc-3c1c-4c44-8e98-f521d709a48f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f156ed8-711f-443e-8b6e-510e7cf3d0a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac2eca7-044b-44bd-81b1-2a99f168978e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d0731f-1c44-4a69-b1ea-73457a9a7548",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872375f3-c6fb-409a-9cf2-e2905069df9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae7d599d-ea10-4dcf-8e48-408dc3916943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7020a0b3-608c-4dad-8f1d-85ea7ac6c533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3360dabf-e22e-4963-ae1d-a5dd9b245f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3493afce-6dde-4e8e-9baa-6a19343043ad",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3923d63-089b-49bc-abcd-252c18c9e140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ffac57b-cd49-45e3-b20b-50fbbbdf7eb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7625b0e5-67dc-470c-8028-1e9599eb262c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176c491a-e68f-4ad5-b8c5-9b6f8f64f2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9d561f-dc4b-4263-a709-2d552a2c0815",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1889662a-417d-4f97-b842-fbc9ab268e3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e49f8093-d0a7-4ead-ba0c-300ef37b5733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4418d2-32e7-4c72-a79c-7d2fe641c1ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e75f6f7d-7261-468c-9884-57c46d9b3b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3489ad-be22-4200-bc0c-da2ef38ffb33",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae35b44-8ff0-413f-a7b1-9e6cf790c69b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4297323b-70ca-4790-9111-b5b8199f1a53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da874f32-d6ca-4026-9ae3-5ecb214f055f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d29c26-38c2-4a0e-a05b-9c541ce33fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ad2ff3-58bd-4e4b-9078-bc64a301c1db",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25cb6809-df6a-468c-b50b-409c9a577f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83cd9cd7-cbc8-4059-81aa-0a75dcacbcb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0adac991-8e77-47d7-b5c3-f122adb8a1d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b49ed6c-6fee-4fbc-a4ca-30a60de1d89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbccc13f-bca8-47a0-96e7-d89f5b0aa09c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9231129d-640a-4120-a6b9-1ee64910ee91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc68633-cf96-410b-b014-2405b7517efc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "172232e6-b7a0-480d-adf0-999c3f32352d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c47b56a9-bb4e-4b5d-aaa5-25b573e0ee6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249dc6ea-2425-4288-85c6-e66af9543c68",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7dbda23-98e3-4e44-aef3-075260a25e53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a9522d-e4da-46cb-97e3-6a8c8545b061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1efb62-c727-48fc-8b24-80ffd760045c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99df91f7-e188-4ac4-8b64-d51394275848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3322d8-2233-4edf-b616-a35ff51a72c8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978da5ed-c1a9-4ff3-8d21-3d87e8c9fc1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "454840d3-62e5-4023-8414-8a9b07594df1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f301dd-c769-439b-8bae-9f899a77d7d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b99657e-9d56-42d6-9136-c2bff1d86c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2cd15a6-fa00-46e0-b2f2-cfc24f71674d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5f4a95-5d37-455f-9e95-cd7d18d2bb28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de70f54e-0e6b-4013-bc55-55f41f02cd73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a733101-40ac-4b80-8737-a9494c43af27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a42b5d5-1341-4d69-b03b-fc705fda9fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0484bbf-219e-4339-9ff4-d16032441d2b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f5b3b0-db8c-480d-9adf-721107ea4ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "519199e3-bcda-497e-be03-edb04397f1b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d15e7b-8913-47f0-852a-94b3c9609c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59accab1-7495-44d0-af94-22a413e8f47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677ccfd3-cd68-4cc3-929e-4ff974ca5b11",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06502f85-9c02-4160-991e-4a9a8225b121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2326a4e4-428b-49ef-a560-09ae49112fb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1797f9-5b9b-487d-a5d9-d34c012625b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9110b0fe-6c33-4dba-8d11-e32e05eb7457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444262db-0685-4258-ba0f-8f2ec8a04370",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a1efa6-7a0c-406a-9515-7ad8ba8fb48f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "685ca9e5-200f-48d2-bfa4-81b88c2c9a00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2a2152-00e7-4d8a-91c8-d79798a6b3ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cdcfd4c-1324-47cd-a612-f5826576e312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebc1ce6-96f5-4b07-b6bf-4789170dfb49",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e5bf11-c27b-48b6-acb5-d3460357d05f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6333d262-8ff2-4a2f-b149-4e683d4f0886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "078431d8-88fa-470c-b58b-858793794489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a485815-ceb1-4c33-9d53-225012b514ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1843d84e-09ae-49ff-9468-af8a124fbd5f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c793e234-eccc-419a-a68d-6ddc82ed9d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d8ba5c-1e0e-4429-8915-e06ff73ee635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ebfc000-2b05-4e00-bcce-5bc84df6031a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b38af599-6325-426c-940a-5c9450527b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2bb97f-4be4-45eb-bf74-ff08eefdef8b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc430e3-d3a3-408c-a3d9-78671873120d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2187480-33c3-40d6-a4c0-63885dd464fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26fd8c3-c645-489b-9ebe-57972457306c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca8ba073-2c89-44dc-b11a-14029ca7b78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31690188-45c7-4c4d-8289-9b4b318bdf9e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37cec892-50f3-4745-b593-94b7d0e00e9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00377215-2224-4bbf-8f60-5b41524d098a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5825d8b8-2769-43e5-a829-daa1bde54182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bcde974-f2ec-417d-a5f7-f21adf6f59b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a94e467-e2ee-4b43-bbcc-db6e7bdda478",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43284b1e-20c3-4d01-8816-ba24aed5410b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "304cec80-7151-426f-b94c-cb8fec6c6255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf4b328-bf56-4b71-92bd-4bd6b94b8c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49391b42-fc62-4797-ba69-56212d559ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1271f421-6313-489a-b6c4-877903de7ae2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5617cd-1f85-463c-ac4e-f3a3a176829f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a49cf20-9e0c-4719-bc5f-4d1e174e4eea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae09323-6e2a-464d-baf3-fb90ce093068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5929eeac-6dea-44ef-b788-f091548deafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df83dac-3258-44ef-b4eb-373636e507d5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83e8883-2033-4849-80a1-dae9a47794e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f55692f-6560-472d-b7e3-e3d7388a3bc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6e179c-867e-4391-b0ed-6b50148fcca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "945ed8ac-8d8a-42a6-ac69-a8ae79caab34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04501e0b-f182-428d-b048-ed9f54b6a8b5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf209e0e-557b-4f9a-bfd9-02b28319ea59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4f59a5a-8c23-4e86-8b17-f1ea4f2b02de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52c1f3b-3da1-4bab-8e20-35603b4b0aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3c84151-006e-49fe-88bb-53f35fbe79af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2504b94a-b6cc-4ded-b53f-cb20cb1b11e4",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bcfbf48-c311-4019-ae70-d2193d8ad1be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93e5aaed-c05c-451c-850c-be9668f5a4d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "746ab242-09e9-45dd-a324-0922596895c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6181bf6-b840-48bb-9d69-d2c52f588361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33648503-ea7a-4058-a4fc-cc271dfca1aa",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41c128c-1937-42d2-a549-e5a419fa2618",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aa8d2a6-d678-4fdb-bb44-9bcae266e649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f7e38c-f40f-42fe-b7de-69006f6294ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f203e3e7-c058-4d3f-a5d8-5096fcbeecf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db15264-b542-4aa6-81ae-2f2c8db5ee73",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b175a4a3-0ccb-4825-9681-5c83e7b73cab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52eb9896-37d4-450a-98f5-edf94f299d14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "661ac24d-cf33-4c23-9d02-0ad46f541ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7085f447-eb2a-4677-8648-649d91334508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d229b0e-4d97-4f28-a1e3-f0af9cdaede0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee435a5-0728-4ca1-ab25-ea617f8f60a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22592d77-656e-4423-ba67-2cc5cbfd8585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d6984f-170a-45ec-817b-d7892a663da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25898b30-9d63-4fff-942e-607ecee92857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28edf439-14b1-4175-a038-94e40eb4a44f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f65f94-bec0-4143-8653-25a3745c85fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aac7fb41-81bf-4a1e-9567-168cc054b25c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93eb702b-f7eb-43da-a95f-33084f7ce83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fbc0ca7-9eb2-42c0-a907-f5c0fcea8e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fca7d80-dd70-49f1-8132-0bd5bdf48e8c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c007abf-544b-41ae-87e6-c19b77f8166b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7533402e-203a-4ce7-809e-e6f4f8ef7ec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0c0bde-2a92-458d-a351-b25d4388251a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce48aa2c-e9f9-4a36-a420-9c4b314554c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5fb357-24a4-4e5f-bba6-c6e9e99b2fae",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310ce2c0-19f8-4ef3-9aee-66a7d33d39aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fc0db10-9fec-47d6-9e38-ff912116a372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7f88f6-ebf1-4218-aea6-259a2edc8e53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbcb04ba-29af-44c9-8541-dc878f393927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98eb8d09-0fe0-4183-ace2-5e3a7693316f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11776312-0171-448a-88fa-68b3688d5d8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c26b196c-fcb5-458a-8a86-5fdf2cdb417c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e50d9b-9b8a-4678-8020-1902889185a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a5b7e3-fad6-40d4-8fe4-37a9fafcaa70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6593e52c-4fa1-42e9-b2ca-d6f71b40959d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1a02ce-dbac-4807-8de2-de3b44070785",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28e37f84-e6fb-4cf7-97b6-469f95cb25d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1528be6c-91e3-430a-9810-dbaa39370b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "464ec810-704c-4c54-bfad-c2321728b991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b9b20f-e4e6-4379-bea1-6f2013d052b1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24b0510-042f-42ca-86db-c1c796e77a26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e32e604-2d33-4a6a-9299-51b98371497c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "589446e5-a36e-4787-977d-43082ed2bee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e25074f-e244-4238-abb4-89c123711873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec0ede8-fa93-4975-b9bb-d1aea644ce09",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d991b22-18b1-44d9-a643-7dccd9040333",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccf6bcfe-2050-4f56-88f0-470272b9ea9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fadedf48-5ddc-4521-9f82-6ed02e9bd37b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "832946f6-c7a0-47b6-a593-00dbea6c88ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98308654-b45d-455b-8ede-d52ced5b6a93",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba3b28d-c896-45d9-97c1-9a98e2db26ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6b6f8d8-1632-46f6-a17b-9fa0ff1e8a5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4cb50b-e948-498a-9a92-c8617419335d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d70b2d1-63c4-4951-9e53-786fc3f4ffc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eba2b5f-f9d6-4016-b926-aa13a5b707f7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba6af3e-b631-49bf-8e2d-1b9fa6e5c587",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10bc78b9-2849-494d-b55e-b6a1cd9f8268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2923377d-6df2-4cee-8023-5ec2755486c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d472ab7-7243-43dd-b321-8fffd65bcd36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b26ef8-eb10-4e4f-a4f0-0f2a1a5d608b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e6f9db-0500-4602-82c6-ef8622e46f0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32597ebe-5641-4426-bb03-a12bae65e040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54dc2c17-f11e-4298-ad28-5cb66e811798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb560112-37dc-4051-ad4d-ce66d64bb947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b73843c-f845-476c-a96a-d4ede3ef2e27",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d59a3e-246e-4d0a-a07f-4b354dfc9769",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7f88b49-b065-4492-817e-91ee6318b0b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dec7af7-4e07-45d8-9be6-619064860890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "274fa35e-e9eb-4600-8676-a3a7e2b4f00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b920fc-b34c-4afa-b734-b2108dce0ab7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3c58eb-34a1-4dca-861a-fcc265efcd2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "340bc6c0-85d5-4864-b472-87965fe0bc4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "175dc780-22ca-491c-9589-c8ef26f0d524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "833cf646-3c6d-48f0-9f47-04fbc4bd9a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468f9d32-84de-448b-9d82-944f115e3898",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ac66f3-05ae-4915-8fe4-bad55df22819",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2214867-8cb2-414c-991c-62887b74dffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5722abd1-6630-48c4-8d95-bfad2bdd433d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba86e7a-7fee-4fae-98b1-8970034b1fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a656f8a3-1042-42a9-a728-1bbd976eeab7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2179d9c4-c787-4435-9099-ea04e24ae730",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8161da80-3663-4dbd-976d-928a3aaa7712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b968a9-7b2f-4d7d-bbea-cc74da0ad79c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6285bed-7711-4768-a31f-9290af94eeef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f6b04a-1186-4cb3-90da-dd9ccfd2adad",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66490da-2b15-43f7-9e71-e52b58ad4d90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a22c1dd-ff3c-4404-98b6-1ec0e9b1189d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1794fe0-4c1c-4dc2-80e5-908b70306893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04d4b981-0c93-49da-a7f7-7694c250c4d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91185ee7-77ac-4d43-899f-5fd3c8f8f482",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcbb9c31-a54a-460a-9ac2-241a1fc2c949",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc356e82-c80f-4aa5-916c-76af578a3ed7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f9624f-4d98-4743-9d67-bace010b8eff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95bf1ae6-f38f-43f2-8ef1-cc144d821893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4524ed6c-8e1a-4e9f-8e4b-df9308c80c76",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec03352-b50b-450b-9042-dbd4e717097a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4784c9ca-ec96-46cd-8170-6674b4599a24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f66b45-4bfa-4f02-89d2-18d9c6555ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2563f7fb-1a3e-460f-a16f-5fdae56a4d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e21dc7b-e480-4fb8-a52b-73ae7085cf32",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a463e18-efc8-4895-8755-df2586073c34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c99a5bb6-0638-46e6-86e8-004cf0684960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c395765-6cf7-4d66-9846-70320390c373",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bedd86c-5d23-4c27-b889-2e1bb17a35c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576ddfa1-0d25-448f-9821-fb98d8c73f55",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea76be24-e4a0-408c-b406-7889ae5d971b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc28f97a-afa4-4d67-99e9-6fa7545bcae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "766231b8-ab33-4415-87b3-2253d2962aa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a3f61be-f147-46c8-876e-df4b69ae8ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e3e8f4-ebd1-4b0d-aaea-b01913425261",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3cf0fa-091d-4dac-b0c7-2a34b940daed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8ce342c-626d-4f83-ad68-e14ff8af64fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76691386-ba26-42b8-b14d-9b89e2ba507d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b12547f8-c85c-4a24-83ce-e6ac8a84e2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d368bf2-f26f-4722-a426-8a871fde846b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a38d2a-1606-43e7-97fa-2ca5695dd246",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d4d1fc9-5b57-47ef-9021-67d80458557b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "736077e9-1115-4302-bff4-c5c4ed0bde60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e1bb10-fba6-4101-ae26-6b1873833d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28323e3e-2507-4b8d-9f7f-c29d22938188",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b92c604-8e5b-4f82-a3ec-0ee38ecf63d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48335af1-7d13-44b7-8e53-534afd757de0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "891b5e95-b9d3-48ec-973f-14cc5199e2f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef099c4-e93b-4fe1-9486-00ac50fbdbf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cfe7ba5-513a-4a52-bece-d8cb00e8ecc3",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c933ab1f-a0f7-4b43-8932-924e60ce8126",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "924c3769-3e67-4ae1-a4e1-a0c8b133752e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcac425c-efd7-4e96-b164-ec7b410ce37b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bed795db-d977-4a0e-ad62-0f2f4054da0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98e2c1b-6bb2-4b56-90ae-ab0fec1c46e9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899bd5a9-91f4-42dc-b8f1-1e1542c1c52e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c663119c-d721-4b27-b7d7-8fbff8362f9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac1774c-7906-4543-84ce-0d61ec7717d5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f45340ee-0ccf-44e2-bdc1-db32442b130d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40a837f-f2f8-46f9-ac18-9e3b71b4ddef",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "264aae73-df35-4b4c-a619-df15b5897f4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "550b0bdf-37a2-4c89-887d-f1c7fa156563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "708f4c1d-87c1-4a43-9442-1a7f7cc85216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "168c711e-a36e-4f5a-9f52-3ace05f37ce4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19cf6e66-94eb-4540-bc93-db5e686a8aa8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "faf9a37e-bc30-41e9-a3b0-236c0c48fdf2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "66f5fa3e-a938-4689-baf6-2aa50103fac0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5e1ad002-bd51-4873-bf53-140e874dc858"
                    }
                  }
                ]
              },
              {
                "id": "0c6c5904-fb50-44da-b7bc-e06baa0ae7ff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f918d1a-95e4-44b4-ab40-337e2c51d5a5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc32249-3a04-4836-b6d8-1c7db23f33ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c9e77f4b-8062-4e8d-8774-eb7378341294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1a1aa5-690d-4155-ab90-179f9d722192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db6b0a09-61d4-4966-91ea-55b40d36fd5c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b09d7671-f125-4fd0-8a24-8befba0a8bf0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d26ba08-72f0-4fe3-ad04-ed5edbbb1720"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "68b626d8-0bb3-49bb-a5f8-17b138e0280f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51ffaac5-c682-4432-8b84-635d2c1a6e98"
                    }
                  }
                ]
              },
              {
                "id": "366d6a74-47fd-4c47-b68c-91135406c02e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "da34be61-c6aa-489d-a437-b8d97e3741ba",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06781f09-793c-432f-9658-4465d153a452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f565c3e2-04b3-4651-bc92-20ac8617327a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ade109-0398-4061-8d7e-e196a4cb696f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab1e6f1-586a-4741-aaa8-26a4744c67ad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ad7b49ce-035c-404b-8125-fde57fc1d0de",
            "name": "Positive Testing",
            "item": [
              {
                "id": "de7a87bf-829e-414e-99d5-461048b74992",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1dc33916-c578-47fe-9362-6bbdbe6ed2df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "13ea4e78-5d72-4bd2-83bc-dfdb1c408c05"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5726b77-2422-4eb9-82d2-80d6ec3dd1a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89f4e878-2f57-41ff-984f-d73d2d1e3ded"
                    }
                  }
                ]
              },
              {
                "id": "ab9e631f-6b27-40c7-b92c-84033b22e065",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b07cc461-be0a-43ca-910a-4b7af2bbd86e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d7d4f1e0-22a2-42cf-8010-8076b0d0a54b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "531add38-21ba-4d79-81a7-21893c8f2062",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f0493f1-822e-473e-af25-fe01e0ae3ddb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4a6f68c-8afb-4275-8d33-8dd9c00c990d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4fe33f27-3db9-41c9-be49-d3e94c44da1e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "770ffe12-6283-48fe-9469-cc9e78857fdd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d297b28-2185-43fc-bef6-278a717642aa"
            }
          }
        ]
      },
      {
        "id": "84825e1e-a7c9-4260-9c15-513675206126",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3d6fb8ed-2ca6-4e7c-b128-111b112bbcb9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f1adde2e-5ec8-465e-baf2-24af4631bd08",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d22b86d4-62ac-4347-b38c-664a14484dc6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a55b796-7770-4aa7-8924-e71ae1efb435",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "58fbcbb0-9275-49f3-a351-b7afdb0d381c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8b821e-6e6d-4cc4-a26e-a228cf485c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb7d0fe6-9a20-4473-bdaf-1dfc82a6d90b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8620e486-7005-4b35-9e2d-ff52b68327ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73ac44a6-3036-4b5f-aa57-538e38c83fe9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "67125080-9e62-40b7-beb6-de6e431a82c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b48b3d4a-438c-4bbd-b523-704c3037e460"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd2c5ddf-eece-48ff-a1e2-8283a25aef10",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1144273d-086f-433f-98cf-784383e2ee0a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77b229d9-e0fc-4c8f-858c-f8dc1a1d56dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6cf49ac2-9ee6-4f2c-badb-7cdc76f83660"
            }
          }
        ]
      },
      {
        "id": "8b66ce81-f76e-4831-a929-e8c7b50dbe0c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b7c84e96-b6f6-42d0-9e95-2743c427d0ff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b60c289-38ca-4f3e-94a9-c5ff443dd986",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0e40d41-6cc2-42fd-ac53-3132fbbb49ff",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200b10ea-eeb4-430a-91ab-4cbdb6a47c71",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50311801-0b69-41cc-a190-bd4b4c39d79d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e62d3b9-1a8f-4022-aa14-96045e01371e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48cd67bc-37d5-421b-b306-d26863b63a01"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b729bfa7-6d3c-4cf0-b8e0-2e78130ed1fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "895fdafe-c6f8-49fd-9024-08e51ba7c5d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b160b638-335d-4b85-8da6-5c4f0b6d246c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c165dfff-c6fc-421e-8472-f3d1840f3bc5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81944343-4763-497c-b305-3c56247242b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f8529916-941f-41ab-8e2c-097ea2a2fd52"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6273659c-74b0-4669-afd3-db1260cf4c33",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f145224f-bb9e-44cd-a563-75b6f3201302"
            }
          }
        ]
      },
      {
        "id": "75440a8e-ab3d-46b6-9a49-d39f3fcfb906",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "517ffc85-0f0c-4cf2-b564-12bec5be44ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bf080f35-ee61-4699-9d91-a9c646f952d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eda8b6f9-fe08-4b91-ac84-3c4289aad8c6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab08f84-1e9c-4d0f-ab25-bf769eb8216d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6aed2b0-da4d-4156-bd3a-c433f462fde5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0db737-6b61-48b4-a1bc-5e8e81eee2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55b52d1a-29b8-48f3-8af4-ccbfe8916bf8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1348dc52-3af5-472e-847d-9f638b09b6fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7c4830f-f6a7-45e2-9577-04644d3849a5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf5bbbc9-cb13-4a07-ad29-5f596d3509c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77088e35-ba05-4068-8798-012c8ec79dc8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19dd03bc-326f-49ec-88e1-18d3e8ea4e3e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "843a93ae-4077-45a0-aa93-0e09d868f90b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e09206d2-ec10-4d7a-a65a-83526e740934",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d06705f-3660-4df2-a032-04a737bf98f4"
            }
          }
        ]
      },
      {
        "id": "10263cdf-c85c-4b4b-a56d-10cab81b8812",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79f73df0-30f4-453b-88cd-7becdb7f218e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "66b6d0eb-8bd5-416b-878c-c10fed970779",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c70908b0-80cd-4b52-837f-ee6fdb284d6f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ab67ce7-0666-468d-85bb-66c25a6ffba5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d1063030-e7f1-48f1-9f1c-25ec71c4c547",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 67.58450704225352,
      "responseMin": 7,
      "responseMax": 248,
      "responseSd": 20.242627925256453,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1687826824532,
      "completed": 1687826858662
    },
    "executions": [
      {
        "id": "cbf77c8e-a059-45f1-b700-edfc45958d96",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "135b1a03-685e-40dc-a292-1e6175d6a65d",
          "httpRequestId": "ebdc5fd9-a2f0-4e4a-88cd-e1f64eb94562"
        },
        "item": {
          "id": "cbf77c8e-a059-45f1-b700-edfc45958d96",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ba3fe2d3-7ed6-4650-8fc0-24e0fc26e65d",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "c34e7d5d-1efe-4f8b-a894-66c81269bcf3",
        "cursor": {
          "ref": "d825e889-8e8a-4bc0-94f1-901d9ae60bbb",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3383b176-4c67-4749-90f1-a8a1a3f834df"
        },
        "item": {
          "id": "c34e7d5d-1efe-4f8b-a894-66c81269bcf3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "edbe2ffe-8b9d-4e9c-9da8-7c7ece00924d",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "2e0b2622-ddaa-46f3-a2c4-a11d4741e55a",
        "cursor": {
          "ref": "a9cb394a-5a88-4883-afab-43698f857fe7",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b1f39cc0-6a5e-4ff8-b3d3-29c2d3c6d041"
        },
        "item": {
          "id": "2e0b2622-ddaa-46f3-a2c4-a11d4741e55a",
          "name": "did_json"
        },
        "response": {
          "id": "471a3c74-60b7-47e4-b18a-bfdc2b922c9e",
          "status": "OK",
          "code": 200,
          "responseTime": 232,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1d1853-8f90-4510-8fb1-bca7b021621a",
        "cursor": {
          "ref": "80a3d45b-e817-4f78-8820-7b8dd83222c0",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b53fedd9-40f2-4f64-8169-38392df36e2d"
        },
        "item": {
          "id": "cd1d1853-8f90-4510-8fb1-bca7b021621a",
          "name": "did:invalid"
        },
        "response": {
          "id": "062d26e2-6950-40d6-9d3a-55d40058f2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1d1853-8f90-4510-8fb1-bca7b021621a",
        "cursor": {
          "ref": "80a3d45b-e817-4f78-8820-7b8dd83222c0",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b53fedd9-40f2-4f64-8169-38392df36e2d"
        },
        "item": {
          "id": "cd1d1853-8f90-4510-8fb1-bca7b021621a",
          "name": "did:invalid"
        },
        "response": {
          "id": "062d26e2-6950-40d6-9d3a-55d40058f2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa8a5b2-905c-4ef5-a3d1-1486b05277ec",
        "cursor": {
          "ref": "8dec87a3-5bf2-4002-bdb5-a6c6913ef9a0",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4207813b-2a82-4f3b-9606-f91955f4a7c8"
        },
        "item": {
          "id": "dfa8a5b2-905c-4ef5-a3d1-1486b05277ec",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d6d341d1-8b9b-4003-aedb-07ce8bcf3a08",
          "status": "Not Found",
          "code": 404,
          "responseTime": 109,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5736a3d1-afc6-4c23-b286-b2a3de575817",
        "cursor": {
          "ref": "6145d990-8b6a-482f-bdae-4fbe4b97865b",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "88eea479-5858-44cf-8927-653e416e692b"
        },
        "item": {
          "id": "5736a3d1-afc6-4c23-b286-b2a3de575817",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "03ec577b-fa04-441f-aa59-118573458660",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c1ccca-0f9b-4435-b3de-c8d14bce0776",
        "cursor": {
          "ref": "45a00115-2ca3-4fbd-a449-90458f792d8d",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1ca1af2d-1b94-4c05-bccf-04825511aa50"
        },
        "item": {
          "id": "45c1ccca-0f9b-4435-b3de-c8d14bce0776",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "300f0f6c-75af-495e-b5b2-9d19c87a77a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7767681f-a44a-4d0c-bdbd-f50201b5bb84",
        "cursor": {
          "ref": "aeb339b7-bf68-4ae0-b1ab-a816a24bb56a",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "db8b11a1-1dee-4a7f-a4f3-321058015199"
        },
        "item": {
          "id": "7767681f-a44a-4d0c-bdbd-f50201b5bb84",
          "name": "identifiers"
        },
        "response": {
          "id": "d27f922e-4f2d-406c-a44f-8e8e6209c064",
          "status": "OK",
          "code": 200,
          "responseTime": 105,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76866073-150e-4fe9-b1fa-c194b8c0fd47",
        "cursor": {
          "ref": "8f90e1da-452f-4722-8f6e-fb492f6f505c",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6337349f-11d3-43d7-936c-f48f710aa69d"
        },
        "item": {
          "id": "76866073-150e-4fe9-b1fa-c194b8c0fd47",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2455e0e7-6880-4992-b724-89fccbafa120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30f1c7e-2fcb-4e63-abcf-01ec08ef41a4",
        "cursor": {
          "ref": "20205e80-c940-4b2b-a972-8d5a984bf794",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5c017af1-de2f-4782-acbc-fefad4da8166"
        },
        "item": {
          "id": "c30f1c7e-2fcb-4e63-abcf-01ec08ef41a4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6e0c0a10-7bfe-4eda-9459-e1bc313350ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe420df-d7c8-4d83-af9c-45ebec2809d0",
        "cursor": {
          "ref": "69458f31-6e2c-447c-853e-9c2e18392808",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0ce60dea-71a5-4f71-a211-b42d581507fd"
        },
        "item": {
          "id": "afe420df-d7c8-4d83-af9c-45ebec2809d0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6aed70be-c268-4da7-a09d-15d7b34f92f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4cae1b-ce6f-40a0-b7c9-4eded8d1a051",
        "cursor": {
          "ref": "6f24ca8c-e004-4d81-af52-e92be92d887f",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0bc7962c-9e0a-4816-9104-650c495417cc"
        },
        "item": {
          "id": "1f4cae1b-ce6f-40a0-b7c9-4eded8d1a051",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "075b14a1-af32-45cf-b889-d0108992dfdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38eb8561-f4f4-4894-b6ca-f3d82f2dc747",
        "cursor": {
          "ref": "466274fa-6cfa-4f72-9397-5dbbd10c79cf",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d24822fd-e9be-417d-8971-02522b8d4613"
        },
        "item": {
          "id": "38eb8561-f4f4-4894-b6ca-f3d82f2dc747",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5915bd6b-31c1-4e5f-8a5a-7dca40bf7a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e3a39c-0586-4dba-9c95-d163b183168e",
        "cursor": {
          "ref": "f5ff8ee1-3341-4fc9-b6c9-843218efc301",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0a126da5-e998-438d-8724-c6136d463e13"
        },
        "item": {
          "id": "d7e3a39c-0586-4dba-9c95-d163b183168e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "03a95810-eec2-497e-ad3a-a3fcd7d66e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88060965-6e04-485e-9fff-6aaf95290e07",
        "cursor": {
          "ref": "86a9f67a-7b3f-48f7-97c2-4c02093f9fe2",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "90495a05-d070-4ff0-9275-bed25df17af6"
        },
        "item": {
          "id": "88060965-6e04-485e-9fff-6aaf95290e07",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ca6398de-f9fe-4102-8a0c-82c89c133718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c7f7f0-86e3-475f-9baa-c3420661dc0a",
        "cursor": {
          "ref": "f5e37751-8304-4a5b-8864-353f1f3c911b",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "74fec919-0140-454e-9355-139107b03932"
        },
        "item": {
          "id": "57c7f7f0-86e3-475f-9baa-c3420661dc0a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "215e1c0d-72cb-42a8-a741-8a5f66bc0502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc7f49e-bfc0-45b9-be8c-afc041a163b2",
        "cursor": {
          "ref": "e89550b9-f0ed-43a2-80ba-3db42d709c61",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a9e1ea89-a9f3-46ae-b5cd-3ea847679507"
        },
        "item": {
          "id": "5cc7f49e-bfc0-45b9-be8c-afc041a163b2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4adad957-7c5c-43b4-9d5a-7cb06f1e7666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acea944b-d5b0-4e11-bb0b-05657a31c6a8",
        "cursor": {
          "ref": "2a547a21-1395-4b66-87f1-d77532835feb",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4cd4974d-f5a6-4ce4-92ae-d0641c262f52"
        },
        "item": {
          "id": "acea944b-d5b0-4e11-bb0b-05657a31c6a8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ee4a2d9b-2484-4d5b-93ec-62f941ea62f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97f8329-f69c-44dd-a667-9171eb1655d1",
        "cursor": {
          "ref": "421cd1df-4231-47a2-be70-6e3f3b51999c",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "96b7104f-6f34-49f1-81ee-6e7482492b38"
        },
        "item": {
          "id": "f97f8329-f69c-44dd-a667-9171eb1655d1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0ae7fe17-eb38-442c-977a-660440c12323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4cff92-ca35-4af2-bc5a-455d1d4375f6",
        "cursor": {
          "ref": "aa323c92-0f6f-46e2-a306-d6ac06eac926",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "782246bc-82b9-4488-9ab3-a2fe134df261"
        },
        "item": {
          "id": "ab4cff92-ca35-4af2-bc5a-455d1d4375f6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2e905486-fea9-4563-80fa-b9d67ff9380a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1f2da9-11f8-4e7b-b981-7b70b9b18549",
        "cursor": {
          "ref": "154793f0-196d-4878-af36-937e462cf217",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "66b02e58-3160-45f3-bab4-df4cb661f175"
        },
        "item": {
          "id": "fc1f2da9-11f8-4e7b-b981-7b70b9b18549",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0e4e7c72-22ba-4a9f-a663-223572754ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7089f4-d883-417c-afb0-2f408cefce2c",
        "cursor": {
          "ref": "837a4bfd-78fb-4103-a5d3-3fa719596bc4",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1b31265b-0bbf-415f-8089-1fab49f50abd"
        },
        "item": {
          "id": "1d7089f4-d883-417c-afb0-2f408cefce2c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9dd90551-da9b-45e4-9e05-05038e258b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fd7a12-6b26-47dd-9b89-7cdb378110f8",
        "cursor": {
          "ref": "97e5128a-113b-4f4e-b271-637e63d2102d",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "47a48872-c275-4f7c-a39b-1fb06cfb17d6"
        },
        "item": {
          "id": "58fd7a12-6b26-47dd-9b89-7cdb378110f8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "99d50a42-cb83-4263-be81-3d6f84a4a891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458edc65-d0de-46c4-8895-caf2fd422b74",
        "cursor": {
          "ref": "35d932b2-af5a-4969-aeb7-863931a60b57",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4aebd1f9-6703-4942-8f88-7ea87a46bb29"
        },
        "item": {
          "id": "458edc65-d0de-46c4-8895-caf2fd422b74",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d5a77c4d-992e-45cc-b4c8-5e28c23cebe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a781d532-5ac1-4064-8b06-5db820f7c640",
        "cursor": {
          "ref": "d57b61b8-1a4f-48ed-a343-fc5deeaea673",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a5a5885a-2efd-4390-bf8b-a31f91205172"
        },
        "item": {
          "id": "a781d532-5ac1-4064-8b06-5db820f7c640",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "75f28d9d-5280-4f41-a43c-d0b7452a4bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80d8d29-1112-4a93-9f15-4dfa98a628ee",
        "cursor": {
          "ref": "4acc0009-f502-40d8-af19-6be0666ac056",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "797e93ab-73da-4523-8660-f7a346b8cb8c"
        },
        "item": {
          "id": "b80d8d29-1112-4a93-9f15-4dfa98a628ee",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "60620f76-1b7f-4800-b68f-96376af630e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaadca5d-f609-44d6-b323-7a49177fbd1e",
        "cursor": {
          "ref": "590a9b7c-b5f6-418f-bada-fecd61c809a4",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2f03f1df-2b8d-4ff2-bb61-579705c9d97c"
        },
        "item": {
          "id": "eaadca5d-f609-44d6-b323-7a49177fbd1e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2a817c41-44b6-4c9c-97bd-2f1562d9bce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6d130b-b6f6-42cb-ba3a-3be61e3bf88e",
        "cursor": {
          "ref": "f361a974-1551-467c-9020-b7b2a1accd67",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "98e7a615-47ed-4ccd-933b-9a1648cc1ed0"
        },
        "item": {
          "id": "6f6d130b-b6f6-42cb-ba3a-3be61e3bf88e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8f8a1f9d-97b9-43ca-89bc-ff73672d1cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de92671f-5f65-4416-bbbf-833b2f840c5e",
        "cursor": {
          "ref": "7c8ec92a-fd87-4be8-9160-58221f1eb406",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5bd52f6a-04e1-483c-ae08-fee009688a96"
        },
        "item": {
          "id": "de92671f-5f65-4416-bbbf-833b2f840c5e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d2f15fed-85b8-4ab0-9d0d-9be09225653a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ecfce70-c9d4-44b9-966e-9b4ffcce8b00",
        "cursor": {
          "ref": "4c57fa0c-41dc-475b-a691-7ce3a4a63fcc",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bc2a2222-37c7-49db-9f40-8d13612c394b"
        },
        "item": {
          "id": "5ecfce70-c9d4-44b9-966e-9b4ffcce8b00",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a3b3306a-7120-437c-9a27-7213227a1ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db6d1bb-9f90-4702-ac13-df6b0c302158",
        "cursor": {
          "ref": "76ab561a-d817-460b-85da-db8656fd2f2e",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a65dd8a2-9c2a-4909-8f5b-f7985cf806c8"
        },
        "item": {
          "id": "1db6d1bb-9f90-4702-ac13-df6b0c302158",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1c85872b-5232-4a95-bf8d-7bcbef896c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172db442-00c7-44df-8a6e-a573014efe97",
        "cursor": {
          "ref": "de14e421-2d05-4a26-b956-f56d45f35f8d",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d81fa698-b6fd-4fef-9992-3b1e0bddd60d"
        },
        "item": {
          "id": "172db442-00c7-44df-8a6e-a573014efe97",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0c82d128-f851-4dab-a468-19549019c244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9925b47f-512a-4e00-a74e-f3eb809f64e3",
        "cursor": {
          "ref": "7b14d0bf-dd16-46de-86b5-b7d02f53b0e4",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e1727fa0-79a8-4caa-8432-aa43074257e4"
        },
        "item": {
          "id": "9925b47f-512a-4e00-a74e-f3eb809f64e3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5a61d6c1-f103-4a4f-b261-cf4f47148af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8c285c-6591-4aea-a053-31d7449d9792",
        "cursor": {
          "ref": "bcbbeab2-48de-4866-a78c-be686bf80294",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "bdf11ce5-9278-4d9b-9fe2-e83db72a4579"
        },
        "item": {
          "id": "6d8c285c-6591-4aea-a053-31d7449d9792",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4dd37bbf-076f-40be-995c-a2fd6e11197d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0631c42-e9a8-471b-87a1-12134f2f29d4",
        "cursor": {
          "ref": "e2b7dde4-7f46-428c-a104-9dc4f61d2e5d",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ba19c88c-ba4d-4f67-878c-a645743ad052"
        },
        "item": {
          "id": "c0631c42-e9a8-471b-87a1-12134f2f29d4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "122f46e9-926d-4e57-934c-dbef7ec47ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7e2999-41cb-4e78-8885-ea22615b72bd",
        "cursor": {
          "ref": "c9139156-4f63-4006-b8d3-40fd2c22579e",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "64cafb24-9164-4d49-aa51-3f62b4c34509"
        },
        "item": {
          "id": "7c7e2999-41cb-4e78-8885-ea22615b72bd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "76960aa3-7666-4817-888e-08752ccb48fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca686d6-cf5e-4112-bc80-df842cd393d2",
        "cursor": {
          "ref": "e3633236-69c1-4f5e-8240-6e0aaeb2cbd8",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "931cca1e-eebf-4332-ad0a-67d17868e937"
        },
        "item": {
          "id": "dca686d6-cf5e-4112-bc80-df842cd393d2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3b3ca6bf-df55-42f3-b429-07cfc97740d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59956e79-72f1-4a76-86be-a3c32fc30dac",
        "cursor": {
          "ref": "927033c1-c9ad-4a27-99a1-1affe4ba96be",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "53c698b6-f01d-4a0a-b0d3-c87e502b1d5f"
        },
        "item": {
          "id": "59956e79-72f1-4a76-86be-a3c32fc30dac",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b01a6092-38c8-4eff-919f-56c83f74e50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae2b917-088e-4eba-b8aa-5d879459093f",
        "cursor": {
          "ref": "bba87200-9cea-4a79-884c-4673d67aa51b",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5b055f1d-2058-46f7-aad1-7d53642162ad"
        },
        "item": {
          "id": "6ae2b917-088e-4eba-b8aa-5d879459093f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4e069fe5-7c00-450e-b730-a4a7dc260a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3897856e-c33b-4759-9420-d96e1f89cc5b",
        "cursor": {
          "ref": "fca9e4d3-5c9e-4195-a01b-c5db16f6300d",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b0affc5a-def1-465b-a854-c65abd6b68bd"
        },
        "item": {
          "id": "3897856e-c33b-4759-9420-d96e1f89cc5b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d1d68039-10f2-4aa9-84fc-7e51e75aed82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec6dcd2-79f9-42a3-a104-146b219e7554",
        "cursor": {
          "ref": "91b4b7a9-e206-4ff9-adca-9211bcc4bbc4",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "da3447cf-77b5-4a3d-9477-a34235b54749"
        },
        "item": {
          "id": "6ec6dcd2-79f9-42a3-a104-146b219e7554",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1ab07906-7d5c-4947-9e99-325f096bfc9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0411ea-5e82-482c-ac22-2bcdf7934151",
        "cursor": {
          "ref": "ec00fff3-5678-4558-843e-c6ab42063f95",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "dda92e85-f867-4a0b-873f-c13e357b603e"
        },
        "item": {
          "id": "8b0411ea-5e82-482c-ac22-2bcdf7934151",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2e35ec25-ed1d-48c2-b7f5-a0a311a4eb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70bf34b-d196-4b86-964a-e966041d712f",
        "cursor": {
          "ref": "770faeee-7573-48d7-9b05-e8dc463fed8e",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4c43d8ea-c056-45e2-bb3e-64fb6a6175d9"
        },
        "item": {
          "id": "c70bf34b-d196-4b86-964a-e966041d712f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4e58f3f9-d028-4458-a325-0a5d87c14ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42049d4-f5db-48e3-8f9e-0489d9cb9715",
        "cursor": {
          "ref": "af3a2ea2-e0e2-45fa-a703-dfa4dd56c164",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d0d6798d-83ed-4d61-bbf8-236c1e024111"
        },
        "item": {
          "id": "b42049d4-f5db-48e3-8f9e-0489d9cb9715",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "39c83466-aab5-440d-a37a-6f60eb8d8d27",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 72,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbfc6ac5-d6d5-4674-9f90-5871be1c28f5",
        "cursor": {
          "ref": "0517efc7-7642-4f63-a26a-81e1500d4e34",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "71374237-5b87-44a4-9371-401d8845d962"
        },
        "item": {
          "id": "dbfc6ac5-d6d5-4674-9f90-5871be1c28f5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "275a3eec-06ed-4e1f-bd20-b5f28d6a0ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fa7738-179e-4a3d-98fe-eb54dab84d22",
        "cursor": {
          "ref": "8f68d9e8-233d-48d3-90ef-b6ece62d4417",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "302adba4-99fa-4da0-a7be-2ea72479dda8"
        },
        "item": {
          "id": "a0fa7738-179e-4a3d-98fe-eb54dab84d22",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0f546736-bfc2-4efe-9e36-16f593fea487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283bde6f-dd17-4b98-b2f9-e39740bc5bcd",
        "cursor": {
          "ref": "0d9cf296-c47a-4068-8b46-c161eb7555f3",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7a7c1a31-6fce-42ab-8d57-909032317c6c"
        },
        "item": {
          "id": "283bde6f-dd17-4b98-b2f9-e39740bc5bcd",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d30f7e0c-84f1-4c92-bfa0-ca9ea641f9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cffdb98-b2b6-4c9f-a7aa-a66bf2692810",
        "cursor": {
          "ref": "0aa432f4-854e-4386-9373-ae707d0a0607",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3dbd54bc-5832-41fe-bd9e-274e85d43668"
        },
        "item": {
          "id": "9cffdb98-b2b6-4c9f-a7aa-a66bf2692810",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2054374a-0304-45c4-8c09-163358d49746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd3e97e-dcd1-41d2-9eee-8390f7bd26fd",
        "cursor": {
          "ref": "1ca42527-fb2a-40f2-a5c6-fb7c30db74a4",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4026dc24-f9f2-4278-8961-b45bd520ecfb"
        },
        "item": {
          "id": "5cd3e97e-dcd1-41d2-9eee-8390f7bd26fd",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8377dd52-4eed-40a3-9c3e-d8fc7c2c3103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f3c099-9676-48d4-a00a-4a3d92a710a9",
        "cursor": {
          "ref": "aee2bc35-a712-41f8-90e6-b4f7af192f2e",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b807dfbf-90c7-4ba3-b822-737ce04b1567"
        },
        "item": {
          "id": "30f3c099-9676-48d4-a00a-4a3d92a710a9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2869f8e9-9fad-4606-b1a4-eeaa4dfd6d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a325aa-71ae-464b-9333-f42454aa9f3b",
        "cursor": {
          "ref": "b44cac25-5c9f-422b-b5f0-39c8f00da303",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0fb48f33-7885-4f0a-93bf-3e6273159a43"
        },
        "item": {
          "id": "e6a325aa-71ae-464b-9333-f42454aa9f3b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "44c0f9a8-530c-48a7-9dc9-2706270edcba",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 75,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9320407-7f03-4841-8eec-1e9f64c77f62",
        "cursor": {
          "ref": "9b70b698-fac2-4d31-bda9-6a6c9e0384af",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0b507988-aa2c-478b-8690-3b26ff4963ad"
        },
        "item": {
          "id": "e9320407-7f03-4841-8eec-1e9f64c77f62",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "29ff5ce7-fbc2-4f6d-8764-0d2126774258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73420689-bba5-4013-b2f1-30bfa32f7aa5",
        "cursor": {
          "ref": "6f367f25-04d2-49fa-a301-338fb2347ef3",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cc39df82-dd06-4365-b252-9aa6cd953d78"
        },
        "item": {
          "id": "73420689-bba5-4013-b2f1-30bfa32f7aa5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1112058a-bbb9-4d7b-b70f-f85cff3d908e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14000cd0-f0da-4077-8e8b-d8dbf498a91e",
        "cursor": {
          "ref": "0d40812c-e0f5-4a84-952f-8a7b25474ceb",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3e2d8d26-6af9-4f33-a59c-a3ae80207718"
        },
        "item": {
          "id": "14000cd0-f0da-4077-8e8b-d8dbf498a91e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "42d0d4f9-c56a-453c-85a5-d6da853a5945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c01c90d-0ffd-438a-9fac-7e1ec606536b",
        "cursor": {
          "ref": "abd13aef-e4a6-443c-a0e2-8c865073f977",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b9175073-04aa-431e-a3ed-59594e31be28"
        },
        "item": {
          "id": "4c01c90d-0ffd-438a-9fac-7e1ec606536b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "78e834fd-b0ea-4b93-81e2-75249947cfd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27df9580-82a0-4801-b5f0-60cd9c741247",
        "cursor": {
          "ref": "cd526779-22e0-416b-9053-8bc5e73b7ca4",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "49497ee2-1e48-40d1-9a1a-92907088a842"
        },
        "item": {
          "id": "27df9580-82a0-4801-b5f0-60cd9c741247",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f25380a3-dbb2-40d9-ab04-cc4b9d607ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2954d95f-a3e5-456f-8e32-b8b3d70f7eaf",
        "cursor": {
          "ref": "116a8d53-c3cf-4678-a9d2-6376e2780748",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8c05d389-5ed6-4d70-a886-28e99a91fd19"
        },
        "item": {
          "id": "2954d95f-a3e5-456f-8e32-b8b3d70f7eaf",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0372be8f-9fa3-468d-bdc1-7826a8d3aae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc7b87e-f2ef-48a3-87fa-bf031afe5bbb",
        "cursor": {
          "ref": "e810954b-d165-4bb2-842f-da07df8def1e",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a85b3673-86d8-4dc3-9c66-b56c29d99ebd"
        },
        "item": {
          "id": "2cc7b87e-f2ef-48a3-87fa-bf031afe5bbb",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f07e8517-d4a0-4fad-b3bc-6e16dcabdfe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3d2b21-8485-46a0-931e-8986b1b48bb3",
        "cursor": {
          "ref": "d8cbccf9-f0c1-4074-a375-0ec0b1504f45",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d6a8b872-c1e3-41df-b33a-3f978b443502"
        },
        "item": {
          "id": "9a3d2b21-8485-46a0-931e-8986b1b48bb3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6dbe1ff8-1345-40c4-a152-c9d94aa09304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db84de2-b337-49a0-a972-6ef9bcc5dd39",
        "cursor": {
          "ref": "2aa92d36-6f3f-4081-be1f-3b8a9e7029c5",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "87390589-878b-4f97-a0e4-0b6212ee2d8b"
        },
        "item": {
          "id": "9db84de2-b337-49a0-a972-6ef9bcc5dd39",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "25c7bc31-4d74-4e86-a867-a6ba2575a733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fcff542-a390-4138-abc9-a69ae1e45901",
        "cursor": {
          "ref": "7a62793d-482c-4b68-8f8f-4ca516ed95a7",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2894a7e6-98fe-41e4-b776-1f7073916e8e"
        },
        "item": {
          "id": "3fcff542-a390-4138-abc9-a69ae1e45901",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0edba922-9db5-410a-8510-04827a80e5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992c716c-6e34-4c2e-938e-979ffe3c8959",
        "cursor": {
          "ref": "08946469-82bd-40d6-9d94-d50553609732",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "89396626-2d3e-424a-8da9-763f35b2e684"
        },
        "item": {
          "id": "992c716c-6e34-4c2e-938e-979ffe3c8959",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "75ef79c3-1d65-47b5-a8ec-4f5ebef5b646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926f75c3-79bc-4d7b-a80c-b6c96b78c088",
        "cursor": {
          "ref": "1a468c0c-5461-4615-96e3-3a4ff2ce7550",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "375a3590-88b8-4333-a34a-a702bb0d1b92"
        },
        "item": {
          "id": "926f75c3-79bc-4d7b-a80c-b6c96b78c088",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "92e23a98-e858-46d3-9bce-a68f711d2974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26de8b99-c181-4914-8cbf-5c2a0e546ebc",
        "cursor": {
          "ref": "a2976764-33a0-4479-acfd-75952c2689d5",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "458466e8-7e45-48d8-b019-1fb3c5bd500b"
        },
        "item": {
          "id": "26de8b99-c181-4914-8cbf-5c2a0e546ebc",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "67faaf23-11ef-4615-acbd-1f99d916e3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d646818b-c7e5-447a-86d2-1b67b71a1dae",
        "cursor": {
          "ref": "6e6abc7e-317f-4036-ac93-8ca61eb1d47e",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2b162b3e-cf8b-4da2-b104-95b115d2983a"
        },
        "item": {
          "id": "d646818b-c7e5-447a-86d2-1b67b71a1dae",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b68f3ef2-ba3f-4fff-907c-25c5c5382c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f0daff-7f9c-4e97-ad96-b5ee632555f4",
        "cursor": {
          "ref": "6e145142-ed97-4268-9669-e18b9dfc10d1",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "bd0ac86d-2c5c-4114-84c7-cf0403fc7664"
        },
        "item": {
          "id": "a4f0daff-7f9c-4e97-ad96-b5ee632555f4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "28013881-66d7-4fa2-8d43-8da7cd7b222c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c047082f-ef9f-49cb-bddb-c3557e472278",
        "cursor": {
          "ref": "504bc506-e20a-488f-ad93-20d3da099aea",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e6e5c3b4-c7fa-48d7-bd21-92ef7a260a62"
        },
        "item": {
          "id": "c047082f-ef9f-49cb-bddb-c3557e472278",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1a86812e-91ea-4b7a-b273-23520aabeb81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2105e745-dac4-4914-af81-1c72f04be2c6",
        "cursor": {
          "ref": "743218e1-00d0-4bc4-ba32-92f4bfd12814",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3aaef2de-3fec-4e54-95f4-3316624ee9b8"
        },
        "item": {
          "id": "2105e745-dac4-4914-af81-1c72f04be2c6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e84ea0a2-c247-4beb-8e27-63492a6f8e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42123510-6e1e-4585-a7c2-61052521272d",
        "cursor": {
          "ref": "e67b6109-c4ad-4107-9dc3-060d90c2d359",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d4e52170-c7f8-442b-b43d-4356aa038b67"
        },
        "item": {
          "id": "42123510-6e1e-4585-a7c2-61052521272d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c756036e-7d3a-448a-8823-99acc6170912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95205137-60b5-4320-b00a-2c12448fd13f",
        "cursor": {
          "ref": "77b13630-8abb-4a7a-96e3-b67630fe203d",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0f66f180-92a0-41c2-8edd-359bd46d97a7"
        },
        "item": {
          "id": "95205137-60b5-4320-b00a-2c12448fd13f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "42239ac6-7f26-4271-bb80-10d6d5c4f388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ddf07f-8784-402b-9d6c-df7ff1b5fe23",
        "cursor": {
          "ref": "29d01a6d-4db8-4a38-afbd-adb5f003e524",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "93646ac7-6031-46d3-9c7c-35aac1775eac"
        },
        "item": {
          "id": "85ddf07f-8784-402b-9d6c-df7ff1b5fe23",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f099d8bc-26a9-4ba0-983f-1f780fa6b480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e98cf5e-7229-411d-b8c5-4c50cf6d1b3d",
        "cursor": {
          "ref": "6caef95e-e307-4520-90cc-487d0bddb7c4",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "96dd2747-2133-46e7-9ab0-882ee23fab53"
        },
        "item": {
          "id": "5e98cf5e-7229-411d-b8c5-4c50cf6d1b3d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9ea9c790-4730-486a-8592-ac840ecc1bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c688f2d-42b1-471c-97a4-0dbc1c3989bf",
        "cursor": {
          "ref": "2cc5607f-f0a8-4ceb-9973-4f0675a348ee",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9ef2f389-8b08-49ff-801c-a57c84910eb6"
        },
        "item": {
          "id": "8c688f2d-42b1-471c-97a4-0dbc1c3989bf",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f55289a5-8818-4b1d-b6cd-1417c6eae137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f9ec5e-5b52-46eb-b5e0-6991f70cfeb8",
        "cursor": {
          "ref": "680ab424-2431-4053-b684-68b6900e221c",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "221baf4e-0530-416a-bb61-4466a63698f5"
        },
        "item": {
          "id": "e6f9ec5e-5b52-46eb-b5e0-6991f70cfeb8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "97ead994-2f6b-4af4-978e-bc491258bc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdccece3-466e-43c4-90a8-1ee260738907",
        "cursor": {
          "ref": "7bc77eeb-ba2f-46c7-9f4d-670d760bf819",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "82008cd0-0d4c-4e28-8cef-98b7520e6adf"
        },
        "item": {
          "id": "fdccece3-466e-43c4-90a8-1ee260738907",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "cdde6603-343a-46aa-8d04-53a28aafe12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fec478c-4055-466f-9af1-43a1d7660621",
        "cursor": {
          "ref": "6aa9460a-1456-4265-ad64-81288287f0b8",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1cc95250-ebe0-4ede-84e4-6dad9008ca32"
        },
        "item": {
          "id": "9fec478c-4055-466f-9af1-43a1d7660621",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ae3c590c-bcc4-492e-8481-c353a78f6aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5396e8-b5d1-4d21-992d-ba6e563104b7",
        "cursor": {
          "ref": "80ac948d-720f-404b-8718-08d046edd8bf",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "46da02fa-cf8f-4216-ad14-6553e3062507"
        },
        "item": {
          "id": "1e5396e8-b5d1-4d21-992d-ba6e563104b7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "045d8b30-2e44-48f7-8975-8d2d9bcfa0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce08a6d-ea14-4ac2-9118-a3f30106709a",
        "cursor": {
          "ref": "adbd7961-f3af-48e9-ac03-057c4542688f",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "37c8afb3-a198-4c0c-8007-4764ba16786a"
        },
        "item": {
          "id": "9ce08a6d-ea14-4ac2-9118-a3f30106709a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ba18d22e-e05c-40ac-ab6d-e4e661295e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f24e11-c015-47a3-9e36-8535023afcc4",
        "cursor": {
          "ref": "ea8e2c7e-7d4c-4d98-a5f4-d60796d55352",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "eb0cd0ec-7678-480e-970d-e95ad4a3b044"
        },
        "item": {
          "id": "36f24e11-c015-47a3-9e36-8535023afcc4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e32435bf-4ddf-4fdb-90a6-c10bb33064ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dffd4069-c0e6-43b1-b032-dfd71ccaff65",
        "cursor": {
          "ref": "b7fc80bf-9382-4059-be0a-a8d0d69509e9",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "513dd5b7-4739-4ab4-9988-77ca3198ef80"
        },
        "item": {
          "id": "dffd4069-c0e6-43b1-b032-dfd71ccaff65",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6740f685-5947-4ba3-abc7-cee7473e706d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64c1af1-de89-40c7-9317-62241210b348",
        "cursor": {
          "ref": "c49185e2-34f4-45c3-b85f-e712ce1f164a",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b584ccea-ff43-4369-a72a-7794fbbc80ba"
        },
        "item": {
          "id": "d64c1af1-de89-40c7-9317-62241210b348",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "67bc828e-0461-414f-9b39-4a69d74bffaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a00fcd-01f4-4edc-9174-153df7150c0d",
        "cursor": {
          "ref": "3f39efb6-4181-4e34-b98f-474bd1e51e3f",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f3f754a8-2e5b-42b9-acf7-c9670d413ff0"
        },
        "item": {
          "id": "f5a00fcd-01f4-4edc-9174-153df7150c0d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b10014e4-fe6f-47cb-8b34-71bf0352b873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1429bc-d6a3-40c3-88d6-59ae9b7ef6a1",
        "cursor": {
          "ref": "f475192e-ce62-40ff-835c-6cc1fa3e916f",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e76d33c7-f772-4e7e-a9b6-afc980de13e4"
        },
        "item": {
          "id": "8d1429bc-d6a3-40c3-88d6-59ae9b7ef6a1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "34af9334-b9f1-43db-a1a2-43117487ed19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9cf3e0-f1f5-4b26-a520-82d96d922dba",
        "cursor": {
          "ref": "584df1f0-30d5-4418-822f-0e9ca5b414c4",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bcf8d315-49b4-4c30-9db4-2616797d2afa"
        },
        "item": {
          "id": "de9cf3e0-f1f5-4b26-a520-82d96d922dba",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "441899b1-6c26-44ca-8dd0-b1f0aec2bf53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50706316-69b6-43d3-9e20-4f875427f7b8",
        "cursor": {
          "ref": "da5cbb3f-b539-4d64-80e1-d2e53788357e",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b0911941-c2a0-4c34-bef2-76d8c62148b4"
        },
        "item": {
          "id": "50706316-69b6-43d3-9e20-4f875427f7b8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1b4abe86-4855-4db7-ade6-bb46dca1f94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8c9b7c-9d4b-4828-8657-f4612ed94704",
        "cursor": {
          "ref": "1a543e74-058f-4ade-9938-2ff27e3c6816",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "16a8b193-7540-4177-8e84-04df3d62700d"
        },
        "item": {
          "id": "de8c9b7c-9d4b-4828-8657-f4612ed94704",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0a6ff9cb-37f0-49f7-a447-91b3e7244733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0445313-8036-43eb-ae3d-8cd44e97555e",
        "cursor": {
          "ref": "8d60bfcf-6a12-492f-a152-22f2d8b689ba",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a13fa2aa-ffab-4c77-b160-c34136d52219"
        },
        "item": {
          "id": "d0445313-8036-43eb-ae3d-8cd44e97555e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b266243c-ce0a-45a8-ab54-b2e440153872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10086c11-9283-41bb-b75e-780df6c74de2",
        "cursor": {
          "ref": "976ecc1e-04e7-4c3e-a572-a57d1b605c0a",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "879dd736-c1e3-46c3-9480-37d7cd3ce6c1"
        },
        "item": {
          "id": "10086c11-9283-41bb-b75e-780df6c74de2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "21f40f25-9eef-441b-802b-05e6ea155e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e6f3e1d-e4ee-468e-8d61-040f625af7b8",
        "cursor": {
          "ref": "f1e68bdb-b631-4d56-8a1b-5f2cca2a616e",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8135233b-97ec-4a6e-a7af-a0d4c2155408"
        },
        "item": {
          "id": "0e6f3e1d-e4ee-468e-8d61-040f625af7b8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9669fdcc-6194-46ec-966b-b63901cfbd6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa2d5bd-1a64-4a03-b55c-e31ac741a244",
        "cursor": {
          "ref": "25a2c652-8d0c-4b7d-a9f4-a97f8bc423b9",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a3cadbf8-ff96-42c5-9a19-e23c1e7c62c0"
        },
        "item": {
          "id": "dfa2d5bd-1a64-4a03-b55c-e31ac741a244",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "37c5240c-e7ff-472f-872b-7d36c972b17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9763469b-a189-47cc-bff5-d9c5095054ac",
        "cursor": {
          "ref": "9e809621-2b7f-4816-9c0f-01c2d5e67613",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b7b9f89d-8c4e-473e-b1b1-7e31df42a843"
        },
        "item": {
          "id": "9763469b-a189-47cc-bff5-d9c5095054ac",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3074a3c9-d7e9-48e9-a836-82d0acf994fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0dc99fa-5e0b-4ac3-9f1a-09559c8318a8",
        "cursor": {
          "ref": "783f6b44-2387-4836-b06f-fc59a4e77508",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2be1a236-8f22-4487-a078-f050f5773852"
        },
        "item": {
          "id": "a0dc99fa-5e0b-4ac3-9f1a-09559c8318a8",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e20732a8-d0b1-44b0-a9ed-24e28022259a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a843be-50e0-4de7-9f74-f3c7075676a9",
        "cursor": {
          "ref": "a881fef2-2ba7-498b-af23-4a2d80ee30bd",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f06830eb-e57e-47bd-a4e3-3400b9751660"
        },
        "item": {
          "id": "a6a843be-50e0-4de7-9f74-f3c7075676a9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "cb20410a-5989-4468-a30b-a67411968eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158d3a65-5c50-4284-985f-2f90ab76187b",
        "cursor": {
          "ref": "0b867e13-55f3-4ad8-a7ee-080598950b94",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "42144f9b-26db-437a-a99c-ea30db32d31a"
        },
        "item": {
          "id": "158d3a65-5c50-4284-985f-2f90ab76187b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "cdf1b96f-fbec-4ee5-b168-4ba255efb6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4cebb1f-f6f4-4399-9fa9-8ca67b9f4915",
        "cursor": {
          "ref": "0805b92d-7058-4bdd-8ea8-f4f5910304fc",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8b4682fa-8e0a-401c-a9e0-45aef7568eed"
        },
        "item": {
          "id": "c4cebb1f-f6f4-4399-9fa9-8ca67b9f4915",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "75d0b946-b82e-4ef5-985a-5b01a71b2b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1e1812-4ab3-47bc-9fb1-b7b371d18cad",
        "cursor": {
          "ref": "ba045d4c-d5ab-4887-b6e3-4e78dffc1397",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e80c073d-08ac-47de-8729-d2c04fd1afd0"
        },
        "item": {
          "id": "9a1e1812-4ab3-47bc-9fb1-b7b371d18cad",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "49dc3e2f-6bfc-4bce-a428-37f08676e695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa53b92e-2362-4bbd-94c3-e543000e29ac",
        "cursor": {
          "ref": "8739ebf9-2b13-4109-b7a8-bfcb99ca39fa",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c4f2546d-7071-4cf4-acd2-7ce63426e95f"
        },
        "item": {
          "id": "fa53b92e-2362-4bbd-94c3-e543000e29ac",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f5155528-f34e-4e07-af5a-dc1a72b3ffd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6d1ce3-59dc-440c-8e7d-c4037a6c1298",
        "cursor": {
          "ref": "c3ad88fb-b9d4-44d7-99a9-e17c5a03d56f",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4f8d807d-ec25-432f-96bc-f55b2023ad42"
        },
        "item": {
          "id": "2c6d1ce3-59dc-440c-8e7d-c4037a6c1298",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "62a0a253-0bca-4bec-98dc-6b6e5a60ac8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad61f8c0-53a2-4e04-bbfb-ace6fc178ce5",
        "cursor": {
          "ref": "326e0fb7-278a-4089-a85c-fe4881e0837a",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "048d2b9a-c9e6-45f4-978f-c9e38d3883dd"
        },
        "item": {
          "id": "ad61f8c0-53a2-4e04-bbfb-ace6fc178ce5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b724ef3d-92de-4fd0-b9fb-ec5237742f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24caf636-babf-4694-b33a-d5979c529cf8",
        "cursor": {
          "ref": "cb24cca3-45e4-48be-933b-a24d94e4d9f2",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "44a28a64-9551-41ad-a49a-b07f27ebcefc"
        },
        "item": {
          "id": "24caf636-babf-4694-b33a-d5979c529cf8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "777b76ee-e987-4001-8745-382b66b4f096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb72a7e-b30b-43b6-bd57-6007b4d461f0",
        "cursor": {
          "ref": "0178024f-9b2c-4462-a21d-69e689365d5d",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c8afdd49-5065-4183-bc6b-da49150c7941"
        },
        "item": {
          "id": "ecb72a7e-b30b-43b6-bd57-6007b4d461f0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b76791fb-2b07-43e5-abaf-7439091f8115",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9976863-ba44-4af2-9976-84e8d9b4fce6",
        "cursor": {
          "ref": "9e6ac9ac-2e21-4d3f-93d0-a075104133eb",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "330298f8-ec5b-466f-b275-6b3152679c00"
        },
        "item": {
          "id": "f9976863-ba44-4af2-9976-84e8d9b4fce6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "620072bc-4924-4560-811a-e5a52a831bd9",
          "status": "Created",
          "code": 201,
          "responseTime": 84,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "435037a6-c2ef-42c9-b73e-133333842213",
        "cursor": {
          "ref": "f3c4667f-b56e-46be-b54d-b2db9b77dfe2",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9b6e15ba-6eeb-4c7c-a79f-2e88d9ae9bc2"
        },
        "item": {
          "id": "435037a6-c2ef-42c9-b73e-133333842213",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4b0ea16d-7a18-4055-b0fc-c94d746250c6",
          "status": "Created",
          "code": 201,
          "responseTime": 248,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2d9bc7-d619-4e51-b594-c8e9fa9b1da0",
        "cursor": {
          "ref": "555e3f43-d82e-4f90-8488-eb16acc1c049",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f901f562-d0f2-4ea0-8bcc-627b662b34c0"
        },
        "item": {
          "id": "6d2d9bc7-d619-4e51-b594-c8e9fa9b1da0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "17bb0546-2530-4062-95c9-323d642f8701",
          "status": "Created",
          "code": 201,
          "responseTime": 115,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3581209a-f356-4bc3-b590-0c0f37dc9797",
        "cursor": {
          "ref": "df0591b4-d785-41e1-8213-3a6c1166482c",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "77f3af38-3337-4d16-9452-82c9778a733c"
        },
        "item": {
          "id": "3581209a-f356-4bc3-b590-0c0f37dc9797",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "18fcd81f-d298-4ba1-b4a1-60c0d98edbfd",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e351e3c3-d148-44ac-a1a8-f4ea44070ab5",
        "cursor": {
          "ref": "3eb38c8a-2401-4cb4-bf97-600d76f51364",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ff2c9cce-01dc-44b2-a438-2ded1fdd5632"
        },
        "item": {
          "id": "e351e3c3-d148-44ac-a1a8-f4ea44070ab5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7098a2b9-20ae-4d3c-bc49-e6a8b6a0bb35",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c8997a-dbb1-4fae-bad8-599fa1c18bee",
        "cursor": {
          "ref": "d42b93f9-484b-4e82-88a3-b7177dfae101",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7740f056-23db-4e31-8aba-ee4e33ff69af"
        },
        "item": {
          "id": "35c8997a-dbb1-4fae-bad8-599fa1c18bee",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a401286c-5fe9-4d46-90f6-931233541e7c",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6924a024-2732-407b-bd0f-179ebea5a16a",
        "cursor": {
          "ref": "b36fce83-467a-4920-88fb-8637dbea54b3",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5b0c1b13-e443-45e1-b793-11601ca46755"
        },
        "item": {
          "id": "6924a024-2732-407b-bd0f-179ebea5a16a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "50ec603f-0510-4724-9c8e-34c328358499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba22f290-e539-4ea1-901d-b36fa70dba7a",
        "cursor": {
          "ref": "850e3cd9-ca66-449d-a43a-902400b926bd",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c959d97c-70b4-4aaf-a64a-d2f8d7f75f92"
        },
        "item": {
          "id": "ba22f290-e539-4ea1-901d-b36fa70dba7a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6ea25ed0-0da7-4256-a0c4-3fc385b68370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e64679-afd1-42d4-8005-02b9cd462503",
        "cursor": {
          "ref": "35656736-42a2-4396-aab9-c18aaac71df5",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bade43fa-caf9-4360-a2b8-ebbca20d01d1"
        },
        "item": {
          "id": "a1e64679-afd1-42d4-8005-02b9cd462503",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bbd21d38-928c-488b-a5fd-6abdeb78a45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3867d31-5bbf-44f9-aee9-bb7ceb5653a7",
        "cursor": {
          "ref": "93270477-d9a8-4e87-8cfd-e2daa2aadb0d",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3a86c38e-e090-43c6-91d6-67efad06619b"
        },
        "item": {
          "id": "c3867d31-5bbf-44f9-aee9-bb7ceb5653a7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fa3c6d98-5c42-4006-a92a-8a78f0e85e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6901f623-8a8e-415b-8dd3-ae2cff011db1",
        "cursor": {
          "ref": "55252805-d687-4396-99b7-bef02d02b338",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3da64f1d-b33b-435d-8d64-cfab9489c458"
        },
        "item": {
          "id": "6901f623-8a8e-415b-8dd3-ae2cff011db1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bc054ae0-3ae2-48bc-9deb-155e95190354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de086e4-59fe-4827-9740-5e56c285a5bb",
        "cursor": {
          "ref": "c34f4252-295c-45e4-8828-43f915f8bcc8",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0e02e159-5075-47b6-8534-d3b4a423588a"
        },
        "item": {
          "id": "5de086e4-59fe-4827-9740-5e56c285a5bb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ef6720a4-bd4b-4686-86bf-b6302528ce0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a16b7d-3548-4ed7-8a3c-2aceaf36ac01",
        "cursor": {
          "ref": "72f217bf-f0c3-4980-aeeb-9fd0b2ccf51e",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b5bc2608-9230-4308-9fa6-f3ccc1e04a75"
        },
        "item": {
          "id": "f8a16b7d-3548-4ed7-8a3c-2aceaf36ac01",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8bd7e570-1df6-4d0c-b222-d97a8dd1a483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cf2ce9-d52e-4dd5-b3a5-74de10c23c82",
        "cursor": {
          "ref": "c190bd02-b576-4115-974a-c1cf82012319",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0370cf79-ece2-46d6-a586-e71ad4548fca"
        },
        "item": {
          "id": "00cf2ce9-d52e-4dd5-b3a5-74de10c23c82",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "bcc5910f-903e-47d6-85aa-6433fb4206bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e7d53f-2492-4777-8971-88d0094ddad9",
        "cursor": {
          "ref": "42fb2388-c963-437c-a7e3-f9335319616d",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "cf25ba0b-64f0-444d-8d4e-0393b162c6a5"
        },
        "item": {
          "id": "b5e7d53f-2492-4777-8971-88d0094ddad9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9b909d30-2b16-45fd-a062-34c45257fc9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add9da3d-089f-4364-9e70-1dcc5849c704",
        "cursor": {
          "ref": "981ec5b9-3bc8-472c-947e-83092951952c",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3309b3e7-7cf2-430f-8d94-daf0a8c05135"
        },
        "item": {
          "id": "add9da3d-089f-4364-9e70-1dcc5849c704",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b7e02373-7385-45be-a5c3-2d93b1f01dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a6f3d1-7ec9-4e46-9eab-9dc290f14cd0",
        "cursor": {
          "ref": "5f09a6e3-f36e-42e4-a5fd-0bc5130439c1",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "846999df-adab-4a0c-832d-fd4735064ad1"
        },
        "item": {
          "id": "03a6f3d1-7ec9-4e46-9eab-9dc290f14cd0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3e42ffe4-60e4-4309-a60a-bbdbdaa2c171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399c6d62-2c35-4553-8870-4b4aa2145979",
        "cursor": {
          "ref": "30173c42-daef-4548-b07d-aa4fd9c19d06",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "676c276f-176b-437f-911b-7ef52b754d4e"
        },
        "item": {
          "id": "399c6d62-2c35-4553-8870-4b4aa2145979",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9791e564-9f49-4188-a57c-02c9a3253b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03f7f43-eb25-4e18-b7ce-8135507b8c63",
        "cursor": {
          "ref": "95d6f2b5-0472-458d-84cd-b634e7ba43b2",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d004d147-5053-49df-9314-3b770b1ccd26"
        },
        "item": {
          "id": "c03f7f43-eb25-4e18-b7ce-8135507b8c63",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1de67ac6-76f4-436f-aad0-f824ad44d0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6716877-bb5a-4eab-88b2-2e406aef9441",
        "cursor": {
          "ref": "3bc109f3-5818-4ad9-aa60-bd952eddad96",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f3a19257-f557-4004-8a9d-391c67cfe322"
        },
        "item": {
          "id": "f6716877-bb5a-4eab-88b2-2e406aef9441",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b263571a-3ef0-4442-81b9-a540dcc1f44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2090f48b-1cab-49e4-9d53-a88047a3ac01",
        "cursor": {
          "ref": "f6f4d79b-2286-40ff-9f16-b17c36b69874",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a184ced2-b6c2-4fe4-bc8a-b75b78290198"
        },
        "item": {
          "id": "2090f48b-1cab-49e4-9d53-a88047a3ac01",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e4638786-ee2e-4d6e-9e8d-1dca6457858c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f8b275-89db-4614-a387-f68029e9f75b",
        "cursor": {
          "ref": "2e167034-439b-4e3e-b5e9-835d679ef56b",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c558bfa1-5965-4f0a-a1ad-b2370a577242"
        },
        "item": {
          "id": "b8f8b275-89db-4614-a387-f68029e9f75b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cce4aba3-9784-4cf1-9a00-11946598186a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f433b4-9769-4721-aad5-a7407691afba",
        "cursor": {
          "ref": "c032a100-7ce2-425c-a843-f1e9125f73a1",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "062bb8bd-8a30-41e8-a268-3de1a21116fd"
        },
        "item": {
          "id": "73f433b4-9769-4721-aad5-a7407691afba",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ca3c994c-b7e1-4b08-9e48-b897e31c082a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2ae98f-c359-4589-bf52-cec5df2710ff",
        "cursor": {
          "ref": "eb6dc47e-0121-4f43-aa25-67362906e49a",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "cb4a830b-291b-42e3-a72c-d5c01438f5f0"
        },
        "item": {
          "id": "3c2ae98f-c359-4589-bf52-cec5df2710ff",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5df49651-40db-4e43-88d7-512cc9ad4f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e63530c-6cc0-45eb-9769-08ae2fa57466",
        "cursor": {
          "ref": "ae09d362-846f-4b09-a865-c8849bde55fd",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "019f9aa4-904f-425e-a434-140053b4711a"
        },
        "item": {
          "id": "6e63530c-6cc0-45eb-9769-08ae2fa57466",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "082eccce-05bd-49e2-bffc-bbec6e0df31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbd3ecc-b4ed-4f16-8635-c2ceeb558ab8",
        "cursor": {
          "ref": "03c18369-f873-4901-b02b-0e3c952ccf59",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2c688f79-0f45-4c5c-ae9b-faffdab7610d"
        },
        "item": {
          "id": "4dbd3ecc-b4ed-4f16-8635-c2ceeb558ab8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8a25ea06-9a0a-4aea-8c6f-cebb68edb0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cc77b2-6607-4d61-8e7a-6a945be0d569",
        "cursor": {
          "ref": "dc97453f-5325-4986-a6e1-e1d3e92cb99e",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e79081c6-bf32-4d45-8305-1077cda689bc"
        },
        "item": {
          "id": "28cc77b2-6607-4d61-8e7a-6a945be0d569",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c94022aa-7bdd-42dd-a29a-645f09fda999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c722fa51-7861-430c-8230-a4a06303aeaa",
        "cursor": {
          "ref": "8bcc8d7b-7a56-4d0a-adbc-49f11a41e21f",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2c501337-dfee-40b6-ac28-93932a0a07fe"
        },
        "item": {
          "id": "c722fa51-7861-430c-8230-a4a06303aeaa",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "82837991-7b1d-4ff7-be7d-1e1c71f6c1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75897060-19e5-4b78-b2ba-1d2fd62ef7fa",
        "cursor": {
          "ref": "b0ddfb21-c06a-4c8f-bff5-6b9330c7d1a2",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "274068f8-e588-445b-b18d-3b432dde7de6"
        },
        "item": {
          "id": "75897060-19e5-4b78-b2ba-1d2fd62ef7fa",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f81687c8-e0e3-42e0-80e2-f7402557b666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d1ed52-13aa-4374-9a33-cda80d95ce79",
        "cursor": {
          "ref": "4592f82e-b2ce-4724-a194-81db9059d7cd",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "04660f97-11fb-45d0-8a04-4f3a9a64f9f3"
        },
        "item": {
          "id": "c2d1ed52-13aa-4374-9a33-cda80d95ce79",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "286c0c2b-b24d-466e-8b03-4b71225d603e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8fbdae-7df9-4902-94fe-a9a8baed1915",
        "cursor": {
          "ref": "770519d5-e60a-47a9-8d65-c206c82ba341",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6658d695-bb47-452e-829d-36589a6bde22"
        },
        "item": {
          "id": "1e8fbdae-7df9-4902-94fe-a9a8baed1915",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b3d9d32a-7138-498e-abc1-99600513e8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96dc225f-b19e-4510-a2ff-d38b4a2bb924",
        "cursor": {
          "ref": "1590c046-10a1-4373-a8d8-6b4a5875bbf6",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6f1380f5-6d95-4220-b008-66716d6dbeb4"
        },
        "item": {
          "id": "96dc225f-b19e-4510-a2ff-d38b4a2bb924",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c81af23f-551a-441b-be67-bb7c85a3f22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e15498b-d543-4fe7-81aa-cade11b2a3c2",
        "cursor": {
          "ref": "043cba61-db5a-40c9-b788-5dae519910a5",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6e0d137d-c272-41a4-8b17-8cf2447ff4b7"
        },
        "item": {
          "id": "2e15498b-d543-4fe7-81aa-cade11b2a3c2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "85f4b136-e6e7-4cf3-aabd-cfc40660a9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddfc8883-afa2-43f6-85c5-e3d836c5855b",
        "cursor": {
          "ref": "e012db49-6946-421b-b92a-fd73d9400d54",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "dba49f12-eb3f-437a-b419-49bac5992aa0"
        },
        "item": {
          "id": "ddfc8883-afa2-43f6-85c5-e3d836c5855b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4e7ba22d-6e29-4a3a-9e91-582cd2a48f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79bb39d-4c7b-43ee-8084-569d4759f95e",
        "cursor": {
          "ref": "2b627faa-3160-423d-ab55-7dc9b1a7c512",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b5898c84-e43d-446b-9088-b1c9e62d5e33"
        },
        "item": {
          "id": "e79bb39d-4c7b-43ee-8084-569d4759f95e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2b02af9e-3cdf-4558-891e-ad03a62d2720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ed1aa4-ad81-4a00-a9f6-46f6277fc0b7",
        "cursor": {
          "ref": "bb12b902-da0c-4165-8c39-3bc1f1360b3b",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8b2ea6e9-ab63-4430-84b9-783c7e49505b"
        },
        "item": {
          "id": "99ed1aa4-ad81-4a00-a9f6-46f6277fc0b7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ec91dcef-b84d-404d-ab89-d47233b37642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca25190b-cfb6-462b-bafc-50e2f70aaf2b",
        "cursor": {
          "ref": "46086ad5-6e51-435c-93cb-67e65c2dc1bb",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "429b562a-b36c-4ad0-ae96-9b1733c7d8f0"
        },
        "item": {
          "id": "ca25190b-cfb6-462b-bafc-50e2f70aaf2b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cb7d5181-2e62-4257-8542-929238fc2295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76742cb0-b925-405b-a784-062974e1babb",
        "cursor": {
          "ref": "148a47bc-d0ff-4923-93db-a83d553c0928",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "92f24817-ff04-43ed-8387-2681a0bceba9"
        },
        "item": {
          "id": "76742cb0-b925-405b-a784-062974e1babb",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c3867b97-c562-49cd-9f49-e64c744c4630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fcd5d1a-7321-43fe-a043-6ec88a1d62f5",
        "cursor": {
          "ref": "bd342a9b-bf20-4e5f-b6af-85d81ca47e5e",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5465596f-85c4-46c1-abb2-effb43754ba9"
        },
        "item": {
          "id": "7fcd5d1a-7321-43fe-a043-6ec88a1d62f5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "efba07da-e1ac-4300-9374-7d16b51c954e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a71ad3-57e1-4f4b-a196-197e3c53c872",
        "cursor": {
          "ref": "0807dfa7-40d9-4e75-b075-dab03e50d73f",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b28fbeec-1ceb-423d-95ac-cbaf8844e43e"
        },
        "item": {
          "id": "02a71ad3-57e1-4f4b-a196-197e3c53c872",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "36775caa-154b-4055-a54a-7b3f00845a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6af40a-101d-4b08-85eb-16c6e331b997",
        "cursor": {
          "ref": "b9081012-4aa0-4f72-b676-eb0cd492b1d5",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "abf09a41-1803-4b10-8795-c1f8cfcc90c6"
        },
        "item": {
          "id": "4c6af40a-101d-4b08-85eb-16c6e331b997",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "99e77f9b-6986-47f1-972a-bea95bf02607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1999db7e-674c-4280-a5b4-ae1e8c8ac718",
        "cursor": {
          "ref": "e24d4bdc-9e36-4f73-9799-2be92ce81cbb",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f4c9682a-1b90-4467-81cd-14027e068f05"
        },
        "item": {
          "id": "1999db7e-674c-4280-a5b4-ae1e8c8ac718",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4b4a6015-03c8-4969-af11-689b2f942f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a595fe6-fdbe-4062-9165-e6c0ef023de5",
        "cursor": {
          "ref": "a5aa8493-f7a4-4ffa-b36d-703c8ea2667d",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "82637798-5b80-4a39-90bc-267b073f4704"
        },
        "item": {
          "id": "8a595fe6-fdbe-4062-9165-e6c0ef023de5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1e7e5913-c9b6-4756-99bf-3ded8afd4b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9fdb6b-fa9f-4cd8-9553-bfb8a75993cd",
        "cursor": {
          "ref": "27c16d76-88de-4985-adeb-66e7deaa6f30",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e484ee5f-0c17-498c-8a08-3ed79e0fd98b"
        },
        "item": {
          "id": "9d9fdb6b-fa9f-4cd8-9553-bfb8a75993cd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f9ec2b16-fd8c-4ca9-a5c9-028c055112c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76eadf66-d9ac-41be-b669-323c0f775848",
        "cursor": {
          "ref": "55ac8387-542b-4722-b897-60d4e7dc2f38",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ca93592a-c2ac-463d-ab48-2ca64c4fb58a"
        },
        "item": {
          "id": "76eadf66-d9ac-41be-b669-323c0f775848",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3ad740bf-a0c6-4b43-ad0e-db9d1eed8b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ccb13a-5d53-4e53-afb2-2913faa02d74",
        "cursor": {
          "ref": "4e635b5c-2f0b-456b-9c3b-4e2a23e8bf23",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6f614a9c-fe11-41df-9dff-d2920bac9d7c"
        },
        "item": {
          "id": "48ccb13a-5d53-4e53-afb2-2913faa02d74",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "00273c4d-ab6a-425c-a2bf-8ccc33e27510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c534fbe2-36ee-427b-920a-ee60feafb1fe",
        "cursor": {
          "ref": "55111f03-bef6-4785-a3ce-89a75c291665",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "586ed4fc-48f1-42fa-81e1-cf3d64e4cc62"
        },
        "item": {
          "id": "c534fbe2-36ee-427b-920a-ee60feafb1fe",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1ecd550e-7b4c-471f-b46b-a50c4adb7e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a721a4db-781f-452d-8056-b1fe32f95720",
        "cursor": {
          "ref": "5669451d-2abc-46e8-9bff-3d4668d3e807",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "416c72eb-b4c6-4ee3-ac89-ac6c990aae80"
        },
        "item": {
          "id": "a721a4db-781f-452d-8056-b1fe32f95720",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5a4d49c2-d4a2-428c-bc20-8fa76bdf9682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296bcf67-5e94-4df7-b95d-05ae91078afd",
        "cursor": {
          "ref": "5c3f0410-b68d-4fb1-a49a-de7df44799c3",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b32a845e-4d93-44b4-9744-5af6551b2681"
        },
        "item": {
          "id": "296bcf67-5e94-4df7-b95d-05ae91078afd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e023ecfb-65a1-405a-84be-ea4f91e4ae73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c69a4d-7324-433b-b91b-350a3bfa5dd7",
        "cursor": {
          "ref": "dc6788d1-7536-4783-86c1-0d0adda389bd",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "07011d61-245b-4e31-9b7a-69cd9b26a1b0"
        },
        "item": {
          "id": "61c69a4d-7324-433b-b91b-350a3bfa5dd7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a45fc586-07fe-41f5-98b4-86023c9a56db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1461ebbe-3c40-4ff5-8eee-a480b3bb1f16",
        "cursor": {
          "ref": "21ed0bbb-76af-436f-a229-fac467cee7f3",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "79928e7c-26b2-4201-9b4c-0b81d6e53c50"
        },
        "item": {
          "id": "1461ebbe-3c40-4ff5-8eee-a480b3bb1f16",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1b0a253c-418e-48f2-99e4-1e0d81f39783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a613c57-3c19-40c0-91f9-28cd2d8a05a1",
        "cursor": {
          "ref": "4af9b98b-c06e-4398-9453-0e4510fdbb87",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "44279536-1458-418c-b356-6f2a2e423789"
        },
        "item": {
          "id": "7a613c57-3c19-40c0-91f9-28cd2d8a05a1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1eb64d5d-74a3-4f10-991a-a167b91ea817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c679fcd1-1601-4ad6-90b7-03cc3ae6548d",
        "cursor": {
          "ref": "7335bef6-b5af-4dd5-8719-faf8dfb9f670",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0a9c3742-e828-4a7f-b721-2343f4f97107"
        },
        "item": {
          "id": "c679fcd1-1601-4ad6-90b7-03cc3ae6548d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7794d477-8c8c-41c2-8a97-9aea79de582a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b8b1c3-d16e-4d7c-9148-431a21833e85",
        "cursor": {
          "ref": "31794c4a-8b72-430b-89cc-107d14f06ec7",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2fdeeadc-bb06-4af8-90fc-9388a8d4f59d"
        },
        "item": {
          "id": "f2b8b1c3-d16e-4d7c-9148-431a21833e85",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "06cfc79f-8521-4c3f-85ff-5c422402760f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4259b3-a7af-4024-a5b4-f29feeec919d",
        "cursor": {
          "ref": "10516728-2101-4ff1-ac69-984d1be1e643",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a9410e4f-75e0-43ba-b3aa-ca5da3c3d5a4"
        },
        "item": {
          "id": "fe4259b3-a7af-4024-a5b4-f29feeec919d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2db3ba00-2c75-43f0-ac5b-afb6e3f5f1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfd08c1-0e7e-4f8b-a5fb-22854a1ca866",
        "cursor": {
          "ref": "30e77f29-c26c-4105-8df1-8d7627947103",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2035c8ff-9f52-4929-8986-d807992a8838"
        },
        "item": {
          "id": "fdfd08c1-0e7e-4f8b-a5fb-22854a1ca866",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "67a26ccb-d7d3-47e9-8b2a-2d28c931e380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209a578c-8ef6-4359-ab95-56f54d4be011",
        "cursor": {
          "ref": "7f6f3f94-7f31-4acf-805f-c2c10ea456ef",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bbd199b4-25e7-4af6-b8a9-f6617f172a0c"
        },
        "item": {
          "id": "209a578c-8ef6-4359-ab95-56f54d4be011",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "07d3f1c9-4933-41f8-8f95-b263326be1cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd9e421-83d0-4028-8efa-b2b2fed18ee7",
        "cursor": {
          "ref": "97baf103-f22f-4844-ae0e-f446d8a10cdf",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ad42bea3-b1a8-4f17-885a-319f730bf8c6"
        },
        "item": {
          "id": "9bd9e421-83d0-4028-8efa-b2b2fed18ee7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c2c13c0a-2ca1-47e1-8eb0-3b2140d5c516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce993d16-2f4b-4d7e-a5aa-2af04cbd6202",
        "cursor": {
          "ref": "65e1e4fa-ba42-4825-bc15-af55f160df0f",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "494fbc18-4930-42a7-94a6-b500b5f12f07"
        },
        "item": {
          "id": "ce993d16-2f4b-4d7e-a5aa-2af04cbd6202",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0f3b3775-79a4-48d9-a3a9-f4b54ac98ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b613d76-84c6-47b4-99fc-f9e3edf79cb1",
        "cursor": {
          "ref": "7578a744-bae4-454f-8c03-b6a68dd9ca03",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "19579ea0-f4d8-4494-bdec-e441f4501eb8"
        },
        "item": {
          "id": "4b613d76-84c6-47b4-99fc-f9e3edf79cb1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "eefa4f5a-7efd-4c6f-8852-971a74709ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f15dd7a-dcd6-43ad-8fd4-cdb5b9c8b173",
        "cursor": {
          "ref": "79a5ef45-3180-47f4-837e-c29b65ea4102",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c695abfa-6342-4672-b932-7f8c9803dfd2"
        },
        "item": {
          "id": "3f15dd7a-dcd6-43ad-8fd4-cdb5b9c8b173",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fd6db3f1-3737-45a9-a178-1af9a92a8fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77cc83d-c758-4620-8bea-eb03236f9561",
        "cursor": {
          "ref": "ecde4d11-8e30-491c-baa7-fb51ae201408",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ee730e04-5855-4efa-aad6-f87f654228af"
        },
        "item": {
          "id": "d77cc83d-c758-4620-8bea-eb03236f9561",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6eab5c38-630a-495b-9d32-3b6e6581437b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3cef812-1f4e-49b9-9ff0-d1e0d7e33e18",
        "cursor": {
          "ref": "bd146cb0-31e5-4a81-94fe-4f65dc300179",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1cfbd143-6ad0-4813-b5f0-4c731fd5c3be"
        },
        "item": {
          "id": "d3cef812-1f4e-49b9-9ff0-d1e0d7e33e18",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "63953e02-ed75-4b6b-bcee-9b4e231b5153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146f0729-8e9b-4d66-b68f-f638c8a20a42",
        "cursor": {
          "ref": "51af98e4-f0ad-4790-ac0e-f89a4c461e52",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "fab4c2d1-a338-4323-abaf-0e3fedd67307"
        },
        "item": {
          "id": "146f0729-8e9b-4d66-b68f-f638c8a20a42",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c6af7052-25fd-4a30-91c4-6fcd9f1fcdbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88d1b34-eea5-43e5-a6eb-e4e2bd621123",
        "cursor": {
          "ref": "d78bc231-93bc-43d4-819a-16798451dda1",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4732eac8-c4ac-47fa-94b4-6465b7ec2d57"
        },
        "item": {
          "id": "b88d1b34-eea5-43e5-a6eb-e4e2bd621123",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "128174d7-06e4-4e22-b3ab-d9223f0d91f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561ca908-cb3b-4797-9681-08a29d380670",
        "cursor": {
          "ref": "a1db99f0-b353-48de-b9c8-ecb0fa491246",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "34aaf154-4248-432d-a6b3-54aa64227717"
        },
        "item": {
          "id": "561ca908-cb3b-4797-9681-08a29d380670",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b636d494-d51f-4b2c-8b92-a85c0d365b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a0068d-f8da-4557-a083-91907ea019ba",
        "cursor": {
          "ref": "77456f9e-863b-47dc-b57f-0402d09816a0",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "441ce3a7-2524-4e6f-b54a-f770cb514cdd"
        },
        "item": {
          "id": "55a0068d-f8da-4557-a083-91907ea019ba",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f6740418-021f-439f-b976-cd813a50bb17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491b8d02-326a-4aea-ae21-36a3ff2e3fc0",
        "cursor": {
          "ref": "5aee2ecb-9a2a-4c84-8322-12dfb14e8fe7",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4316f43a-1603-4243-8591-1229ca870f44"
        },
        "item": {
          "id": "491b8d02-326a-4aea-ae21-36a3ff2e3fc0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0423b077-dc50-4ed1-a6e9-1a7cd6d459b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39c6fa2-dbe4-4773-888f-eaad295de766",
        "cursor": {
          "ref": "7b288016-be1d-421d-bd13-435e42f28e97",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ab38c518-685f-498f-b6fb-5da5e2ebf766"
        },
        "item": {
          "id": "a39c6fa2-dbe4-4773-888f-eaad295de766",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d592a1e1-e1f8-4035-ab52-ba8c802c00de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70e9aaf-1b73-43e6-a85d-6ec29e8578a4",
        "cursor": {
          "ref": "7ff61cc6-da99-4682-bdf1-53e281168ad1",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "74f4d229-353d-4061-9f8d-6e50f512c9a3"
        },
        "item": {
          "id": "f70e9aaf-1b73-43e6-a85d-6ec29e8578a4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5b93b2ad-1bc2-45d4-94e7-a85738565961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9653903e-e60b-4a6a-93e9-e9575b1833b0",
        "cursor": {
          "ref": "e35671bd-9730-4e09-98b4-f5f462b3b0c5",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c53ee294-f9ac-45a5-a312-58e3c928c560"
        },
        "item": {
          "id": "9653903e-e60b-4a6a-93e9-e9575b1833b0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "821e7e10-08f7-424c-8b8c-bbe16a12cf55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca96b5c8-c73e-44a1-9fb3-32e540efd171",
        "cursor": {
          "ref": "a6329e7d-3f10-44ec-a3f2-2a68ffca7230",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "edf59ede-9b10-4f90-ad73-86881f52f6cf"
        },
        "item": {
          "id": "ca96b5c8-c73e-44a1-9fb3-32e540efd171",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b36f077e-5f31-4237-85c9-401cd95e3e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa84cde3-e8d9-4d91-bba0-ae5d0afd612a",
        "cursor": {
          "ref": "6e0230ae-f1fd-4748-9613-1fed1ceb3d29",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "94338e8e-03ec-4216-afdf-29b3bc63be47"
        },
        "item": {
          "id": "fa84cde3-e8d9-4d91-bba0-ae5d0afd612a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a5b0938d-6aae-4a94-9c8d-2ba50ae54b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35cda4e8-6bd4-4f98-b71b-ab86b8ab2231",
        "cursor": {
          "ref": "6a2c1051-d17b-48d2-b0e9-e0d0415e1dcc",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "94a8d075-c5f9-4d1c-8255-899a7de9664a"
        },
        "item": {
          "id": "35cda4e8-6bd4-4f98-b71b-ab86b8ab2231",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e13f62dc-6d4b-485c-8919-b4f66be28926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76c4606-b2ca-4092-8057-ad97bdc3e500",
        "cursor": {
          "ref": "fa863299-c5c6-4259-8af0-f1229c10123f",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "84266c66-286f-4c52-b227-30928a7eedab"
        },
        "item": {
          "id": "d76c4606-b2ca-4092-8057-ad97bdc3e500",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ce073d82-4b53-4937-8c34-9cf31f11ecb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bd34ae-093f-4299-93e1-88734a520606",
        "cursor": {
          "ref": "5c7eca27-8e69-45ae-92bf-8e39913f8c71",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6031e685-021e-4ce4-93e3-7bdc0e146d92"
        },
        "item": {
          "id": "52bd34ae-093f-4299-93e1-88734a520606",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4b7be918-e876-4609-aacb-ed5b099a2285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa8176d-0a21-46d8-b62a-6201fec2fae3",
        "cursor": {
          "ref": "81141f3e-132a-40c6-8c00-38742a8f6170",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "08b4d235-5d08-4c5f-a4ce-830610c8ca96"
        },
        "item": {
          "id": "daa8176d-0a21-46d8-b62a-6201fec2fae3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "09bcaf67-10a0-4e4b-88d5-9145f137b87b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750dc80e-95e6-4786-a1f4-85cf78fc0d04",
        "cursor": {
          "ref": "a5418d7d-d371-485b-9fbc-195c04fc3b43",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c7aa6584-0ba6-4aa0-b05e-4be2c552b6a4"
        },
        "item": {
          "id": "750dc80e-95e6-4786-a1f4-85cf78fc0d04",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d4488ca1-ad6f-4e2b-820a-7610399bed95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1daa7c-593e-4819-9153-06c7b4336bd8",
        "cursor": {
          "ref": "8949fc6a-0086-4c67-b0c8-fe5e00859531",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "21033444-9274-476d-9ff3-482ac8983b66"
        },
        "item": {
          "id": "7e1daa7c-593e-4819-9153-06c7b4336bd8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c11535cd-ac09-4a57-acb7-f5ce5cb1dc63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5b701d-f1dd-49f1-a84d-2190f7ea1484",
        "cursor": {
          "ref": "9ba0fa93-6113-4ddc-a672-daedd566e350",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2886ea0a-71e5-474f-8c5c-30df4705c67b"
        },
        "item": {
          "id": "4e5b701d-f1dd-49f1-a84d-2190f7ea1484",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9feed9f5-5417-4062-abb2-545c5db0c063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5b0f8d-86f6-40a3-99cc-a5f4836db4ee",
        "cursor": {
          "ref": "ebe5c2e8-9df6-4aac-87f2-0a032644a575",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "84a1142e-4446-4edf-a184-00fc36e267cf"
        },
        "item": {
          "id": "5e5b0f8d-86f6-40a3-99cc-a5f4836db4ee",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3990cee6-7bd8-42f4-9c31-9f829fc28303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a038da13-95e3-4048-a139-46a62a863b01",
        "cursor": {
          "ref": "2c8b75d6-602d-4b26-980c-728bbb250bdf",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "02b8eff7-d729-43a9-a889-dcbe069aabed"
        },
        "item": {
          "id": "a038da13-95e3-4048-a139-46a62a863b01",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ac1ed105-3168-4cd7-93fe-8459a7f4a2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454d7797-9526-488e-b68d-fa9bcfe44584",
        "cursor": {
          "ref": "c3ac5c2d-4e1e-4b24-8dc4-99ff3c05394c",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d743ef72-6438-4153-82fe-a3b258d0146e"
        },
        "item": {
          "id": "454d7797-9526-488e-b68d-fa9bcfe44584",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "373bd309-4cf6-4da0-8de0-5d8d69753c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3989672-17de-4e72-aa80-bf86a643fde5",
        "cursor": {
          "ref": "1864abee-e1ff-4cb3-b0b6-a5c7c6f43838",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "dae8a8cc-b6d9-41aa-81a2-6c3f8b2667c1"
        },
        "item": {
          "id": "a3989672-17de-4e72-aa80-bf86a643fde5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "58c02d37-dba5-44b2-8aca-52100841444d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14e08a0-4a1a-4070-94bb-5671da2b5090",
        "cursor": {
          "ref": "46c2df43-a20e-4bd9-9443-ead712cb2810",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d73f7a06-5d69-48f6-afc4-c5cb6ffdc22e"
        },
        "item": {
          "id": "e14e08a0-4a1a-4070-94bb-5671da2b5090",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "982701d7-9a10-4823-9c35-759b8feb95b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f45249-7797-4275-b8e4-cc539d82de43",
        "cursor": {
          "ref": "fefa2a07-354b-48f8-a1fe-9067a2b883a8",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6b17f49d-b566-4dbe-92a1-828274d03e52"
        },
        "item": {
          "id": "03f45249-7797-4275-b8e4-cc539d82de43",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "104dd5d5-17b4-4561-accc-5631ba2555e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80d9a16-c745-441b-a8a5-7baf4517042e",
        "cursor": {
          "ref": "a75bae5d-3831-4f27-a30b-2454f7eaec7e",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "152a7c66-0061-427b-bb9a-f7864ab15e86"
        },
        "item": {
          "id": "e80d9a16-c745-441b-a8a5-7baf4517042e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ba519c4b-0eb3-421d-b4f3-a95fb7457af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b91c17-0289-40c6-aed2-fda87a0f03e9",
        "cursor": {
          "ref": "67ff5205-c68b-4e8c-ab04-7f64e566fbaf",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6a093303-48f0-4a3a-8521-10fdbd8bf521"
        },
        "item": {
          "id": "16b91c17-0289-40c6-aed2-fda87a0f03e9",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "238a17cf-b9d9-45dc-a6e4-a0e075921203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480e9988-6295-4fa5-b6d7-a44c72d8533f",
        "cursor": {
          "ref": "6ba81511-dc9e-47e0-93f3-94810803b9bf",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9c5b2aba-832b-4f38-9016-2d7faf1e961f"
        },
        "item": {
          "id": "480e9988-6295-4fa5-b6d7-a44c72d8533f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5d41ae97-b2e7-4752-8af5-0cb1afb2d48f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56200064-8d85-4870-88f0-29dffff65ce1",
        "cursor": {
          "ref": "cbc8a01e-1175-429b-9375-1664d7bf0469",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "19550638-4371-490e-90b1-9400840efa89"
        },
        "item": {
          "id": "56200064-8d85-4870-88f0-29dffff65ce1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6ddc4f0f-78c0-4199-8448-c8eef520a208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b1d85b-2b95-4a74-a8b8-4d55903438b3",
        "cursor": {
          "ref": "4ab45c71-3cc3-4733-9f74-dbe50149e563",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "62bacefe-476c-4ba6-a518-55581bc6119c"
        },
        "item": {
          "id": "26b1d85b-2b95-4a74-a8b8-4d55903438b3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5cefee19-c028-450a-9478-fa6c5ff8c0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e1a744-66cf-4d9b-b61c-8097db0de477",
        "cursor": {
          "ref": "32ef652f-1994-4b52-8f22-648dd4c5c115",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "71ce4d7c-f0f9-444a-865d-9049060fb06a"
        },
        "item": {
          "id": "43e1a744-66cf-4d9b-b61c-8097db0de477",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1fd2cfef-e6b1-4af1-b448-0c5dd877f5b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55c533a-c072-41c8-857a-58d23470954a",
        "cursor": {
          "ref": "f82b7fb0-dd9b-42ec-9fed-92ea5c13e962",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2935df68-9a06-44a0-8160-5d891adc8080"
        },
        "item": {
          "id": "c55c533a-c072-41c8-857a-58d23470954a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "db807684-f1fd-4d20-9489-6447081c9e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e512d095-3709-4d94-9956-a16453d7c054",
        "cursor": {
          "ref": "ed5a4763-fb2c-4b83-a132-a3b09af17d1f",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e8eb8992-8b12-4c7e-9185-08dfdfcf00cb"
        },
        "item": {
          "id": "e512d095-3709-4d94-9956-a16453d7c054",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "17b93395-c937-4757-8b6e-49f19aba7060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eecc47c-1d41-4c83-988d-281ff4e163a7",
        "cursor": {
          "ref": "c47e0a3a-7b73-4d0a-8a56-009497ebdbb2",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "27b59738-b123-4c48-a7af-0af9e85ccb38"
        },
        "item": {
          "id": "4eecc47c-1d41-4c83-988d-281ff4e163a7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a9220106-a00f-45a0-9732-f181c7d453d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b6d496-3e94-4ea2-93fd-56f7bf4ced84",
        "cursor": {
          "ref": "d1bad94e-7c8e-4860-a642-b13161e2d832",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "cdc9e341-5233-4d9d-974f-d3796fcfe297"
        },
        "item": {
          "id": "d5b6d496-3e94-4ea2-93fd-56f7bf4ced84",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c5c17c10-b8d6-4b3e-97eb-fc9183dfa016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66bcc7d7-4653-4c7e-9d06-6a8a00970eab",
        "cursor": {
          "ref": "50390659-c077-46c3-8148-d4e1ff13a434",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c2b053a2-efe6-463a-8d3c-a8c983cd1f2a"
        },
        "item": {
          "id": "66bcc7d7-4653-4c7e-9d06-6a8a00970eab",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "807e79ba-0bbe-4064-9c12-062fe6686c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816ceca0-6266-463b-8c84-311d265c9d89",
        "cursor": {
          "ref": "b9b9f52a-2a80-4809-b991-d0bd91e3d3d7",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e65f36e1-1867-4a56-b367-4c90328c30f6"
        },
        "item": {
          "id": "816ceca0-6266-463b-8c84-311d265c9d89",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b5ae76b8-5b36-4800-9721-c4bb104bd957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723ac5ec-53a5-4e2c-af21-b2cc91f8fa47",
        "cursor": {
          "ref": "c9523831-7162-43c6-af37-5e13d1734e29",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "33e58560-4a19-434a-8746-58ba9e3116c3"
        },
        "item": {
          "id": "723ac5ec-53a5-4e2c-af21-b2cc91f8fa47",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a3324f85-9f4e-44b7-8690-639bbe10af63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b26af07-e0e4-4b81-87ab-7857fd299306",
        "cursor": {
          "ref": "79df5c1f-c302-4dc5-9788-a2a8bbceb000",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "439626c4-ded4-4d60-9a33-2da0d2a0c022"
        },
        "item": {
          "id": "0b26af07-e0e4-4b81-87ab-7857fd299306",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5b296dd4-1b92-4c19-87ad-3823f10088eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9dac45d-f7b6-430e-8772-50309ba9aade",
        "cursor": {
          "ref": "6e2533c6-3737-4437-90cb-2a0b6df197fb",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2fc61af6-fbff-4bb8-a74d-94f9be178b2f"
        },
        "item": {
          "id": "f9dac45d-f7b6-430e-8772-50309ba9aade",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a301b882-d6a8-4f10-b424-fabca5a00506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cf505f-b159-48a9-872b-cabcc116776a",
        "cursor": {
          "ref": "dcbc4f3b-3765-435b-91ab-4133643dc30c",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1054aa57-f5d6-4bb2-a910-3a6c6177349e"
        },
        "item": {
          "id": "e8cf505f-b159-48a9-872b-cabcc116776a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "fde76d7a-2bbc-43f3-bd42-3d7f1b02c0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d26993-cc77-4f9c-b3d5-657c9fcd457a",
        "cursor": {
          "ref": "f9d3f5b8-3d74-4d16-b6c0-4cda55422da1",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "fc30d0eb-3d9f-4ac3-94e6-ceb263923b63"
        },
        "item": {
          "id": "59d26993-cc77-4f9c-b3d5-657c9fcd457a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "25bfe000-e543-42fb-98e5-97e7dc94c1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd597a9b-e6b7-447c-9abf-fca788f47211",
        "cursor": {
          "ref": "80280594-c7c6-44a8-b8c2-a87500b57e9a",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1e3d28c2-7697-44ca-a92a-8b20f7b9333a"
        },
        "item": {
          "id": "bd597a9b-e6b7-447c-9abf-fca788f47211",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "09bba430-83b9-4ea8-91a0-6bc2446818d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb91ad7-f5ce-4828-b3be-d7c605727393",
        "cursor": {
          "ref": "47be40b1-860d-4f7e-98ad-cfc32555552d",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8c7708cf-03e9-45fb-b1b6-82731c5e3ae9"
        },
        "item": {
          "id": "6cb91ad7-f5ce-4828-b3be-d7c605727393",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8199e8f1-fa35-480c-9548-da3e2018e2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf040ef1-02b3-4ee7-ac69-966cfdea4396",
        "cursor": {
          "ref": "506e7ecf-c02f-4c85-ad1d-d48f29de4030",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4fc6b281-68b9-436b-989a-2e1eabd41787"
        },
        "item": {
          "id": "cf040ef1-02b3-4ee7-ac69-966cfdea4396",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "906a4017-5c6b-4f49-9c4e-2e9eda917af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ac3094-f701-42c9-890d-c1ddaf752f78",
        "cursor": {
          "ref": "de4a80b1-61d7-4e06-96da-4bf82811772d",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ad5d69d6-9d01-4a22-b0b6-b6a50ecd83b4"
        },
        "item": {
          "id": "36ac3094-f701-42c9-890d-c1ddaf752f78",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5f60b7e6-1424-4a96-ba9f-98bd39d99742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d890a0-4fa5-474b-872a-50313cab75af",
        "cursor": {
          "ref": "7948a1b7-6b1a-4dfc-84cf-16022f9aaee4",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f4d1acac-1ede-47ec-8684-456b6c029cc7"
        },
        "item": {
          "id": "67d890a0-4fa5-474b-872a-50313cab75af",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "509bd5a8-355f-40fd-9d47-b20be10bab61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49bbbc7b-04be-4d18-9428-067c9e0544fb",
        "cursor": {
          "ref": "0773edfd-e210-4c09-8e17-a8b0f7ab8223",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d19a9b27-0898-4096-828a-4c255b6471f9"
        },
        "item": {
          "id": "49bbbc7b-04be-4d18-9428-067c9e0544fb",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "07e592ee-f99a-4c44-b6a7-82604ecc82b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6b755a-a27f-422b-ae7d-4c971156b9b9",
        "cursor": {
          "ref": "19b9ddfd-3bde-420c-ae94-936722204ec3",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "eaf6e911-f55c-41f5-a198-356069c039e5"
        },
        "item": {
          "id": "4e6b755a-a27f-422b-ae7d-4c971156b9b9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "13626937-fc78-408a-a511-e91b58a66375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a3ca46-efcd-47e3-9b27-477403f95bb2",
        "cursor": {
          "ref": "39276711-856d-4538-a7f4-fc72ad3454c9",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0eae2853-7f8d-4faf-9e40-a107da26562e"
        },
        "item": {
          "id": "e7a3ca46-efcd-47e3-9b27-477403f95bb2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8844ea2f-4607-4b2f-a265-0610601c0bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0298e1b-1701-425c-b2e7-ad807553ac4f",
        "cursor": {
          "ref": "f4d4291e-2ed1-4000-8533-b304eca7375e",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "414034f8-14d0-4d87-b639-fd56c5f4a46a"
        },
        "item": {
          "id": "a0298e1b-1701-425c-b2e7-ad807553ac4f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "12c5f2dc-71eb-40af-a7dc-528ca572996e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2062c4e7-0069-4199-a3df-b8acbc373789",
        "cursor": {
          "ref": "93289c21-5852-4793-81a9-84c2966230d1",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b84b6416-224e-45df-aef1-9432e5ed1562"
        },
        "item": {
          "id": "2062c4e7-0069-4199-a3df-b8acbc373789",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "bc7be3a3-cda4-4245-ac8a-a935bce608bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a178768e-d505-49fd-927d-ec9f88b02a2e",
        "cursor": {
          "ref": "681fc538-6cf5-4607-a494-d8d3bcc10492",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b9e5bd54-273d-4a7b-ba1a-68d99eccecf9"
        },
        "item": {
          "id": "a178768e-d505-49fd-927d-ec9f88b02a2e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "96eb74bd-8e8c-4436-a643-4481844e1c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb38051-c568-4f21-965b-98b497516745",
        "cursor": {
          "ref": "6b4cc6bd-64e7-4101-8484-38c16880bb20",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "781cfcf5-5611-470d-b448-f5d244ed8a78"
        },
        "item": {
          "id": "8fb38051-c568-4f21-965b-98b497516745",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "218409e1-365b-4b6f-be8c-0839bfa9b7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74dd6827-270c-4937-acf0-8075426da8c8",
        "cursor": {
          "ref": "6b51d846-31cc-4f00-a5f6-1371326e02a7",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c07c6973-044a-4f5c-8f98-3200a17c8637"
        },
        "item": {
          "id": "74dd6827-270c-4937-acf0-8075426da8c8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7a1e3754-6968-4d47-8783-1e9d0391650d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f418390-0d5f-4aad-9aa6-b2e96b1ebe2a",
        "cursor": {
          "ref": "766e3e6f-59fe-4fe1-8e6c-586f7b3b7252",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "787bff08-9280-4e31-815e-aec69f1e7dc6"
        },
        "item": {
          "id": "5f418390-0d5f-4aad-9aa6-b2e96b1ebe2a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "724b5abc-9144-4822-bc4c-522b344f9aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3ef55d-ceae-406d-a6c6-2c57b264da63",
        "cursor": {
          "ref": "80d9d2d3-bca6-4e4d-b8f2-ca548c8a935f",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9b28be46-28cc-4146-abbd-f0d91a0ac97f"
        },
        "item": {
          "id": "bb3ef55d-ceae-406d-a6c6-2c57b264da63",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "dee9a3b8-0b4e-4b01-a940-22dbf570eb9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f609ef61-9154-4189-b334-2808ff9a7571",
        "cursor": {
          "ref": "3d3639bc-464b-4344-94bb-df275e34f0f5",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b164232e-e62b-457f-ad9d-00ae5025d824"
        },
        "item": {
          "id": "f609ef61-9154-4189-b334-2808ff9a7571",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "02b9c8b8-d7c8-4f63-b704-92ef8d1f3977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab3ddc2-660e-4a75-9254-3370d2332dbd",
        "cursor": {
          "ref": "7574a086-8202-45a2-b60c-08dab1040c59",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8f642d14-85ce-449f-87da-b5cebc40b770"
        },
        "item": {
          "id": "aab3ddc2-660e-4a75-9254-3370d2332dbd",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a9a1ce6f-079e-4d2a-831a-3b4bc38fd3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210c941c-442c-4bfc-b62f-bcd78c5f2119",
        "cursor": {
          "ref": "2a8bafe4-4139-4fb1-8195-b2f9cb34e9f0",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "20c07d08-e8a9-41d9-bbbf-d6b58d70b323"
        },
        "item": {
          "id": "210c941c-442c-4bfc-b62f-bcd78c5f2119",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3de03add-57bc-48ca-bc14-e80c9c229386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45cbfae0-9fa7-49df-826c-d46f2fddb07b",
        "cursor": {
          "ref": "84ad30b6-f54b-45c1-ba69-97235f2aba49",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4af5d419-3b67-401b-9398-c4771a264895"
        },
        "item": {
          "id": "45cbfae0-9fa7-49df-826c-d46f2fddb07b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b62ebb08-a276-4d39-8fd8-ee856a923858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a2aeee-a77f-4f16-a096-77a908b7218a",
        "cursor": {
          "ref": "a44205d4-5d59-4706-b76c-aad87803e715",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6be742e4-7691-479b-8ce9-5b12e738a282"
        },
        "item": {
          "id": "83a2aeee-a77f-4f16-a096-77a908b7218a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "72d4efaa-cab5-4205-b938-d9442b6e17c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7337b83e-5476-4a2f-9c6e-7ff79f8ef98f",
        "cursor": {
          "ref": "2c70cf6f-1746-4d4a-ab83-d2e64cb56c11",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d96223b2-02a7-4b1c-8ca2-260ca65cafdb"
        },
        "item": {
          "id": "7337b83e-5476-4a2f-9c6e-7ff79f8ef98f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "118c5f94-db01-414a-a49e-fdf8cd8e0dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba7e1a6-102d-42dd-afa4-f1ccbd45a775",
        "cursor": {
          "ref": "31f45df7-7208-45e2-8eea-e14b4284a59d",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d9078bb3-b394-452b-a4c1-171d286a9601"
        },
        "item": {
          "id": "fba7e1a6-102d-42dd-afa4-f1ccbd45a775",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1bd49f91-6dc7-4417-a7ca-8727303c65ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d0731f-1c44-4a69-b1ea-73457a9a7548",
        "cursor": {
          "ref": "0300b530-6320-4fa6-bce5-dc85933899ac",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e103866c-42ae-4028-8cec-d960d1b7fc20"
        },
        "item": {
          "id": "d0d0731f-1c44-4a69-b1ea-73457a9a7548",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0e4ef229-8d76-440e-9b35-7a582711b444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3493afce-6dde-4e8e-9baa-6a19343043ad",
        "cursor": {
          "ref": "d096f669-4ff9-45d6-89e1-1ee3c419ff57",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "98782ea7-27ec-48b8-8b3d-4a8603b327e4"
        },
        "item": {
          "id": "3493afce-6dde-4e8e-9baa-6a19343043ad",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2f8a9cd2-8652-46be-ba77-d489cf736946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9d561f-dc4b-4263-a709-2d552a2c0815",
        "cursor": {
          "ref": "f070c73e-28ed-48a3-b32e-9fb5b4edca77",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "64f85bcf-9eb6-43da-9f76-c11f5559786c"
        },
        "item": {
          "id": "2d9d561f-dc4b-4263-a709-2d552a2c0815",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ab7d764c-3300-4513-8d3e-5f305ce87995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3489ad-be22-4200-bc0c-da2ef38ffb33",
        "cursor": {
          "ref": "3e79f6a5-55ad-47c6-86ac-b4084869ab28",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "faf4792a-6d27-49f8-9f17-a028bc9cd08f"
        },
        "item": {
          "id": "ba3489ad-be22-4200-bc0c-da2ef38ffb33",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "760f36f9-3434-484d-9007-be4a91cd5c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ad2ff3-58bd-4e4b-9078-bc64a301c1db",
        "cursor": {
          "ref": "9b096a05-afcf-4015-95e1-1854f4ebc22c",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c37b7e29-8473-4448-a464-56fb1b029568"
        },
        "item": {
          "id": "51ad2ff3-58bd-4e4b-9078-bc64a301c1db",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7fb9c29d-73ef-44a5-a2ec-9fd7fa383df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbccc13f-bca8-47a0-96e7-d89f5b0aa09c",
        "cursor": {
          "ref": "445a69e9-5270-41cb-bb3b-10b415da4c04",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "bb43ce70-caa1-4618-ae38-38d108b278c8"
        },
        "item": {
          "id": "cbccc13f-bca8-47a0-96e7-d89f5b0aa09c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "737718d7-4b3c-4fd6-ba31-3aeface9018d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249dc6ea-2425-4288-85c6-e66af9543c68",
        "cursor": {
          "ref": "15c9d3c4-bec9-4b8e-9a86-586485578c1c",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "81252fe5-f113-4a61-92b7-38aa3343d101"
        },
        "item": {
          "id": "249dc6ea-2425-4288-85c6-e66af9543c68",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "92f4e04f-5f06-4dab-a12a-c25daf786ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3322d8-2233-4edf-b616-a35ff51a72c8",
        "cursor": {
          "ref": "be5e126e-2295-4e3e-94ce-f38d41f18be2",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b7ce6440-3f52-4dac-82bd-94c9fb1755b1"
        },
        "item": {
          "id": "2b3322d8-2233-4edf-b616-a35ff51a72c8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "47439de5-79df-4c7b-99a7-3d8d92902f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cd15a6-fa00-46e0-b2f2-cfc24f71674d",
        "cursor": {
          "ref": "18cc4014-6c6a-464a-b3f7-05e89ea920b3",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "caf051a4-8afd-4da1-a27a-d81167b609be"
        },
        "item": {
          "id": "b2cd15a6-fa00-46e0-b2f2-cfc24f71674d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "428e431a-bd78-4a04-81dc-cc7c48fcfdbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0484bbf-219e-4339-9ff4-d16032441d2b",
        "cursor": {
          "ref": "6ba07f1b-22d3-476c-97b1-d099782d991b",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "45f02fd2-789f-4928-9e46-5f713a471709"
        },
        "item": {
          "id": "c0484bbf-219e-4339-9ff4-d16032441d2b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c0888e11-3401-411b-b46a-bf6f8dc254d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677ccfd3-cd68-4cc3-929e-4ff974ca5b11",
        "cursor": {
          "ref": "b264c91d-740b-4531-ac78-fd16f868a6e5",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "17dae3e0-24c4-4ffb-91b3-9418e22fc59a"
        },
        "item": {
          "id": "677ccfd3-cd68-4cc3-929e-4ff974ca5b11",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1baba5c2-ade6-4493-9fa7-bb098f4c90a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444262db-0685-4258-ba0f-8f2ec8a04370",
        "cursor": {
          "ref": "17e724a1-ebec-4a8b-a3ca-2f35e7f0b5ea",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "32b27b98-3edc-40b3-a77e-4de674115cc1"
        },
        "item": {
          "id": "444262db-0685-4258-ba0f-8f2ec8a04370",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "735dc971-88a7-4318-a3b4-f251a64da21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebc1ce6-96f5-4b07-b6bf-4789170dfb49",
        "cursor": {
          "ref": "9a1d61b7-3bd0-403a-844d-2c4cbe3a9198",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "51c0a4ce-1e22-40e7-83cc-83d74ba37928"
        },
        "item": {
          "id": "cebc1ce6-96f5-4b07-b6bf-4789170dfb49",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "71da7ad0-6bcd-4205-b4b2-77e13c4b2567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1843d84e-09ae-49ff-9468-af8a124fbd5f",
        "cursor": {
          "ref": "4bb0326c-2210-4893-aa42-96c4e8f66b2e",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7d259355-098d-4f02-aa4c-a80441102d64"
        },
        "item": {
          "id": "1843d84e-09ae-49ff-9468-af8a124fbd5f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b4db0518-3abf-406f-a1df-797615069d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2bb97f-4be4-45eb-bf74-ff08eefdef8b",
        "cursor": {
          "ref": "d5e662bf-6984-498b-8f60-5c8a787f69f7",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a03967fe-f63e-4c35-b6bc-ac15e3c76b65"
        },
        "item": {
          "id": "ea2bb97f-4be4-45eb-bf74-ff08eefdef8b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f5e5f0dc-9eda-44d2-9cec-519128d255ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31690188-45c7-4c4d-8289-9b4b318bdf9e",
        "cursor": {
          "ref": "7e913455-2b6d-4423-8ae2-77d7b8542b78",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c7b8921e-ec11-4e82-a69a-df65d782d07f"
        },
        "item": {
          "id": "31690188-45c7-4c4d-8289-9b4b318bdf9e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1571edb5-f1e8-48ab-98d9-2ddc160c0b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a94e467-e2ee-4b43-bbcc-db6e7bdda478",
        "cursor": {
          "ref": "9d40c0ef-7e64-4da0-b42e-3fba2ae83b3c",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9442ad20-7fbf-4da3-8d0a-ece60bc4291d"
        },
        "item": {
          "id": "1a94e467-e2ee-4b43-bbcc-db6e7bdda478",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4ba3d179-f280-46b1-8e49-24bd40b1333d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1271f421-6313-489a-b6c4-877903de7ae2",
        "cursor": {
          "ref": "93a3f924-f2b6-461c-8c37-92a63128cd58",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0f8770ce-b6d5-4484-b42c-cc0a07d71554"
        },
        "item": {
          "id": "1271f421-6313-489a-b6c4-877903de7ae2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7f7c71d1-a72c-44d9-a757-a5160747eb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df83dac-3258-44ef-b4eb-373636e507d5",
        "cursor": {
          "ref": "6cec1662-2090-4f19-92fd-79390203ca66",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ba1bda3c-34c2-4b58-886f-8967554f6fae"
        },
        "item": {
          "id": "8df83dac-3258-44ef-b4eb-373636e507d5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f0938d2c-062a-4f2d-a50b-cf4e7c0f88bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04501e0b-f182-428d-b048-ed9f54b6a8b5",
        "cursor": {
          "ref": "a6391d64-374e-47b2-98b4-f71670fb164d",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d597a923-73f8-42fa-8ddb-986d6b177567"
        },
        "item": {
          "id": "04501e0b-f182-428d-b048-ed9f54b6a8b5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1effcab0-cbf8-4b7e-92c7-33242ea88ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2504b94a-b6cc-4ded-b53f-cb20cb1b11e4",
        "cursor": {
          "ref": "ab698ef4-2912-4af2-9711-e80e9652f5e5",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "dee5bcdd-277b-4c84-abc8-19168935c8dd"
        },
        "item": {
          "id": "2504b94a-b6cc-4ded-b53f-cb20cb1b11e4",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1435be0d-eb62-48ed-b5f8-85f7ba9d68cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33648503-ea7a-4058-a4fc-cc271dfca1aa",
        "cursor": {
          "ref": "24e1e0c7-14f3-49d8-87e8-ce043b80f149",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1eafec61-ec4d-4a85-ab56-7a0b6c149248"
        },
        "item": {
          "id": "33648503-ea7a-4058-a4fc-cc271dfca1aa",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3b4cb58c-8e77-45ba-8868-5004defe5376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db15264-b542-4aa6-81ae-2f2c8db5ee73",
        "cursor": {
          "ref": "4f305093-faaa-4973-b6f6-29c703e285f3",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "be657753-11ca-4ba7-bf0c-d290047163a7"
        },
        "item": {
          "id": "9db15264-b542-4aa6-81ae-2f2c8db5ee73",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "cc07f9b2-ce1b-4565-a1a2-9c4f91ef8e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d229b0e-4d97-4f28-a1e3-f0af9cdaede0",
        "cursor": {
          "ref": "18ab35f9-24b1-4d6e-b52b-894e300d7d73",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "472724b6-1106-4dd9-9c94-6a5b6fe407f1"
        },
        "item": {
          "id": "4d229b0e-4d97-4f28-a1e3-f0af9cdaede0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "25419a9a-e3f4-4ef9-984b-8ba5d11116ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28edf439-14b1-4175-a038-94e40eb4a44f",
        "cursor": {
          "ref": "bb0cf191-a7f6-49af-8f1d-f8b60d8abd6d",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "57efda2e-0855-462e-adff-9a25ff9e0f43"
        },
        "item": {
          "id": "28edf439-14b1-4175-a038-94e40eb4a44f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ead532a0-73f2-416f-8ca6-a18db1144968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fca7d80-dd70-49f1-8132-0bd5bdf48e8c",
        "cursor": {
          "ref": "098b7c7b-5b25-4b0a-90f3-c89f6c3f0453",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "521c2845-30ca-4820-a49e-e3a2d9e147e3"
        },
        "item": {
          "id": "1fca7d80-dd70-49f1-8132-0bd5bdf48e8c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "13dff4ef-aefb-4f4f-bfb3-4fb405cbc23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5fb357-24a4-4e5f-bba6-c6e9e99b2fae",
        "cursor": {
          "ref": "0b33968a-ce96-49e4-8bab-d97814edb77e",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "19ee9e0c-bd63-483e-9317-63f28f573d86"
        },
        "item": {
          "id": "4c5fb357-24a4-4e5f-bba6-c6e9e99b2fae",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4eabf35f-0d75-4da4-b043-8dc8deff0999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98eb8d09-0fe0-4183-ace2-5e3a7693316f",
        "cursor": {
          "ref": "a0d6b798-b6c7-4ffa-86e9-6ab6f49f3e5b",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "2e753032-4f73-44a2-89f9-943c07e3797f"
        },
        "item": {
          "id": "98eb8d09-0fe0-4183-ace2-5e3a7693316f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f5bbf41e-0ceb-41bd-b4ae-708673346d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6593e52c-4fa1-42e9-b2ca-d6f71b40959d",
        "cursor": {
          "ref": "e6ac1427-e0ec-4ab2-a983-3394c4dbaf74",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "3745532d-4d15-4e22-a86e-274e829842b8"
        },
        "item": {
          "id": "6593e52c-4fa1-42e9-b2ca-d6f71b40959d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "60d9713f-858c-4024-ad13-828ada15e256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b9b20f-e4e6-4379-bea1-6f2013d052b1",
        "cursor": {
          "ref": "8b562c6a-b668-434d-94fc-9d04c6506887",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "8e6f776f-088d-482d-86c5-4f17273c5d93"
        },
        "item": {
          "id": "99b9b20f-e4e6-4379-bea1-6f2013d052b1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "04815767-7620-4021-ada8-82599a51a8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec0ede8-fa93-4975-b9bb-d1aea644ce09",
        "cursor": {
          "ref": "10b0c869-74c6-48e3-90f8-e991cd68d5d6",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "5fb62546-2549-43f3-9ca2-081c5b38b570"
        },
        "item": {
          "id": "eec0ede8-fa93-4975-b9bb-d1aea644ce09",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "02f4f51e-8ffb-4ca1-9f19-ae6233c9e1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98308654-b45d-455b-8ede-d52ced5b6a93",
        "cursor": {
          "ref": "e78ca31c-b497-4da3-8af0-f814a267eee7",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "74337b44-6a8c-4371-965a-ac5b69d6d1a7"
        },
        "item": {
          "id": "98308654-b45d-455b-8ede-d52ced5b6a93",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "40975219-319b-402c-b07c-ec9c4e3f9f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eba2b5f-f9d6-4016-b926-aa13a5b707f7",
        "cursor": {
          "ref": "66d9337e-cfd7-4960-ab49-a3538e63d29e",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "d6abe0ce-28dd-479e-a224-379e560cba05"
        },
        "item": {
          "id": "2eba2b5f-f9d6-4016-b926-aa13a5b707f7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "adf65d71-abfa-4f94-859a-676be4b2d3f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b26ef8-eb10-4e4f-a4f0-0f2a1a5d608b",
        "cursor": {
          "ref": "98ae022e-9578-48ad-8b35-beca8ad8f052",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "87cae14a-8b7b-4a2f-8560-17a76ccafca4"
        },
        "item": {
          "id": "a8b26ef8-eb10-4e4f-a4f0-0f2a1a5d608b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8d188d49-95fb-4f37-8ead-2ad17f6caeff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b73843c-f845-476c-a96a-d4ede3ef2e27",
        "cursor": {
          "ref": "77e0d1eb-0889-41df-a24e-3961970ead64",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "96579572-372e-4c6c-a9d2-09b0fb259adf"
        },
        "item": {
          "id": "2b73843c-f845-476c-a96a-d4ede3ef2e27",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d9bd3323-36d6-45a2-891b-0014548113f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b920fc-b34c-4afa-b734-b2108dce0ab7",
        "cursor": {
          "ref": "845c9518-6ea0-4d9a-ab56-74668ba1de88",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "5a5b0877-afc6-46a4-8b2a-c61db30da79f"
        },
        "item": {
          "id": "b6b920fc-b34c-4afa-b734-b2108dce0ab7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "98ed93dd-5b29-4a65-8d42-ce96ec3b512c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468f9d32-84de-448b-9d82-944f115e3898",
        "cursor": {
          "ref": "fccd8929-4706-4596-895a-4ce6b4b14710",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "96a50971-c286-4995-8838-80ef3b6aeb59"
        },
        "item": {
          "id": "468f9d32-84de-448b-9d82-944f115e3898",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f328693e-ffec-4287-9bb6-6314f74078f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a656f8a3-1042-42a9-a728-1bbd976eeab7",
        "cursor": {
          "ref": "7a97a8ff-00d2-438b-acb0-d60899230ff1",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "7959bb15-8da8-4f6c-b478-d4bebf86ccab"
        },
        "item": {
          "id": "a656f8a3-1042-42a9-a728-1bbd976eeab7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "addfecd8-2884-4e16-9ad3-e589d89a2034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f6b04a-1186-4cb3-90da-dd9ccfd2adad",
        "cursor": {
          "ref": "7ef85e14-2b35-4d79-affd-cd867e7907dc",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "9828326a-c5be-4214-905a-52ceae3f027f"
        },
        "item": {
          "id": "09f6b04a-1186-4cb3-90da-dd9ccfd2adad",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bfe7527f-bd17-43c9-9743-73fa9061bb2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91185ee7-77ac-4d43-899f-5fd3c8f8f482",
        "cursor": {
          "ref": "839309ea-9626-4c06-b673-dea34d340bcc",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "cf0a4df5-6d5a-4776-934e-2bd94e970d72"
        },
        "item": {
          "id": "91185ee7-77ac-4d43-899f-5fd3c8f8f482",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f1d87c23-2e2d-490c-8dad-2cf03f069079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4524ed6c-8e1a-4e9f-8e4b-df9308c80c76",
        "cursor": {
          "ref": "d2792b57-d14f-4392-8ce1-5f4951daccef",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6c33de23-5feb-45b5-bbf7-f936ae546013"
        },
        "item": {
          "id": "4524ed6c-8e1a-4e9f-8e4b-df9308c80c76",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "aca8c615-da65-4083-9093-eb9bb23c4fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e21dc7b-e480-4fb8-a52b-73ae7085cf32",
        "cursor": {
          "ref": "78952462-7d1b-4f38-995d-5e9d7b4949f6",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "286a2868-530e-4bff-9b8c-e94ca9909fd8"
        },
        "item": {
          "id": "4e21dc7b-e480-4fb8-a52b-73ae7085cf32",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "eb266488-5d06-4512-9299-68c51453c108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576ddfa1-0d25-448f-9821-fb98d8c73f55",
        "cursor": {
          "ref": "132f1622-5fe3-4363-8803-e9ffc375ba8b",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a08e46ef-a2f1-4c30-bf93-d6bb257e8c3d"
        },
        "item": {
          "id": "576ddfa1-0d25-448f-9821-fb98d8c73f55",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1365fd60-1de6-4838-88b6-0375acc113ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e3e8f4-ebd1-4b0d-aaea-b01913425261",
        "cursor": {
          "ref": "bad7d52b-032d-486a-9fa3-9a481de6a752",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "5300d9f8-740b-4e79-8e66-9fecaff842a2"
        },
        "item": {
          "id": "a7e3e8f4-ebd1-4b0d-aaea-b01913425261",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "bb13587b-54fe-41ea-9068-e6e17edfaff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d368bf2-f26f-4722-a426-8a871fde846b",
        "cursor": {
          "ref": "ec0813d4-85ad-4a83-8344-126e00170240",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8925b701-d6f0-4e71-a267-96649f86c7e0"
        },
        "item": {
          "id": "3d368bf2-f26f-4722-a426-8a871fde846b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f0f7e034-0a2c-4849-aeb7-eda09c2c3a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28323e3e-2507-4b8d-9f7f-c29d22938188",
        "cursor": {
          "ref": "6c53cdb4-e2c6-4016-baee-4207faef2724",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f1a7cfb2-7825-43ba-a5b1-38c973681326"
        },
        "item": {
          "id": "28323e3e-2507-4b8d-9f7f-c29d22938188",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ceac3832-e11a-418f-bc0c-3975ffbe3003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cfe7ba5-513a-4a52-bece-d8cb00e8ecc3",
        "cursor": {
          "ref": "58dc0619-207c-4d66-8cc2-797b50baf412",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "fe894eb5-1ec2-4b89-a46f-5b18b9319e6b"
        },
        "item": {
          "id": "1cfe7ba5-513a-4a52-bece-d8cb00e8ecc3",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d3859fa9-f485-41a3-92c8-fcfd2c9e5c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98e2c1b-6bb2-4b56-90ae-ab0fec1c46e9",
        "cursor": {
          "ref": "6213e2b0-18d1-437c-9427-9cf62db91203",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "1400e993-b98e-4913-89b4-315b24461f14"
        },
        "item": {
          "id": "a98e2c1b-6bb2-4b56-90ae-ab0fec1c46e9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9bbd8e9b-cec7-474d-90d9-1b4c419332c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40a837f-f2f8-46f9-ac18-9e3b71b4ddef",
        "cursor": {
          "ref": "ac728895-2ddb-487f-9d3d-6916d3e457a4",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a3c31529-5b2c-4cc3-8aa1-71e00146bfce"
        },
        "item": {
          "id": "b40a837f-f2f8-46f9-ac18-9e3b71b4ddef",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "04a452f0-c843-4139-8eba-fec85b964a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f918d1a-95e4-44b4-ab40-337e2c51d5a5",
        "cursor": {
          "ref": "cd026217-94ff-4e4e-8a15-98a647520cae",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "168dabc2-8f96-455b-89f7-99392154ac19"
        },
        "item": {
          "id": "2f918d1a-95e4-44b4-ab40-337e2c51d5a5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "32e76ad2-f9c8-4025-ba1b-f86b3c46b438",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da34be61-c6aa-489d-a437-b8d97e3741ba",
        "cursor": {
          "ref": "74058022-09b8-49fb-bec2-324035bcf4ae",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "41ed9bd1-8239-47c3-a5db-b0c69de676c7"
        },
        "item": {
          "id": "da34be61-c6aa-489d-a437-b8d97e3741ba",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "80a32688-71d0-4d9e-a7a6-f0e868c9e254",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7a87bf-829e-414e-99d5-461048b74992",
        "cursor": {
          "ref": "8b00794b-ee92-4b1d-a0b0-5c8ab6b32b10",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "71c8feea-d5fd-489f-9cb2-e5051ba90979"
        },
        "item": {
          "id": "de7a87bf-829e-414e-99d5-461048b74992",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a2051090-8585-499e-bf19-2ac2e580f954",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9e631f-6b27-40c7-b92c-84033b22e065",
        "cursor": {
          "ref": "de6eae71-7d64-430a-a2a0-6229f9425df9",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "096cd247-4a7e-49df-8999-e127a8cfad53"
        },
        "item": {
          "id": "ab9e631f-6b27-40c7-b92c-84033b22e065",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fbedc690-414b-4924-86bc-7b8d13e5f7a6",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22b86d4-62ac-4347-b38c-664a14484dc6",
        "cursor": {
          "ref": "458cdc21-e213-4c2b-add3-4926e1db5c45",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9ac60445-0406-4329-9467-3b901abdcb95"
        },
        "item": {
          "id": "d22b86d4-62ac-4347-b38c-664a14484dc6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "72bdc222-ef6e-4ec4-9463-dbedc5bc564c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22b86d4-62ac-4347-b38c-664a14484dc6",
        "cursor": {
          "ref": "458cdc21-e213-4c2b-add3-4926e1db5c45",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9ac60445-0406-4329-9467-3b901abdcb95"
        },
        "item": {
          "id": "d22b86d4-62ac-4347-b38c-664a14484dc6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "72bdc222-ef6e-4ec4-9463-dbedc5bc564c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e40d41-6cc2-42fd-ac53-3132fbbb49ff",
        "cursor": {
          "ref": "2ecafa1f-b516-462d-bed7-01506bb3b77d",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b9fde20a-cb21-4449-88ac-dd6f92712bed"
        },
        "item": {
          "id": "f0e40d41-6cc2-42fd-ac53-3132fbbb49ff",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "81833942-1306-47b2-ac70-6a8e8b89eb14",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda8b6f9-fe08-4b91-ac84-3c4289aad8c6",
        "cursor": {
          "ref": "c4324a81-fb0c-412b-92e7-ecc1b5a93513",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "165c14f5-2a85-4ef0-84e9-e76a2f512581"
        },
        "item": {
          "id": "eda8b6f9-fe08-4b91-ac84-3c4289aad8c6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e289e8a2-fbdb-47ff-a58a-420e31038772",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}