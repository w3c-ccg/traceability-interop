{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "54446ce5-732f-4e69-a6d2-1abfb37e574b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cef02d88-2f9f-42b0-9aed-fde8e6b28758",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "18e2e126-3e02-4386-bcd0-021ef0215076",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d451a984-2197-4d04-98b0-288ed3610498"
                }
              }
            ]
          },
          {
            "id": "aaa38a30-609d-4d58-b458-365d11c51cce",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7b755013-51c0-462f-895e-2d658653026c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "67f140e9-d64b-4a81-9c76-34c1136bd18b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3b2e146e-0df7-456d-8523-dd21129a4284",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "17d88198-f91e-480a-818e-3aab559ad104",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fcdcff33-9431-4f6b-b92b-4070c457ba89",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c445585e-bc58-4cac-bfd4-c29c7049cbb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "46707c90-6076-477f-bc51-3527719575e0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ff27583b-ecbf-4481-a09b-6775a10d20ce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "58279a70-d234-4d3e-8efd-cbb24eda728c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "52c0a76d-8860-4226-a858-21720296442b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "75b30f94-8219-4b65-8123-e2361a79a8b7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9647022-8a84-4c87-8bef-15bc87b0ed34",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1f28744e-ce70-4200-8757-12537c12a868"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c8c2e75-8a63-4122-9e8e-f136bec94fe6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f3752695-16b3-4232-ae00-810947eb824b"
            }
          }
        ]
      },
      {
        "id": "ece02dce-1cc5-42f2-abff-d6c52ae82793",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5b11e73b-0114-474f-b12d-57bb4d94c821",
            "name": "Negative Testing",
            "item": [
              {
                "id": "400643bd-f25d-4814-9716-977a56007880",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e2893176-5b5f-4a1c-b40d-2a9991e0cc27",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea61c2e-87a5-48e3-aaf4-a545972e5567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97804e56-172a-4b90-b65e-2ef1f37e2df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce419b4-0c2d-4a31-b8cb-64f2e4cc8caf",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7dc6f6-bbf7-4b57-889f-683fb92e3366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82b27477-e12e-47ff-abf0-2f08f93ebe00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1a986f-eb0a-4bf8-9e04-7ef0653b7813",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1e4bb5-26d2-4f10-90bd-afd29432a4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71b6c958-b5fb-4024-85ae-b3e39e7a53bc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "687f83fb-8a29-461a-983f-b904d4e54ea9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a0a092e1-2860-4845-9285-1e4062a67f7b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2382479c-027c-4b02-856d-29ed8e48e954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b76ef44e-27fb-4192-8da0-7ca46efa83f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95401c01-631b-4999-bc05-1bb2720971b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "718ce923-0789-40b9-bdf9-2ffe267dc713"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c08c8088-d958-4e84-b1e2-e1e7641bb1b8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fe47da3b-5223-4ff4-9a7c-058357b0e4e4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e30f84cf-73b2-42d3-bd68-c1cfb8900d52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ca9e4e4d-2ebd-4ac1-98ba-6c6212c495ca"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "530a93d9-7437-4ddc-8c41-846626e280ca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4fa1c274-6276-446b-94e6-60b81a5ed518"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8b3e602-424c-4837-872e-5f20c4cdd3bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "40967805-9ae7-4234-a371-4bb733818803"
            }
          }
        ]
      },
      {
        "id": "780b794b-937f-46ef-b1c8-193d0576609b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d0f5eb61-8abb-4b55-a101-c76b57957a3c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87097ffd-c9e1-47a1-8fbe-538b8ca0857b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7e4344dd-2e66-49fb-88d1-2b3fb79791ec",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea63e899-d24c-47be-8633-230c4a3cc0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcca2dc7-e90c-4181-8f04-9fb89814f146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672d26ca-a94e-489c-b1e9-0a5d65d5eb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb005373-e6b4-48ee-8667-257ab91bc875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df29667e-2556-4b60-b3a9-9125ad2d25ea",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0cac8e-6414-4b64-b969-39e5cc49a3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bddce6c-477c-4f7d-8984-fb86151a4391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead07787-c1c7-460f-b5f9-1199334f0ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0233fd0f-2a7b-46c8-ada6-395b13d46730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424fabc0-62e5-4bfa-a0eb-22ab2ef11f94",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f06254-8836-40d8-b9b3-117495a9a088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd312c81-781e-40c7-8b98-bf4e1ba8721a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72537a90-99a5-4f9e-b173-eeffda63b988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d233555-a231-47f1-9922-0447db70c858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aff2dd1-47e3-4745-b6be-2722372430ba",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4eea76-f74b-4037-bf88-233ef97c9ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ee284a-06f6-4227-92e4-76b19b304396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc575e07-78fa-489f-b254-7a83f12f1fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a0a746c-9d76-49f1-9d27-761b397281f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a47e65-e86f-4791-b9e9-1a03bc637271",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b74c90-3fd0-45a8-b9f8-45628511be13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d86f8e-3522-41bd-8706-112d5dc5fcaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b09743-0ad7-4b28-bb29-52219cb758e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45fc87b5-e3fa-434a-905b-fde22ceeba4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca4357f-7322-4cd4-8de1-aad9b6287cb9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "290eb76c-95b8-4c91-b343-1751bfb2f279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713ddb17-78c1-427d-91db-1f54738f8794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ddcd6df-7270-48b1-856f-6c40008d4c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0dd5f07c-217a-490e-8c70-6b4d456ee036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063e884b-8e5f-4ce2-aff9-0f500d81bbe2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "832df300-f177-4a58-ad3b-d9169e500d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "822c0ff9-97b0-4959-b180-b9f1624b2b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd500271-8dca-4a45-9bad-942b4b0f7215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa031cb1-31e6-49b7-900d-79809c9ac0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e9da5f-b9de-4e3a-919c-368250a898f0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c94881-4193-4696-8241-008e2647dd86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61cc3bc9-c83a-446f-899a-5ecfb04f28d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74816637-bfac-4cc4-aa74-23ced0d3cada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55ec8b02-db4e-45cc-876b-b92365ee2f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17710f0b-2bb4-48a3-b4ce-e356c8299aa8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2872e466-3782-4cf3-8b4e-62c2183d77c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2611d056-1c69-48c0-8cb5-506c41d8384b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271ffd88-e5c0-4b28-9e45-69ae7a895a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1a3bd8f-01cf-4ba7-80d5-fd4900b84dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba00b333-2088-46b1-a8a8-c5141df963b8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3405af7-4b8a-4815-be59-ccaed6636bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe10c131-10d9-420a-988f-d729aca3494c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0582e666-0264-4c45-948a-5d73d22b3e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "479a0249-3b66-4c8f-a601-49c3b3aa426b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d4fbf4-9932-4813-bcd3-144cd173e45f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2e4a5f-5a66-44b0-9d69-90e9795a20b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5602b8b8-ee6f-43bf-b6de-8adbfc2cd868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe39595-9498-49a3-9381-80af2b9f11a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da0c6dc4-a097-4078-a463-d74af346b57e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3ed9ca-9bde-4a02-811c-ee6466550a75",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b785faf-d7a8-4465-87c9-b1317f0f8864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ada29e8-e7e5-4084-a26a-537a43d0f96b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c605a1a-b8cd-4b20-bc41-96cc4f5155ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba8dda29-568d-4d5d-8729-f3d2b191e1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5b624b-e8ac-4770-ba0a-965710af4540",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1161afb1-e4bf-43cc-b528-256399176991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f77a84-6acf-4b85-81b4-51280e4ccc39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05b152b-6fe0-48e3-894c-69a819f3d6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec5c01d4-8b49-4e4e-9f5b-b8b5548fbf92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d4c8b1-3620-491d-b5cd-abc0795b10b8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8b7d09-4af4-47ae-a4be-a96280d84c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168513e9-fb0a-4e08-b185-dcf9a6cccc48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea32a4f-3f96-4c2b-bece-40ab974ab795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61f08475-2419-4935-92b8-9baa47b7dc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57e11dd-5618-4202-93f5-55a8ff271997",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73732dc-e83c-4295-9434-4abdf551dbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17bd4dbe-f846-4bdc-a1e7-81786a314a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4848c248-3439-4c6b-902d-4dbeca15e815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eec57e77-7628-4e0b-87b7-ec2b0005c154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5664ec70-27b4-4ac7-ba60-1e6ece0d088a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "531ff922-9c6b-46e2-995d-31412bc68aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83767447-3626-47af-ada3-5eaf58004c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d019f504-5f80-4c2a-91dd-159751e0d72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6634142-9625-411b-8ace-30dfc769e320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba84df0-4406-4cd9-bd34-676c8d711900",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9205f2-1cbc-4318-9101-a4b31a0fee70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a90909-da04-4eb1-afbc-9fa02ba6ab10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d04588f-d30f-49cd-b533-874feae2e780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "629560a1-d4ee-4f6b-8baf-d37bdfb5ee6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e7ee28-3b34-45c9-a71d-608a6d9bfbfc",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8beabaa4-e003-434c-a524-e027527534ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea9d5296-b34a-4e47-bc6a-6cd67adc7829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97899d02-763f-49fd-b9d9-dfd16543f6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e48983a1-1535-4798-afec-8f4f3567e160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbc52e2-40ed-4f41-974e-57a74e5187f6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f3dee1-0ea2-44be-9d58-9547fe3d2af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9634a032-5507-4610-85e0-3905fb55fff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72959beb-facd-46c8-a2ac-19aefdf98a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "51f2eebd-f47e-407b-bd15-a140513ce2aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9653af3-55f0-40c3-a0ba-191e9d3b9f41",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d67fe3-e086-4c21-87f2-44f8e09173e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a4e29c4-f02f-46c6-a342-6b5876ffd51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474a7474-664c-44c0-9063-dad88259a4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f93c041-6e5c-4b40-ac6f-f1d4ce61d3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d464ff14-1d64-4dbe-b056-9728a555df64",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141f0b24-e28f-453c-91d1-861ef25af2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51924ba-4bd5-4a54-b316-2b9409096388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b25cd71-e01c-4762-9125-1661f36480be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e18783bc-5da3-488f-be93-b160daa68228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84bd1e8-1604-4759-8a36-d565ae184f1d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1b70e6-3466-4873-84db-9528f70d869f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a25fe3fa-727f-4aab-9529-9a2bb356a213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9066e4-a859-4da2-81ad-ff4f928bd3b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9515a93d-ffa0-442b-9d9f-3502702392f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca1cc84-c23d-4bc3-887f-69ade9d0d1f9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0155a2e1-31a7-47c0-ab8f-ac9d2d2d1721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cddf98be-bf4d-4bdc-b00b-effde34e361b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebed9521-edef-44b5-bfaf-9ef3977e6988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd04dd9-ec5a-4819-ae9b-fe3613d110c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6dfa5e6-4b3f-4291-b0f3-08b423e18346",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d858db1-5966-4107-8c74-8290d08165e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f4654fd-03cd-413b-8920-c810f67d6f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05753e75-5f7c-44ae-9469-0b2acc59024e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f3cb7c9-c1df-4506-a421-0d97e0b55a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd319a9b-e1c0-4c0c-ad99-b2e5088cb2a8",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "480a8cdc-9485-4266-8a44-d51f3fb291b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf24117b-b25a-499a-9e1e-7100c8f72411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b1fd0e-f240-40e6-8e32-f9ca6792aac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2c5d4a3-a16c-4de5-b413-13cf81ce3081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b652b3b-2d05-4456-802b-4a2e644c9916",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be279cd-4b11-4c55-8195-2d3063f8305a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "055bf95d-10f5-4f1f-a49b-3be7297c9aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55abd461-461b-48ab-a8ca-0dbb612f4f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c98a621-b44b-4041-996f-a5edba00875f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06df3b8d-0c67-4a06-a89a-f012ad6e7d55",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9130ad1f-977c-406c-94eb-e06b9ac1ca46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c1725ef-21d3-451d-8e93-14bfe103aede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1172972e-4eb5-4c44-bdd9-6449e01f2b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc098ab3-f482-435b-b005-aa3a7ece6738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d56f30-f200-4886-9b95-5fdf6cadd335",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3be69c-3fee-4e8e-ad7f-3ed3e422ffd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a6d6572-6063-4ca6-bc1e-d861641e0662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0f8141-c3e3-4217-a402-df9424ec6604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de581ba1-301f-40a6-ae6e-255f6385a731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ae3707-57f9-4ef2-8b19-dcdb10abe59f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "616a0c8a-7890-4f52-87d5-2647e8756ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3782c7-80eb-4437-bb73-cfa4ac7f084c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a881922e-4563-4b23-afb2-2d29fea6d1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a65ad3-aa37-4da2-97e6-8fdda696f90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a309cb-9bad-4966-9be0-6c91ab5fcb87",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b778be52-39a3-44a4-9a28-cbdcf0992711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8f917e-13fb-4fa0-98e0-93ae4dd40318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a133950-7a53-4cf4-8457-a9286df3b714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "58e8c0a9-47b3-484f-bcea-0ee16189b15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf6fe3d-26ad-4a3f-b501-5d8aebf93760",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a6988f-2d88-4af2-948f-1ee74256f0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "344828d2-0190-4710-8c62-51e1b9209b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c410dc-4e9f-4616-8205-5850cfc038b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec805a1-74f3-4821-8c15-062f9384bdc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ab4987-94dc-4192-92db-8f35fae4fde1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aeb74c3-b82e-466d-8f68-c261603fe795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf32de43-1a6b-4288-9268-78b7a6c68899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94103891-7827-441c-aa9f-ec0b7dead260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e422c98e-2933-4589-8349-19c4c3acae79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400e5ffb-5762-46fa-a0ad-f370fb9e82f7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6b2f1e-5a43-44cd-91a6-637ee140e6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5ff0871-435a-4878-b739-2de451d54511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe443a3-133f-475e-b678-2f5f550b7fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d9e8aa8-a848-4a20-82d7-b97278905703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7085ab1e-2152-411a-b278-4fce3c3121b8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b86522-2987-485c-bfe7-a534a83e764c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4017d71f-30fe-46d3-8c89-ce9532465421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a04d7b-2b59-4ed8-9f1c-5663f143c573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68744ece-53d0-47c4-b860-4053e8b8f4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc07e389-8892-45df-ab15-49d8dd0fa663",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7f8700-f6ce-470e-ab2b-642306b7b443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "030f5d9e-4298-43c6-b5c9-633a932334d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b220e1d-52ee-4907-a0c3-01b0621a53f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cf16d8c4-507b-4078-a289-c6ee1b658c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec38b52-ee89-4564-9ac6-ae1929901764",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09d152a-6aeb-429b-a76e-021d76b8f961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48b6431e-c942-47a2-bab2-8d9a37791d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a18580-08e1-4209-a052-d2d3faf05d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e380bfe-b217-4540-b5b2-6eba39190890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689b51c3-76fa-49c2-ad32-f307bf611836",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05e8926-9e6f-4b5c-a7d4-b0878268f047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a220c66b-91a9-4aa4-86e1-e0b7abb30acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913acab1-a232-4b5f-acdc-926d60fa96c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8af45df-ff34-42b3-9752-5c2170d9f1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea59bc9-1c8b-422e-afd3-f428ddf39e84",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b48d647-b492-4f6e-83c7-7cad7aede80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe034bca-f70b-4736-8942-f18c10a92443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8878e47c-37fe-49fb-b708-92440666291d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d5fb556-513e-4426-9eba-49cf74e968d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255a25b9-c489-41b5-9006-a47b782631ad",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9833ff9f-85c1-4963-9132-dc5e561e85c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22b9249-7006-4fda-9862-c79953444b18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd09e93d-a74a-4f70-87a3-aceae0b743b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "644cc25a-a7fc-439e-a233-880d6b0b68fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36360890-3d7b-4dde-8b41-4bff4d482cad",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc241f25-b046-41be-a336-e392eee8021c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a17d9dba-08b3-4088-afe3-d980bec2306a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29096f83-5693-4e65-b528-12e247461f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7647a7d3-f3b9-4544-b28e-c5a39f377181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3e4685-1a5b-4a03-9c9b-9ac9e56bf459",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5d1089-6700-4b0b-bfa2-f41518eabcd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84454e6e-eaa2-4978-97f9-779080631299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aae9a0e-42f7-4092-b17c-c41c5026809d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "15478652-f7b5-4837-bcec-9909f920d844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1150f1bc-5427-44df-8398-963b4e2eb189",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8d64e2-1bf6-45dc-ab87-b6af179fe086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65180d71-0f1b-4a31-b527-b95b4022620a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144c72b0-0a7e-425b-889d-95b169b310a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a7116694-e771-4b99-be83-2ae1ac0235d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78dbac55-9e62-4364-974e-c3e4d45d4693",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217c25e5-6997-4280-824b-15378e22085f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d169e639-8a0b-4dea-b97a-df2164527239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8bde325-a400-47ac-a96c-ff14cf3b6f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4569804-2a45-4b9c-bf8b-9f568e046309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5001ff4a-487e-487e-bde2-e2251b5fad93",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd65ed0-dcd0-4dde-a6e0-6ada4d998b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a3e289-a3ab-48dc-a8f5-4ccbe8fee9b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e714a6-50bc-44db-be01-abf020a43f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2abd80a4-5ee9-4377-b35f-5b4130924ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7375e0-9219-4fdd-b652-cc9273834bf5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "133949c2-fcea-47aa-803f-47c8ebba21c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8edf7865-b46f-4a88-bb72-0440baa44d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27c64a3-2873-4125-832e-d7a28d688d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f42c762d-1dec-4616-91d8-158a05061e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e3d082-33b4-4e72-83dc-a3a7a4f0e771",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9c6d46-152c-4545-b61e-44165e847882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5162879f-5e3b-4356-89a9-919b822ea764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236090ae-673a-45ba-8cf4-0294fce5abd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bee88c61-74ad-4efe-b52e-a6a64b4b9ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b18da1-67db-4e53-9cac-90a0746a9af0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "945c5b0e-ea01-4740-b8de-f10ac71201f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e873434a-fed0-4d1c-8dd7-e06dfda1c8c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad479f8-29fd-4105-b484-4872d9820782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e8927ec-c1b3-4164-af5a-c253c2dbd581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615631e0-1780-4346-85bf-24108c5f4be5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c7f876-9da2-42ce-b8c7-e893b9f28128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fae2e9f-9b6a-436f-961f-27c845fb19ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7a950f-aabc-423f-bbef-8d976349864f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9084270f-7de5-4220-9c41-3f7faba6c8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72d9af8-6bc3-4ee6-ad1c-c39ab0ef5938",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f94f74-4e42-4624-bd54-3a2f3e2c245b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244dfc3a-bf04-44b9-bd2f-174485691d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0efc96a3-cff4-4bf0-8223-7a06b85fc8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8d7b1dc-5d96-4c81-a7f7-fffba132e970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8daa51c7-a1e1-40aa-85fd-08e4e22d1794",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7171559-6059-41e0-9d71-1c7e936b498e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b934584c-b4f9-4697-a06c-17d9e125e5c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6066aac0-7ffc-4638-ae61-c9f4ebbb5dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd7d97e-b610-44fa-afe6-843bcd7b3c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c95903f-2892-46c8-8702-dbd24c9ea06c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9876bd-82a2-442b-b78f-1705d89de4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a889cec-d3e0-4d32-9c06-e246d67c101a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f83ae5e-6349-4d43-8a00-03e34195f445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f012bb60-25cb-4d1d-860e-0f497187c1ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073d2b06-b916-4ba4-adc7-b2a55d0f0a4c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd010e98-acdf-4ba8-815f-2cf1b7486273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d860c103-47e3-41b6-9ac1-5a09e93b5522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1edc8948-08c4-41ad-8381-74f80d0b1e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfb37443-2f73-4c12-b6e9-e155eec57051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59070d8e-8681-47c3-b7da-2bbd5fbc9c6f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306a0121-033a-47af-8b15-f850b88271ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a5e9bfa-aa95-4b86-af93-88a17d8263f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83ea6e4-e55b-4d42-96a3-320f2e27b840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f542e906-acf9-4c1b-9788-92ab25b50233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d634f49-8869-4d2f-83da-fbd57179c938",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29f69bf-63e7-4777-b5d6-d5c2a7d715c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b74e5c0-f018-4b97-9c54-574724452eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1586794e-bab4-4c25-8c6f-ce0b22c22c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aebd6525-1620-48fa-bd6c-1ad7a9e3d62a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86af50a-6567-4652-84a5-bb2f650cd29a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba00f614-f8f5-4b76-b022-acc33898a5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb37aad-48f8-4dd8-9485-3e139f253b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad4a660-cc10-43d7-b663-449ec0b609a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "58e87187-2ff7-43c1-a79c-b8f5cf58bedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9849125b-b2d3-4e50-a0bd-3de5bf28d38d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7752fec3-b582-481b-ac92-9eb887773897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c35ed3a8-53d4-436b-951c-d4cb0c08c624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5921cbb0-d2dd-4101-b599-a17c166eec51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c0dbb832-c287-416f-8772-3d493589ce64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b16642e-cb5f-435d-8407-b743b9783cda",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea0f477-a297-402e-b0fe-0eb909a58a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53e206aa-b540-45c6-a62a-5ac79a6f8b51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4101b926-5aae-4bf9-a3c3-76910b1564b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0efb6b7-f255-4cf5-adf0-ba4c4d2959ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb298ea-8891-4d17-bcff-f746bf3af7b1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c5cad2-7781-4882-abef-67f23641be10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e4c408-6e6d-4bf6-8bc2-672b885ce6e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522664a9-430a-41ad-8c69-c673b122286f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f323fab-28f4-4537-b1f5-1330deb9a818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782e1625-249f-4926-be43-97d3d6456e3a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "450d6d19-eba5-43d4-bc4e-3ceaa495753f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb2f9f32-7961-4136-9c38-c96227af283a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60512c7-003e-4b94-acef-63dbcdb14358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba74cd2e-716b-46f8-8629-af2656e0bbad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938f7405-34ba-4f1b-9cad-fcb2d7aec438",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e9f086-d6ea-4c1b-8dea-5360937971b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee025e4-865b-4d47-9ca4-6f82788055b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea98a44-b561-418d-947e-52dc8c77f845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6631b15-8a7e-442f-bede-fcf01723adef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38022159-d297-4aff-b0b2-e5509a30082b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd375349-d571-41e3-a6b0-1e88b0d64410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa12ff96-2b66-4f26-827f-fa44757507f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6172a0b7-4273-42fd-a12f-8409c2c7f7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "39be6ab8-6304-4cc4-bb33-f7daea3a9492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63db18bf-0374-44f3-8c7c-abc3297b5bde",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e58d491-ec55-4230-b8c2-eca078635a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58df3f2c-e231-4eb7-8173-38377e0d4cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a3803e-0d5d-413d-9fe5-fcb2e0126331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "92752481-741d-4cae-87f6-1ec5bdc07693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6265465-4896-4d88-9945-c1a47cf1c62b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0bae40-49f5-4a5d-9eea-0e3c13935bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d8c900-8a8f-48df-b975-c0bdb4f7607a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4e76e9-ad07-4188-b989-ed42b86ab0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e59b714d-0e03-477f-8c93-536ae38f2ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e6b372-cd5c-4556-b5e2-782e5d27da23",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3925cc67-b082-4385-8f36-0e420bf92f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ccd2113-2175-4cfe-857d-e4bf6de0647a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecdbb1c9-d9e5-4d73-aec0-20a88537d2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65a3a734-5077-4de7-9659-440300f88b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59971684-bfe3-4e87-b33e-fcb7a0a561d3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7606ce41-cb14-4d8d-b68a-6f39c86a4947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66e6aac-4eeb-462d-b01a-7c4c78ba1151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9deb75-c587-4ee2-bdad-d315e28547d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "51a1bcb8-06ca-47cb-a276-be537868b5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f8581b-e803-455c-b735-d1d9c9cf7a33",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4190cce-bf45-4527-90c7-6baaa898451c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4fed8ae-3c03-47d4-8b5c-72955d6cfac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838d729a-9771-4f13-bb39-eca7b46a2ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86a5cd38-cfde-4077-adde-da8bb13fd07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539c9349-ae2f-4739-b75f-7e927a2faadc",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "773a35e6-6d23-436e-9dad-f0ef64c76c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5337397c-0ca0-4287-96df-347b4a7af205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e443c438-c77f-4dc3-88aa-e7314f645978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28cae576-3c57-4546-9785-32ed341949d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab0bee4-75b0-4fe7-93ac-ffc78c39cc41",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d044667-dc9d-431a-8983-5bdcbf2cf8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c30941e-e119-4d17-9cec-df78093bdd16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5c53ab-4e36-438f-ba8d-63dded229138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e4e3b7c-ea89-40c5-b6e3-41587f030019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf692ae5-d287-4578-bdf3-e73762cad0f2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bed3d85-ea41-4c2a-b79f-8d4c8ea42f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de30e52c-b310-4352-be31-bc4f6287f563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d25c51-1f36-4edc-8bcb-26fed97c4092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "43935388-3dd1-449c-b1c3-f7e02263aaf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d6989b-67c2-400b-8dc3-97c5670c9d6a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f031d088-58a2-4b18-9473-49498c5d9c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae5db4b-7ee5-46d7-b47b-392c929a6a4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a965b70-ace6-429d-ab04-953e0f4f27cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8669b09d-ff46-4cfa-9547-74b2562a7c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4025c8-6fd0-4593-8dbb-4df165a921a2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "216cb769-027a-4381-8a2e-d7bf8cd6fd8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ca4726-01b2-48c4-801d-10f8bfda8381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3aafce1-19df-4cc8-afa0-a65a856ca3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a77737a5-aff5-486a-91af-7e62d603ab19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c490414b-e833-4aa4-ae97-bee5f2950249",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e8021f-3f83-47ee-8ffa-b5540ecd9fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae37709-0a85-41e0-a083-4a9132564546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbadf62-ad9d-41a7-9cd9-7cfc9e322a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a0ef14f-4f57-4564-9f2f-2ac9807f8d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80cab0a4-eee0-46c5-8e09-eb59dc24bbc3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1b250e-6a88-4f7a-8c53-cc9bccdede49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d208dfc-0739-4f31-9bcf-694cc5bac5d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f42512-ace5-4a17-9336-590ebeaaaa4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "da504fc5-2995-48af-ac10-5fc61e3d34df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7f0e1d-6583-4507-a39c-fee86c9221d1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10aa2991-2c99-4969-8595-5535f8158be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a15e9ad7-4ddc-4992-b9d9-9b05e055db54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf0b428-6217-46e5-a597-f5a548b9c61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b3d88d2d-74fb-4853-95ed-984ca4067d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0566620d-ec26-4c6d-9086-8f91d9b20a4d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26563e49-c2eb-46ee-b985-1306f53f614d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14dff91-3701-4263-b702-9ace1daba9fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695fa1e0-bd3f-4685-91d2-71cca37c813d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3425425f-e75d-423c-8e51-11ad070a686a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b820a614-c919-49a4-a74f-2a4209f0d20d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "014e8284-3342-469b-9c98-70a0697a1d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a10003-859e-49d1-a390-beb8f6bc70d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eda4c79-41bb-4c1f-8bbe-fae57e71263b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e09a78d-1d59-49d7-a6a1-55b417110bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899f6f51-78e1-4f30-aa22-2084fff6163f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d59dd0-2c77-4352-ba80-4d7c7c3ac995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b4d8a09-4d07-4a9a-ad9f-dc1aadce6470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53128fe-bc6c-42d4-bbb5-f38f4ac32781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "893c13be-bef4-43aa-8fde-b6084e3881d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d779dfda-0670-43ab-a6cc-ce483164db0a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23e3043-be23-4052-896d-2b4b432b070d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8bb22b1-3384-40eb-bcc3-7dc78fae6480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0c668a-c625-46cb-9be1-43c094e70e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "afa6823a-20f3-41fe-a727-212b465b1372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2c58a7-7186-4d38-9506-f75b4865da63",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89ae9d1-3827-4b4f-a8fd-92111c4b8bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac7e8967-9818-4ad8-ba4c-495f4599a86b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c4669e-b6b4-4556-be04-4e248603bdf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd9d546a-59ff-4f7a-ae9a-84b47e6db9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90587615-6f7e-4a9b-b03f-f5d8eb4fcbd2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f222fa-f47e-4474-baf5-4bd58a50f142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae2d38e-4336-462d-8ff6-b988ab6a0e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6890834f-c17f-4d57-9cb7-de80cc57ceb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb392a65-e29e-4f59-a327-e952e07be3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315f3749-6f09-4983-9d0b-0c7c344a1b4e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75cc6eec-3452-49e0-8404-92b5a340ea6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f5494a3-ea0b-4a09-b02c-ae2eef572cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ecba65-630a-4a7a-8f39-cc3c09cd8dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "643b24b1-0f58-4dae-ade3-cc98d5354bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045f2b4b-3a5e-4c33-977d-65b39f12ddb7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81419ed8-4e99-4f9c-b321-dc6928677575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e81d22d4-cef4-4fbc-b3d2-2fe93b1e83ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ca6c75-71d5-49b2-b172-1aaf691fe545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa7f885-6246-4ab9-8542-46debb3e7b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16bdd63-8307-4a95-94f5-888019a70394",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0cab39-4656-49d0-b38c-80ca081c78eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91908492-f771-4827-809d-c21b3eecfa75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbfc2a5-1975-4fe4-9a8b-79b945fb4573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da9dc641-4ff5-414b-8376-f123bd86050b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d18cf2-6ad2-475c-a174-7faf6309f4b4",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea8f667-b9de-44f5-bbf2-1d655ea88fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7bf452-c9b0-4954-b707-43740a5b1ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf16167-ada7-460e-ac8d-d38ddb7449d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "973cebae-4f3e-4477-bec1-7153a75fecbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2f6f4d-1b90-4830-b179-e2ec34d774b1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd6c8a7-fdaa-4d27-b59d-8b9d15bc8b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d0cef12-d54a-417e-bf5c-ef7d357be4c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f014f8-f5d4-4094-9204-9d74ae074169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4d160f51-af11-4dc9-b438-9d22e8c6dca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a3203b-9d36-487c-922a-9ccfbd330a8b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4df2adf-0446-4bc0-b6d0-d49326a1db71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94c6315-e6f5-45eb-ba02-c40a0929d4d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b31c861-f27e-4bc9-acb8-eb71bc57b72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8654d7a0-3c36-4acd-8b0b-fa396d1ca6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aee207a-1a75-430b-a2e9-67195d1d4018",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a723ef7f-97c1-468c-87bf-bcff584d5d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70003cbb-6907-47ee-952c-8e1f9a6b6fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f59ade5-4411-4659-b9b2-ef74217bb133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7de0d9a4-fc22-4401-a2c2-4d64b12184e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc567031-176c-45cc-8c1d-4fc1f3849581",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07223176-d9cc-4f7e-a1f5-185f7addf5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df2a18b7-f485-4313-9ba8-60cae8b6097f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483c2f2c-784b-4a3c-8571-caf5fb445f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac2bfe64-8d14-4111-8be4-edf22bb94341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da27dbb7-f632-40d4-8b8a-7cbc15590909",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f808c6-ad6a-4a4f-a284-a5ebaa0b8fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a37552-45ab-4520-aea8-03146827e43d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f6202c-e72b-4cd8-8297-c163e8a67138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea482e4b-e072-4060-b415-dfddf13213b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6419dbc7-fe85-4ef3-9978-57e4e5a8f2b1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7d664c-2f5f-4e1c-955b-ff9a1478cc30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "683c3d84-3056-4b76-899f-704a51ada958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b738674-8378-4fb3-aa15-46b8312fa32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2020992-f3f4-4aeb-b4d8-c81bf9c70861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5eb7a0d-2dec-4a90-a34e-6f19f667d536",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b53c49-9a96-48c1-9583-49355970cef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2bc751-10f7-4821-ba38-ce468f956170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8943da2-d401-4d1d-925f-d6b8a6242871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dddf8d39-d1c7-43fa-be3c-748d5dd163ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f390cedd-73a8-4971-a71b-65732b5c49af",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4490a605-8213-4a27-9564-f8b7cbd67a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7df5f46f-61fc-482f-ae96-5262f2ae6100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d437855-ae67-4eb2-9f6f-ee622df60a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a1b30bf-f32f-475e-827f-33764c3c20bf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6ac8a26f-7179-4df8-924a-e2bd1a063f27",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6adda407-3410-479a-826e-6ab196f48692",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26593ed-7ff6-4b4a-8a6a-7a1c753cea64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8565799-988d-46ef-81c1-17543b61b248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05cc67df-db2b-48fd-a1d4-e65aea242b07",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "708dbf93-4244-4d72-b82d-28f251e7d521"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70d88c0a-3c13-47c8-8cf1-c634ad0aa8a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "561a516e-daee-4a3f-a92b-eeaf4a7f86af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c712d98-85b5-446a-b4f9-e4d0dec71b12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05eb3a03-9c11-49fe-8257-4bc9b943dbfa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3ee1e299-7ebb-4cdd-a729-bb1ffec9cd4e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0f05bc94-cef7-4ae6-8947-a3c0c38da42f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "15af1c19-6164-4e67-be86-6e2ac7e9b8ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "81e2f247-5542-4579-8975-76432ca8dc32"
                }
              }
            ]
          },
          {
            "id": "24e03938-5bfb-43e5-8b5d-c0c2dd483c69",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1f3f93e2-0389-4da7-8922-2f347e2ca058",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f3b56d85-1c63-4a00-8dcb-14c3a7a67690",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e5fe4d-978d-4816-8c85-e480cdc5a9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2d55c8df-8fb4-4b17-8632-bf5c83a03aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4d2de4-525d-473c-9fcb-046052aea140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed82484-9b55-497f-81fb-c94ff2110b4c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6afd8912-cafb-4798-b407-acc22db9cf75",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68232721-6ef4-48c9-9c7b-d482b270e1a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ce8ea08a-2125-44d7-af82-d38acfb58763"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a1929eb-adbb-4d44-a0d1-5e55b9ebe003",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "45a4d7ed-3636-4ab5-88a3-1c0f26d641e8"
                    }
                  }
                ]
              },
              {
                "id": "7508a857-9db1-4e44-9077-7c4743c6dd27",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b00894ce-162d-491f-992c-c68a0cdd89da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5548941f-c9d8-4315-a980-f882ceff0f6f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1daa74e8-87a8-45c2-9569-6596f74e5b33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3c7ff6b9-2d95-45f2-be14-b6fb3daafce9"
                    }
                  }
                ]
              },
              {
                "id": "c28c31f4-48cc-4347-990b-38a195ed49eb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b344d16-f9b4-4914-bb30-0d2083ceb7d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3beedefa-d983-410e-836f-4e7305a96b2e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d861c11-c7a4-4e0e-bd61-6ff3b23d6567",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e2144b3a-4aa4-40a7-96c2-67a131b2b625"
                    }
                  }
                ]
              },
              {
                "id": "ccc7fe92-1411-4e67-a743-1acb2864e589",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7f4dc1c-c081-436e-968d-d5d038e5736d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5fb6e3ff-8ccf-4fed-a549-c507f883f494"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4701aef7-ad2a-427c-ac0d-37f88ba9be7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "515e024f-1e10-4633-8f04-e798ed9fe5ff"
                    }
                  }
                ]
              },
              {
                "id": "d6f0b30d-a102-448f-9142-270ab34d924c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73a15991-c477-4e6a-ae73-52ca53044672",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ac14a81-e37f-40ed-95da-807a749042bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d22dfe9-76cf-4494-a657-29fac1baa84c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a0722bd8-cd75-4d3c-9ad5-3c8b6db8ceb1"
                    }
                  }
                ]
              },
              {
                "id": "1bf7fe4a-fd34-41f7-9b8c-2a9ee1a60034",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9d667fd-5eb9-4882-9e66-e07966b68b9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9b745158-7699-440c-8116-b1507aa20cd7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3128ce05-01a3-4cd4-bc08-af4f2e1e5794",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "61894bc4-1d12-4525-9218-3984dceb46b8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "992c5aab-470c-4ace-95e8-8182dfca4b39",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "95f27a69-d8a6-46c1-8f98-a79a51db47ef"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1dc1cefe-e878-4f35-a5ba-ff68f2b0db1c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c7eed1be-c464-4e2f-b267-c08dec87f0b8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "649a906c-ef7f-4042-9b8a-0b575035f8f6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cf91720c-67dc-4e6c-8965-22339a191f7b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40fa31ea-f3e7-44eb-92c1-ea8b8a06f7f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5623eca-bbfb-4a9a-883a-f6831ba98d4d"
            }
          }
        ]
      },
      {
        "id": "f0107d6c-b304-4d8d-8bbe-8d29d4232802",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cc526e33-f3f1-41ce-9286-4102258e1d29",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2581c82c-1c19-45c5-87d4-5f0d809f15b6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d209d760-970f-4e1e-9b40-9fac81b024a8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "503e2104-5e3a-4db3-b520-e507975950e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65de589a-edb9-4ae6-a3fb-d771305a8992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46f06b9-f536-4573-b877-8041404c7969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b0bc999-ea69-4df7-b7b6-78ae3be69e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c9592d-d5e9-459d-8b2a-dfe926c1da74",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b368fa80-cc56-49d7-8972-142df574dc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "660e4cb1-6ab7-403c-ac5e-af13831168de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f25919e-46b4-4118-97ab-73b411c3d2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "143e4c85-8068-42a9-acef-51285033e8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738bfc5e-adb9-4582-9ed4-ac3ee7c74a0b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8548c575-66c3-46a4-8f4b-c98cc389a2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a1f9725-8eaa-4e80-af78-dd7f0ddbdd96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee675609-a98b-41df-bc5d-f8e9339f7746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a9de49-924e-438e-9f09-9c7266d51d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52ff625-a9e9-46a3-a1d5-b483060d9a8d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff369375-16d3-4990-9acc-aff24482bc7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a3b2ef-dbbe-41e8-8404-7cc0e759f8ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab4f4b8-83ce-49ca-abd4-02aa8fa1cfe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c78f8e5-a17d-41ea-bcdf-4f2f62e88458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c704b4b-9e87-40bf-8fdd-062fc7a4dc31",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d982de-4f17-49cc-8ce1-2cc8bb283a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee57301a-9832-49e7-a7e1-c769fd29b440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9dbb92-f234-4898-8a6e-d2a828780f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b2a8373-6cbb-4e02-896d-ac7605d5f42c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfce088d-9543-4eb7-b330-fe527383f733",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccc44c5-eb0f-4bb8-93cd-c65d1a1685de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b60237-3547-455d-b3ba-e235094a5f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e1408e-6e04-4017-b6d4-bb82cc009ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7be777d5-e2ba-4526-a376-6f11ac74f2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b4e2cf-cbbc-4be7-a06a-ad47601f6556",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9518f38b-f0dc-4f50-81c4-b60825336725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90902b5a-cb49-40e2-ad1a-5c9a64c4c368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb5cee8-4201-494f-b25b-42555cac017e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff78610-f6df-4fad-8994-7b164d2e6f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596fcce1-1b37-49f5-92c8-2ec10f817383",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c19e70-2b5f-41ad-a099-56662a3c8279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ceae5b3-fcbd-4fff-90d1-bf226726a0f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb0da4d-3d74-4bc5-b7ee-e104f9c89678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f435d9df-b58d-4bf7-b870-ef429da108b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f90ab7-3f43-461f-8439-56dc71af323f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9636fb6-8c8a-4adb-94df-bb852ee1a2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe48f21-125c-40a0-a0d8-161566b179e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a1f30a-70c4-43ee-b93d-eeecdb456383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dac1b90-4cc4-4e56-aaeb-91d54b71e725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9041acef-fbc2-4f34-9849-518cc4a84524",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92af6b0-9895-4a3a-8d00-1f23783eac6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b73843-c2f7-4178-95f5-fefd975e8dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739e25bd-743a-4004-b079-edc255cca418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b92d036-99a5-4524-90ad-db28e046f992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09eff6b4-fcc9-4372-b919-a73bec363e5d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd78f2c-7a21-4e68-8bc6-f6d4a3da4d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb918272-432b-4ae1-bb7d-3274464205fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b474bf86-a36b-4c8f-b9a6-5077f66e5092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "66b19360-39eb-4293-ad7e-c28923f244a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2682e59f-47fa-4e65-85b0-c2e5635f0a60",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad50e60-14ae-4cb9-8d85-8288301f4082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c00fda89-4a6d-4bb4-8ad5-ebb01bf13282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c9ca38-9647-4464-afbe-cb023efff597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f8463f6-218c-4353-a613-1174c700a37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b2ec2c-e32d-45de-bf8d-cf13a180755b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1546b9a-3669-409b-a5ee-0de7a20b27ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac8280ff-1998-4708-8686-4ce5b93b83b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a188a95-861d-4da5-8a7b-27599656f1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b07e47a5-a579-48d0-a4a1-98f7e50507c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e5b064-08a6-4592-9005-5365a74ec4b1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27a8f27-d68e-4549-a8f3-eafeb30f3b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a4a19d-8b0a-4518-b15d-30cf30b39792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5365bf1d-a3e4-44cb-a7b4-f9dbc8643e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4299a7fc-cee2-467b-9112-1ed545f1114e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e21977-75b4-45ae-991c-ccb65f503bcf",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233c5eb6-cfa3-4eca-bcef-cc915f607a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1668a20-506a-4a3d-ab6b-38189c2909a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27253eed-8d8a-4061-b813-3169dc98cf5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bad14e1-38f8-4236-8ddb-34b6621de8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160a931d-65ff-4b96-a2c2-ee80324b80c7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d324be-6b8c-4da7-bc62-d1cd83a2007c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb4ea8f-c8ed-478a-a3e8-08a991bff5e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63046185-caa7-4a10-b8bc-82f0f3b97a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "259b0bd6-e52b-4013-894a-3712d09f0af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5abf9686-b934-4382-9b0f-666e88e56267",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd64b51-a214-4696-a02f-9b5bdad419bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0219920c-bab6-4666-8c60-9dc582484d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8175fe24-c278-477d-98e5-f7e3bb9fa0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "863de972-193e-4550-97ce-3fa4735842f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb30571-cc36-40cc-b7a4-70222ef44c09",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f704a651-7bd9-4583-850b-2a2674cf297e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb675a8-35ba-4823-a03c-bb4bb54af913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b70e8c0a-3d0b-473f-b3c3-a1ddff98449a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f99fd60c-9e8e-4089-bab7-b8cf0d524ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31444d24-3284-4fc3-9218-9387e74571b5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd12c0e-0fee-471c-b335-bfdb731810ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e59fba-eedc-4449-8494-8fb513f30378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8e94ac-03e5-4ae0-891f-372a1c4d30f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9dca209-e1c6-4723-8d95-84ae11ec535d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4207bf-88c4-4421-b54e-4cb31de913bf",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edfe5ad-bd70-41ae-a12e-51fcebbec811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2cda85-fb93-48e5-b366-266a069034c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a0e861-3964-4c26-a28d-a3944d75548b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80edaade-d9d2-4065-8c02-c3d8b3c71d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7378da79-8dff-4740-a326-12cc24f52fee",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece1b3b8-17b0-4037-9041-70fdc4f26848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aff1251-21a8-4fed-9558-b54f90024cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921be0fe-c375-4a4f-a730-f7cca25ccf33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0905676-7071-47d1-9372-2e83bfb68b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b17a5cd-33b4-419b-9746-9f26fa6e18e5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947c82a2-8eab-4759-9680-2fb51ccaf5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdaaa527-1b89-4329-9293-146cdda54006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ca8c1d-717e-4552-9c21-558ac84f59b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6feb620-69b5-4ae0-aaa3-f271233d2af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97f9ceb-855a-4ed7-aedc-b9a059268890",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8353e51e-c3df-4764-a9c4-e66998e089af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b0e1714-9e5e-4c21-9c15-50280abffeef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6246ae1-6a56-4309-b166-7a367e4ffcf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d30b2e-5261-4995-9f9d-25dceeed464c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c219ac-0465-4196-b19b-1d9fb3c23053",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef307725-1517-49b3-847f-a98b79bdc1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a5bd879-5167-4507-ad8b-bd85b15f6995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ea19a4-2eeb-4b31-99dc-92fc0879092f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd70107-0a37-4667-849b-3c77a9d5f522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37f5681-eff3-4b83-976a-21e8ce23a6fb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d166f6a9-eae6-4e7c-9250-7182073a5f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d247778-bc8c-4983-a693-a401ee1fb4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07985b71-fa9c-4e37-b3f2-f16f6d02e742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58a748d4-88dc-4d09-8150-86ca8b2a111a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9fd2922-6026-4e26-9c81-789c3f2f3d13",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1f69f4-d809-43be-9b18-21726356ab8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6143d4e2-9b6f-4339-883d-5fd7a6967387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4bb45a-08a2-416b-a4e9-e5d8f35c4008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44d5f58d-6928-402c-ab7e-a7aa2cde70aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f231a3-f9da-4312-a2f3-7d108020a21a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a5420b-31e9-4ef1-9de6-9f2e7433ec63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc6f34d-0612-45d2-abce-d114cfd251e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d16547c-90bd-49a8-a994-61275b668050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1f304b-6555-4155-a588-5183f080f445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acfad656-ca7b-43da-9185-83f6672d9801",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2039a5ca-6ebb-4b37-af5b-271207f54a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "126ac945-416a-47bb-8409-1546dc04764c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1add3f3-822a-4cc2-bd94-3eb35ba27220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd9ba5c4-5987-453d-9a7d-7ce8824854a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f99c02-3881-4ca1-a5ff-f3fdb93cffea",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5a249b-a97a-4c77-bf0c-3a61e862e9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef6d97fb-7ceb-4433-b409-376eea1671d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b68cc0d-4f14-4225-a5d5-74f17e8c65ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c37e68-de74-45b4-b2e0-7831957cff36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3757a5ab-8faa-4057-9377-8a3de835a1e5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1c2a3c-efa1-4893-92fa-4a1c12f4fcea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faeebeb6-7a33-42e6-97a8-fd7ae45d84a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2569c3d6-8263-4354-a554-df01cd92f638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47d21142-4508-4f88-ab57-85faf8c2aa3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed89fa7e-8d4f-49e4-9d5b-408660e9773e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17bb2a96-2b47-4d7c-8e89-35b8160f7948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4801041d-134d-4f4f-ac84-4b7a015943a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14de8549-291d-4651-affd-4d478e6703ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a218d11-9764-4e54-83d1-5e7663a3cdf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ac1cbd-96cc-429e-8e39-9b7e75d4894e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24280656-9449-4a17-bf98-d498a66838d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6e70f6-fd53-4c63-bf9b-6a3e25d903de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a188d8-24c7-4c43-9d8b-63c9843397a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adbf5e62-11c4-40af-960c-d12bbde60948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fb12ef-7f4b-4f27-a51a-812817de286b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "525a1b79-63b1-4906-8fa5-2583558745dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd0e47dd-2eae-436c-8d44-99af1af63322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352b6cf7-5899-4c2e-b60d-b8f5461b7941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26fbe0a5-b21b-44a9-a479-0619c5f106b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b39dd25-95f7-4934-bc1e-2fef30a41ece",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655f1b6e-5d4f-4d29-828d-0905f3ba70cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d044f026-410d-4842-8c26-c334db89f105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919e1fd6-ac71-4ad2-a813-a41258187b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c749f1a3-566c-4c96-8a95-4349b9dce28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211002a4-5931-4f9c-8f0e-3bddb76fda49",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58bf715f-de49-4d5d-b4cf-29661658df1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ee0483-2225-4427-a7f6-e6b927bf5360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e248c6-7085-4770-b32b-e5ae1654d6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1b433c0-9a63-4b8b-be69-b2276e96766f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4345c098-d939-46c8-8896-6127df6a3e2a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a099621-fd26-41c4-8869-f268fe75fe28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4577f28b-fc9f-46d2-855c-c1895a9f2ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bfc810-0693-4a2d-8dbc-bc552ce2bc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29e375a9-83b3-4d21-b028-36a6c098c2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e979bcab-d317-44f2-a242-865e45e3f052",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce52d3dd-60fb-4134-bb96-caaf24bf23de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644996c2-09d1-436d-b0ea-86f2b02dfff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307045f6-bf1d-4709-bd1b-fa9df3d8fee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c713799-7324-4661-a69c-b299e88166cc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "98e22b05-294b-4cc4-9264-09443fb2e8fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c481251-ca38-4d6b-9f5a-ddebc8b9290c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b080d1-c118-43e2-b136-f6309949a646",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ac6a9490-5f4f-471c-9f85-359025bdd897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "746bda64-8cb5-419d-99e3-02471bb760e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91271b60-e268-4a28-9b7b-cb1705fcb795"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12c71597-8ba5-451c-b89e-1a49f8a18977",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "017400a7-0973-4e12-ae7a-fe1742d3d362"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ca6800d-bf34-4885-9a66-c3582020385f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f85dd80a-5363-4e2e-8824-987686d1e869"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a447bdb-cbd7-40fa-a071-1ccdeb39bf9d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1e5773b0-7030-4c06-9214-83d4a6cfdf00"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4becc1fc-c986-4e02-ad0e-5131611ff937",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2044caac-adb6-48c6-b355-5180db337c93"
            }
          }
        ]
      },
      {
        "id": "5177cda3-88dd-46c7-9694-a6cfe68e3fe0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "45cec0a5-4b95-4be1-907c-71c8d60530b4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c75c1449-864c-4308-9a26-42b1e42dc605",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0c2d9529-8832-4142-bd67-4df6dd7467ac",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50c5c35-676f-4384-831a-8bc57ee153b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b4a730-2718-46d8-92e5-6d16526351f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aaa825d-4558-442e-9202-47c965d50c5d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7c3c68-6dbc-4620-88b3-2b94d3992a14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ba4369-7430-4fef-8519-2e22ecd9ec7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb2bcfd-0d68-448f-8f3d-81acbf754494",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b1d71c-adbd-4bcc-95c4-6b8bf36a5a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f72df6-9491-4315-9a29-3b8e20472563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ae0b05-565b-4dec-ac80-7bab0546c4f3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604b4b27-3624-4a9b-aac0-75789864c553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f13f09e7-7076-4864-96a7-de0c06132703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb54c7e-48ca-4730-afd2-14b16735bcbc",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a57bc30-5fd0-4be0-b1bb-32e6d18f9038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f3ee1b9-08ba-4679-83d8-d82039118faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2648fc-1f11-4c15-bf5c-7e496f820a59",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e400239b-4561-4bf9-872e-08f4dab8492f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b177125-d539-472d-8b7f-a931664d0575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67dda6a8-283e-4887-b4c6-aaaf1397ab6a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d6d776-4fd9-4254-99e5-e7381ab01b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb855d2-167f-4c5b-a56f-fe0f2c7d9497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc14ca5a-abaf-47f4-8e32-add404fd5381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c580026-cd64-4344-bd29-4dc7e4d4ad30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9141eb2d-2fd3-437d-979f-07fc8ca0e1ef",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51658729-70f5-4c7c-aab8-e71dc18a9692",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b62d267e-06ae-439f-964d-728cf21c61b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed06f222-95cf-4e9f-8c89-40d657205f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b681e8-e24c-475d-a2c0-07559ad76fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9e15b9-d224-4c69-9e43-e744b870bed2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3a807e-2604-41f6-aa45-155764ff7ecb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f67964a-dc4d-42a7-a257-49ffe5a35833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcac5875-386a-49ac-ba33-3f376af2f4d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb67938f-c795-4807-8957-5e03889a9a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d445b94-bde7-456e-8a19-1bc21f1e250e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c20b77-8b55-4976-9021-22fb7b70a175",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d690b18d-fe7a-437e-b8ff-e3f696ad62d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4fc758-610f-4a2e-8b5b-fc2539d2d0f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "058c8a66-63c5-4275-83f0-0e75aeaed0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38d4eea-1a6e-46fe-8fb0-52a4afd3dad3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d828da-0ddf-42ac-8d44-2c6a3ea1d522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1602dfa-93fd-46cd-a308-54a6f787a829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c9ccb9-eba2-4d4c-996c-acc79866e528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4720fcc-6e18-44c5-ac77-f4efaba67667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349fb4ef-e743-4d53-8e5f-77f17c1407cb",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6533d527-97a0-43ba-bf47-f404db3476f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e125f097-ec71-4722-bcf2-e88ab10762b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc97c28b-512a-4663-9fa6-5e90ed201e85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e31a345a-2b99-4531-ba43-367594099706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742d1174-8e98-4437-98a4-2f32044d788f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ea1867-c756-4bb8-a83f-c26aaf28f83d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e57fd5e9-feb8-4f72-8364-c135e521d7ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c03678-17fb-47ba-ad33-76347e625f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df430ba-70a1-4692-90aa-51adbd00cff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c2d63c-dcbd-46fb-adbc-03cccc52507d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76718ae5-b721-4e92-8afb-1792a3c0f011",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbd9ba9a-d1b8-494d-8f3f-6ef00066243a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4e5411-015c-439f-bb88-399c9696a275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c226fb8-6902-44b3-a615-35b940549a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650f2605-91a8-4423-afef-e6b44871628a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a206c0-6914-4f99-94b3-4c26340a0ec4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69e92bb2-b29f-4ef1-b439-3faaa544e0a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f4b85d-902e-48dd-860d-b8090fbcec50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9cfc64-4cab-49ca-a866-689c5e5d2882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa85407-6666-4c22-ba35-67f2872ac174",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf91dc3f-684d-4401-afdc-6ccfbfbdeb68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bc7465f-7ea8-416f-9cea-49d728058aa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19be8b99-8190-4ab4-a461-7a8f65fa0801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d38b68-b5c6-4f87-9d67-ecdcd78fa48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1c794d-af9e-4a69-846e-b98e118a3d80",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1713c93d-f011-4bd1-8437-32387cefaec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32e23a73-4505-48b5-a8e9-a53a6a6e5556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d99f09b-8dbe-4464-a8b7-86e030458e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af1b55e6-159d-470c-84e0-908f68cd3a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9155960c-fe32-4b20-b69e-13ad75e682fc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba48894-4e89-404b-b47c-638f9e1b9dfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8368b74-7dc8-4e79-bd93-279caa9f4a8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25980f60-183e-4678-bd7e-0fc7ad886222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d0fdcb1-aee2-4d62-b615-857cc86f62a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abad6203-fdd6-4fa9-b2d4-f7d5b369dec0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819e31b0-c9bc-417e-9455-ee34a8780ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b064d440-fae1-4e33-a9e6-c7fdd0a91b9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a6c7bd-4ffc-419a-b607-cea48a93e242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81fb88d4-67b4-4821-9e54-f51e1cc76562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23e2f5b-11b9-4374-b59b-1555e59724bb",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7904cf06-8d83-4610-81d7-417c8fe14e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950d3db5-46cd-4528-912d-ecc7394f3cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92fa88d-d1e0-4415-9422-df9162aae19b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7422c39-8bd6-4fe8-9590-84d7a2e1a51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e99a926-daf9-4b2f-8a40-d32bc26ceb4e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ddd5f9-1e25-4c23-bbd6-faf1ee64e17f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9955fa23-78cf-4f65-8317-19dbcb7bfffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07fff92-8da0-4c8d-8a2b-072c4be1fe34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a3b00e2-8c18-4edf-a42e-8be2b95176ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fb0915-5d1e-4a19-92df-9a5b03ffe03a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3307db40-4e35-42e1-8d4a-2526267ecffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe84f50-54b4-47dc-85b1-b9e7c0f4912f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae126734-cf27-4d25-a60b-875e8f5a64e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4449bae7-1b9c-42d5-8b3f-d27089f1d415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13b2bcf-cffe-4453-9086-f61d8b7964a5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fde4d1-f65d-421e-a59a-5e62a475e7a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2347a9a5-8d4c-4aa6-93a4-2679bfead0cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf568dd-dc8e-4fb6-ab75-5afe180cb47b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e955728-57d7-405d-aad3-5feb33db2c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbf7520-1f8f-4032-a22b-0ba0d1395dd6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47c0f9e-6951-4201-914b-841ed6ed7485",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6acde26e-2455-4462-8247-19f4bde83cea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edaa1d1e-102b-4ce1-b4e1-c170aa52af99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3207fa9b-cdaf-4b8e-ad85-f4d4bcb7ff19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83aa952b-2929-4640-a7af-54c39324ee3b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17400d3c-94c9-41da-9c5f-b1e6ffac261e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bc00ae0-4740-4f15-90c3-68c7b1683048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7ad45f-1844-40ea-b9b9-f1a18d8d3033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7131fab6-4355-4669-9715-46767f87425b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15fefc02-7074-4cec-92c5-62f64c89591b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b699c5fa-b8b6-4e8e-8048-303e706aaebd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c52a940-c449-43b1-939e-9939e4f8b2e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6c1935-5e2a-4355-b2f5-262cc3ab8576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b023718-54c7-47a1-8b3a-c06a89aa718c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7cffbe0-5862-4acf-94b4-a5d8a913244d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6eae7c-40a6-4676-a595-dad40a84cda2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9ab09ce-1d61-4729-bc89-cff6f13acacd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fe717a-915f-4547-877f-6f7294afdc34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff3a6639-5d94-4e16-aca4-9440f7f0444c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c9189d-5f68-4614-850d-1d04b01589a8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de766991-b3b5-45d6-846f-b940dd1a2490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8c287ed-3ce9-48d7-9d8e-6edcea3ac265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7487983-2945-4270-a9e4-4181613dde39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fabff02a-ae5c-4042-b1a6-33410d262b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be4cad6-d853-4ebd-8c66-0722b43193e7",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8dc932-9b38-49a0-a2a0-d05636e695c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aecdea8d-6ff0-4799-b4fc-380a3ff16798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61eb17c3-0059-4a01-bf7c-979a4c47d3e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6143fa07-a6aa-43ca-aee2-9ae3aab50256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eec3e3c-e3f0-4f1f-aaa0-13170a1c8719",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20538c90-48c6-4184-8817-ceff09e50432",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc90ce68-016c-4902-8eea-7c5b108327ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "349b2c46-0208-4dd2-abf4-bd772498bbf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "168e894c-2b84-4ce2-bd3c-1639accf3884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e9b1c6-ddbb-4294-86f8-2866a0725642",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e37be3-5831-4d60-843d-28a1282b66a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e2d25b4-e851-45fa-9f21-3b537805c306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c68dcc6-415b-4057-a688-6a7158632559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40440d84-4cb1-4945-b41d-e6e71f569aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62167a2a-bb3b-4989-bcdd-ab977d220311",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeedddca-f563-4bc4-9ee6-9100263da7dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7f58bf4-3771-4591-947a-1a2354151c06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad12b08a-9828-42d9-b713-9b1c50eeb61e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0a97ab-0f58-4029-b395-c02099cb9f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e2d18b-fdd1-4854-b07e-9ef8dbb03734",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfeb1ac-0a71-445c-be33-7e06a6219ffe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db9cf4d5-12ba-4768-a7c9-2a2e9348e30a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c20b733-45b2-403c-85bf-8e3bfcdf181c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b90773e8-40ae-4ca4-940c-cdcfd6e3cbcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd21382-d2d8-4af3-9dad-7cd62a1766c9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cfbe313-b73f-4e23-ac5f-de1aa2903294",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f5dbadf-a9c3-40a7-ab8e-8b80b69d4811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c79d32-bb4d-4654-8b52-ae3ce855c8e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "487c87d5-713b-4819-b139-d2642231ec64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349d4710-436f-4c34-afb6-d0d67b5d512c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01adde66-3b8d-41d3-ac4c-39974064a039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97df3462-446a-48b5-a129-e00ff6c55cdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "238f455f-e2e6-4795-a761-3334d21b1077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64ff4505-1971-4532-8247-8591735c11de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8727a84-ecd6-4b20-910f-8024c6f7e7ae",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce49f32-a014-4d36-8bb2-7423c0a0b2a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b1c9fb-03fc-4f5b-9ffd-0c21d4f33df8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "293c5add-8af4-4c4e-8674-c46f8cdfdd85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d6015e-3c43-4bd8-a186-e94727b6527c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a604b7-e795-4a46-b0ba-e7d77028ffe1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb139f3-7088-465e-a7f4-b6daf59a6674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40fc496a-815f-4e80-b692-29ff980b84dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2e7be8-08f8-44e3-a667-9e1a8edac103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1daea396-71b4-408e-8764-d0118a08f4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7acd8f7e-5b50-44ac-8d46-64a9475a3fbb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a782b2-1ea7-4c2e-aa94-8973d83305a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d8104d0-e9fb-4bfd-a262-fa069b65f852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14f2440-1d40-4fec-9f54-84ac5b66976d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e63c2a89-8f9a-4ff0-ae3b-010886829367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4768414d-04c1-4b90-ae63-de3a727526cf",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c01218-a37e-49fa-9dc8-382016d6e500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f68bbc-5439-4ce6-b790-d263e3f2b88f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0885509a-e77d-42ef-b5aa-1f51af51223e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c740f941-58cd-4221-b171-f31f6b04bbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf68e16-a6ce-49e3-829e-0752389c6e62",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6663b96-a741-4330-b56f-8b3612d6b1bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1596816f-7ec1-4041-ba88-8239b056edb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb21aa6b-63df-41cf-9fa1-a81a214ef699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4742e0fb-e7b2-44fd-a4a2-cf7a89216a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c9fbf2-1bf8-4060-8502-87e7224ef71c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10174cfe-8f2c-412b-933c-b102df8ba0a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "098e1fe9-2067-4312-8a99-4cf6c41732d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f74d1e-7c54-4a45-9a63-ba741f916ffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f552d8a9-574b-4225-8029-1d38b70d71e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82db318-6491-4692-83e7-07097a7a2801",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add9e737-58fa-40d9-83b1-8722163f2d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7e6f54-fc07-479c-86b7-342fd1d29503"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece04f93-f44d-4251-ba1c-b3d052322859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991d377d-9ec1-4fd8-8737-0faa5d19601e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9207a7c1-2e57-41f5-ba1d-c711ea5be46a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e05bfe-8f58-4dd9-baf8-b4d893a9496b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa76957-147b-4314-96e0-b34e1eb05a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6574d053-adf3-4d7d-9d69-d856da0786b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8e8d63-229c-44a1-9e66-c3d4d54cf13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cead199-d0bc-4a22-a87e-b38f03411282",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a8b9aa-cbb9-43e1-8514-63cf9bbc5d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cad0ce9-3414-487c-8923-ec40bca342a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2294225e-7a77-4da3-8798-eb82017244a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c86cf6-604e-4800-8b7d-a7833fe5a1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db93c1ae-2fd1-44a7-b257-325517b70a54",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022a1406-fdf8-4259-9886-bb368787e172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4907926-4c9f-4d79-b9fe-a99ffa2f9863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "656c0274-83a1-4c81-a8e0-ab0716c678eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb47482-651e-4e63-a18e-210adb19b748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db347ce-9ba0-43ab-8f5b-9d33e64497ae",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26d6564-155e-4f54-8365-ebc9ad2c2650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "454548ee-6e60-463f-b93c-2d5e5b076f42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0007ee2-52ae-47d3-977c-5b624311a296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded2578b-01b1-4f3c-9d27-e343aa6af70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d79b36f-3886-4894-8c8a-daea0958f06a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b80e95-116b-4368-aaea-df422b9458bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "897d7bc1-6bd9-4b87-9235-8857e57f6107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f70f61-e59c-4d53-aaa1-f8c5cd8d5581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac774886-c057-4874-ac3d-c4076a3cfd61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dce20c3-f121-4a9b-ab0c-e48235017fc6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60116d2d-242a-451e-8c2d-9c43959612e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7dd3b1f-c5e1-4fbe-8211-2de86d800f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8167eec1-ecf8-444b-96b7-79dc371abb99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6454340e-5f65-45e1-9253-cb23118d112d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0ecf04-4903-4390-b75f-d05d3333af40",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75aa3985-e5df-4783-829e-786713b980a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d022a1f4-091f-4a1c-82b7-b52e73a81c7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b54923-39f0-46da-8a00-a29a9881c939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "196cd818-8945-4ff3-adab-d1e27a3b4e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c63cf0e-28e9-41e1-825e-60d1729966ca",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7320c7-e0bc-417d-bde5-3f66e75322cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51a9fed-a4bf-423a-8a92-2dd895a05555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabfb5e0-8ccb-4c03-8d39-99e093671433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7814a668-a5a8-46f1-9e1a-2e8be3e1dd88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88889998-1b69-49ab-ba8a-34b71e1b0475",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373ca7b2-f485-4105-99c2-ebc0418e8ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10e58a1e-ab88-4c4b-b4da-e80494712083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73e6968-b670-417a-b757-454ff2279f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "062ceb67-cab4-445f-9f52-6c4b5bb2396a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a808ab-bbc7-472a-997f-0bbe12c91b61",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3bca26-6915-4e73-871c-9339ab64a0a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cdbc381-a3d1-47c2-bbe1-a2e9ca439f8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d6cdcc-bc70-4b03-a91e-e64113b04a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757bd678-8415-432c-85fd-277faaad6d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe0c255-873f-4889-9b16-487b6f7b50bc",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c329b7e9-c97b-44b4-9978-c8c631518fc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6166368e-7d89-4f54-9a4a-13eaab803ed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef633d63-b61d-40e2-acba-c496a39ab066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91afcc2d-89ff-435b-a171-12d832dcea4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66073176-a0a7-4b57-a9d5-22d83593ce5b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862c9fe2-fd88-4892-a4e2-011c13228b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f827104b-a435-4f65-9628-564f62200a51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95d8298-b648-4349-bbd2-cc95db9375da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d35739-8e94-400b-8e66-aed99d29a6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8097a481-299a-43f0-a68f-557565d8d775",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e7d3c2-8533-4e0a-9dd0-975487b6f53d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af9528f1-dc23-4444-a385-5756258700f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27812c96-6d63-46fc-a553-a2a83e419706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d7b409d-2c1d-499e-a91a-14b4d0c806a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be30d82f-8fba-4853-a113-5d7e825e5b58",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6c8611-7010-4e0f-a9f4-c3ddc2c3969e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01693127-132e-42bc-a889-50ae815e036a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b46caec-98e6-45f6-81f4-2b3ab7cfd43d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fddce3a5-1008-43b1-a234-35b5719b72d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dacb23f-1dc3-42b0-80e9-0a900309e589",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4825ae79-c8a5-4617-998d-230f0b5ec768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951a560d-46a5-4052-b982-8ba90ac12ced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1c37ec-a7e8-463b-aa79-b104a4def3c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e538bbe4-3224-4631-90ea-5623bf05b4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a17c9a-dc12-42de-a752-fde44fc66041",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee91940-2d95-44fd-a1fd-f733622f8da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd7fbe5-030d-4b7a-a1ae-d50a467cb935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b44a80f-1c8d-4613-a41a-1a8dd2e54cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb738d70-3e43-4028-bdc3-78803710025d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d8be82-82f9-49dc-9996-214025397ce8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94d33bf-48b6-4eac-9bce-392b498cc868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c79490d-0b88-4157-bfa6-06278fb245ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fceeccb6-e5d5-4d56-8b95-0493e2cbffb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e1bbd3b-e44b-4b3e-9812-9162881042d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d841408a-e753-472d-9d3b-e203d57b500c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8096bb65-b5a5-4534-a61e-c4f7fbb5fe56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba412d4-47d7-47c8-a291-1f678a9dfd07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "912a0547-2d58-42b0-8dcb-5c7e77759796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b50d09-66ce-4b6d-bb98-2e0438756016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e13ee7-284c-40bc-85a4-07037a8900a6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b50f12-4f34-407f-9ced-12b271eb4991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92232c15-2c24-43ff-814d-c1ae6b0caf2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eace7c6-b251-4d46-81e7-304697af1195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74bea6ab-6e87-49f6-b01a-cd5bf246aab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125eee40-2b61-4c99-b0a9-8984d445c239",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4465dff0-6847-444c-ba0c-bcfc9aee36f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d122a8-5678-40ed-a3bb-45595fad99c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22a6cc8-0db3-403e-ae01-c3a2a744d4fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f872712-7265-4199-8837-5fbf88dd6e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bfc356-12de-4aa1-82d3-c8a16eb3b424",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a8aa6d-930a-46b9-b99b-849b6677e779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f10704d9-2302-4b78-a424-f4d927c135f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "460b89c9-b291-48b7-a530-d0bd49f71caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b12a8b-411a-4f55-b864-438899baf430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b0d98d-cc01-414a-a1c7-65b9cd0c2a6c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d78e2f-d478-4a2d-9559-c8a2c75af2db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4df0fb6e-39b5-4ae3-921b-72fe7524429a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6840a46-e527-4375-88e9-1337499e00e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad1616f-b0ca-41bf-a01f-264533b258b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab15256-94fd-409d-865d-125331a37df7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5d2338-b8d7-46ed-aabb-79095e348112",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55fc6852-9545-4e7e-8fb2-4035e03a4704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1692234a-6d47-45c6-b00d-8435000de975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2627579-5398-4a99-a9bf-228e9aa8dc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922b872c-a688-4cd4-b3e3-d61ec74de7e0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f2f94a-fceb-45b2-84a8-2cd8dc9a1c24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2d8da0b-3018-4689-9088-b595dff45796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "844ead0f-2a32-4aa8-94ac-3b1865d26280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7bfeccb-425d-45ae-826c-3c1ca18ba732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1408600-b61b-421e-ab0e-48594527e6ae",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff2dcf6-7309-4813-ae3c-ccf7d29dba92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f626e8f9-2c33-42f8-8e1d-6ec42a40c68b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0467d972-b2b5-4f37-81bd-f2f3b930fc36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da02f962-1293-4e8c-a471-ddb6fc5d5aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42bb925-19ea-4fc3-90a5-3d1a341255a4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af8a91d-38c8-4922-a062-daa31754467c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "761d640e-6c32-438a-8910-36c73a2156d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a29bf49-29ed-49a6-a61a-0766511bdb1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a0ae3df-38d6-4c8b-99e0-22263af1f4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7d34cb-2de6-474a-a49e-e1a8de3f1667",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f72372f-6043-4b05-89af-cf040b5d23e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "661acb97-4568-4b98-9d18-872e9caf65e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8a9815-ba5a-4760-b817-83ff36b40b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c30077eb-c882-4e1e-bca0-f242cb995e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9898ca5-79cd-41a1-b1cb-b84f7360be79",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7deae2-5918-4a31-84d3-ac6edb713dda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ba0ac2b-7685-4391-babd-e2f6dd422161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2bf7c3-46ee-4e8a-9556-5412d076d71d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f041b700-722f-4522-863e-4c8a001e861b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e2bdc2-df3d-4afa-8eeb-2327a9d50ec7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b009fdde-92aa-4358-b912-6caa61ee1964",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff115a2b-e882-4fb3-90c1-b031684367a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef08820b-e02c-408c-aeed-3652d2d044f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "732f42c1-294a-44ee-a22d-e3eceabe893b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f911da9d-5c9c-4a3f-8e58-31651d6ce086",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115f01b9-7e78-4819-8c1a-105bfb6f66f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bc538bb-a322-4b58-b665-14a9dc428bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f25d072-f447-47d9-8b87-7c5c4b50731b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ba3b7de-0392-4c82-b9ea-147fcc0c5fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27615e7f-247e-4878-af45-f98bc92300ca",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ccbb94a-2cd1-43a2-abdf-93d7a8f13be2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02e1a2ba-0450-4f82-8e23-574e1da16469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "069a4084-eee0-4298-87f6-412699313dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ead1922-3c85-4b8f-96bf-2468f732d327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d81ced-004f-4cba-9b41-d0fd2a54c6a3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c4bead-2c19-4438-8933-dedd91615bf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "455358de-7bbc-48df-be80-71ed35f71263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae98d698-4719-45fd-8cf5-ee2a3b8f3b9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "288ec845-6c6c-4b52-b67f-a409baa68997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a757341d-9cda-4a72-9f3d-04e88736ec32",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e036abb-450a-4601-b3cc-cd198d1ede74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aadc1ae0-1c3b-4568-aa16-014d141a23ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9bab42-91ba-475f-b224-43ee335f6d09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c23b40-8680-4f35-8bf4-841c9be940eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8270abda-9d07-4772-954a-b838a79cdb9e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0796175-0500-441e-a8d7-958426d12688",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b49eee62-5fb1-458c-b5d2-2d54632d627a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "261a0f40-980f-4a42-9d5f-c23ae6801f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a1cb06-34b6-4be5-9f46-0eea36495d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb3cdd5-60f7-474d-9fa8-8d95202edc38",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a9f4b6-9071-4199-a28e-97db08d97225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd8b8b72-4398-4695-bcf9-07c99cc3c942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98e2a8b-0d88-472e-bde2-098fc15c3a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff5202c-234d-431e-ac35-892a57dce269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a954342b-7f85-4422-8d99-fdde02e8e430",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1086991e-3cf4-4d53-83e6-41fa85007712",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d59c4423-2dde-42d5-990e-58df7b6bece6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a84c88c-e3cb-48a4-8f12-75ba92c56b13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f6f327-489c-4a0f-ae7c-8a4eee0bdea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d583fec0-850f-4ee6-a069-dd0c3078c0c2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f634a061-293e-489c-b735-44cce36b21ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e20ba61-fc56-481a-ac75-ad8f3bff3892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5af7ef3-3276-47a2-8a5c-4c18c327d703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac6d6e29-edb3-4fd4-91e3-c5deffb9d18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1d3a2d-244b-4ffb-977f-fa2e05b03493",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63250a4c-84a0-473a-b159-58546649216d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6942a9b4-36b4-45df-9710-6e70c259d9e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6754eaeb-570e-4f0e-ba66-d7c381df1ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f8f3105-8d6e-496a-ba85-bec58c7f0a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50d88d2-3f89-4cec-9d00-1597c05e7bda",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e56991-98a2-45c3-8f8e-6ed171366cf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17354962-e31d-43e8-a01c-b5c56a84fcff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbafc5ee-28ef-4d5b-90b5-30601c405cc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9a35c2-2038-41bf-9255-a6956c7f84dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9243886b-7889-4e3a-9330-415c31f331bc",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2263415-298f-456d-beee-0c60fd990509",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47a63d07-5371-49ab-97d0-ad3fe3be1300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f84948d-cfba-4cf1-adae-4b01628ca451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da959ab3-7ac0-4105-ad97-1acade3dd449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d4ea66-9ab4-48c5-9439-2d173bc57449",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f87a998-0209-46be-abe6-34b3d3432e6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccaf75e6-2b70-4d13-92c8-9b6e4f97fde5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3c6dd5-c47d-4a60-86aa-df91ddcbb442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9ed5395-f339-492c-881c-75d1db83338d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ef55cb-50c5-4cd6-867f-1ef2d320ca36",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2d4d6c-b6dc-401e-bc38-d36ee93d3a28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bf6172d-6c79-4c5f-9a14-e9df97590f68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f1a779-9ca6-4c84-8ba1-deb500d2a420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d81822e4-cc5d-4cfd-a832-9966f9b02853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a74cce-5d01-43ff-a560-2701f8b48ccc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950c859b-dcb8-46d6-88af-6a43a30bf108",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5408a416-4479-4b53-9bb8-a24345b4cf92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c90afa-3add-4ae3-891d-15a783b39a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1792d562-d9c2-4f51-9ace-7ae98597ebb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7f57ee-c335-468f-ba89-6e4ae5fc8ca6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f919c32-a98c-4bc5-b4f7-82497403b779",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d2662dd-2ea8-4bf5-9728-326fef6a95d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d034dcd0-7565-49ef-86db-1ab62b6306c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02db0246-4555-4031-b10d-aef69bdda2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99317ead-9d58-41b8-8feb-88e13650e31c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0254b965-0a08-410b-85e1-9d478c21c1ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c5f782b-561d-4a6c-8788-b0eb490797d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3d774b-c25c-4816-b383-1c56dd188975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2038da5a-946c-4ac9-9158-a5c6ea4099c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13aaad6b-5dd4-4944-b399-8311a4ba197f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f47370-a1aa-426f-b768-52a34ecf13ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45fcdeec-db94-4871-96b9-bf537f6c7789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c343f3-4cfd-4420-b9b0-47d56d319cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd011eb-8d0d-461e-9b50-8bb768e5338a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af99e96d-49b8-41e7-8a46-9f3068c3cfbc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f0f402-6352-46b7-9d36-5d981fc5aefe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f742f38-8eaf-41e4-bbbd-6a085ef847f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "391abcc3-fc63-4dc9-9e0a-bd2852005c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a303bc3-7aed-42f9-9a25-b8861a940dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3ac769-9944-4db5-920a-1dca6b80175f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d06fbe-8a5c-41b2-8754-1a5a0aca4cf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d646cde2-7450-446e-9601-1f8f594f42ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda7f5a0-c897-4a6b-b5b9-9bc811970b14",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1764becc-12ab-4a6f-b9ff-5600b6265571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73265b3e-6c15-4ec7-b938-03dc01e7c60f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b50491-6429-4840-ac48-416b7cefd423",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb833e8d-2010-411d-972d-d79fe4af1ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b1a053-9589-4fde-aa0a-3521a3eb1267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51e7815-fbf2-48e6-9765-84b9aae340cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843b5f36-ef81-4df3-be64-bf26a26fdd18",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abee6fea-9558-483c-8760-4483420cc7b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29712c84-f160-4fc1-ac38-3c155b5f11e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "257ff94a-697a-4c07-a48a-263f3b738d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a184f641-2555-4e1f-8d8e-ddfd7aef84a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bff880a-e7f9-4eac-b015-e2252cfc50fa",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ddbbf2-71f3-4150-9890-961dd0dea10c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1562bec3-07bd-4b88-84e6-1578fa7600f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0534ec-54a7-4fed-928a-2bff4c15dab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d863be83-8cd5-4d89-acc2-fe3f42a0f4a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773ceba3-3077-400d-ab61-99e33550a605",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cce19b-36b4-4da7-bd61-4e104c017b9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "702ddf17-b260-446b-b514-b3253a30dbcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea0d1c3-c4c6-4e36-8d74-9a0d80c457a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea5b7de-b052-44cc-a458-72723b36692e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d55af54-0a52-42e9-8c16-8d627664ff7f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cd6bf0-cee3-4924-a117-4d881d6a60ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38790d3b-d9c4-4c2f-a55a-5f039c46a53e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ed5ee8-f640-43ba-86a1-e8543107694c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc870c13-fda3-4848-884e-17b07ab33cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a4ac24-eeae-41fc-b9d7-6462beef4dff",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5f9496-3cbd-4563-966a-4dd446678304",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e078d94-442d-4d42-a904-adfd197986d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73c4e34-bc89-4ccb-96d0-a7e28bc53ae8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f6c7af-ac80-40fb-8715-74dfcd2ae5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24cea3c-47d7-4874-8b19-0600db11158b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ffa8fc-cc57-4c0d-a366-d95711fa5ebb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1c4c419-64ad-4a9f-b31e-af6f163811a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6ee735-48d6-423b-8f41-3fde01871be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7192327f-6e9b-4d7d-b95c-255447ee0423"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28819250-d451-4509-bcc3-67f43bedcc81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a85e3ace-8040-4f91-b897-c12a83cfd1a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb945f70-d8f8-408d-9309-05e17127255d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "398074c2-5fa8-455d-bc39-534cf1da5ee4"
                    }
                  }
                ]
              },
              {
                "id": "abb758d8-a7b6-4557-bb9c-511ae5dc011d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8eda63db-68de-4508-b66b-9406857f719e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db735f77-7c71-477d-ba38-29b5dd27cc28",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "44e86b41-2051-4476-8b41-dc988cd5de6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b7c9fe-aa35-43c0-a0d6-8a8874bada1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62b6ce26-13fe-464b-95fb-99cd8085a44f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "370d4edf-1ec9-4c3a-860b-2e452bf5a8db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c75753ff-1987-44ba-a037-5db8948354b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b28d81ff-09ad-4d8a-ba3a-9674e5f37f02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f6513e6-7506-4427-8cf7-2bafa9a734ff"
                    }
                  }
                ]
              },
              {
                "id": "c6e492c2-fb53-4f4f-ad58-f113aa150e3e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fccd7970-13ca-4ce0-95d2-153e71e9c475",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19937697-4299-4970-ad8b-c783d56c5c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "76438bfb-f3ed-4115-bb35-aa1724a17006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac463fff-d32b-4323-a127-6107a229b0c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c6c5f8-253b-4856-b531-d000a158b083"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9e181aac-bb2f-44b5-99f0-88824418e094",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cc827767-1cc5-4fd6-817d-2da23e4d0c21",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb70cdb9-c59e-46c4-bc2d-9979aa5192df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c018f104-d96a-419b-8bb3-851b1025955d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1bd9dfbe-2522-4b4f-acd1-bdaf51524178",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2de5ead-1691-4eea-bf03-4b4d0cf50939"
                    }
                  }
                ]
              },
              {
                "id": "1c3097b6-450f-4121-a65b-4e8da5050701",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29230c82-8401-4c48-b5ca-b7be65405720",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d207232a-939a-476e-ac97-ab0bf708ad2d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65ca53c0-9d31-4ee5-ad81-3b0162a3ad52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65b3c631-5d6b-4847-bc55-b83bcc315cf5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0f4772d-c066-4a98-a004-994342154589",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "98e9b7d9-e130-404f-a0dc-e9ad6c07c6ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c774887f-5a80-448d-a088-419f2f51365e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a9cc196-7309-4eb6-9b01-25d481dc3884"
            }
          }
        ]
      },
      {
        "id": "d4d979d9-31ea-4d63-ae5a-f7dcbd666f0e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ee30f72f-c996-4468-99e0-066f76252225",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab690f3f-5e4e-477e-b24b-33a06ba9dc28",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c4699f1b-2207-403d-aea3-9459b1a41587",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26f06ee-33b6-4dc1-9bd5-3dc8b15a3fc3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1753b208-afb6-4564-bc02-e9e115d01e7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53e9940-eda2-4500-83ea-125fbdc33570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9e4cd75-bafd-4e63-aa1f-2a8f061a94c9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c9db0d4-72f0-4c42-a546-c8c6516ac88d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5cea6290-5204-442a-afcd-785790869c40"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c88ad198-6143-4974-8a18-a4758051db33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea4afe44-4e94-4d32-b807-044ee11216e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c704ae54-65e1-4d31-8268-2f8c8f34d11e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "976d837c-cc9a-436a-ba0f-7cdb7e1321db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df1569f3-026c-4645-8be1-f00f2caa62a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa8fe36c-d7c2-4725-9bc0-722904c97df5"
            }
          }
        ]
      },
      {
        "id": "bd5fe54b-372b-4cbc-a2c6-6e1040301b5e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3d967f47-ed0a-4c9a-8c57-a10102296459",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c7409f70-510a-4e5a-a61f-8c4a9af19dc2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a4760c6c-6580-46de-913e-f937dcedfb1a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6415cf-dd7a-42c1-a84e-d35529d764dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84d3d150-0a4e-43fd-a1e0-e95a37b4bb83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df8e47f-7b86-4fb2-a4dd-d17382bbc1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71e42b1e-5d20-47f0-a835-103842576647"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e279019a-5122-4da0-9d7f-a678fe42ba62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "026d459a-ae3d-425d-aca3-e924d520e7f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e7ab443-bbb7-433a-82b3-d1b6d03efae9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d593664a-98a4-4194-a146-82dcbb93f23b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17bb5c61-09e0-4d8b-abe5-a65a2f7e8964",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ad9574cc-6736-4d24-9af9-28975a254af3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f07a9b04-480f-4542-94ab-55e0537aa94d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5af1b736-a423-434b-954b-8c64e638c4aa"
            }
          }
        ]
      },
      {
        "id": "a97d1e1d-66e3-41fd-ae64-da529f791bf1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "91ad2187-624f-43ef-8c27-30a2e93c6d57",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9488ccb0-061f-420f-855c-2bed38c0ca30",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3587edb-983a-4a11-a8d4-da14b0860f85",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932c73f4-fa38-47c7-a5d0-5abbdec3a406",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "168020f2-a835-4cbf-b04a-b953260f32b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "016411d4-5b92-48ff-bac6-1435c60c22fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8674b5b9-6897-431e-ade4-5f945757d4e2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34d0c024-a10a-4cea-8618-ef0ee142ceba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9d30372-828b-4dda-b3ba-7d3986ed4e30"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28e2f47c-b22f-49d6-9df0-283de7a807e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "797a7840-81de-4280-97e2-09dcabbd944e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d6bbd4a-9e3a-4d43-b8f0-17649a1e7751",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2aaefaca-289a-4d64-80b7-ff500d3d93f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3fb52c8f-04fb-4803-b214-3bb146acc20e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "966bb972-bb5f-4c4d-9b9a-ab9474f7662d"
            }
          }
        ]
      },
      {
        "id": "137936fa-c7e8-4c3b-ae65-fe43ee32c517",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6faa70bd-9817-4d7d-ae02-a57ab0ba7b25",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df8ca67d-5192-439d-8dea-eb637c213527",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f8eb2f08-fc2a-4940-9b90-21b49bfb8007",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26776918-8472-45be-a428-5fa46823a93a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7598ca91-3b15-46ad-a683-7ab95b001663",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 88.61507936507937,
      "responseMin": 4,
      "responseMax": 9658,
      "responseSd": 659.7855341263968,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726620187245,
      "completed": 1726620217841
    },
    "executions": [
      {
        "id": "cef02d88-2f9f-42b0-9aed-fde8e6b28758",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0dc84a0a-4bd2-4cee-863d-36bd1e526a16",
          "httpRequestId": "f79d66da-bcef-408c-bad9-1dc07b55f0d5"
        },
        "item": {
          "id": "cef02d88-2f9f-42b0-9aed-fde8e6b28758",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "90a176f0-9270-4a93-833a-568c9425d080",
          "status": "OK",
          "code": 200,
          "responseTime": 134,
          "responseSize": 0
        }
      },
      {
        "id": "aaa38a30-609d-4d58-b458-365d11c51cce",
        "cursor": {
          "ref": "9d83efa2-9394-4b14-b905-5ea9deb1524f",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c6815c7f-1be0-4139-9655-3ee783b2b127"
        },
        "item": {
          "id": "aaa38a30-609d-4d58-b458-365d11c51cce",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ef75f888-38a6-40f0-9aa4-f79a2b0beb6a",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "fcdcff33-9431-4f6b-b92b-4070c457ba89",
        "cursor": {
          "ref": "5d0f72cb-9a61-47ea-944a-c6206086a76b",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2c6a4dc2-9dda-4aa7-9702-6776220fc826"
        },
        "item": {
          "id": "fcdcff33-9431-4f6b-b92b-4070c457ba89",
          "name": "did_json"
        },
        "response": {
          "id": "47335e63-80f8-450e-9079-3187c5ac0954",
          "status": "OK",
          "code": 200,
          "responseTime": 226,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2893176-5b5f-4a1c-b40d-2a9991e0cc27",
        "cursor": {
          "ref": "3ab5f576-ac64-49bb-9836-bd9ada3276b8",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "718c48d2-0376-4d64-ac16-bc2a6d1167da"
        },
        "item": {
          "id": "e2893176-5b5f-4a1c-b40d-2a9991e0cc27",
          "name": "did:invalid"
        },
        "response": {
          "id": "5be8687b-de5e-4670-a6f7-c2416a41f203",
          "status": "Not Found",
          "code": 404,
          "responseTime": 443,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2893176-5b5f-4a1c-b40d-2a9991e0cc27",
        "cursor": {
          "ref": "3ab5f576-ac64-49bb-9836-bd9ada3276b8",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "718c48d2-0376-4d64-ac16-bc2a6d1167da"
        },
        "item": {
          "id": "e2893176-5b5f-4a1c-b40d-2a9991e0cc27",
          "name": "did:invalid"
        },
        "response": {
          "id": "5be8687b-de5e-4670-a6f7-c2416a41f203",
          "status": "Not Found",
          "code": 404,
          "responseTime": 443,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce419b4-0c2d-4a31-b8cb-64f2e4cc8caf",
        "cursor": {
          "ref": "6a6e34b3-dcc1-41b5-a46e-83eef2dfacb9",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7f2dd74c-95e4-4aa3-ab46-c18b40590733"
        },
        "item": {
          "id": "7ce419b4-0c2d-4a31-b8cb-64f2e4cc8caf",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ab3c4794-d491-4911-aaa6-c2ef70d4d9ae",
          "status": "Not Found",
          "code": 404,
          "responseTime": 29,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1a986f-eb0a-4bf8-9e04-7ef0653b7813",
        "cursor": {
          "ref": "82e1d668-453d-4476-87c7-dcf8afaea75b",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "902905a6-144f-43ae-a269-94807fa12f25"
        },
        "item": {
          "id": "7d1a986f-eb0a-4bf8-9e04-7ef0653b7813",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "eeee3fbc-941b-451a-b5ee-16be62f61623",
          "status": "Not Found",
          "code": 404,
          "responseTime": 15,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a092e1-2860-4845-9285-1e4062a67f7b",
        "cursor": {
          "ref": "4e1accf5-781e-484d-8498-efccfc71d140",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a2d65061-0ba9-4b02-905a-c4331aa7a91f"
        },
        "item": {
          "id": "a0a092e1-2860-4845-9285-1e4062a67f7b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "34ddc91d-b67c-420b-b43b-600333ebb058",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe47da3b-5223-4ff4-9a7c-058357b0e4e4",
        "cursor": {
          "ref": "caafd639-2495-4cb3-ba4d-14a94546ee12",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2816962d-81dc-44fe-ad08-f5d2d2eef8f8"
        },
        "item": {
          "id": "fe47da3b-5223-4ff4-9a7c-058357b0e4e4",
          "name": "identifiers"
        },
        "response": {
          "id": "115e8615-ec0e-44e6-8acf-9925c5ce989c",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4344dd-2e66-49fb-88d1-2b3fb79791ec",
        "cursor": {
          "ref": "26bf7827-2da0-4cdb-bc57-866628f6c87e",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b145ab8a-d4c1-47f5-abe4-8797a5132dee"
        },
        "item": {
          "id": "7e4344dd-2e66-49fb-88d1-2b3fb79791ec",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "19755801-f8ac-4df9-a72e-ecc69a405753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df29667e-2556-4b60-b3a9-9125ad2d25ea",
        "cursor": {
          "ref": "730cf4f0-f02c-49dd-9425-db642fc61f09",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4d9278da-64b7-4d36-b1cc-476a8f3cb2a3"
        },
        "item": {
          "id": "df29667e-2556-4b60-b3a9-9125ad2d25ea",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "462cf22f-a881-4357-b46f-aa3368656989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424fabc0-62e5-4bfa-a0eb-22ab2ef11f94",
        "cursor": {
          "ref": "516edfec-d71e-4b19-a5f3-a0d5abae2961",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "25f92d76-6322-4242-be16-b6564af168c0"
        },
        "item": {
          "id": "424fabc0-62e5-4bfa-a0eb-22ab2ef11f94",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "542eb424-64a4-4e5b-a8bc-7e334798d025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aff2dd1-47e3-4745-b6be-2722372430ba",
        "cursor": {
          "ref": "b50b4245-7dee-4163-b7fe-233b4be848f9",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1c257471-590b-42da-951e-3f37e87a9c46"
        },
        "item": {
          "id": "7aff2dd1-47e3-4745-b6be-2722372430ba",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f4f2d5e6-1f4b-4f7f-b806-170078072e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a47e65-e86f-4791-b9e9-1a03bc637271",
        "cursor": {
          "ref": "3b372ef4-b4a3-467a-be7b-5528ebabb18c",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "54cf7d47-fd4b-408b-b7de-d1d15a5f652b"
        },
        "item": {
          "id": "89a47e65-e86f-4791-b9e9-1a03bc637271",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "82fb1f4b-1525-4383-8fa2-b771f814bfbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca4357f-7322-4cd4-8de1-aad9b6287cb9",
        "cursor": {
          "ref": "fe504337-9f50-4a3c-af77-6e27a67c7cd5",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e0503f37-e920-4aaf-9309-969945ca7b8d"
        },
        "item": {
          "id": "9ca4357f-7322-4cd4-8de1-aad9b6287cb9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e06b391a-69d9-49f5-a1fd-18dd584219b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063e884b-8e5f-4ce2-aff9-0f500d81bbe2",
        "cursor": {
          "ref": "66b8c633-0761-43a9-bbe4-e0a4d5682ea3",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5df66076-edf6-48b9-8da2-d1d6fa0aabe6"
        },
        "item": {
          "id": "063e884b-8e5f-4ce2-aff9-0f500d81bbe2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7ecc0e96-0aa9-4519-ae7a-11d18b4b0828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e9da5f-b9de-4e3a-919c-368250a898f0",
        "cursor": {
          "ref": "6a27383f-b532-4d9c-b288-8f6be095c3a2",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ef720326-3381-44e5-b970-7a6969837c27"
        },
        "item": {
          "id": "36e9da5f-b9de-4e3a-919c-368250a898f0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "403d9042-5c57-4780-aaa0-7c88c0732c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17710f0b-2bb4-48a3-b4ce-e356c8299aa8",
        "cursor": {
          "ref": "2499aa6f-d514-4e16-8a2c-1c7270d13dfd",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "31e2725a-4287-4aae-a63a-f4c86908811c"
        },
        "item": {
          "id": "17710f0b-2bb4-48a3-b4ce-e356c8299aa8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f18640af-b920-46de-9a70-be501ddfccfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba00b333-2088-46b1-a8a8-c5141df963b8",
        "cursor": {
          "ref": "70712591-ebdc-458c-a0dc-fcb91b65dd5d",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0c17a462-3078-4ece-8876-8dab35d0a8c7"
        },
        "item": {
          "id": "ba00b333-2088-46b1-a8a8-c5141df963b8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0aa34622-698e-4e52-a65e-1bd6ffefe0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d4fbf4-9932-4813-bcd3-144cd173e45f",
        "cursor": {
          "ref": "9314cb66-dd91-4741-ae76-c937933d8ac4",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9de201b5-b84e-4370-b5d4-d1f5a8b09735"
        },
        "item": {
          "id": "28d4fbf4-9932-4813-bcd3-144cd173e45f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "082bae1f-d07f-48c1-9d7b-0c1baabcdc43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3ed9ca-9bde-4a02-811c-ee6466550a75",
        "cursor": {
          "ref": "63443429-719a-49c5-80fc-eadd42ff473d",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "312af5d4-6176-4e22-b936-a63bd520f542"
        },
        "item": {
          "id": "ca3ed9ca-9bde-4a02-811c-ee6466550a75",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "93fdbe47-a118-4ba2-91d8-5e669e0f3e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5b624b-e8ac-4770-ba0a-965710af4540",
        "cursor": {
          "ref": "33eefb52-a693-456b-89df-a59a666646d9",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0dbf5de7-6f82-4d9d-81fa-bc4f74f678ed"
        },
        "item": {
          "id": "9c5b624b-e8ac-4770-ba0a-965710af4540",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "01782d17-c683-4ea0-ab9f-bdb2ec34b494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d4c8b1-3620-491d-b5cd-abc0795b10b8",
        "cursor": {
          "ref": "e5d49221-dc1f-44ef-ba21-25acf79068cd",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "adcc0719-c049-4e18-85fe-c3c2d689128f"
        },
        "item": {
          "id": "12d4c8b1-3620-491d-b5cd-abc0795b10b8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "07037dd7-b7ba-4df5-876c-3827c1417582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57e11dd-5618-4202-93f5-55a8ff271997",
        "cursor": {
          "ref": "61606e2b-e5ad-4b5e-b357-3a233928ccf4",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b52ee37e-cdf4-4e53-8ca5-b40ffc8af2a6"
        },
        "item": {
          "id": "c57e11dd-5618-4202-93f5-55a8ff271997",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fb93bc7c-76c4-4946-a865-771d28203323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5664ec70-27b4-4ac7-ba60-1e6ece0d088a",
        "cursor": {
          "ref": "de2b9a77-668d-4465-b5bc-1d2ca6209215",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "289a824e-5d52-4f18-9175-6c80fab493c9"
        },
        "item": {
          "id": "5664ec70-27b4-4ac7-ba60-1e6ece0d088a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1e1c55da-22df-4274-a92a-9c990b3aae20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba84df0-4406-4cd9-bd34-676c8d711900",
        "cursor": {
          "ref": "e3e403cc-3d04-4c40-acaa-7084719c79d6",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "72e26825-c60f-478c-a645-8c6b10135555"
        },
        "item": {
          "id": "eba84df0-4406-4cd9-bd34-676c8d711900",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6792801c-837e-4e8a-aade-7b4222edaa6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e7ee28-3b34-45c9-a71d-608a6d9bfbfc",
        "cursor": {
          "ref": "28ac31a5-c86c-4d38-88e8-bf315c773f53",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5a972c63-8856-401b-85b4-d89fa547e10a"
        },
        "item": {
          "id": "e9e7ee28-3b34-45c9-a71d-608a6d9bfbfc",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "85122d06-a20c-4d97-8000-f0132f6e9611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbc52e2-40ed-4f41-974e-57a74e5187f6",
        "cursor": {
          "ref": "f14d7e8c-db1f-41e5-ae61-db78344feb35",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "230ff499-be80-4fe9-8ecc-c6a66ee751d6"
        },
        "item": {
          "id": "fbbc52e2-40ed-4f41-974e-57a74e5187f6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9c14cb25-9884-4fff-9ead-483a9f47e714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9653af3-55f0-40c3-a0ba-191e9d3b9f41",
        "cursor": {
          "ref": "20186025-6336-4a8c-bcec-89ec411dba41",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5bf018f5-1ab2-4d6c-a420-0d7a7432ac31"
        },
        "item": {
          "id": "e9653af3-55f0-40c3-a0ba-191e9d3b9f41",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "05e65bd9-3c44-4c59-90b5-5b873d8d0d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d464ff14-1d64-4dbe-b056-9728a555df64",
        "cursor": {
          "ref": "1c750f20-4f92-4098-8fab-95a8e87ccb97",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9673fdb8-be86-45e7-b225-ca3c3beb4689"
        },
        "item": {
          "id": "d464ff14-1d64-4dbe-b056-9728a555df64",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c85b80ce-d6f6-4302-9c4a-99bfba086c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84bd1e8-1604-4759-8a36-d565ae184f1d",
        "cursor": {
          "ref": "0c4a5b2a-419d-40b1-97b5-437d946d65b0",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2bc46f99-2ed8-4d00-a3c6-386ec8bf9b2a"
        },
        "item": {
          "id": "d84bd1e8-1604-4759-8a36-d565ae184f1d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "df141090-121d-42b9-8114-ea182b8349f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca1cc84-c23d-4bc3-887f-69ade9d0d1f9",
        "cursor": {
          "ref": "b76b7a14-1b34-4933-b0ab-945eb19d59e9",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d93eb8c3-ed8a-49a2-88e5-bcafb706e02f"
        },
        "item": {
          "id": "6ca1cc84-c23d-4bc3-887f-69ade9d0d1f9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ebab796d-553a-4a6a-b6ea-a2b4b189cb94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6dfa5e6-4b3f-4291-b0f3-08b423e18346",
        "cursor": {
          "ref": "1115ac11-2b63-43f3-ad9e-45d87e7b563e",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f97d525b-609a-4e1f-b33c-bab8307276a3"
        },
        "item": {
          "id": "a6dfa5e6-4b3f-4291-b0f3-08b423e18346",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "78491a49-f568-42d0-80a3-349a18ca4e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd319a9b-e1c0-4c0c-ad99-b2e5088cb2a8",
        "cursor": {
          "ref": "258e326a-c8a6-442a-a941-9b9c3ed29fa7",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2126e46a-efb7-4db5-8cc0-2ac6e8a2e60e"
        },
        "item": {
          "id": "fd319a9b-e1c0-4c0c-ad99-b2e5088cb2a8",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3a27d409-c34e-4a9c-92d3-0d54b78512c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b652b3b-2d05-4456-802b-4a2e644c9916",
        "cursor": {
          "ref": "83121fc4-9d4d-4f99-a6ba-8604ce04a044",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "bb7f8dac-1d9e-4c8d-a9ee-5d8f2c7d80bd"
        },
        "item": {
          "id": "1b652b3b-2d05-4456-802b-4a2e644c9916",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1b53a6bb-acec-437d-b4d3-c1e97b21a701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06df3b8d-0c67-4a06-a89a-f012ad6e7d55",
        "cursor": {
          "ref": "44cb1c6d-83c7-40a7-97ec-831dc1231eb4",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b077138d-70db-4059-8a66-3fdf7ac2f79b"
        },
        "item": {
          "id": "06df3b8d-0c67-4a06-a89a-f012ad6e7d55",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "dd23f08e-79a7-4931-82b9-292092e71e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d56f30-f200-4886-9b95-5fdf6cadd335",
        "cursor": {
          "ref": "6c227ab6-99dd-4477-9b50-25e171977d31",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "06e3e86b-42d0-471d-a5f1-b792d4013e9b"
        },
        "item": {
          "id": "e3d56f30-f200-4886-9b95-5fdf6cadd335",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3e12db6f-d705-43f0-905f-9375750737a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ae3707-57f9-4ef2-8b19-dcdb10abe59f",
        "cursor": {
          "ref": "2c860199-b99f-415f-8a90-1cf03857e613",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "dafc3467-6fc0-477a-b392-d39159361ee1"
        },
        "item": {
          "id": "18ae3707-57f9-4ef2-8b19-dcdb10abe59f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "162f91eb-31e0-4eb4-94db-fb0d193d12a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a309cb-9bad-4966-9be0-6c91ab5fcb87",
        "cursor": {
          "ref": "d9718248-beb9-4820-b4e8-14fffdb828a2",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9449c0ab-9533-436a-a7b7-7e54624c1c10"
        },
        "item": {
          "id": "02a309cb-9bad-4966-9be0-6c91ab5fcb87",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9761b85d-f5bc-4de4-a4d5-003f22311c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf6fe3d-26ad-4a3f-b501-5d8aebf93760",
        "cursor": {
          "ref": "43dbcb2f-3d47-4d96-9558-553e7cd8d44d",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "82dc13ec-1fac-45c9-be45-c1a30b922243"
        },
        "item": {
          "id": "8bf6fe3d-26ad-4a3f-b501-5d8aebf93760",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "bcab5e2c-c7b3-4f31-b0a2-0fd7307a1b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ab4987-94dc-4192-92db-8f35fae4fde1",
        "cursor": {
          "ref": "8ce214f8-0a35-447a-b23f-d31e43adaf4f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2c1d8a1e-4613-4172-9eb6-9c2737aa62b8"
        },
        "item": {
          "id": "a0ab4987-94dc-4192-92db-8f35fae4fde1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6c1df7a9-4dbb-4ef8-9e51-628112f4525a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400e5ffb-5762-46fa-a0ad-f370fb9e82f7",
        "cursor": {
          "ref": "afe093d6-7d7b-47ff-8b86-dfbebcb66ec4",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9634698f-22f4-4a97-99cf-b5fa6369c872"
        },
        "item": {
          "id": "400e5ffb-5762-46fa-a0ad-f370fb9e82f7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a91f3312-be7e-487f-9ba1-ea63564b46e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7085ab1e-2152-411a-b278-4fce3c3121b8",
        "cursor": {
          "ref": "8385749c-8e81-4f3e-b114-ca97f1bf9ea7",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "374a0fec-25f2-44c4-868b-f1fb25b9cc99"
        },
        "item": {
          "id": "7085ab1e-2152-411a-b278-4fce3c3121b8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a5c9231c-09bf-4752-a747-0e65572a9f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc07e389-8892-45df-ab15-49d8dd0fa663",
        "cursor": {
          "ref": "e32f452d-b73c-4322-98bf-5e25a4cc157e",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6a7dd4a3-46d4-47c8-ad23-e7d8b5c9c29e"
        },
        "item": {
          "id": "fc07e389-8892-45df-ab15-49d8dd0fa663",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "70659ab6-9426-4ff6-8d20-9b352b8d9747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec38b52-ee89-4564-9ac6-ae1929901764",
        "cursor": {
          "ref": "d809ab7b-e578-4bdd-9355-7f16e31937e9",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "fa5ecadd-cb1b-4e49-b3c1-00de07ee1f61"
        },
        "item": {
          "id": "6ec38b52-ee89-4564-9ac6-ae1929901764",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8fbca195-ee2c-473e-a8f3-42f6b1ee2516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689b51c3-76fa-49c2-ad32-f307bf611836",
        "cursor": {
          "ref": "cde474be-cd6f-4226-8fd0-4dc5c4b1b567",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "000856f5-6c36-4957-bad4-db3dbfeb4d2f"
        },
        "item": {
          "id": "689b51c3-76fa-49c2-ad32-f307bf611836",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c3a2aeb5-8477-4ab9-967b-0e3412e28edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea59bc9-1c8b-422e-afd3-f428ddf39e84",
        "cursor": {
          "ref": "fd09ae1b-8ff7-4fc5-901b-592701329584",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1a73fe11-b4a3-414b-8ad5-e3e498950ff6"
        },
        "item": {
          "id": "fea59bc9-1c8b-422e-afd3-f428ddf39e84",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b7e64cd5-b004-4b05-9280-3d2f0a5c9548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255a25b9-c489-41b5-9006-a47b782631ad",
        "cursor": {
          "ref": "f72cb643-c621-4da2-bf20-39a42f3f2374",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2bfc276f-f136-4277-983f-34c3e46508fc"
        },
        "item": {
          "id": "255a25b9-c489-41b5-9006-a47b782631ad",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "023172cd-ad01-475b-b6bb-4fbcb50ead12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36360890-3d7b-4dde-8b41-4bff4d482cad",
        "cursor": {
          "ref": "0468d76d-7b77-465f-b9a5-4d3931cb4d57",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "dc4b8529-d840-4f47-9825-0564c0591c9b"
        },
        "item": {
          "id": "36360890-3d7b-4dde-8b41-4bff4d482cad",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e2731b06-02fc-4539-854d-70ef24b797f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3e4685-1a5b-4a03-9c9b-9ac9e56bf459",
        "cursor": {
          "ref": "4bac98b5-ff54-41ab-9520-7ddfc3390730",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5469ea7f-61f0-4e15-942f-3f3ac3895172"
        },
        "item": {
          "id": "5b3e4685-1a5b-4a03-9c9b-9ac9e56bf459",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0fadbdab-55de-4b1a-811f-7f0d95ff104d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1150f1bc-5427-44df-8398-963b4e2eb189",
        "cursor": {
          "ref": "5def5c09-73a6-48b5-8e1a-39ea3560cec0",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "dbf86a3d-8a8b-4a0d-9701-03e4a38604be"
        },
        "item": {
          "id": "1150f1bc-5427-44df-8398-963b4e2eb189",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d85a75df-fdf6-4aa8-af9c-b97e81fb66df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78dbac55-9e62-4364-974e-c3e4d45d4693",
        "cursor": {
          "ref": "6d8d91d4-764e-4495-b008-050276c42034",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "67d14ec6-1b03-4760-bfac-56ada7b1318a"
        },
        "item": {
          "id": "78dbac55-9e62-4364-974e-c3e4d45d4693",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3f8e84fc-af57-425b-84a3-d6405f23e17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5001ff4a-487e-487e-bde2-e2251b5fad93",
        "cursor": {
          "ref": "2f93fff5-4587-43c0-9d5d-3fc70efc102d",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d9fe36e1-7bcb-4460-af27-08d51cb30846"
        },
        "item": {
          "id": "5001ff4a-487e-487e-bde2-e2251b5fad93",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "26f8827c-7a39-4d56-862d-d5592370d68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7375e0-9219-4fdd-b652-cc9273834bf5",
        "cursor": {
          "ref": "8f3944c0-4abe-4450-9701-28d157dcafcc",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "932fc82a-cf0d-4721-a5c1-4a5a6dc8d1cc"
        },
        "item": {
          "id": "6d7375e0-9219-4fdd-b652-cc9273834bf5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d7060c86-d7da-459c-9857-e4242914162d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e3d082-33b4-4e72-83dc-a3a7a4f0e771",
        "cursor": {
          "ref": "86344016-006a-4057-a323-d07524a34a31",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5c7a3f77-9088-4716-a762-1f8ca4b40b12"
        },
        "item": {
          "id": "77e3d082-33b4-4e72-83dc-a3a7a4f0e771",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3ee0b405-9d4a-4bee-b126-362ae87be1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b18da1-67db-4e53-9cac-90a0746a9af0",
        "cursor": {
          "ref": "a5cb2c53-b464-4939-ad97-dba9a6726121",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b0054834-08d8-496f-8676-abc636166dfc"
        },
        "item": {
          "id": "d1b18da1-67db-4e53-9cac-90a0746a9af0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d23305dd-f630-4829-87ad-ab49eca4bd57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615631e0-1780-4346-85bf-24108c5f4be5",
        "cursor": {
          "ref": "d0f3b5cc-6ceb-4e70-8573-e3765190e050",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "351ea800-ead7-4eae-b888-c06ab6e0a60a"
        },
        "item": {
          "id": "615631e0-1780-4346-85bf-24108c5f4be5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "dd549821-d721-4351-8c7f-1de74c4ca7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72d9af8-6bc3-4ee6-ad1c-c39ab0ef5938",
        "cursor": {
          "ref": "d7f36611-d2a0-452a-b22b-77ceef1e3e91",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2f484c56-d679-4291-97d4-1e0c6577d5c7"
        },
        "item": {
          "id": "d72d9af8-6bc3-4ee6-ad1c-c39ab0ef5938",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6039ed5e-af79-4c70-8d13-522d6acf74a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8daa51c7-a1e1-40aa-85fd-08e4e22d1794",
        "cursor": {
          "ref": "849e2453-40c4-4c69-b39e-962fa338416d",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3ae9b30e-d689-4c78-9033-3ae515da5f53"
        },
        "item": {
          "id": "8daa51c7-a1e1-40aa-85fd-08e4e22d1794",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9a0c9f0a-e9ae-4060-813f-81fa2f6c9b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c95903f-2892-46c8-8702-dbd24c9ea06c",
        "cursor": {
          "ref": "b165e2ed-22a4-41a7-9171-73eb907f5ffc",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a469d56b-8fde-47bb-8958-994422d5e149"
        },
        "item": {
          "id": "0c95903f-2892-46c8-8702-dbd24c9ea06c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fd1d5824-a4ef-4871-8d6a-6b4864fe3569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073d2b06-b916-4ba4-adc7-b2a55d0f0a4c",
        "cursor": {
          "ref": "73bb1fc8-54ac-4511-9ba4-d0f32ec9c065",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7aae0674-0dbc-47c6-8e1d-fb8588700bcf"
        },
        "item": {
          "id": "073d2b06-b916-4ba4-adc7-b2a55d0f0a4c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "708974e6-787f-47cd-92db-74c47a9a57aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59070d8e-8681-47c3-b7da-2bbd5fbc9c6f",
        "cursor": {
          "ref": "78fe3b71-5eb1-46de-b0cb-9fe1b44e9914",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c0df674a-5208-43bc-bc26-bffb2e1147bc"
        },
        "item": {
          "id": "59070d8e-8681-47c3-b7da-2bbd5fbc9c6f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7f55e4fd-ef68-4dac-876a-692c2c8e4cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d634f49-8869-4d2f-83da-fbd57179c938",
        "cursor": {
          "ref": "024dc55c-3348-4e58-b9ad-0dd7cc61b202",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "72c28324-5094-40ba-b19a-4f1d24f8ff45"
        },
        "item": {
          "id": "8d634f49-8869-4d2f-83da-fbd57179c938",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ffd76c71-314e-429a-a17e-d915183136ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86af50a-6567-4652-84a5-bb2f650cd29a",
        "cursor": {
          "ref": "a3536769-d100-4be2-8ce5-38b32494d459",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a7fa4ab9-244e-422c-a117-ba3d792f74ec"
        },
        "item": {
          "id": "e86af50a-6567-4652-84a5-bb2f650cd29a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b5498258-09d2-4164-b278-47ac2d524e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9849125b-b2d3-4e50-a0bd-3de5bf28d38d",
        "cursor": {
          "ref": "a8c7f70c-0ae0-4f06-bb16-4e8543cff253",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5e273c90-a4f3-4769-a27c-45e172ccd6e6"
        },
        "item": {
          "id": "9849125b-b2d3-4e50-a0bd-3de5bf28d38d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "627f6dbf-6587-4bcc-bf0c-707aed00501d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b16642e-cb5f-435d-8407-b743b9783cda",
        "cursor": {
          "ref": "6c4f791b-f3ce-4af0-abfd-3d2bdce1a9c4",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4f5e4148-0cab-4202-a327-60a75e343ba7"
        },
        "item": {
          "id": "8b16642e-cb5f-435d-8407-b743b9783cda",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "52f29d40-83c3-4f47-ab5f-636d9d2af829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb298ea-8891-4d17-bcff-f746bf3af7b1",
        "cursor": {
          "ref": "aac94285-cafc-4c74-95cb-4ee52dc1a3c1",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "87ccbc33-21cb-488b-93c7-327823072519"
        },
        "item": {
          "id": "efb298ea-8891-4d17-bcff-f746bf3af7b1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e4e484b5-1dd7-4611-aca8-51b476db5d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782e1625-249f-4926-be43-97d3d6456e3a",
        "cursor": {
          "ref": "a56d77cc-ea7a-4291-8129-0740e97bd3a2",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9e507853-ba69-4313-91c7-d2ad9c181848"
        },
        "item": {
          "id": "782e1625-249f-4926-be43-97d3d6456e3a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8a00792b-501c-4245-a053-c01ec78b4da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938f7405-34ba-4f1b-9cad-fcb2d7aec438",
        "cursor": {
          "ref": "35c2753f-b482-43fc-a878-bb7b4aa815ed",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "64e7a849-0c22-4470-9cd2-fb33f16ec38e"
        },
        "item": {
          "id": "938f7405-34ba-4f1b-9cad-fcb2d7aec438",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d0bd4972-41dd-4049-9163-f83111989758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38022159-d297-4aff-b0b2-e5509a30082b",
        "cursor": {
          "ref": "692a69f1-b693-4072-89b7-31494c2968ff",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f22b17ce-a1b7-43b5-a704-b0208fca27f1"
        },
        "item": {
          "id": "38022159-d297-4aff-b0b2-e5509a30082b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1d98658e-b4be-4a8c-a07b-c151702d9bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63db18bf-0374-44f3-8c7c-abc3297b5bde",
        "cursor": {
          "ref": "b133be12-fdfd-4e90-bfcf-89f33fe344e9",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a7d637ad-d410-4364-b023-2a5c6402ec60"
        },
        "item": {
          "id": "63db18bf-0374-44f3-8c7c-abc3297b5bde",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8f57ec1b-5ef3-46d4-a2fb-4dd5539758f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6265465-4896-4d88-9945-c1a47cf1c62b",
        "cursor": {
          "ref": "d03fdee5-660e-409b-9fd5-b7f8d55eb33a",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1d2bdb54-e7ff-40f6-815e-3a6536de197c"
        },
        "item": {
          "id": "a6265465-4896-4d88-9945-c1a47cf1c62b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d595b574-8d32-49f6-b4f4-0270b50e0e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e6b372-cd5c-4556-b5e2-782e5d27da23",
        "cursor": {
          "ref": "4d2feae8-0670-4157-a994-0ea338058773",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e7d4c352-4524-407e-a0ea-93f5017e9905"
        },
        "item": {
          "id": "d7e6b372-cd5c-4556-b5e2-782e5d27da23",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b194afef-1d7e-4a7f-ae25-3b1848109a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59971684-bfe3-4e87-b33e-fcb7a0a561d3",
        "cursor": {
          "ref": "5d847295-dbb8-488e-84ff-d88634dbdb8c",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e401eb52-5a1a-4518-9abc-0d09a6a9d7df"
        },
        "item": {
          "id": "59971684-bfe3-4e87-b33e-fcb7a0a561d3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d7107968-0b44-43ee-a4f9-52258ad1070a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f8581b-e803-455c-b735-d1d9c9cf7a33",
        "cursor": {
          "ref": "f429ddab-1879-4b59-b616-2019fef135da",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7f67cf06-aecd-49dc-9c60-603170592dd5"
        },
        "item": {
          "id": "58f8581b-e803-455c-b735-d1d9c9cf7a33",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2703502a-d27d-4b18-b803-f25e34fffe9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539c9349-ae2f-4739-b75f-7e927a2faadc",
        "cursor": {
          "ref": "66700f9a-70f6-43bf-bb57-78a0861bfb5d",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a0d4ead4-b7ec-45d6-bbc7-67ff00e975cd"
        },
        "item": {
          "id": "539c9349-ae2f-4739-b75f-7e927a2faadc",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a468cec1-7c44-4933-ba0e-895aae408f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab0bee4-75b0-4fe7-93ac-ffc78c39cc41",
        "cursor": {
          "ref": "86bf9d01-32a9-4da9-ae3d-faaec215321c",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b62d90c2-409f-4ecc-8f82-b8ddbf85527a"
        },
        "item": {
          "id": "5ab0bee4-75b0-4fe7-93ac-ffc78c39cc41",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "348d0323-0fe3-42dd-8430-e201a1893e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf692ae5-d287-4578-bdf3-e73762cad0f2",
        "cursor": {
          "ref": "e224e6e4-f15b-44fe-8bf5-0677e4b94c1a",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3cd6b1ea-27a4-48ea-9645-748de0028f61"
        },
        "item": {
          "id": "cf692ae5-d287-4578-bdf3-e73762cad0f2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5170b6b2-976b-4bae-aa24-5cbe745b1133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d6989b-67c2-400b-8dc3-97c5670c9d6a",
        "cursor": {
          "ref": "7d92cd12-7cca-4d0a-acb1-93f536b2417b",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "dc5f8c8f-a654-4454-a081-746d51bb230a"
        },
        "item": {
          "id": "79d6989b-67c2-400b-8dc3-97c5670c9d6a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a34da8e6-9e49-461f-a1ac-6e27803528cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4025c8-6fd0-4593-8dbb-4df165a921a2",
        "cursor": {
          "ref": "ec283092-4f13-4675-a37e-ca2ded200360",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "772ad747-7541-4def-89ca-dcd23776cfe3"
        },
        "item": {
          "id": "0e4025c8-6fd0-4593-8dbb-4df165a921a2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9f50239b-51f0-4e32-9399-1eee639b38fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c490414b-e833-4aa4-ae97-bee5f2950249",
        "cursor": {
          "ref": "04c982e2-4e73-4889-bd78-038e4ecada7a",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "494d7b8f-a0e7-439b-9949-eaa08ab90f0a"
        },
        "item": {
          "id": "c490414b-e833-4aa4-ae97-bee5f2950249",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "64e22f00-e730-4a8b-bece-795059655917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cab0a4-eee0-46c5-8e09-eb59dc24bbc3",
        "cursor": {
          "ref": "22984557-99b6-4113-8027-f495ad7b16b5",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "939b38cc-99fa-4c77-83eb-5cb14ec8ce58"
        },
        "item": {
          "id": "80cab0a4-eee0-46c5-8e09-eb59dc24bbc3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "42cb1e3f-eb12-4a5e-a440-c7719e5303d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7f0e1d-6583-4507-a39c-fee86c9221d1",
        "cursor": {
          "ref": "f1666160-276d-4707-8985-ba259fcef2c6",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b6ce090d-0dbd-4ed4-a04a-641fff258e7c"
        },
        "item": {
          "id": "8d7f0e1d-6583-4507-a39c-fee86c9221d1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9cacda20-20c9-4e8f-981c-44a2d15a422d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0566620d-ec26-4c6d-9086-8f91d9b20a4d",
        "cursor": {
          "ref": "58f38871-9671-4c35-929f-5c397362fc72",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d6c48b04-c75b-4622-bbde-fe7d34acc91a"
        },
        "item": {
          "id": "0566620d-ec26-4c6d-9086-8f91d9b20a4d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "756ea3d5-a626-4d8a-860e-4fd490bf26e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b820a614-c919-49a4-a74f-2a4209f0d20d",
        "cursor": {
          "ref": "2b70eb50-a88c-475a-9fa1-21f8b9b1e12b",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "abb8e65f-943b-41c9-8792-d93208930da0"
        },
        "item": {
          "id": "b820a614-c919-49a4-a74f-2a4209f0d20d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "da2b98b1-7358-459f-b92b-c658255d2593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899f6f51-78e1-4f30-aa22-2084fff6163f",
        "cursor": {
          "ref": "b7faea22-a803-415c-b1ee-8af079f22591",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b437bafe-bf5b-4df3-ac94-ab9c1cce9c51"
        },
        "item": {
          "id": "899f6f51-78e1-4f30-aa22-2084fff6163f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "dba7c58f-f0d1-40fe-b2e2-b3025d1ece80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d779dfda-0670-43ab-a6cc-ce483164db0a",
        "cursor": {
          "ref": "70c7c8e8-ac64-42d5-a00f-b9da6eed8b7f",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "bead2ed7-de08-411e-8870-a1bae4d43846"
        },
        "item": {
          "id": "d779dfda-0670-43ab-a6cc-ce483164db0a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "fcef9b37-9953-4475-83c1-fba1a14aa131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2c58a7-7186-4d38-9506-f75b4865da63",
        "cursor": {
          "ref": "a66af18f-b326-4ca8-96ac-847e68be4649",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "844591ea-1a75-46a6-bc15-0743653769aa"
        },
        "item": {
          "id": "8e2c58a7-7186-4d38-9506-f75b4865da63",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "aa0358ad-7165-4647-836a-78521364f75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90587615-6f7e-4a9b-b03f-f5d8eb4fcbd2",
        "cursor": {
          "ref": "d278aa02-67cf-45ae-a5a1-42b131bad2d5",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "67fa4e54-7df5-4e44-9dde-10e634af7169"
        },
        "item": {
          "id": "90587615-6f7e-4a9b-b03f-f5d8eb4fcbd2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2d1b313d-411e-48c9-89df-d0edbda07cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315f3749-6f09-4983-9d0b-0c7c344a1b4e",
        "cursor": {
          "ref": "41a5939c-86ff-48cc-b18f-32b1efbd8683",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6b25376b-3424-4f49-886a-2abe6221dbb0"
        },
        "item": {
          "id": "315f3749-6f09-4983-9d0b-0c7c344a1b4e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a5a30480-38ab-4799-8f3f-3ac489e0092a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045f2b4b-3a5e-4c33-977d-65b39f12ddb7",
        "cursor": {
          "ref": "b11b0cfc-1b53-4eea-ab60-7362ee99fbca",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "198f0bcb-a399-406b-af7d-d8bdef27389c"
        },
        "item": {
          "id": "045f2b4b-3a5e-4c33-977d-65b39f12ddb7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a1a2a61c-278a-42f5-85c4-1c93dc8fe853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16bdd63-8307-4a95-94f5-888019a70394",
        "cursor": {
          "ref": "e32f48f4-cc36-44a1-969d-45cad3c250f8",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "838f591b-795b-4477-9bdb-83854214fe58"
        },
        "item": {
          "id": "b16bdd63-8307-4a95-94f5-888019a70394",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f3a86cdb-e165-41ce-94c3-f002eccc19ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d18cf2-6ad2-475c-a174-7faf6309f4b4",
        "cursor": {
          "ref": "f590d043-3ae9-4573-80bc-78f7d148bede",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ba468006-e655-4f4f-83ea-9448029af3f2"
        },
        "item": {
          "id": "52d18cf2-6ad2-475c-a174-7faf6309f4b4",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "17993410-1ae1-4069-9f9c-cc9f413773e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2f6f4d-1b90-4830-b179-e2ec34d774b1",
        "cursor": {
          "ref": "b4ba564d-178c-4356-8d28-d8614aca8b2f",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ea8dc21e-d32e-4b4b-9a91-d5cf85224083"
        },
        "item": {
          "id": "9d2f6f4d-1b90-4830-b179-e2ec34d774b1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d7cb106c-16ec-45ad-b0be-7cc60bf27e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a3203b-9d36-487c-922a-9ccfbd330a8b",
        "cursor": {
          "ref": "7eaf45d2-e191-48c3-90d4-dce6fa43428e",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4e1ff73c-49c2-4ffa-89f6-ba4fb6a85a98"
        },
        "item": {
          "id": "69a3203b-9d36-487c-922a-9ccfbd330a8b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4a232318-e67b-4d12-bd25-b66fae94bb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aee207a-1a75-430b-a2e9-67195d1d4018",
        "cursor": {
          "ref": "86b1c8f7-e492-4cad-a056-026d80f79c30",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b816c248-61cb-439b-999b-d3de84fc7c39"
        },
        "item": {
          "id": "6aee207a-1a75-430b-a2e9-67195d1d4018",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6409a93f-d90e-414c-aaff-94310e06bfc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc567031-176c-45cc-8c1d-4fc1f3849581",
        "cursor": {
          "ref": "2616fe0c-bc27-4f5e-83b7-2f2905fffb24",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "abf8a0c2-a424-498d-b5c5-5978e3750686"
        },
        "item": {
          "id": "bc567031-176c-45cc-8c1d-4fc1f3849581",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6d8a2cdd-9c21-4ee4-b57a-d7b69e112d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da27dbb7-f632-40d4-8b8a-7cbc15590909",
        "cursor": {
          "ref": "b48bd45f-a71d-4601-9cde-0dd9392261b7",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7802a78c-16b0-4e6e-a467-29fcf2f03670"
        },
        "item": {
          "id": "da27dbb7-f632-40d4-8b8a-7cbc15590909",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e87f108c-1a51-45de-a0e9-a00929467031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6419dbc7-fe85-4ef3-9978-57e4e5a8f2b1",
        "cursor": {
          "ref": "2f62f34c-041c-45f0-8be3-3286bff99b54",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c748938e-28fe-41cb-84c1-3e5f2b41c3de"
        },
        "item": {
          "id": "6419dbc7-fe85-4ef3-9978-57e4e5a8f2b1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c0685dff-b9b9-4c53-a345-b63e612675df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5eb7a0d-2dec-4a90-a34e-6f19f667d536",
        "cursor": {
          "ref": "e025d62e-f228-4a7c-a78b-ebc12de67434",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "64bb9fb1-2b11-4111-b314-1c6b20795b59"
        },
        "item": {
          "id": "e5eb7a0d-2dec-4a90-a34e-6f19f667d536",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1f0242a7-7012-403c-9e74-6ba9dedf268a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f390cedd-73a8-4971-a71b-65732b5c49af",
        "cursor": {
          "ref": "54157e06-29db-4250-97ab-e4cb0cc6e2f0",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "60d72465-683a-4980-af12-616ffa0a2414"
        },
        "item": {
          "id": "f390cedd-73a8-4971-a71b-65732b5c49af",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ed0ccb57-9617-44f6-bde1-b331ca07fdd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6adda407-3410-479a-826e-6ab196f48692",
        "cursor": {
          "ref": "d1b32b4b-d195-4728-b2f1-9a826f45c765",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0467761e-9b57-4454-a99b-dc8488349ae5"
        },
        "item": {
          "id": "6adda407-3410-479a-826e-6ab196f48692",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0b454e0e-7bdd-41e1-b302-2da7f7c33de8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b56d85-1c63-4a00-8dcb-14c3a7a67690",
        "cursor": {
          "ref": "bc7c11fb-7469-4c2e-b4a8-dee32fc51b82",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "56e6e095-c214-4a50-9e9a-553d3b06c410"
        },
        "item": {
          "id": "f3b56d85-1c63-4a00-8dcb-14c3a7a67690",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "7638018c-6d21-4075-a9f0-77f5c5c35080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "6afd8912-cafb-4798-b407-acc22db9cf75",
        "cursor": {
          "ref": "8ef55bea-bd72-4d3a-9f8c-2cc53cc32845",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f4db13d3-dc0f-4236-9783-78fd28086988"
        },
        "item": {
          "id": "6afd8912-cafb-4798-b407-acc22db9cf75",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2014cd03-b050-4a63-8767-de7e25c62c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "7508a857-9db1-4e44-9077-7c4743c6dd27",
        "cursor": {
          "ref": "b9c931d9-cdf8-4d37-a6e3-2be76b077a77",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e11e33a9-0c0e-4ade-a744-a8a625ab3cb1"
        },
        "item": {
          "id": "7508a857-9db1-4e44-9077-7c4743c6dd27",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "71d5ed4f-1950-4f1e-a25e-9041a06b6286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "c28c31f4-48cc-4347-990b-38a195ed49eb",
        "cursor": {
          "ref": "3f3f5b1b-5d83-425a-85dc-f872a783a186",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ca96608e-71f6-4c05-9cb8-7a52e400a659"
        },
        "item": {
          "id": "c28c31f4-48cc-4347-990b-38a195ed49eb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "231cd9fd-5d59-403d-9fcd-8a1d28220d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "ccc7fe92-1411-4e67-a743-1acb2864e589",
        "cursor": {
          "ref": "02bbd5bd-7a89-461a-aa17-b93d5c17de21",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4ade621b-ae7f-4b73-b88c-757cf4f3157a"
        },
        "item": {
          "id": "ccc7fe92-1411-4e67-a743-1acb2864e589",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "cf8d643e-0110-429b-8731-f19579d9f28f",
          "status": "Created",
          "code": 201,
          "responseTime": 9658,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f0b30d-a102-448f-9142-270ab34d924c",
        "cursor": {
          "ref": "d6a4ce02-199f-4e3f-8210-2a9710b50bee",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d40528a9-2f74-4d78-953e-b0d5c36e351b"
        },
        "item": {
          "id": "d6f0b30d-a102-448f-9142-270ab34d924c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "dfee690a-c8fb-4442-a61c-7f3d307ca60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 169,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "1bf7fe4a-fd34-41f7-9b8c-2a9ee1a60034",
        "cursor": {
          "ref": "5a612d6c-1afe-4e38-a3aa-d86d27347530",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "eeede8d9-3ac8-42d1-af3b-5d2dde7d7dd9"
        },
        "item": {
          "id": "1bf7fe4a-fd34-41f7-9b8c-2a9ee1a60034",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "96b21e5b-5c6e-4a38-bdb1-16ea869c4289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d209d760-970f-4e1e-9b40-9fac81b024a8",
        "cursor": {
          "ref": "6d284915-9bb9-4f91-9784-ece52d459a9f",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "820a85af-c1af-4d9f-b5b0-0ca2bb7a199f"
        },
        "item": {
          "id": "d209d760-970f-4e1e-9b40-9fac81b024a8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "63e49377-26af-44b8-a43b-747388715da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c9592d-d5e9-459d-8b2a-dfe926c1da74",
        "cursor": {
          "ref": "619414f9-aab4-48d4-84c6-bcf1eb14a93b",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "83ddd62d-4fd9-4c15-9869-3cf63f3a0cf3"
        },
        "item": {
          "id": "b9c9592d-d5e9-459d-8b2a-dfe926c1da74",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8c3babdd-ece8-4c69-821b-a1accab92b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738bfc5e-adb9-4582-9ed4-ac3ee7c74a0b",
        "cursor": {
          "ref": "733e7105-caee-4d18-bf54-add8abf13f78",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9269065f-2284-4b7d-9823-01dcc1dd6a72"
        },
        "item": {
          "id": "738bfc5e-adb9-4582-9ed4-ac3ee7c74a0b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a40b5251-2640-4b72-a8d2-e02972071b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52ff625-a9e9-46a3-a1d5-b483060d9a8d",
        "cursor": {
          "ref": "190d8983-0838-4b18-8c41-9efb33493ba6",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "56348df7-5dc3-4f49-8411-0897d336684d"
        },
        "item": {
          "id": "e52ff625-a9e9-46a3-a1d5-b483060d9a8d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "db414f05-93a4-496f-b10e-89316d2e220d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c704b4b-9e87-40bf-8fdd-062fc7a4dc31",
        "cursor": {
          "ref": "b9238a52-32c9-4d85-ad70-44893b14758d",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7a128701-1dff-4698-a67f-a24e8a979523"
        },
        "item": {
          "id": "6c704b4b-9e87-40bf-8fdd-062fc7a4dc31",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c48470a0-635c-4b04-918a-f8d7501c637c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfce088d-9543-4eb7-b330-fe527383f733",
        "cursor": {
          "ref": "feca11db-e408-4e08-957c-bc147481f68f",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0f175dde-ca3e-4e43-9024-c17cab5a9a03"
        },
        "item": {
          "id": "bfce088d-9543-4eb7-b330-fe527383f733",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e0343dc7-a120-4331-9200-d9b631b7a1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b4e2cf-cbbc-4be7-a06a-ad47601f6556",
        "cursor": {
          "ref": "a107f99b-4a93-4716-a977-3ddd9895523b",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "28c6e5f1-3caa-4690-bbe2-fb3d61283936"
        },
        "item": {
          "id": "a2b4e2cf-cbbc-4be7-a06a-ad47601f6556",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a4ce0aaa-8ad4-4d46-88ac-b87f8a0cb170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596fcce1-1b37-49f5-92c8-2ec10f817383",
        "cursor": {
          "ref": "ab0929a7-7889-44ea-b1d3-3f1298ef37d7",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2a67b24e-56ea-453e-bb34-3a05f94901c6"
        },
        "item": {
          "id": "596fcce1-1b37-49f5-92c8-2ec10f817383",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "362501c5-7400-427d-b6df-32fca338611a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f90ab7-3f43-461f-8439-56dc71af323f",
        "cursor": {
          "ref": "15b62ade-5640-426c-85cd-6b2a8473b514",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "304abd08-663d-412d-b20e-487b1f181257"
        },
        "item": {
          "id": "12f90ab7-3f43-461f-8439-56dc71af323f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d584c185-34a0-47b0-a5af-57062b9389e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9041acef-fbc2-4f34-9849-518cc4a84524",
        "cursor": {
          "ref": "cd6d4146-699b-4ac9-96ac-69ed34648a8f",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e3450616-bf3f-4783-95f9-2e78b027ce89"
        },
        "item": {
          "id": "9041acef-fbc2-4f34-9849-518cc4a84524",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "41d1d412-9bba-4fcf-bf17-45b60e705d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09eff6b4-fcc9-4372-b919-a73bec363e5d",
        "cursor": {
          "ref": "4153376b-6af9-4c5b-97b3-34610e48d7f2",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "dfa5670a-88af-4c0f-aba2-1582e878fcbe"
        },
        "item": {
          "id": "09eff6b4-fcc9-4372-b919-a73bec363e5d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "338ea7eb-982c-4d2a-9606-a1835df71431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2682e59f-47fa-4e65-85b0-c2e5635f0a60",
        "cursor": {
          "ref": "0a870425-f9ec-493e-9a31-38c150ff39e7",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9e47f9f1-72e5-4b9b-a911-a3eaaf5f7a4f"
        },
        "item": {
          "id": "2682e59f-47fa-4e65-85b0-c2e5635f0a60",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7da0229f-bd8e-4b57-8e82-a79a6520e13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b2ec2c-e32d-45de-bf8d-cf13a180755b",
        "cursor": {
          "ref": "7f0108c5-71f1-4c7d-9efb-f7e77550f70b",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e2fd3d63-271b-4b9c-a46f-ace8f9e61b62"
        },
        "item": {
          "id": "c3b2ec2c-e32d-45de-bf8d-cf13a180755b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9a5f41b5-3fcc-4567-88ec-2ea06e5da9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e5b064-08a6-4592-9005-5365a74ec4b1",
        "cursor": {
          "ref": "0141f354-651b-4648-94db-72dac66623be",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "fbf3f114-535a-44aa-be7b-a37bae67418b"
        },
        "item": {
          "id": "c0e5b064-08a6-4592-9005-5365a74ec4b1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d6a99773-8477-4b6b-9336-b917e69d4ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e21977-75b4-45ae-991c-ccb65f503bcf",
        "cursor": {
          "ref": "8f82a813-062f-4746-ad44-e09d5b55f201",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "935abea1-be09-4707-8c2a-7c7f92b433a4"
        },
        "item": {
          "id": "10e21977-75b4-45ae-991c-ccb65f503bcf",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a5600b67-51b3-43f4-9db4-cec08c02f8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160a931d-65ff-4b96-a2c2-ee80324b80c7",
        "cursor": {
          "ref": "9ea08a2e-5fe2-40c1-ad5a-18cb003127e7",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a9bd8721-f779-4cef-83ee-763ad72a6171"
        },
        "item": {
          "id": "160a931d-65ff-4b96-a2c2-ee80324b80c7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "147ed2d4-1f00-4eb1-ae7e-e2090f5c7b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abf9686-b934-4382-9b0f-666e88e56267",
        "cursor": {
          "ref": "83b9a77a-dcab-438f-8f63-e1e9c9ec48d6",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9e61a1de-baba-4b72-9d6b-787aeca86e87"
        },
        "item": {
          "id": "5abf9686-b934-4382-9b0f-666e88e56267",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c3b42f4e-1e15-489e-abfc-1992fc6bebb9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 26,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "fcb30571-cc36-40cc-b7a4-70222ef44c09",
        "cursor": {
          "ref": "8e8cd5f8-bfb2-4d16-a5cb-9bfbfd9b9ba2",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0e2fdb9b-91b3-4478-8d28-faa4197f67a5"
        },
        "item": {
          "id": "fcb30571-cc36-40cc-b7a4-70222ef44c09",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fbf975fc-381e-49b6-88bb-6c50e38ceca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31444d24-3284-4fc3-9218-9387e74571b5",
        "cursor": {
          "ref": "0df2c243-6994-42f4-9bc8-998739a7a47b",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "aaad9371-013c-47d8-ac8a-f83de64caef7"
        },
        "item": {
          "id": "31444d24-3284-4fc3-9218-9387e74571b5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "08b5542b-b74f-4e50-adae-a93273813b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4207bf-88c4-4421-b54e-4cb31de913bf",
        "cursor": {
          "ref": "83db0550-1557-47c9-b392-aa8a03152ee0",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "79a9f990-7ed0-48ea-8044-ba92d4cfff69"
        },
        "item": {
          "id": "5e4207bf-88c4-4421-b54e-4cb31de913bf",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1cb1b2f4-484b-4bb8-85fd-70986e62c710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7378da79-8dff-4740-a326-12cc24f52fee",
        "cursor": {
          "ref": "af754c92-b354-4aa7-933b-c0ae322f24e9",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a78dbaed-47ff-42b6-88a1-75f1b3735930"
        },
        "item": {
          "id": "7378da79-8dff-4740-a326-12cc24f52fee",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c6afc6ce-deb1-491d-afc3-4b60450c08d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b17a5cd-33b4-419b-9746-9f26fa6e18e5",
        "cursor": {
          "ref": "fed16956-73dc-4bb6-856d-aaad162cff03",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3fab6bbd-f358-4c59-b739-9ca2996222d2"
        },
        "item": {
          "id": "9b17a5cd-33b4-419b-9746-9f26fa6e18e5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7ca5f807-fdf1-400a-aa85-47529fe86575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97f9ceb-855a-4ed7-aedc-b9a059268890",
        "cursor": {
          "ref": "1e629849-8df0-484c-bc81-bca722118549",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "80875e4b-c68e-4f2b-92c3-ddce5a96932a"
        },
        "item": {
          "id": "d97f9ceb-855a-4ed7-aedc-b9a059268890",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "20454f7e-56ab-4083-9673-d001c7e80d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c219ac-0465-4196-b19b-1d9fb3c23053",
        "cursor": {
          "ref": "72469fe4-25b2-40c1-9ad8-1fa49e877b77",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d4287fed-d62e-4ed8-909c-fd1531371932"
        },
        "item": {
          "id": "18c219ac-0465-4196-b19b-1d9fb3c23053",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d7c3c460-eca7-4b80-aacb-61a2a1a13785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37f5681-eff3-4b83-976a-21e8ce23a6fb",
        "cursor": {
          "ref": "863db25f-3e7d-4cb3-ad35-77049c5b717d",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e25cf729-a477-4f54-8847-9b10bf1c4b14"
        },
        "item": {
          "id": "f37f5681-eff3-4b83-976a-21e8ce23a6fb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e92d7a28-ee30-4857-a8b7-2457c8915166",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "d9fd2922-6026-4e26-9c81-789c3f2f3d13",
        "cursor": {
          "ref": "5e7df151-87ea-4da7-9c96-fc015dbcd50d",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4a2bee5e-1abd-4462-ba97-1d1b01822e85"
        },
        "item": {
          "id": "d9fd2922-6026-4e26-9c81-789c3f2f3d13",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "30e8954d-503c-401f-8392-06d16cf3e461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f231a3-f9da-4312-a2f3-7d108020a21a",
        "cursor": {
          "ref": "ebf36c76-c2e4-4487-9afb-0f10b66870d9",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d92a6d54-8f5c-473b-8e3c-d8b1f2da3d65"
        },
        "item": {
          "id": "84f231a3-f9da-4312-a2f3-7d108020a21a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "44e0e864-b097-48c0-930d-dab881b923ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acfad656-ca7b-43da-9185-83f6672d9801",
        "cursor": {
          "ref": "66f7660a-117a-448d-89a6-ab714917a647",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e1ed9ac4-cda5-4aff-ab31-6a902905ffde"
        },
        "item": {
          "id": "acfad656-ca7b-43da-9185-83f6672d9801",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6a87ceb5-126e-4048-8e61-0072a2d111e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f99c02-3881-4ca1-a5ff-f3fdb93cffea",
        "cursor": {
          "ref": "8cb0e232-d88f-4b42-a394-fcbde455d4af",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "087eddc2-3916-449f-94b0-2ba24dca9f84"
        },
        "item": {
          "id": "62f99c02-3881-4ca1-a5ff-f3fdb93cffea",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f5e9afac-1830-470e-9468-b0160c6012f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3757a5ab-8faa-4057-9377-8a3de835a1e5",
        "cursor": {
          "ref": "f7771047-7346-4632-9e3f-697f22df57c7",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b0262a67-b810-41b6-9860-fe1cdd626343"
        },
        "item": {
          "id": "3757a5ab-8faa-4057-9377-8a3de835a1e5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "413c7798-848f-40c8-9c9e-d526552d9897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed89fa7e-8d4f-49e4-9d5b-408660e9773e",
        "cursor": {
          "ref": "71689030-47f8-4d40-ad35-d67be795d9c3",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "de0649f6-acdf-4958-a50d-e3271c554629"
        },
        "item": {
          "id": "ed89fa7e-8d4f-49e4-9d5b-408660e9773e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e9989638-4650-4fa1-ba13-206dd3485b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ac1cbd-96cc-429e-8e39-9b7e75d4894e",
        "cursor": {
          "ref": "6d2797fa-717c-45a2-84a4-3c3a9a27b763",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0baf40d9-51c5-4224-8460-8b973149c739"
        },
        "item": {
          "id": "c7ac1cbd-96cc-429e-8e39-9b7e75d4894e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8e301a80-2692-4470-b761-1d2d02fb998f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "f2fb12ef-7f4b-4f27-a51a-812817de286b",
        "cursor": {
          "ref": "b8009362-e70b-4172-8f75-354696269310",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b3adb938-2f61-41cd-912d-74d6f3dd31a0"
        },
        "item": {
          "id": "f2fb12ef-7f4b-4f27-a51a-812817de286b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "3583038e-3088-470e-bd3f-d0da32ec394b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "0b39dd25-95f7-4934-bc1e-2fef30a41ece",
        "cursor": {
          "ref": "15f5f49b-38c5-47ba-ab8e-f303ea715209",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f4b13df7-e295-4cad-9015-603528562fb6"
        },
        "item": {
          "id": "0b39dd25-95f7-4934-bc1e-2fef30a41ece",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "877e2df5-f659-4ff0-9688-bac7cbb6c48a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 20,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "211002a4-5931-4f9c-8f0e-3bddb76fda49",
        "cursor": {
          "ref": "5bcd919f-7db9-4b00-bc2b-168ef2e04183",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "91566cb0-8f5d-4f44-8e48-42b4101a93a1"
        },
        "item": {
          "id": "211002a4-5931-4f9c-8f0e-3bddb76fda49",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4ad70cc5-d923-4fad-aed1-4f1c44449887",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 20,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "4345c098-d939-46c8-8896-6127df6a3e2a",
        "cursor": {
          "ref": "e356ffcc-5090-46e9-92b6-a3b360d10d35",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "da9065e3-86a7-4d99-8da7-5558ed1d97eb"
        },
        "item": {
          "id": "4345c098-d939-46c8-8896-6127df6a3e2a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3af01ecf-fc1d-4f15-a085-1ed8d6c2992d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 19,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "e979bcab-d317-44f2-a242-865e45e3f052",
        "cursor": {
          "ref": "d9435547-1d18-47b2-9150-bd18166d1000",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "46c32849-d7fb-47c1-8b39-6673c535b68e"
        },
        "item": {
          "id": "e979bcab-d317-44f2-a242-865e45e3f052",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "55985ea0-b44d-49e0-a623-5c387c34c19c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 51,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "8c481251-ca38-4d6b-9f5a-ddebc8b9290c",
        "cursor": {
          "ref": "1a069bc1-63b1-47ed-b77d-e944a7661417",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fe6e9c31-509d-4287-b89a-b7c32da51237"
        },
        "item": {
          "id": "8c481251-ca38-4d6b-9f5a-ddebc8b9290c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c08adb8c-e242-4253-a478-f4c5b5ceea38",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2d9529-8832-4142-bd67-4df6dd7467ac",
        "cursor": {
          "ref": "a6a58df0-4ad4-4ddb-b671-82d22e917742",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "85adbaed-6e52-4106-99ea-a89d90e8d258"
        },
        "item": {
          "id": "0c2d9529-8832-4142-bd67-4df6dd7467ac",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7bed489a-cf77-4439-9827-5ead38b726f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aaa825d-4558-442e-9202-47c965d50c5d",
        "cursor": {
          "ref": "c1c8dd72-c82a-4d84-8110-3f351318cb23",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f7b13258-e10f-4a5a-ac9f-b1f482fd6a1a"
        },
        "item": {
          "id": "5aaa825d-4558-442e-9202-47c965d50c5d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "88d0f061-110c-45ac-a2ed-052a0260ca03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb2bcfd-0d68-448f-8f3d-81acbf754494",
        "cursor": {
          "ref": "98f93d57-c3b1-4d4b-bd7d-4572abde67d7",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "24e13ff2-acec-4a27-88e4-37733fd9b9f5"
        },
        "item": {
          "id": "fdb2bcfd-0d68-448f-8f3d-81acbf754494",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a0d5f6b2-d85d-4371-b845-6a4fb99e76e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ae0b05-565b-4dec-ac80-7bab0546c4f3",
        "cursor": {
          "ref": "27f280f3-41fc-4a19-9d06-0512b2b38113",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cb1a7cc5-0139-4b97-a7a6-5ddda157d431"
        },
        "item": {
          "id": "39ae0b05-565b-4dec-ac80-7bab0546c4f3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9f029496-9b17-41e5-989e-57b1f30cac8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb54c7e-48ca-4730-afd2-14b16735bcbc",
        "cursor": {
          "ref": "974fe9f6-c8a2-41e4-82ce-de5583e88560",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8f246c62-c2c2-4948-b46f-667a13ead2b9"
        },
        "item": {
          "id": "2bb54c7e-48ca-4730-afd2-14b16735bcbc",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2dbbb8d0-0af8-4b96-a5f0-233b5be28690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2648fc-1f11-4c15-bf5c-7e496f820a59",
        "cursor": {
          "ref": "84921db7-6423-464a-97fa-ee9ea9ea58c8",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f1919b0a-9c72-46ba-9d69-cc3704a6c532"
        },
        "item": {
          "id": "7b2648fc-1f11-4c15-bf5c-7e496f820a59",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ce13a54a-763e-49d9-9791-4e42ee43d881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67dda6a8-283e-4887-b4c6-aaaf1397ab6a",
        "cursor": {
          "ref": "424d63d5-c7e8-480f-b2c9-f62face06e3e",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7acda022-b8de-4096-9542-c4bd2cf98a75"
        },
        "item": {
          "id": "67dda6a8-283e-4887-b4c6-aaaf1397ab6a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0a909429-a041-4e6c-a322-bfa1056f28b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9141eb2d-2fd3-437d-979f-07fc8ca0e1ef",
        "cursor": {
          "ref": "eee55650-16ed-460b-b006-d8e1be731240",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8382d816-5a4a-48f9-a3e3-cbeac2289512"
        },
        "item": {
          "id": "9141eb2d-2fd3-437d-979f-07fc8ca0e1ef",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3dfae780-8d61-465b-ab0f-d07e559fc2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9e15b9-d224-4c69-9e43-e744b870bed2",
        "cursor": {
          "ref": "be740022-e640-4255-a84c-6fab02eff70b",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5ab6534d-1f85-4203-81e9-7437b3c85a83"
        },
        "item": {
          "id": "7e9e15b9-d224-4c69-9e43-e744b870bed2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "048c8eb9-dc92-4a41-941d-233a3dc04025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d445b94-bde7-456e-8a19-1bc21f1e250e",
        "cursor": {
          "ref": "b929e7f0-77e3-419e-93c6-976e631c2cfb",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "75b14d35-6f4c-4432-90b1-c023f98c607d"
        },
        "item": {
          "id": "1d445b94-bde7-456e-8a19-1bc21f1e250e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c6aa908a-4ad3-41c5-86cd-0a2ef5a6de55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38d4eea-1a6e-46fe-8fb0-52a4afd3dad3",
        "cursor": {
          "ref": "b48372f9-f8bf-40c7-a3f3-33ec4d9e85ba",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2063a4dd-b1bb-42b2-baf6-ac9e48dfd652"
        },
        "item": {
          "id": "c38d4eea-1a6e-46fe-8fb0-52a4afd3dad3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9aa73d5b-5860-4339-a8aa-4d4b053fc6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349fb4ef-e743-4d53-8e5f-77f17c1407cb",
        "cursor": {
          "ref": "4a642c08-9eb7-43ba-a03b-e0e4ed1c16a2",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "858a110e-c49d-4b60-846e-9c0486756635"
        },
        "item": {
          "id": "349fb4ef-e743-4d53-8e5f-77f17c1407cb",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c75cfbeb-60c2-4af8-9c25-525ac96b95f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742d1174-8e98-4437-98a4-2f32044d788f",
        "cursor": {
          "ref": "fcdf4661-8d97-4247-be52-09f70474c1e5",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "006537ef-fb3d-4d7d-9477-ebccf6dce5d0"
        },
        "item": {
          "id": "742d1174-8e98-4437-98a4-2f32044d788f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "fc7f22a5-c6e4-476b-adf3-f63b729008b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c2d63c-dcbd-46fb-adbc-03cccc52507d",
        "cursor": {
          "ref": "930b697e-0ea2-4881-878a-ef9d62e0eeef",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e97d4d6b-c4be-4248-9587-173d65e2d7ab"
        },
        "item": {
          "id": "12c2d63c-dcbd-46fb-adbc-03cccc52507d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "68430f46-f286-49bd-a4f7-629d8a1e0f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650f2605-91a8-4423-afef-e6b44871628a",
        "cursor": {
          "ref": "5a344047-c123-4f07-9d53-3ca0e2f16dc8",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "076af85b-1382-4535-9aa8-8c2987382672"
        },
        "item": {
          "id": "650f2605-91a8-4423-afef-e6b44871628a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "320bdebd-6845-4995-9ca5-004088b68079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa85407-6666-4c22-ba35-67f2872ac174",
        "cursor": {
          "ref": "03dc8ea9-1a49-44d5-a094-74a37dde6b85",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "fa723fbc-790e-46fb-9a74-947a80ed8b71"
        },
        "item": {
          "id": "4aa85407-6666-4c22-ba35-67f2872ac174",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "910d801a-cde3-4815-8da9-59989cbb5078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1c794d-af9e-4a69-846e-b98e118a3d80",
        "cursor": {
          "ref": "be345a79-de76-4bc0-8204-7d5465f42212",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b0174766-1451-4af6-985d-476a47c5c8cd"
        },
        "item": {
          "id": "be1c794d-af9e-4a69-846e-b98e118a3d80",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f35633c0-8857-478e-9e64-f68e8c84f060",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "9155960c-fe32-4b20-b69e-13ad75e682fc",
        "cursor": {
          "ref": "9be1d766-06ea-4744-8365-7c98e2da5aa2",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0fc9ec9d-d63e-4015-909f-27760762c8fc"
        },
        "item": {
          "id": "9155960c-fe32-4b20-b69e-13ad75e682fc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9dad6a30-0da5-4329-aae5-2959a3cc2812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abad6203-fdd6-4fa9-b2d4-f7d5b369dec0",
        "cursor": {
          "ref": "87a71d76-11c9-419f-8e28-c83c7477f112",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "cc4824b5-6f5e-47d4-a363-18afd7d1dcfe"
        },
        "item": {
          "id": "abad6203-fdd6-4fa9-b2d4-f7d5b369dec0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f9f2d606-42a2-4fc3-acb9-e9794148cdf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23e2f5b-11b9-4374-b59b-1555e59724bb",
        "cursor": {
          "ref": "ac8370fe-b26e-48db-b25c-6b12d6939151",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "66dab954-3486-474c-9722-06a48301a682"
        },
        "item": {
          "id": "f23e2f5b-11b9-4374-b59b-1555e59724bb",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "dd6e814b-36be-45d6-876c-dd6193ed49ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e99a926-daf9-4b2f-8a40-d32bc26ceb4e",
        "cursor": {
          "ref": "bbe7645d-7dca-431e-81b7-9c70438b5af0",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "99e13b82-4935-431d-9af7-0666d5fcb374"
        },
        "item": {
          "id": "0e99a926-daf9-4b2f-8a40-d32bc26ceb4e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d4aef3cc-6e2d-437f-ab6e-f4fa5dd1fa85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fb0915-5d1e-4a19-92df-9a5b03ffe03a",
        "cursor": {
          "ref": "84855daa-35d2-4c91-b02a-5f0fa8a71c8c",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "dabdb61b-3b72-46b0-9d40-c88471e9555d"
        },
        "item": {
          "id": "68fb0915-5d1e-4a19-92df-9a5b03ffe03a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a192d512-3b24-43fa-9621-aa287d495489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13b2bcf-cffe-4453-9086-f61d8b7964a5",
        "cursor": {
          "ref": "024b5f77-60a8-40c2-b234-c09450eb0695",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "41bffcfe-31dc-416f-8cc5-4337db032e6d"
        },
        "item": {
          "id": "a13b2bcf-cffe-4453-9086-f61d8b7964a5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f698818d-988e-48ea-81f4-2b86037dc2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbf7520-1f8f-4032-a22b-0ba0d1395dd6",
        "cursor": {
          "ref": "0772b3fe-b926-4189-a909-049a4bc18487",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "55438404-1bcd-4a93-a4b7-15ca60407d59"
        },
        "item": {
          "id": "7cbf7520-1f8f-4032-a22b-0ba0d1395dd6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6f386b3b-a455-4037-bd1d-7c3634080d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83aa952b-2929-4640-a7af-54c39324ee3b",
        "cursor": {
          "ref": "ca5d64fb-fdd7-4416-82c0-c0a105bbc916",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "798d852b-3117-4b43-954d-c6bf29ed3b9d"
        },
        "item": {
          "id": "83aa952b-2929-4640-a7af-54c39324ee3b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3dc7d8e9-bc16-4da6-afbe-d8ed2a55e966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fefc02-7074-4cec-92c5-62f64c89591b",
        "cursor": {
          "ref": "836c9149-1516-470c-9ff5-546d40317fd0",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d6db24ce-603a-4f6f-8eed-2c14d03802b2"
        },
        "item": {
          "id": "15fefc02-7074-4cec-92c5-62f64c89591b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1bd559d2-3160-48c4-810d-14f7739b7a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7cffbe0-5862-4acf-94b4-a5d8a913244d",
        "cursor": {
          "ref": "8377f6a6-23c6-49c9-915c-72d358baaae2",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "24a16b64-a26b-4d39-96eb-3a6bfe529d0e"
        },
        "item": {
          "id": "f7cffbe0-5862-4acf-94b4-a5d8a913244d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "77d05f6e-ae7b-4e13-bf05-62563ac341be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c9189d-5f68-4614-850d-1d04b01589a8",
        "cursor": {
          "ref": "dc43bbe3-2036-4436-9bfa-eb961e4aa1aa",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "58791caf-7f73-47df-9111-6b518367b92f"
        },
        "item": {
          "id": "16c9189d-5f68-4614-850d-1d04b01589a8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "088c9944-9fc2-431f-9e39-757b59a3dd66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be4cad6-d853-4ebd-8c66-0722b43193e7",
        "cursor": {
          "ref": "8a8fcffa-ee97-42f0-9a31-d8247f0292f8",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "487f6329-68cd-4c8b-abdf-3ffd5a382c62"
        },
        "item": {
          "id": "2be4cad6-d853-4ebd-8c66-0722b43193e7",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6d60ed99-29e5-4bd3-aa7a-d826e03cd5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eec3e3c-e3f0-4f1f-aaa0-13170a1c8719",
        "cursor": {
          "ref": "4b4ea0f9-9029-49b2-9b6c-257c7dbbaa01",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fdee2d59-7ccf-4f76-97e1-4c86dd169c58"
        },
        "item": {
          "id": "4eec3e3c-e3f0-4f1f-aaa0-13170a1c8719",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f5cce259-81a8-4adb-8366-88308fbcbc6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e9b1c6-ddbb-4294-86f8-2866a0725642",
        "cursor": {
          "ref": "4815a0a8-abb9-42cf-a839-364eb35d5107",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e5b4b0df-a0da-4501-bad0-ba1aee876674"
        },
        "item": {
          "id": "63e9b1c6-ddbb-4294-86f8-2866a0725642",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5f234830-9bd4-405a-a47e-0b8fa911ea29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62167a2a-bb3b-4989-bcdd-ab977d220311",
        "cursor": {
          "ref": "b95c6130-df19-4f70-845d-959100c6f623",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "aff17b01-7849-4fbd-a389-e2f1ef694556"
        },
        "item": {
          "id": "62167a2a-bb3b-4989-bcdd-ab977d220311",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a91efa81-e09b-4025-b6f6-a7f032b59438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e2d18b-fdd1-4854-b07e-9ef8dbb03734",
        "cursor": {
          "ref": "dec5a5eb-4d11-4cba-89b5-5535a3e73802",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "da520453-2eeb-4193-831b-ce515f4b6bdc"
        },
        "item": {
          "id": "05e2d18b-fdd1-4854-b07e-9ef8dbb03734",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7f19074f-ee26-4018-a0e3-f6e0d77f314d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd21382-d2d8-4af3-9dad-7cd62a1766c9",
        "cursor": {
          "ref": "327fc996-80c6-4966-958e-a78111035400",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "031ae9cd-751d-4b26-ac0a-1456ba260754"
        },
        "item": {
          "id": "fbd21382-d2d8-4af3-9dad-7cd62a1766c9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e5b3e42d-c67d-45f4-a103-143791d15038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349d4710-436f-4c34-afb6-d0d67b5d512c",
        "cursor": {
          "ref": "b8aba0e8-cf33-497a-807d-deb1861c189f",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1bab234f-c4b8-4ab0-a039-b902de5a59b5"
        },
        "item": {
          "id": "349d4710-436f-4c34-afb6-d0d67b5d512c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e60a8cb4-ef9e-496a-9bf4-621a1069a7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8727a84-ecd6-4b20-910f-8024c6f7e7ae",
        "cursor": {
          "ref": "4c55753b-a6de-4396-87bb-04bdf39697bc",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "73829d59-e8c3-495c-bfc3-aefdbee8de6e"
        },
        "item": {
          "id": "c8727a84-ecd6-4b20-910f-8024c6f7e7ae",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "128914d0-52a0-4ed7-b04b-a5b27e8f5e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a604b7-e795-4a46-b0ba-e7d77028ffe1",
        "cursor": {
          "ref": "c4a19676-69a2-4c5c-8f8e-656c38f118cf",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "dfb678a5-ae82-474e-adb4-3a8387547c52"
        },
        "item": {
          "id": "c1a604b7-e795-4a46-b0ba-e7d77028ffe1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "16e1fd44-1947-4fd4-9840-cd7e0ea01af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acd8f7e-5b50-44ac-8d46-64a9475a3fbb",
        "cursor": {
          "ref": "35c8e266-afee-4c74-b143-754f4aff24dc",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "87644578-5894-497d-ab27-ceffbc2d66f8"
        },
        "item": {
          "id": "7acd8f7e-5b50-44ac-8d46-64a9475a3fbb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9a5fe439-58e1-4666-8155-f828ecaec64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4768414d-04c1-4b90-ae63-de3a727526cf",
        "cursor": {
          "ref": "efa36a29-419b-458d-bc50-006cc975c0c5",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "06eb72b3-dba7-4be6-93e2-2fd04e2462ab"
        },
        "item": {
          "id": "4768414d-04c1-4b90-ae63-de3a727526cf",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bcea19a1-81bd-49d6-936a-fee3868d436b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf68e16-a6ce-49e3-829e-0752389c6e62",
        "cursor": {
          "ref": "351c20f8-7484-418f-8882-0a1d96d25ad4",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a98b1d3e-5595-4e0f-b28d-55e1ba976008"
        },
        "item": {
          "id": "2cf68e16-a6ce-49e3-829e-0752389c6e62",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "654dfe69-6207-4964-b1b0-b6c656565aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c9fbf2-1bf8-4060-8502-87e7224ef71c",
        "cursor": {
          "ref": "a9d0cf62-d74e-45d1-8db4-b0c6512be4aa",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "cc067825-28e2-4a06-b7cf-611ae858968d"
        },
        "item": {
          "id": "41c9fbf2-1bf8-4060-8502-87e7224ef71c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "cb391980-703b-4476-bd57-56a32a62e467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82db318-6491-4692-83e7-07097a7a2801",
        "cursor": {
          "ref": "91b853bf-0afe-40aa-9029-87d66690c592",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "abb0747d-4b5e-4934-97c0-d93ebdd416df"
        },
        "item": {
          "id": "b82db318-6491-4692-83e7-07097a7a2801",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "91e517dd-05c8-466a-9b98-d5855df964d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9207a7c1-2e57-41f5-ba1d-c711ea5be46a",
        "cursor": {
          "ref": "069b3775-7d10-4c45-bde9-c3723bd208fe",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9a1e4e7b-a0fc-44d6-ac98-fb846d734cd7"
        },
        "item": {
          "id": "9207a7c1-2e57-41f5-ba1d-c711ea5be46a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "cafe53a0-837d-44a4-b2aa-52d21e255380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cead199-d0bc-4a22-a87e-b38f03411282",
        "cursor": {
          "ref": "bdee7a8d-7cc2-433a-aa42-aece01da6d5e",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "efedd9b3-60b5-496e-9c73-43da143194ea"
        },
        "item": {
          "id": "4cead199-d0bc-4a22-a87e-b38f03411282",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3e4a1d89-ed22-4e7d-b35f-a449a6fbf7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db93c1ae-2fd1-44a7-b257-325517b70a54",
        "cursor": {
          "ref": "0aa5d0e1-1f52-46db-be52-0f1d07a825ff",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7a065842-7616-41cf-8e8f-7aab76ede3c8"
        },
        "item": {
          "id": "db93c1ae-2fd1-44a7-b257-325517b70a54",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5fa4e1b7-e322-4fd3-9f11-3aeffe458dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db347ce-9ba0-43ab-8f5b-9d33e64497ae",
        "cursor": {
          "ref": "61f8f565-aeef-405f-b4a9-2e2f6feda6a1",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a39f4718-e2ab-4d21-a4e5-bd8d37981c6a"
        },
        "item": {
          "id": "7db347ce-9ba0-43ab-8f5b-9d33e64497ae",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d9353faf-701c-4a5d-bf87-f13ed2d1df60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d79b36f-3886-4894-8c8a-daea0958f06a",
        "cursor": {
          "ref": "adb25870-3e31-4a7a-a760-a19e1148bcf1",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "eb9679a1-72b4-4976-b400-82ae84dd9f79"
        },
        "item": {
          "id": "3d79b36f-3886-4894-8c8a-daea0958f06a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8aa688bb-4b60-43cc-af8c-b318909c1e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dce20c3-f121-4a9b-ab0c-e48235017fc6",
        "cursor": {
          "ref": "4334d32b-70de-492c-89a0-4b16d22cea2b",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0cb2fc40-c540-4597-95ea-a936e9ee00f7"
        },
        "item": {
          "id": "1dce20c3-f121-4a9b-ab0c-e48235017fc6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5262378a-f901-4511-b3a1-4e6aaf8896b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0ecf04-4903-4390-b75f-d05d3333af40",
        "cursor": {
          "ref": "ae99dd85-9cbb-453f-91c1-847ce3a78917",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8d241635-7d5a-4b2c-a2a6-0ff3855dae05"
        },
        "item": {
          "id": "6f0ecf04-4903-4390-b75f-d05d3333af40",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0f60068a-2764-46ea-8ea0-92def7d09ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c63cf0e-28e9-41e1-825e-60d1729966ca",
        "cursor": {
          "ref": "ccc452a4-4cbe-48d0-afc5-d217036216a6",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a3c80e75-d726-4e90-b48d-95b8a704496f"
        },
        "item": {
          "id": "0c63cf0e-28e9-41e1-825e-60d1729966ca",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "73c24bb2-62a9-490c-ae73-69286e13ee5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88889998-1b69-49ab-ba8a-34b71e1b0475",
        "cursor": {
          "ref": "66926fe7-aa2f-48aa-bec5-893b94615eb4",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1a9e9e16-8d9b-48b2-a1d8-5f256dab22e3"
        },
        "item": {
          "id": "88889998-1b69-49ab-ba8a-34b71e1b0475",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "489c49fb-2567-49bb-8388-ce095dffb7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a808ab-bbc7-472a-997f-0bbe12c91b61",
        "cursor": {
          "ref": "38698573-1a4f-427f-ba39-5dab99ae5d39",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f5bd497b-f5fb-4477-bb58-ffa7a2a40601"
        },
        "item": {
          "id": "12a808ab-bbc7-472a-997f-0bbe12c91b61",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ecd1f93c-f4d4-4e30-ad52-73cb6cec3a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe0c255-873f-4889-9b16-487b6f7b50bc",
        "cursor": {
          "ref": "ea3fae11-345e-4c86-aa83-eaeead12c46b",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "72f16f08-a612-4374-ba3a-b396e8d865db"
        },
        "item": {
          "id": "ebe0c255-873f-4889-9b16-487b6f7b50bc",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4fa2aca6-74cf-4c29-a97b-9de651a46fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66073176-a0a7-4b57-a9d5-22d83593ce5b",
        "cursor": {
          "ref": "e4c341f3-e946-487e-b9fe-a12476a9ed4a",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1d204e43-4da8-4b1f-92a9-4e9854828a42"
        },
        "item": {
          "id": "66073176-a0a7-4b57-a9d5-22d83593ce5b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "41dc5c5f-0532-4264-b62e-0d0622bbc88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8097a481-299a-43f0-a68f-557565d8d775",
        "cursor": {
          "ref": "be32ff02-c281-413d-8630-2658f847dbfa",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "68e135fa-9f8e-4759-b2dd-5eec9cc57c52"
        },
        "item": {
          "id": "8097a481-299a-43f0-a68f-557565d8d775",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ef2052e0-1c2d-4170-94c1-64da96f35042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be30d82f-8fba-4853-a113-5d7e825e5b58",
        "cursor": {
          "ref": "fe8d18bf-8704-4955-99cc-395acb3d1416",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b20b39f6-72f5-44e6-8d03-d3f5fa11ac7d"
        },
        "item": {
          "id": "be30d82f-8fba-4853-a113-5d7e825e5b58",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "dc63d0a5-aa91-4c11-acdb-648bedd70640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dacb23f-1dc3-42b0-80e9-0a900309e589",
        "cursor": {
          "ref": "074b7b40-0eb1-461b-8f39-78f3e7c9f8d8",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "995b152c-684a-4675-b75f-679b6ce89166"
        },
        "item": {
          "id": "1dacb23f-1dc3-42b0-80e9-0a900309e589",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "81130a91-e0bc-474c-9654-ad6030b76c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a17c9a-dc12-42de-a752-fde44fc66041",
        "cursor": {
          "ref": "540ca595-c29c-4363-a6e3-4f3a10f025aa",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bafdf23d-5f86-40cc-b3f8-2df4dc209787"
        },
        "item": {
          "id": "93a17c9a-dc12-42de-a752-fde44fc66041",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0ec251cd-0969-4129-b607-485f3d11460c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d8be82-82f9-49dc-9996-214025397ce8",
        "cursor": {
          "ref": "9d6da863-d0ce-4014-aeaa-56c4c5468ec3",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bc8dc0f6-ed82-4386-940f-53122dff5559"
        },
        "item": {
          "id": "a6d8be82-82f9-49dc-9996-214025397ce8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ba54cdc3-265a-40f8-a321-7e04071bebdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d841408a-e753-472d-9d3b-e203d57b500c",
        "cursor": {
          "ref": "f40f51bb-b872-4a53-8ba9-359728d589f4",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "094ce64f-7266-4d01-b03f-703b947d6ec3"
        },
        "item": {
          "id": "d841408a-e753-472d-9d3b-e203d57b500c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fb7301ef-cbbd-4096-b663-9ada79f5fa3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e13ee7-284c-40bc-85a4-07037a8900a6",
        "cursor": {
          "ref": "63247de4-360f-4487-bb8d-9cf4199c5d3c",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ba91518f-52c1-4c8a-be22-2577df1e090c"
        },
        "item": {
          "id": "b4e13ee7-284c-40bc-85a4-07037a8900a6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "016cb336-8fda-4f4b-9d2d-ba557e39c12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125eee40-2b61-4c99-b0a9-8984d445c239",
        "cursor": {
          "ref": "a3a4f8c9-e3f9-4df8-8301-fac1cd60dfd0",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f488e016-8d07-443c-917d-0109ac3b8c75"
        },
        "item": {
          "id": "125eee40-2b61-4c99-b0a9-8984d445c239",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "25544294-befa-4516-bddd-c402b0927f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bfc356-12de-4aa1-82d3-c8a16eb3b424",
        "cursor": {
          "ref": "d5005eae-7e68-478c-880c-14d0914adab3",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f658b4f9-a1b2-4bcc-9fbd-c4bc265ce485"
        },
        "item": {
          "id": "94bfc356-12de-4aa1-82d3-c8a16eb3b424",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9a593995-dc01-4c06-90dc-a249c8b00baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b0d98d-cc01-414a-a1c7-65b9cd0c2a6c",
        "cursor": {
          "ref": "9ba22123-86a8-4a84-b95f-f5b29e970bf4",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "61f4770c-82e5-4d70-acda-0c285e8ff562"
        },
        "item": {
          "id": "e1b0d98d-cc01-414a-a1c7-65b9cd0c2a6c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "42b71e02-e10e-49f8-a556-1fc5d85ac7c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab15256-94fd-409d-865d-125331a37df7",
        "cursor": {
          "ref": "c34c193b-3efd-44cf-bfc5-a61097d3103a",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "30548efe-32c9-41ed-a4b8-a3443648bc16"
        },
        "item": {
          "id": "4ab15256-94fd-409d-865d-125331a37df7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "41a8f770-3bee-402b-8fde-5723e9e27970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922b872c-a688-4cd4-b3e3-d61ec74de7e0",
        "cursor": {
          "ref": "d9e42bb9-b2d0-4d0d-be8f-325e195fa579",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "dcbaf920-2ab4-448c-b96b-d3fefa326d6d"
        },
        "item": {
          "id": "922b872c-a688-4cd4-b3e3-d61ec74de7e0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9d1b0685-abf4-441e-b335-f9bf0481f6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1408600-b61b-421e-ab0e-48594527e6ae",
        "cursor": {
          "ref": "e7c56c46-331e-4b5b-9b23-d9d8657cb8f2",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b6cc1234-6ff1-4009-a2d2-d6889b98948d"
        },
        "item": {
          "id": "b1408600-b61b-421e-ab0e-48594527e6ae",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9db063f3-a8de-4b20-9c5d-5e42564efc5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42bb925-19ea-4fc3-90a5-3d1a341255a4",
        "cursor": {
          "ref": "b6621211-b410-46d4-9fb7-a51138cfc5bd",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e9449601-f432-4132-a780-b18249948bb1"
        },
        "item": {
          "id": "b42bb925-19ea-4fc3-90a5-3d1a341255a4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a90088d4-64f8-4455-8849-16da658e343d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7d34cb-2de6-474a-a49e-e1a8de3f1667",
        "cursor": {
          "ref": "6c15d907-830c-4f0f-89f0-1457ea7fb39c",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4089b5a8-c1f7-4338-989c-838fc2e462c2"
        },
        "item": {
          "id": "0c7d34cb-2de6-474a-a49e-e1a8de3f1667",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ce643ec0-3164-4a3e-a430-b4f8e7d257b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9898ca5-79cd-41a1-b1cb-b84f7360be79",
        "cursor": {
          "ref": "3dfdc3a4-66b5-493d-a21c-58c5f8668327",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b9adeb60-5d43-4a4f-8803-a6648d741f07"
        },
        "item": {
          "id": "e9898ca5-79cd-41a1-b1cb-b84f7360be79",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bbee3c46-54c5-43a8-88b9-564a25b80afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e2bdc2-df3d-4afa-8eeb-2327a9d50ec7",
        "cursor": {
          "ref": "c70b72ed-1e14-4341-9f68-b5f3465ddded",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e9a9c135-75a2-48bb-b926-1bc5c6ec06b0"
        },
        "item": {
          "id": "d3e2bdc2-df3d-4afa-8eeb-2327a9d50ec7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a584e86e-fa7e-43e8-8235-349b5749bc57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f911da9d-5c9c-4a3f-8e58-31651d6ce086",
        "cursor": {
          "ref": "d7892ddd-e823-45dd-b354-86db485e9728",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "47baa200-5c41-4f75-9743-4c7f9faf0d41"
        },
        "item": {
          "id": "f911da9d-5c9c-4a3f-8e58-31651d6ce086",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7ff75ade-b44b-40de-8b33-c365f96b194c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27615e7f-247e-4878-af45-f98bc92300ca",
        "cursor": {
          "ref": "3f3d63e4-b76f-4247-a942-83488360496e",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "350fe15f-e545-4db3-b741-0080d9882845"
        },
        "item": {
          "id": "27615e7f-247e-4878-af45-f98bc92300ca",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a9bc8ebb-e68a-49f6-9dba-625aa0498fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d81ced-004f-4cba-9b41-d0fd2a54c6a3",
        "cursor": {
          "ref": "be245b49-0fad-4c16-bbd7-428d06f9c584",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "51518d4d-d730-4f6a-9c21-2c155b6ea828"
        },
        "item": {
          "id": "b6d81ced-004f-4cba-9b41-d0fd2a54c6a3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "91874f90-ba0c-4ddc-9080-9ff0c5932aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a757341d-9cda-4a72-9f3d-04e88736ec32",
        "cursor": {
          "ref": "4be1ed09-3f37-4854-af80-fc0989774444",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1b084dca-ac39-4a87-a2c8-d1934f390494"
        },
        "item": {
          "id": "a757341d-9cda-4a72-9f3d-04e88736ec32",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d860cf90-b6c6-4c02-b273-3968ada38453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8270abda-9d07-4772-954a-b838a79cdb9e",
        "cursor": {
          "ref": "e061a592-9469-46bf-a7b5-703191fce447",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "19e93eba-3a32-4053-9b0c-9c684377c1de"
        },
        "item": {
          "id": "8270abda-9d07-4772-954a-b838a79cdb9e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0eaef433-0584-4a5e-aba5-78f4b14445bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb3cdd5-60f7-474d-9fa8-8d95202edc38",
        "cursor": {
          "ref": "9073e182-e12e-4756-aa3b-9622da596f64",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "03e83c67-d218-402b-87ca-69decca02cde"
        },
        "item": {
          "id": "8eb3cdd5-60f7-474d-9fa8-8d95202edc38",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9563719c-18bc-4268-80fa-705fd0cecf93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a954342b-7f85-4422-8d99-fdde02e8e430",
        "cursor": {
          "ref": "0fc8303e-2562-4325-a07a-4dce0140dd7b",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c372d3a3-446c-4715-b739-334df50c9690"
        },
        "item": {
          "id": "a954342b-7f85-4422-8d99-fdde02e8e430",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "cf53ea56-ee53-4352-8035-67b03cc1b0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d583fec0-850f-4ee6-a069-dd0c3078c0c2",
        "cursor": {
          "ref": "88d3e097-97f6-4f63-8ca8-85d83963131d",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e972647f-647a-498e-b566-8315898027c1"
        },
        "item": {
          "id": "d583fec0-850f-4ee6-a069-dd0c3078c0c2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4bcb9574-4798-4655-97f4-61b661d75cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1d3a2d-244b-4ffb-977f-fa2e05b03493",
        "cursor": {
          "ref": "872a0549-969a-475f-b6f0-1ca381f2f337",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fd852c59-b128-4a0b-a595-f67e9c251440"
        },
        "item": {
          "id": "2e1d3a2d-244b-4ffb-977f-fa2e05b03493",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cead35da-8952-49d3-bc40-34cdbe27aa99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50d88d2-3f89-4cec-9d00-1597c05e7bda",
        "cursor": {
          "ref": "6b7f8502-be87-427e-9862-0ac70aa68c1f",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ed804831-9344-4427-a9fb-3424023ed486"
        },
        "item": {
          "id": "e50d88d2-3f89-4cec-9d00-1597c05e7bda",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "438e3a6e-5d8e-4685-b0c5-86a4a2190df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9243886b-7889-4e3a-9330-415c31f331bc",
        "cursor": {
          "ref": "659c8349-6a33-459b-bd5d-c79df459d3c6",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fcb30a8a-002a-4604-96ca-ee8a40838f56"
        },
        "item": {
          "id": "9243886b-7889-4e3a-9330-415c31f331bc",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6527031c-07cf-476a-9d67-03e130e07991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d4ea66-9ab4-48c5-9439-2d173bc57449",
        "cursor": {
          "ref": "e6c85d52-3e00-4557-94ae-45dde4e6fa93",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9582b19f-bc1c-4202-8138-673d658b55aa"
        },
        "item": {
          "id": "58d4ea66-9ab4-48c5-9439-2d173bc57449",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "15209b29-f015-4275-8a18-d83c4f1c4356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ef55cb-50c5-4cd6-867f-1ef2d320ca36",
        "cursor": {
          "ref": "57634ebb-ea50-4cab-9753-a40205b829b1",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ff560cef-d8f4-41b8-bdbd-463e4f224c58"
        },
        "item": {
          "id": "15ef55cb-50c5-4cd6-867f-1ef2d320ca36",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "63dd9d85-64ed-48df-9be6-4de72118c447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a74cce-5d01-43ff-a560-2701f8b48ccc",
        "cursor": {
          "ref": "a508ad66-36c3-4e2e-bf19-08e8871d5f87",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "77d947cf-fc7b-44ed-99aa-cb4536a27ce0"
        },
        "item": {
          "id": "75a74cce-5d01-43ff-a560-2701f8b48ccc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1144f037-4b5a-47c5-a695-0aba7bc6e935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7f57ee-c335-468f-ba89-6e4ae5fc8ca6",
        "cursor": {
          "ref": "231df93a-4044-47f0-9c5b-516305527fd4",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "81f743e8-3fcd-49f7-a080-b20db60ee1fa"
        },
        "item": {
          "id": "6f7f57ee-c335-468f-ba89-6e4ae5fc8ca6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e7fd44ff-b311-4413-89b1-67622e250d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99317ead-9d58-41b8-8feb-88e13650e31c",
        "cursor": {
          "ref": "1fda0376-a94e-4987-b331-65208d942e49",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "12f2b0cb-5cd1-4c97-9fa6-b2c4a3566295"
        },
        "item": {
          "id": "99317ead-9d58-41b8-8feb-88e13650e31c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fe37a729-b346-4359-991c-c029784fdee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13aaad6b-5dd4-4944-b399-8311a4ba197f",
        "cursor": {
          "ref": "3a20eb5b-40b3-4cac-96a4-e7fb2eb9c8af",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7b5cd68c-2200-430b-b7f9-cef53d95e07f"
        },
        "item": {
          "id": "13aaad6b-5dd4-4944-b399-8311a4ba197f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "fb8f912e-61f0-43ef-923a-80aa447949f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af99e96d-49b8-41e7-8a46-9f3068c3cfbc",
        "cursor": {
          "ref": "2af1a247-3ea8-4492-b02d-ab0e84898500",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b3bfca3c-6922-4ae0-b323-48c545869054"
        },
        "item": {
          "id": "af99e96d-49b8-41e7-8a46-9f3068c3cfbc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "50ff5032-7b7a-4022-b5ea-b8d6ba89ae4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3ac769-9944-4db5-920a-1dca6b80175f",
        "cursor": {
          "ref": "a329feb8-d2ee-4497-8fad-69995edfb0cb",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "14c5da45-2bc6-4de0-9e4c-109dd485afaf"
        },
        "item": {
          "id": "fe3ac769-9944-4db5-920a-1dca6b80175f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c83e1939-98e6-426e-8492-86c2d816f0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73265b3e-6c15-4ec7-b938-03dc01e7c60f",
        "cursor": {
          "ref": "d69d1f42-033e-4f85-8e2b-b12a65b371c2",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f5901300-8394-4333-b249-378243cb1aff"
        },
        "item": {
          "id": "73265b3e-6c15-4ec7-b938-03dc01e7c60f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "68f844df-8786-40aa-9d3c-dec5cfc665a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843b5f36-ef81-4df3-be64-bf26a26fdd18",
        "cursor": {
          "ref": "925ec849-f63e-491a-ba50-6e419acfd559",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "21672104-0ce8-44cc-881f-c8fb9fd126bf"
        },
        "item": {
          "id": "843b5f36-ef81-4df3-be64-bf26a26fdd18",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "df3397f7-f8a3-4b4a-a962-759fcda8b830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bff880a-e7f9-4eac-b015-e2252cfc50fa",
        "cursor": {
          "ref": "c342962c-d3b2-446e-9ca0-f0fd70e9b102",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8d7944a3-6423-4bff-87c2-00530cdad8f8"
        },
        "item": {
          "id": "2bff880a-e7f9-4eac-b015-e2252cfc50fa",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "74f2f77b-76c1-4966-b43a-89d4711bc17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773ceba3-3077-400d-ab61-99e33550a605",
        "cursor": {
          "ref": "0973035d-79a6-4b1e-acbf-028fd97d15eb",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "86cdd6c0-0da9-4b97-a594-ea6f50812c34"
        },
        "item": {
          "id": "773ceba3-3077-400d-ab61-99e33550a605",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "67978893-7110-4ec2-b53b-91206be1952b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d55af54-0a52-42e9-8c16-8d627664ff7f",
        "cursor": {
          "ref": "d3099a9c-6aa7-4873-85a7-90e12b97d011",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f2960271-a15a-4d43-b64f-fee96e18f22d"
        },
        "item": {
          "id": "2d55af54-0a52-42e9-8c16-8d627664ff7f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "59d2761e-7b0e-4e8e-a89b-1c011fa3879c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a4ac24-eeae-41fc-b9d7-6462beef4dff",
        "cursor": {
          "ref": "c84dafac-cd5b-448c-9efd-ce3e6f110b15",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "69a39911-71f6-4b2b-b24f-87d6f1b95081"
        },
        "item": {
          "id": "e1a4ac24-eeae-41fc-b9d7-6462beef4dff",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "331bdc31-97e9-43a8-9e25-3b9b756d6fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24cea3c-47d7-4874-8b19-0600db11158b",
        "cursor": {
          "ref": "602a686e-3705-43e9-b6c9-6cd4714359aa",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1e79962e-09f4-420e-8c83-df201f3c79c9"
        },
        "item": {
          "id": "a24cea3c-47d7-4874-8b19-0600db11158b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "518f6ff3-4a87-4d25-9743-79c9eea3266e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eda63db-68de-4508-b66b-9406857f719e",
        "cursor": {
          "ref": "285522b9-d32e-49ca-b725-1929365f0961",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a369b65e-b155-47ce-b8c6-34f0f222087a"
        },
        "item": {
          "id": "8eda63db-68de-4508-b66b-9406857f719e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c732518c-3932-4fbd-990b-666e59ae237e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fccd7970-13ca-4ce0-95d2-153e71e9c475",
        "cursor": {
          "ref": "d0cdf833-0c79-422f-a0e4-c63c1e43a9e2",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6230d913-ebd4-46a8-9fa4-4c47692ea8a1"
        },
        "item": {
          "id": "fccd7970-13ca-4ce0-95d2-153e71e9c475",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7a615ba2-d47f-4671-974f-70c1b2fee6b8",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc827767-1cc5-4fd6-817d-2da23e4d0c21",
        "cursor": {
          "ref": "07e9b46e-beda-4ebc-be62-e271cd66896a",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e77fbf38-fdb3-4e61-8daf-f5607b5c2c05"
        },
        "item": {
          "id": "cc827767-1cc5-4fd6-817d-2da23e4d0c21",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3db7c3b4-bf88-4087-9f95-72441a8f0f4b",
          "status": "OK",
          "code": 200,
          "responseTime": 2735,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3097b6-450f-4121-a65b-4e8da5050701",
        "cursor": {
          "ref": "64d52040-2df7-4d5e-adad-03b03c016a1b",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ecd84003-090e-4e46-9fb0-9aad6536f936"
        },
        "item": {
          "id": "1c3097b6-450f-4121-a65b-4e8da5050701",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1b0e097f-f8c4-4a11-a96b-2d326908cc8a",
          "status": "OK",
          "code": 200,
          "responseTime": 3146,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4699f1b-2207-403d-aea3-9459b1a41587",
        "cursor": {
          "ref": "e5e3cffb-1fd0-4047-afb5-c7be0e083ac4",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "67ef0599-e91f-4b6d-8f36-193b95e6a86a"
        },
        "item": {
          "id": "c4699f1b-2207-403d-aea3-9459b1a41587",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d943a50e-fc7e-43a4-a73b-28e0ae24fa17",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4699f1b-2207-403d-aea3-9459b1a41587",
        "cursor": {
          "ref": "e5e3cffb-1fd0-4047-afb5-c7be0e083ac4",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "67ef0599-e91f-4b6d-8f36-193b95e6a86a"
        },
        "item": {
          "id": "c4699f1b-2207-403d-aea3-9459b1a41587",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d943a50e-fc7e-43a4-a73b-28e0ae24fa17",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4760c6c-6580-46de-913e-f937dcedfb1a",
        "cursor": {
          "ref": "38f713e7-dcc6-42ba-9933-9c964b8c7eae",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a29c9867-6a25-46be-922a-90d37214ed97"
        },
        "item": {
          "id": "a4760c6c-6580-46de-913e-f937dcedfb1a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7c0e2be6-6d7c-4567-a025-7b691e363598",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3587edb-983a-4a11-a8d4-da14b0860f85",
        "cursor": {
          "ref": "294191bd-6845-48b4-907a-b1f24df56aa1",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d27dd01b-4f2d-4b32-9546-603d7551ef09"
        },
        "item": {
          "id": "b3587edb-983a-4a11-a8d4-da14b0860f85",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7dd62e6c-221a-4fb7-982d-0b25855be3fb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}