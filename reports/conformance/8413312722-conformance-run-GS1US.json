{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7f0fa3bc-9884-4b80-906f-2fbc30232b06",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d9ef9065-012d-4afd-80db-fb97f5bfd243",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "97e4fd3f-5765-47a0-ad99-15c1eea7e874",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d1c6dfba-f4a8-4f23-93f9-22313f8a7513"
                }
              }
            ]
          },
          {
            "id": "a37fcff2-3f3f-4f16-b765-d69ba746d245",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0239ae33-9617-45cd-a481-951dbf45b38f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bd70062b-b04b-43bd-9976-f86d88543942"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0d523fac-a67d-4645-823a-684309d28ef3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "bd2e6689-ec21-422f-b7a1-f439f1ab719d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "372a262f-fdd1-47d2-b8df-ae9742102fb3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d241e6ae-9bd9-4112-8146-f0a83d7ddc27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "42aad763-9cb1-479b-a8aa-7ecb39bba244"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3afb63da-c5d3-47f6-8a6c-a11f7702def8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0cda0948-2c95-46d9-b751-d61eb6356216"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6074f1fb-a64b-4b69-8d31-56457b79a8d9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2aa595fc-2c3e-4e7e-a32f-53e7fac73424"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d38167e8-de40-4fbb-93ca-e6da8a4a2004",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "84a7a772-f714-4c3a-b4d8-6d7940bbc7a8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7956a075-c2cf-4b3d-90a1-a4832673bc9d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ddc566cb-fa1e-4c06-977b-3fb2d3a35b5f"
            }
          }
        ]
      },
      {
        "id": "0dd2f8e5-89ed-4e46-a1df-223b7a28f04d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "83844f17-7bb3-4c7c-912a-bc1986016a1a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4248eaac-5600-4e49-b8c6-5a37ae70ccdf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6a2b2ca7-4496-4424-a181-b3d0f693aa6f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58b53f1-d67e-4157-816c-7a7e4f173fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6e79027-e80d-4190-bd9b-b33a4d9b0dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4114beca-b5aa-42f4-bf7f-4bdd7275c7c9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38810fe-0ccd-43a6-852f-674a255f90b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54e09106-516a-41a4-9d41-7f41514e8fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3898fb92-17ea-4fbe-b0db-8698ba9b72c2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1942e88-1027-4c31-a48b-6a9903035829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c100e3c-c94b-4e3e-8972-36b7f6ff548f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "389d5d70-8e99-4787-93a3-deaf169c6aa3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e424bd3-5e2f-417b-9352-a668fab379fd",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5139d2f-32b7-4595-b27a-60f186443649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0447d306-aaed-4251-a5be-0c8633c4de90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a818806-d58d-44af-80e8-fb2f8c0a67e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf50332-111a-4d98-b4a9-7d2370662162"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "081b21d1-f243-484c-882c-66ca56035ede",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e6811d38-f1d0-4ec3-a77b-07702a1b4b33",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e58d3b2-0fdb-4e5f-9a9b-3957193503b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a54f0de4-922d-4c27-96b4-4c9ca9d6fd9c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da94e111-d999-4102-9764-c3c36d09434a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7f52b1df-d719-4871-9203-e4d9e6960731"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91488d99-98df-444b-ad6b-b944006471e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "75a1e16d-dd13-497d-b5e9-b8a9756a91e8"
            }
          }
        ]
      },
      {
        "id": "143d01b6-9ca3-429a-9688-02580bd0f17d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4b937a6f-5a87-475c-8dc3-d41c944c5008",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ff7e6c0-7668-42db-8913-e9aa37835d68",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f06429b8-0f41-4ea8-9a4a-250a002bdb6e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27385da2-21e0-4760-a9ea-5e0a59d39bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1585e71c-7a12-4b49-8863-f1064280c261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2727d833-9058-4690-81bf-4a9a47069f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c23bd7d-f0d6-4a90-9393-1e93174de315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949d7c52-d749-49c0-a5e1-37dfbcdba499",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca071c3d-48a2-49b5-b43a-8641501c4306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e73615-e8ba-484c-93fb-c679c49262b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885695da-d39c-48e6-bca7-16ca9343bab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bafdae13-784b-49f8-9909-30d5d938b2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ce5c25-d3bd-4a1c-9dd2-6128496f1d9e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1752dfe-4325-4f5a-835e-fff11b87abc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a41e228-3aa3-4e8b-b5a5-431610dfab8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d58d49e-055c-48f3-af7b-985d9966de63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60593d73-bb95-4056-a42e-33444f8ce6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51bc9d7d-4073-4fa3-86f0-37aed81e13bf",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb424d3-3af1-465a-8ad3-ffc3dbff17ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "767b656d-4fd7-4864-b0ae-1f7a6785813b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4812b0e-841e-4f4a-be3d-fdbb9855aec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecd3dc09-9313-49aa-a4e1-f64a428779ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b506acde-9474-4e9d-8131-d3dec2a2912f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9470b6f-7028-4ffd-95fa-bf158ee83e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "005c6f53-462d-4a48-80c9-cd4e60acb977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb902210-e041-4086-9b33-02c62e6a7bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0417a8d-bd3a-4d9a-83d0-e5a070170f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88306ad7-dc7f-489f-bcc1-067c630c1295",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02956238-3fe7-4ab8-9266-50ea15a7ca58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57f53fc9-10b7-404c-bac2-0eef18a2f7f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f4f3fa-f69d-4d24-ab2f-fcfb7daf38f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c04e417e-eebf-4007-b8bf-2185bec6b049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c2e507-f480-4a35-add9-22240354707b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25352d7-8eef-4fe5-b247-a6c48ef60636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dddfb03-8118-4046-88a1-f3a02b90c950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4a93e7-e0bf-40c1-a352-991ac46cb822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4da5c050-3f56-4f5c-b98d-af36ff380146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22dfb983-440f-4da0-92c2-4eabb6e9d3e9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de09572-466d-4d1e-a9e9-d6b48b61ca3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff797c8-7eb4-46e9-b408-a76b160417b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a12fc3-b6d0-460b-8f99-7fd2fef3a591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67f619a6-f9b6-4cda-9966-9ccd51191195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78504d15-d324-4af4-b384-4631e46c8052",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7d36eb-4ebb-4a16-aea2-e91a30be7454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9603b9-26b0-4aeb-bda0-67e411fe2977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d939090-8b29-4196-89df-b832d4bf78c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebcdded6-2b3d-4853-9cda-a1b5ef15ce24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a04d681-ce7f-4984-a7ee-94c169b4ed7c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f601f7c-0432-4ede-92f5-66a68dad4b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "815a1735-2f56-461f-8dbd-aba008d2e0a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3cf2f8-dc51-4b90-932d-4a0e7671d3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f76f4868-1ebc-4d0e-8b00-38cb93abe7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f4d963-90e8-43a0-8aff-3681ab3b788d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "660f44e6-0d50-43bb-ab25-eb266a994627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa5c90e-a889-4eb2-9193-95c609ff5edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133882a8-15bb-4d97-bda1-967ce2c7d6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d56bf988-a017-498c-a671-609adb123e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aedd3ffc-6bc4-4399-9cd1-74d9d9226309",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23e42da-a9b7-4f98-b236-24741b2436e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce472ccd-e185-45a2-8d81-c1a1b37e478a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252a3ae5-f519-48fe-92f0-60abb1a04564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abffbd23-0125-4621-9410-1072451ba1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5cd86e-99ad-4c48-9c67-229ab4ddd59d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2bdb044-8449-4a39-8785-99d858cb2425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad1f8a1-bdda-4f0b-aca4-8abe55455a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6096334-ee6a-4b50-84a3-48597fce708f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f27282e5-ce92-481b-99eb-3a2b5519f130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e311856c-c6ed-46e6-b617-a9c5b5e81a69",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b54d7a4-b1ec-48b3-aa28-b4d10c0b682b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ba24c0-4344-47b1-8e1c-036cd22677d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fcbfba-2ca5-4566-969d-5a742bc08c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89b477f3-1fd2-4d41-915d-d45ea896adbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf00654-f643-4de9-930c-1bfdbad4be93",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3966c99-c431-4b27-9379-9cdf89ea35f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe050fcb-2d6f-4f30-87ed-a7a670b088d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4ecd05-68ce-45e6-8acd-4fc01a6b0a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92dd0323-744e-4da8-a237-760d6cc9188c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a522f44d-a645-4f2b-91a9-d3a315f5c592",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5adfa62-d5e7-44d0-b3f3-39983a34ac91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da40f3ab-38df-4be6-af7b-260267ed3a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdcfe82-02c4-4349-ab8b-e7acfebfe4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "defd89d7-52d2-4e68-8a84-38fefbfd82df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861d6f3c-dbf8-4dbc-9a02-2b4cfd68b3d9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306a7f2d-d633-4b36-9da8-256dd9c9b2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d05ab8-1bf5-4ca6-8295-be964964413c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ecc7e5-f214-45b4-8c18-9898a786cde7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f667e9d-386b-4e01-9511-027026e09485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b09f05c-a0b7-468c-9f88-a0ab2db2c9c5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6309bab9-6a7b-49cb-93cb-53b969fb271f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79aa00e0-98db-4dc2-98c7-a51484f64e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a7a4c0-f9b9-4d44-9fa6-ed10ad50ba79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "895c8f85-abaf-4502-a8d8-f5cdd81b85e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a31b5849-e9f8-43db-bced-36bb69a33cc8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1842a98-9ce2-46db-9943-845b77d94027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c0eac5-ae2e-4ef0-84da-8f14ca62da57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4976dbc-22d0-4109-a71a-7d7a33a3daab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9399e44-c62b-40a7-bdae-64f44448c13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226a151a-93ad-4f29-a6d4-b9e9396469e6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ff1003-3b9e-4359-9ea9-ae9555d9c940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a293f32-b821-4c35-b0f8-663509ab3ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f918cef5-6f6a-40e5-bef9-4412f8f205ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cea0e6fa-dc6a-46bd-90cf-9d2c43926cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1750f75-9f04-40f9-a862-d9e39dbc90d1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20080069-61f0-4b7d-aca0-b8962038d49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f93bf90c-e178-462d-b2db-45ee1e83fb21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285a338b-0813-493e-b316-7c45faf24152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90dafa0f-e5c3-4bb5-8f09-67233867a9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52cef92-74e3-4b26-b4d4-9e22ff702746",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "239e6a0b-6e9b-4c83-8326-3f3d18e24bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b44b17ab-d62c-41ab-9b01-d966f54d9773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e091b04-d507-4f4e-ab7e-7b59dec6a8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6b487a5-6321-4003-b1b3-72fd1e8f1778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0600dcc2-2da2-420a-ba88-95c7896aa86d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10575e6-fa34-42ea-8061-a2bb90a52c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5d51698-facb-49f1-9137-f94d7abfad4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06ef0b5-dd19-4f45-9444-72d01c0fafb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b45c0612-7e89-4f03-b72a-07df3c9e03f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56eff9ea-7946-4885-a2bd-84787c092a68",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "004f5a43-eb00-4f01-a4c7-c6a83a137fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de9c6da-0373-46ec-b050-fe5570cabad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0207e5-e308-431e-81e8-c91a1958bc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "05f7c440-7075-40c2-a021-5113d3adb8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab2cc9b-6a1f-44cb-816a-6e92d3e96b49",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8864b98a-54e2-4fb2-8ce2-9071e117654a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93fdd767-0c09-4c1d-84e4-3d19ff71347b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba50fba-a121-4ca0-9384-e921a8304543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9501f3c-4b53-490a-a859-cd2bc66190da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1387c831-e2ab-403e-8203-bdf46ee6c1e0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b832f604-46ff-444f-a84a-eec59bc328f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44564931-e40c-4597-86ad-3fbf718285fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453eb108-c34d-4f3f-9d47-b4dde20144fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d047eab1-1343-436d-ba96-0d7af8c45adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d91e95-216c-41d7-9f1a-08cf321f1911",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf56747-1938-406f-beea-98b35566cb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dd4f0ac-4775-48a0-be7b-0ead84828d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e8e16e-df1f-4e29-9464-bc77b8eb1c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c85d16ea-ee46-4fd4-a610-c2b7d4589430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e3d115-c9da-410a-996f-0a996fd6b74c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334e12a0-2fa0-4be5-998f-7e0723773350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47937d16-1805-439f-86a1-6b3615b36aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637b63c1-a448-4b53-b06a-c400af684406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ab1d3f-b110-473e-9c7b-7d593300f6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2ee931-6fa0-42d3-8481-c494e3054e87",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "421a5adc-debc-41bf-8c27-7ba83415be08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f3f67a-3023-4312-9302-724c5fc8cad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaecf103-cf24-4c94-9b79-a35b865c2206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed411602-0775-437e-b8a8-95a84fb12c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da2c7fb-afdd-4453-bfac-6ccbd805fbf5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6cde5e-ebe2-4b5f-af61-495ff0a94ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f884c359-4f12-4b5c-9faf-9bfc9fbe1b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086629ee-794f-40b2-bd44-678552f488dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc3138de-454c-4738-8ce3-926a9b32339a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1561a757-560a-486e-8586-68d395f13edf",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2f8932-b60d-4ec9-b6a8-d0be182aeb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3035bd-373d-4886-a910-9d075234c457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d439bdd-a79b-48b0-a27f-384b3d8268e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "25ca2038-91dc-4ed8-bf60-3d526d91202c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7128dfe-eb36-4c85-a247-e0e5f63fb9d0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5e6720-a984-43c7-afea-57592c85f697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f36015-3585-4fa2-8449-db462010fde2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da3ff54-a7ca-44f7-8f4c-9702bd4f88ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd5b6dcd-ea21-4ae5-839b-a3bc959401bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5c97f1-710a-42eb-aa1f-6f58acbffce2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa23af6-c354-46b3-9c82-28e187714e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa59ae43-0c8d-47d2-b2b5-f19db64f680c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b21781a-4712-4ee4-885a-cb87ac4baa7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f096db11-ab10-4f3a-9ee0-869d0601f186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b07e42-ebf4-4f50-9d84-0bdee62a24e4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab67a55c-a3fa-47b5-a1c9-7307b37949bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8762973f-330b-4058-b930-707431558b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a30effb-8c89-4a07-bb2b-a3209540a00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a03d85e3-3309-43cf-88a1-4eaba123757c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6486b93f-b0d6-49e4-bb17-d6f5cd2c28db",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df6706c-de00-41ad-806b-574f01fe5038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e80a149-2f63-4158-87b8-a7da65d5ed38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2322bce2-a331-4b7a-b2b6-0b2a11f7f535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5772aeea-6ce5-4418-a866-a7169404d880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c6edf8-698f-4bd6-a14f-e3464d1611bf",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a4e5cc-4d16-4f3c-838d-28bf8ba4d430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d1fbb90-7fab-4cb4-b9f8-56ce9f5ffc14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c2949e-705e-48e8-9892-f1737f33a53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "623950b0-d450-4712-8376-5d2549674b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348bda72-66da-4654-bd2f-fe21e3e22b0f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386fcf10-0057-4950-acd6-276062360c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3158814-bfac-4d56-b487-f78410522d4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5ad195-bbc9-4f66-aa44-cd2fedf6c902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4606ea21-b9b7-4742-8a4e-1609c00dea11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3009e938-36e9-4886-9695-f8e8c60bc364",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e163bef-0f98-4f06-81e6-66fd981b0d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b0611c2-e8b5-47b2-980c-c08710c44222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d879d6-8e33-4e39-bc9d-7f25f3e7b753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "876ccada-cd65-4d5e-a2d7-de6afd051acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f412f68-92dc-4334-a679-307e94be6c46",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44862017-42d9-40f1-9398-8cb106f430a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5daf3d6b-7728-484a-8769-a042d596492f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5113597-9370-410e-9fae-016b4cde6e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a9b8fc9-3ecc-4721-9c59-96795016ff88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775aeea6-0c6f-4425-9f45-f1d4071cfebe",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f86cf44-b333-441e-b7f3-30a5d8310e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36110710-4c65-432a-babe-58b075f7b109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a988d65-3b32-4712-a6d3-9c4572d07dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6acc078a-26fa-44b3-8b80-c479c87e32f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f5a4cde-4350-4f38-a9e3-d87240f1fa13",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc6bea5-e0ee-413f-b367-07ad90ce2488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "925a8b3b-e0e3-4568-a89f-8d56c9df5ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391552c3-b95c-4a5d-8631-ea32bc465f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f417463-d544-4edf-bb3d-af63b1b83f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f7dd97-09e8-4bd2-8f74-298b593fee10",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ffd029-b4eb-4f48-9f90-aa94622b9d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f24114-e06e-4e4e-94ef-17339c4b1ec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb16003-7445-498f-acdd-d6fb8dd8f335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f4cb2d53-1320-49bb-b8c3-402e1ae40901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f974502b-c80f-4a86-9c95-4ead29be6c1c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ada04e6-5167-46a7-9d14-33f05dd9340e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "794e3c6b-121b-421a-9c09-d11c3c25a186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c06aeb6-8a41-492c-a2fb-c52dcda653de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "db626721-fe26-47c7-88e9-b66281d7a27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afb7399-e13a-4be5-9d8b-90711e776775",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab536b82-682a-4400-9975-8d9d92335ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb8d9d3-ef1e-4c8f-bd2b-2bf86966eab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b623d8c-ea43-4b32-866f-d2b2e5d947e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b241c33-ec66-43c6-8b72-eda7e764ac50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f59ff59-8e55-4d58-93ad-218a2f0cf822",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a708df-eed3-4778-9f7a-c0ad5c10222d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8704e7b-04bc-4600-be3d-e7857cdb6d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe68bd4-d077-4c72-a453-9347f23a45e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "780bb3c6-4018-411b-baca-91a17970410f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768d933e-5da5-44f3-bcf1-b90ea892a3d1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64129d88-f0a4-45c2-b4af-57bd14cb1cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0921f978-0244-4b62-b4f2-63fdafabb61f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619bcfe9-32e7-4e84-a051-6f20db294cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef6ed558-af52-4e52-8984-ddda19862927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da23eaf-c6c4-4d3b-b4a8-f701de17b086",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2414cc41-74e5-4d46-9e3b-1d88b8d40b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d25272b4-2bed-4bd3-8fe2-067ccb9334f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d75ebb3-e9b4-491e-a156-f7050c53d15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce99aee-303c-4287-b90d-35fdbb381678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc30a212-0cce-4aae-be9a-984df9eac540",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "326ee9e1-f7e2-48a6-9d7f-1879acfde41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68320064-985f-4a3b-96a9-92604c7e1487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a931772a-2332-40c9-b9f3-deba7aac8d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f510f45d-9e10-4dbc-869d-7990f5cdb1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b401b148-78e7-4231-9c79-91b3c1ade9b3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffce6fa-2b95-4847-afc1-117e81e9ccec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd59e7a-dd35-44bf-b4ed-f29b70b260bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376e5130-f0a9-4c9e-806c-26d3fb60d8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "84939e5f-4d7f-4636-a0d8-ddb33d482607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440631d0-648e-441c-8c38-eb5d36921e2b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2171a702-89f4-4941-9a31-33f72eeaa06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c6cf428-72e9-42af-ad02-ec60a4e92b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a900c07a-0258-4c50-8f13-b2de466c0ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3195b09a-0f7a-45ac-b476-d7ab00dd9ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87967ff9-bc7d-49cf-9022-aa0b5e3ff9d6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6734b2c3-2d17-4a15-9175-62077563f3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab31d328-628f-450f-b4ce-d86e9f2e6498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ba7a40-f354-471c-b7cf-f01896548f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb952a9a-e3a8-440d-a2da-89d85d95f5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b37af6-7343-4d4a-8aa4-5e9850d3002c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94025a04-9ab8-4c9a-9a4a-b20638a0b9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e24aaff-d5f6-496d-a784-8960cd7ca345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef4bdf3-5582-4467-92d6-ba397eb83c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7b76630-0a18-4e6d-85ae-a6daf427df5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbe57c8-f1da-4110-a2dc-3eebccd4fd38",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8a6468-1ae5-4638-b34e-15ac9104b4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a99a283-e580-4b62-9385-66a183f315ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab324da-3565-498a-ae74-273bc3703cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68053934-2998-4b63-bc8e-e6885c2235cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9185e80-b601-4fd7-bd20-afb2c41d6e5b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe087652-4630-4a45-86d7-8759fd075008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ae58e5-0774-4d35-8e42-07aacf760cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b02250e-bf48-4489-a1a3-3259cf9cba82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2eb8d0ee-8cdb-4096-b5e6-35400d4e7583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d60a983-2a88-43b6-85eb-b3ef363e96a5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8e860e-12a0-4d2c-9e74-5ac41e4f6448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca16869f-de86-488d-8de6-876f3508419a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236a15a7-81f3-48e9-96e8-49246807f393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc817aa-15b8-49c1-9d9b-9e6b3a304bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04938d8e-3589-40e6-979f-53133d856f22",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9679c2ba-eef9-4d99-9a63-a55a51fc1d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8f14cc-97ac-4d24-ac26-889a557702b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bfcbdd-abe3-4a30-97f0-09eed44be2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9b2e4a45-f58a-4d89-85d0-cc9b76b752f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9e3e2c-c5d2-44c0-bbed-fca75c6ec0d8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f5cc7b-8919-49b4-9ead-288fa0e1bbc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94231f11-e5b1-4d8b-8bad-a2616770ed5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74652420-d241-4b81-9adc-b5be44ec2ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "67c0828f-84db-4efb-afe4-8ff940b801c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4420a997-2cd8-4976-bca2-e02e57ac71e5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca47f53b-cba2-4364-9621-e6e7cf64115d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c36bb198-91ca-4273-a87b-471bb8b9eddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841b7088-fbac-4c9a-929d-c97bbae049fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "caa59b58-915c-49fa-81e5-4f602667276f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e592f522-cfd4-484d-9dcc-8400aaa6472c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31cff9e-0385-4b59-9c2d-70fe49877174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c88534-5d32-412f-bda4-24124ddafaa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3130745f-af12-44c8-8e53-071c17aca802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2c0eda-0094-44e0-b4a8-acc2badcba68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4106985-f413-454d-8857-ff03e0c9601a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e6a3cc-c48f-412a-93b0-bc7a8a437dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f4cb185-b1be-4813-907e-6ce856db1379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b682c0-c657-4137-92c8-dcdf0799a341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7e24590-d373-4d4c-aab3-4b67bbe97ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf19a1a-a231-4206-ae15-beed43ea22ff",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "057b1f88-23a2-47cf-840a-069813a807f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64060994-af3b-491f-8c47-3f0fd23bbcd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778b9c11-97f4-4f85-8d40-d7270a992de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "334688f8-405c-40a7-ab09-f2e1f1f905d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0ec2d5-8c1d-4d3e-8a3b-d4c3fbc006a5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8168b8-0554-4966-a4d0-402592e9d279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd5aa9d-807c-4ec4-b4ab-dff86fb5b715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcacc081-d005-4507-996c-ecba3a23862c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1211cba8-015d-4c94-a5d2-058b09d79999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafbc7d4-9781-40bb-bc53-aa9f65294fff",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5829fc4-2cca-44b0-bae1-14b0fa5f950c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "599e0991-0540-4449-b595-139db59984bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eedf13f-ab0f-4bdd-9619-661d37ddce50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "49fed65a-cc8c-4364-9a28-aa097183243d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350cb165-49ed-4bf7-a23a-52bbb43b36eb",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b2c123-a475-4def-a860-c286827352cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf11336c-d924-4267-b2eb-1b5a8c7fe5d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c23a45-1152-48ca-a7dc-5fc08accb682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "05d17b88-7a1b-4ddd-9996-793c00b6c3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c4bbac-7866-4935-888c-045a658e04b9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d98fdb-d621-4380-a2f9-4d0a8fb09858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c835c506-1b60-40b0-a771-1ddec049eed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f4d805-18a6-40e4-8796-a2355c61e6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e73694e-42b4-4e11-803b-4ae8d739bc24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31dfd1b7-fa3b-46d7-8585-e8ab782c40bc",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635cdeb0-6ef2-4d47-b072-27d819d373d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b9523d-cde6-41d5-9146-a5f7e8b52c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b323c384-2cbf-4201-8810-d40b370ef5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee922646-2c1e-4573-95a0-1b776e4ae59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0932638a-628b-4675-a4e8-ae8c32479f62",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82387bdf-40bd-4744-9961-fadeda0f8fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a534ef-3999-4b5d-82bc-512d38c5d27f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07d6058-ef1e-4555-b2b6-5f16dba9443a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41a09264-26aa-466e-8b2f-348faa015837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01854696-7b0c-4a12-98b5-4f519122d2a9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978fe390-28d1-4e93-b6b9-d07d0fd275dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0f723a-d9e1-4f4d-8549-3d7c7f9048fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd227ad-d05c-40f7-bd30-121830ae132c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "80abb066-c0d3-41ba-a99e-9d582b84df64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1874ed-114f-492e-8f60-07ff1950148b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "721473a6-badc-469d-b9a1-e5cf49b16c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec0cbb3-ec4d-4130-b92b-24dabdb9f5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22450fe0-512c-45af-8f0d-2e0c3ace1e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c6ad257-a836-4b6b-919b-4ba8ea45de76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc0accc-6b74-4b68-9401-04cefeccf001",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6feb0e-ddd8-4566-940e-995b1e53543b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c56bffb4-930f-4524-a241-e3ac8ac4d6f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151e8995-7db6-41c7-9658-2ea7893d206a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a477d87-bb60-411f-8387-0346b608c34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af85a763-4ec6-42c9-8755-1d4a53f4fb77",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d54fc8-122d-4f3b-8ead-b69c5b888a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "882af3da-c577-4496-a972-17eb48db039c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8a314a-bb2a-4d76-afd3-0585c9a51085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "69871ff8-a010-4490-b237-f4a9f279d27d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e152895e-fe5e-45a4-ae06-cc3c047b3751",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfe078b-0cba-4f3a-9661-3b390e81158a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a39b946-4cbc-4082-8e3e-7064848f5e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38539a02-5caf-4d66-8d13-cc9d0ab8e719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34835f99-04ad-40c8-ae7a-91894e15ca02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5c8f01-4229-4369-8583-9588b347295f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1c6085-aba6-4bf0-88ca-81eb647e3f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae5a305-a2f8-4eb6-8183-def601bf2e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5b0c0c-3142-4020-a9e6-c04ce13df710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b038b2-f9d9-42a9-8bfb-132e094d1a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beaeee15-0d25-40a6-9cdc-054153361fd0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71c9b23-87be-4668-bc71-3639d52d0037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f1e052-4301-409d-81d0-8ce068f1a750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08cb7ec4-db29-4fca-a896-b9ba412ff1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2da0a5a-34c2-4399-a05f-a3a97e210c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f406bd-4d96-40e8-992b-4860b851c30e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a4c7ad-9be1-4166-84a9-347cb73fffbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "694256f5-0fdd-462f-b286-5a20678b978e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9129644-c9ad-4ca5-83c0-45a2cbf5327a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e7e8866-6f1b-415d-bc70-515bfdb4fd94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c348e7aa-a536-481c-9403-369b24adc79e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f354b6f4-43c5-42e0-b329-c8d00eeeefd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103423bb-a9fe-4c59-b140-120e289fcee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5493cc-d917-49c0-b543-aafec9846dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b03399-0079-4e67-8b33-8c00c22ca8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b4b7ca-ac70-4ef2-995a-2c6d09018e45",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72a3b55-386c-4337-ae5f-f1fce5566cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a91febef-1b13-4e50-84b3-9375bca5aae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a0c7fc-d8bd-430f-b462-4bc5705f72ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6869206c-f243-4de7-9300-ac2d9bfee1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a754b7ed-1b98-4c20-a653-587638579788",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0b3d94-edbb-457b-83f2-be8d1d67a851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d40a395-1060-4f0f-a49c-14c76c296bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309f0b41-8bea-4eb5-8294-d69a2fe5f1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "52fbc0c0-18b8-4e9c-a572-1d2ec12ada6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c37f42c-b911-4ca0-95d2-7c8d3593b4d3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8506094f-3b4c-4110-9362-a74d87719e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aab8f99-36a2-49ae-a165-c31920e2e825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6303e63d-3a41-44f9-948e-dfef2879cd17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b095478b-1697-4d4b-a55f-44947e939f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05e259e-1b4a-48b6-9729-0f3decdd9d8d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfbdf54e-d231-4169-bbc5-5470139ee9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f89f84ad-2dbb-4836-88c6-7b246bfb7653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495dc3ff-34a2-4a42-9ef3-75b406b4a41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78b1902f-1fd8-4bc5-a280-ab5e2bc7191e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de5e88f-8682-484a-bcc4-2a43c5b839fc",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c8c54e-7c2d-488b-9e30-eb9a0cb5837d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a70691a9-8865-49c7-8ab4-2ba68bf6c434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9586e826-840c-46c6-a9ed-7638bfc22dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "76a48807-316b-4d42-9e09-b31fb9e2b1b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097e8675-96fc-4235-a562-1c6da798fa1b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2525f4c1-7efe-4f01-9321-dc35127f8cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e2da1f-62e2-4aa8-abc8-b0a3ab994199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d927c0-e8d0-47cc-96df-fc1518dc2266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24689a49-b5df-44a8-ab96-487f7f9c6eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ce61b3-bdb3-41c8-b04c-89e0986214d9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d83fe5e-4a4f-4920-b2c2-cf06cadc77e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9705ebb3-bd38-4c50-8c6c-effaf60977dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29f6cc1-a231-4926-8505-809fda66ef80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5a7b62b-e759-4bf4-b515-4f25b5d9919a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723bf75f-b6e5-4d4a-809f-2d753f70c3f3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15a7784-274a-4c58-8033-617ea690c4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b4c21a-0f17-4aaf-9334-b531e76d9d8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993d300b-c539-4602-ba20-c26da3e7aa57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c944629-4489-4b92-bc76-5819430e434b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a749dbf-7f16-410c-abe1-109beaa73398",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "400e0965-d6dd-4f3c-8221-4ac213cbc285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cce87e2-73cf-4689-98be-02c7727f71b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b125178c-0298-4c47-a9ba-b6d62062424a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3947639-ffe2-4fa6-ad32-d627703a08d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4356e10b-a858-4bfa-8425-6f7ff0231148",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0bd6a9-f010-4081-8cc4-f63f5d06a137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff241a8c-5a2f-4d8e-9acb-3df64e0a59db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d65e6f-6245-4387-b331-da7d9c1bf44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ba160c9-b139-42e0-8e5a-ac44834cc9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231cb7bf-4592-4499-871e-ca0efb28c653",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d59bf86-8aa5-4d53-ba05-874c326f1c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78386a00-5670-4058-becc-87bfb4b2dd54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8b8907-6cc5-486b-ac31-f160d077a424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "698a59ee-4625-4e81-91be-fba022aae0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7211e767-1fd3-4376-beb8-d79d7d8c615a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e94ea9a-24f1-4f51-ba52-3887fc8886e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e5202f-0bb5-4267-89cd-9b1c279df2c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21e5797-15ce-4156-88c6-c16dffd62fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "89d4b543-892c-481b-9005-ea67f1c7cd5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53366e91-37cc-407b-a0f5-c90af54e8942",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2092cb58-f00a-4762-9e96-0de553a5bf86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b726e2a0-f122-4030-8144-c472b51d8256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79729a8-fb17-49ef-b3b4-20de64880f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d65d2e-4d97-4278-b6ad-913b08760efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad37664-f756-4f3b-afda-a25a446aee58",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897e67df-67f1-460e-9184-f8cd960f98bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ae868f-2dd7-44b2-a9db-c71ad8315059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a18793-c5c3-4a79-89ae-eda721641fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "266ad5c6-c8a1-4395-bacf-a035b98a4786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbd7d96-0b62-4d87-8a5a-1fbf570aa038",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81dfd618-08a8-4a6d-92a4-be7934314941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798648a9-fa4c-4329-9977-5b2cced1c8ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72251002-a486-44e9-aea1-3ae495896656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b80a61a1-3b07-47f2-8c5f-540ce32f97f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998588fe-97dc-4681-bb1f-da4625ef1e88",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e050898-b89e-4cf5-aa63-74f4c3af6ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "807f1c37-9c16-4aaf-ad51-728ca2da43fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128452d3-a854-4d72-b0ed-4db751d4e411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "75ed2e75-e547-4914-830d-f0248574438c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "08f49a1c-5a38-4f2c-876f-563e6b4a50b4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "21f2ae76-6dd1-4dbc-9838-a729999d5119",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3114f083-8c81-4b8b-a229-30457375162e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abc7c33b-6fce-4873-b98b-a6c18ffda22a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788c35da-36ff-4a2d-8c5e-4445dbc97ffd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddab4954-4605-499e-b016-81964880c9ca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e0f8c81-d8a3-4c43-aaf2-b468768aab93",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3707ba3a-1eb4-47f8-8328-3b420b846ff0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8335eb0-646b-45f8-9006-02df3bfb71b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "caf22818-a599-432d-988e-02d02899ce3b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9fda4d2d-69e3-41e3-aef0-1b4ba7c57292",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "44e2eff9-a522-4827-9f1a-921e5ffe7ab0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "36d8c4d0-287a-4544-bbfd-c9d934712098",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e7756434-1e8d-4613-9edf-36051ef84743"
                }
              }
            ]
          },
          {
            "id": "e58c1c7e-3102-45ad-9ab2-677a67623d2d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "adf63a85-169e-4217-a421-63811c142ba2",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c5a88da0-84fa-404a-9b17-b09eb965dc8b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40947d0a-837d-4a12-9560-852a1d1f442d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "daeef8d5-531c-4fae-bb3c-783900ee9881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da49419b-cdf1-4465-a8d1-c5a4518fb42f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e679c8d3-be78-4fb9-8898-645fda28a54d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "30ee13d1-e4e3-4676-92fa-ee269df46c70",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e916ff9-f41e-4db8-b341-8e021436777c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f453dd3c-470c-4fd6-8989-c22de7b6be56"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc3e368b-2edf-4d07-836d-c31825aa7b05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "41be5fa3-6af5-43ff-a0ab-622cf2648794"
                    }
                  }
                ]
              },
              {
                "id": "4903867a-1935-4c02-b3ff-a76bd7575d15",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88862372-324d-4715-ada5-4272ad223ec6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2abb391-0eea-488b-830e-95a19aae2f75"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ab3648d-0d36-4111-97eb-af27f095efac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "53d6ddcb-21f5-44c8-a16d-b45c81c710db"
                    }
                  }
                ]
              },
              {
                "id": "00027026-82f1-4300-ae15-babd033e0102",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6dceb0a-2699-427c-8705-31293f2d621d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e75e052-028d-47f0-b550-b973036fc4bf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e33a05bd-442c-45fa-923b-1b562bfd82d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "012fc2a6-23d8-445c-a48b-81d032e5c11e"
                    }
                  }
                ]
              },
              {
                "id": "17dfbd26-3612-4b21-b640-b540bb6f7133",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0278cc82-c3e8-4d31-b8bf-c8b3c604ff9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0961e5b8-ba72-44ab-acbb-dd2f15fd61a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2615fd24-51c4-4cf8-82a1-4ef4152375b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8a30b703-3295-4e51-9101-e2cfa234ab4d"
                    }
                  }
                ]
              },
              {
                "id": "97c85225-1982-4a27-b0ad-dc1bff336649",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f735210c-f211-4213-b86b-3ceea24722ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "10db712a-6543-40b9-81fd-1f5252548e66"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e74ba02c-d1ba-4e45-b216-b0fac2891600",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "bf32d987-40e3-4dc8-85a1-486b24471b3e"
                    }
                  }
                ]
              },
              {
                "id": "763b808e-929f-43c5-980a-dce23d97cb75",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "797890a4-7fe1-406e-a83c-31d4c645a1f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "624e9df4-0dbe-4baf-a5fc-b5a12abe215a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4bca4dd-7782-4335-b55b-b91b5c0cd3c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bb3fd428-28ba-4e26-a033-e96fa5c156d0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f8f480be-697a-488a-a7fb-a03359b3250d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "45b82d29-24ea-4fa5-b361-710b34b6d9c6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1c41114e-8b9b-44c1-b93a-72338a80d890",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "83c24699-d194-407e-bf39-2ff6a0e4bb08"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94be188c-57af-47ae-be46-5ce7758c7a2c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f05788f8-18c0-46a3-ace2-b5e413acdc16"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5567b639-8dc3-4590-8256-f904690a94be",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "680c5917-0ace-4399-b368-36af86fd7198"
            }
          }
        ]
      },
      {
        "id": "c7d57140-c296-4120-9ee0-11bb274998cb",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8db0e302-efeb-4248-be66-5389f1f95177",
            "name": "Negative Testing",
            "item": [
              {
                "id": "de61e058-1beb-4ae1-bf85-4e0a8d5f985a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a6f4d3c0-f0cb-4565-b821-5593f90364d3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96415357-5102-440d-a776-4af89ca9d5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a55bd5d4-ba9f-4904-8e53-e4a35f8ef917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc63c863-d67f-4867-b319-3c147fe63546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9017ba-203c-4544-ab6f-2bc002dd032f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6302188e-f9d4-4a1c-bfa1-c36663884c73",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07dab26-517b-49b9-9007-b5e3fe997d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64b3c69-b7c8-4732-8cf2-1809ef25277b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1dd9c9f-940c-4254-838b-f78aa95cb383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9347ceea-d29e-465a-a792-3ecce8d9d163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2610d45c-65b5-4306-9752-9023001cb161",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f448e0d-3a1c-4a8a-8c23-5ce0674feb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "331ca012-31d2-4e96-9603-dfa8d55f7e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c13829-8f9d-49a9-9681-614809876a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1cea860-4aee-461d-be3c-188c68713da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a38417-7f5d-432a-9f90-e77c0d84f831",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeec8724-9527-428b-91f7-c78c7844c271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf0cf12-286e-4e8d-8831-efa29d9f2403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba84d6ab-8214-4806-b150-0171d4a434e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91feb613-027e-4298-99e2-97eb2122bb11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a170251-a86e-4c15-a9a5-f8db7c16be8e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e31500-3e80-42c3-99c1-5bae962a9655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10168181-5a2b-4dc0-98c9-babb89824b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aae93e7-db4d-4b47-9e98-7b7356583af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46d8ff5b-9fbd-44bc-a71c-e838c923981e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5315ab99-a211-4cef-93eb-e69773c64549",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc05a4d-d62b-4a09-bfb4-e059da7ea48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0b5acf2-02d3-4567-8964-dc45a60e240a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c63d761-5273-4355-9a9f-29381268cd7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fed3f3d8-634f-402f-a94c-74d266d4dfce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce63bf43-f518-4a83-b1a1-5c6e31441dc7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eee26bd-dd69-454b-a4f2-1d7775764a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab44439-ef27-4ca9-bef2-4b38d3e361e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7ec112-9dbf-4117-954a-98bdf9e417c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "60316952-4cc0-4449-8d4c-f473720513a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fcfd18-23fd-4e7e-afda-06c048204e1f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb3e5af-7713-4828-9f34-3e96352b7506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f8106f-d307-4597-adea-22f82bbec973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1b785b-bae9-41fd-835f-99d19cb72b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7517a606-cff3-49df-89f4-c2068b58ff66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717d547c-52da-4b99-b688-fd38d87ba44c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28cf4f33-604e-4b61-ba25-14bb608df4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85301181-c082-4b4e-8f70-241847d103ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4441445b-6622-4718-9e36-3385804dfc8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b6e02b-c89e-47ae-b585-128b666746eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15694d78-d599-4429-b0b4-60acc7a9109d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26b1338-513a-4b98-9236-31d6636d0a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e59d197-2316-4388-b47c-e6dd3c9e652f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23afcea5-06b7-453b-94c1-2c680edd26b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d305757a-a4ec-4a29-bf33-f69f0baa61c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79eb33b7-694e-4a49-ae87-66e0d85a0ba9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a239b498-de11-43e1-81e1-4f848dac3cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43fc8801-2157-4c97-bf95-cfcba2048b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c595da1-099a-43e5-ac83-be0290c105cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a152b5ee-32a8-4897-b50c-fcde94c5920c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b96925-d77b-4d1e-9ec8-1245edb2384f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a43f4b-8c6c-4af4-9fae-b501214065e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08335a3a-320f-4837-b891-f5ad39c51783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c25ef5-5244-43c9-9970-5ee22c6f056a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9731008d-3385-4aa8-92ae-b5034c1f50b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94319799-6633-4dc7-a373-f3c9617eb490",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0e532c-8445-4fcc-bef3-c8b78b4392fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e22453a8-2e6d-4fff-9054-641ff512d277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1512df-60af-4f0f-aa8f-046ce4899575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d88c0d27-68d6-4043-afdf-b26a14e1c422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da179c00-e0f1-4f0d-8b06-7b62df1e1b01",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ba7d44-8b7b-4369-b186-218293486d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250db737-e742-4635-a694-bf3614dedc8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea3b9f2-936c-4a50-b5f2-a718699701af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d673f2cc-9f7c-4d17-bc56-c8ebf64c3a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f83db51-eaa4-40e6-9708-d06118a09641",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9d5dcb-366f-44eb-963b-214e2bce9b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f5b349-342b-46cf-aff4-702b4ad691a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20fbb13-a097-4cd0-9d2f-1b1c4597fd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a11db83-c91b-4587-aae1-c4d7c20a095d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf7f46c-b5cb-47ef-a6b3-91ac501a3643",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbc4ace-62a0-44da-b44d-4159193f806f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60e5cd71-65ea-47e0-8095-1ba43c06c1a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4055b457-5bf8-46ca-8681-6216c8542db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6879f902-0e58-483f-9c24-e1ca9ca828e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce67a8de-3e5b-4292-88dc-5002e846342f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af34a2f-aa11-4497-9c34-cb22d411c4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1dea3da-da3b-4d92-8140-004083f40d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57521973-6521-4f9d-a169-2019eb42ad82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fcfb1dc-fd43-4d91-af77-f515b0ed7e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3824379b-ff99-4c12-b45a-64314ffba154",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1dc2e5-aaf5-4d79-adbb-973bc08d2e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c9f7ca9-7b43-4025-9c6f-2c62d570e435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62b10e2-5e53-4d02-8684-e4e9eb2af773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f3846a3-f127-46ea-9cf3-369e0947f371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2e783a-4bf8-41bf-9b57-fee7528ed53a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a1a290-16cf-4fd9-87b2-92ebdeae84ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7d6b48-5177-416c-b095-30f8a425b0e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8cedc8e-e371-42e9-ba13-d4e260e6c6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "728e8240-3185-47c5-971b-bd9a3c1568da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafa0b55-02d1-41c6-aba2-94b72b8e8c63",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7cf010-af50-40d5-98a0-b56f31f0a535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f08f248-b136-4d6c-92bf-cb70ade80900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b06996-7551-4364-bce9-f69f8a809da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30f23e87-d3c3-4896-9ec9-6ce63eb5513a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13bf48c1-0bd6-4645-ac02-59fd7b469b61",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6472ea3-d0d6-4317-bf9a-0605bb0a0243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9578552b-31e5-40c2-9fac-4bbe5a56a191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b76005-6634-433f-bf70-2509cba72224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b2b601c-9e20-472d-aa85-32aac3e97905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c29d70-8c53-488c-92d8-2c3b79533c15",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248671e7-3996-4137-b8aa-b17c0b5b8f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b7054b-0e22-4d5a-9ecd-db9fde703eba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80922ab0-ffad-4f75-849f-3e407b247675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a57cdbb1-3457-49c3-87fe-f2a343649508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48dd6780-38a9-4cde-8df1-dfd46ca601a1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a17066-c3df-4ee0-bd1f-38e2031a21c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96223445-c5a1-43e1-b5e6-34dfba17e329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd5fd21-ec6a-4d03-99de-10e1fc395525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a839615b-7c05-4152-a130-a861182bf485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7730a82-ee60-4e15-b3f1-fe3a65ed5950",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9141a36-8726-4f67-9aab-62a9f9735b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10bc5741-ca05-47d3-a91b-7db66c4ada44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12456a4-3a6c-4a24-b957-5f1c3577cd70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "068b07bd-483e-4f97-b451-696132763258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e60765e-b283-4e17-b4b6-030f7d5b5c99",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1573e5-fa9e-42fb-8c72-cabaa3756d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e94f77e-3b81-4ba6-bc3f-5f89eb931a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc3521e-b576-4e24-8492-ac70f88234f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dbda9c8-3e0d-4d39-a4c1-b58e8525ff8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e924a079-ad87-4c28-9318-eea4629e96e8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87af69d6-bb9d-4859-969f-e1daf886d5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "177b5f8d-0a86-4779-8c0e-3ee1790c3eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e348eaef-d735-4160-a452-d3bf0fbda41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "533ad238-8f99-4048-bd5f-25e64cea37c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9b6459-c212-4a9f-aa6e-6447bff478d8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c14e53-19ec-4d3f-8550-6fb5076df4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f34bd2b6-be63-4f16-a989-b31c470f6711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60c198f-a708-4010-9feb-64cc89160f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a932d087-7f32-4ec9-b89d-396aa2fd1aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ed1c86-d5f7-4a19-844e-f43770a034c1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f551813-e0f9-4d9f-a07e-93c9d490151f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "504d893f-1cdc-4d0a-954d-d32474f69dd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa52ea1f-c27c-4014-90b4-fdecc6454288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee130bd-02bf-41e3-987e-07f4488ba029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11025f01-d7e9-4049-aea3-c797539c3f2c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97774281-e867-4b23-aebe-35fe99f5286c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f029d3-8fbe-4367-a99a-01e61ebe7af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5451c4a2-af9c-47e8-913a-77ddd1270bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d86b6ed-8c2a-48b8-9846-f2eaccc8a88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18128e91-8821-4f27-ad40-56de4f39e060",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c54085-5944-4ff4-a07f-82eae27c5b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f5595f-7cd1-458c-9fb3-c65c2ef55981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbfa668a-891b-47c0-a78d-619f0753024f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40bb74bd-88e0-4958-b628-3ef934cf1c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ea260a-7337-42f1-8361-a9956759bb70",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f8f5d4-b2b6-4aa9-9f5e-185d796284ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae9199b-edf3-4cc5-aa9f-ba23c834a1b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4ce1fa-7c7f-48e7-9f16-e9542fca6288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7af6a1c1-6a3b-472b-816a-953aee3fff85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d394550f-5932-4fb4-a1df-beeefeb2d17f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3f503c-5c4e-4a80-b4ba-5561b785aabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1399c4ac-d27c-41d6-9426-9f37039e0bd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da126d8f-04ae-40cd-b51e-6e891a72d8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fa9299c-5704-4590-aafa-40d987a07a94"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "39afc061-71a8-4694-8598-3e32bc2f172b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c231271-b584-414a-b24d-5f02bda342f1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f3bb5e-4059-4713-b2be-1d624a898a5c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7954b409-a152-4027-acd0-76e978516c12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b243a53-e964-4665-85ba-9d159c6462a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "546ce4dc-7850-4bc5-b632-b3d60b4ff3a0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87f36207-2817-42ee-926d-0db9e1aa609a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78b50428-5ad3-470b-becf-2bc532799bb7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "34a49e8b-bd60-44d7-b8fb-e00694a760b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1d254d8-f4da-40af-9587-a7ffd897e877"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31982bf8-fe85-4668-840e-18c3837615f6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b8b5e4c2-8a27-466c-973a-fab1511613c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d02373aa-248a-42d0-b127-8ffe1fee7568",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e10bb9b-ebad-4121-a549-4a18b96d3908"
            }
          }
        ]
      },
      {
        "id": "fb7e4e2b-16e0-4a28-8621-3d120de504b8",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "feee9b28-404a-4065-ae46-cfbe229a704f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b0090203-3d2c-44f7-ba85-e364cb4ba675",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "666eb684-e682-4b37-b8e7-16e1b337f44b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4763ea60-4784-4776-ae58-fc361f824992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c3d529b-493c-415c-83a7-e4ad3fb28c96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677243eb-7301-4645-a547-d65e945ccdbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d9404fd-3cec-4b43-ad44-96f0c3b3602e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622dd543-7ee4-4abd-8476-7185705eae57",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa5daec-6251-42ef-b33a-1fb7e72dcdde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87ab77d1-7b12-4389-9ad7-bfdc9f7b0243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08aed17-1e55-429c-a773-dfcac11f8f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "23bee8f9-7f97-4dc3-a22f-1b729242a38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c699d3d-4396-4d68-8cf4-02b13e14bfe6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d120fb0f-0796-423e-a2aa-3a14758755ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "730748ab-8361-4733-b817-aff4280f2429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61844a9-5366-465c-b1c3-d7e1444473af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40e2494d-4672-437c-86fe-02d0238aa375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8a85be-5a26-4f2c-b547-c0ea557cf858",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bf98c9-4ce4-4f94-ad86-19cc12e8331e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7f81891-7e8b-47a3-83dc-c5f4c95fa555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f11611-bab4-44b3-8df9-dc6cf2cda52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b42a3a8f-5eeb-4c8e-bf32-0af03abdd71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff8487b-b548-4d2d-9d2e-fc8e971ac728",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a056b98-1d02-4476-884e-57e657b1b0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e03586cc-2067-4bb4-86e8-a87836da4fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fbe7b4-c95e-4210-b724-f252e0f2c783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "397db0a6-2930-430a-8b97-07865ee93bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84098fc5-f6fe-45c1-bd74-6d5d48bcdb98",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f220c0-b615-44fd-a573-76d4b9c8c2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107ab85c-ac4b-4674-b789-fda7fc4b6227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d578d55e-1666-4674-9752-636f023a93a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aade2dfa-d347-4d91-8e9f-53de778406b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87b143b-1ab5-4039-9bf4-5b7ed3c0e83e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1b9308-620e-4886-928b-b2b57f8b8a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf39d479-b18a-414b-b9cb-d44b2c0e562b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4962342-fdbe-4645-94c8-6b733fc54d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7de3b2bf-912d-4c57-889d-3b8c456a0c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e223ba8-cba3-4f99-bace-ef6a08f43c98",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac892ad4-a76f-4d8d-80f8-aeda6c81bba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "515a04dc-ab9b-4998-bf75-46243d9ad0d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011658da-bb0e-4252-ad43-f20234c9abcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66618de1-051b-4937-a6a7-880e38cc15a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35368984-7f51-4363-82b8-39bfee2e5b8a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4eca5b-d86a-4914-880f-54c1201a8b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "072f1ad2-0062-4201-9839-10a3d9bec091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af11b43-2ead-48c8-b93f-3462fc16f675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "290653c7-fb7c-4f62-a743-948005c13e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e09335-4194-4c05-9f13-edab61452238",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42dbd916-7a9f-429e-a05d-2aa2090b8246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b3110d-2710-4f64-9eab-e6a28a65a14e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbbbad9-3bb9-45ff-a9aa-d6b02fc944b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "800a060b-5df5-450f-b01b-0b9cb08adabe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fc95ff-bf93-497d-b9b2-e18246f54f72",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0aed07-2120-4141-843d-19f72561f144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be744e8d-ccb1-4769-aa44-deb2f8a1e78d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ff027d-b075-42a5-8695-dcb5d032585f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2bfacc77-88d9-4260-82ce-5b1a0f14fd80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6d27cf-0efc-4615-9179-602b91f24c56",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab5fbab-4e38-474d-8092-33524e8f8bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448717c0-f250-41e4-8454-d57039d86987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c064c60b-d654-45a8-8641-146e4d52e0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a53afb6d-cfc4-46f5-b5a6-bfa2fe52d1bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b56aa25-2fcb-465b-b1ce-06f50a157204",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9582b767-0405-4f1d-883e-ca44ff7d9cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "998b9cd5-62e4-41c6-8e2e-416f951617c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77f888c-a8df-4a35-bf8b-675b671f8b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e3eb3c4-29a9-42bc-930a-e1b446866b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dabeb46-d4f0-4af4-919f-7fc16f7fef83",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7834944-66ce-4798-b093-5ea0810a39bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa9b857-cd1a-4d04-8226-7c4625f887aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f3b726-54a8-4e94-80c9-2ea1c9245e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c6bd5b-760f-4b90-93f3-565da9508e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0773469f-d559-4a88-bf2a-16c7e9e9305a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e32af41-e514-4f6d-91ba-fa30a44961af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fc889c9-bd32-4554-941b-101009f4b83c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775dca8e-fd59-4397-9061-2b2e9471d375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f336748c-1669-496d-be87-6f4660ba0396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a6357b-a2a7-49f0-ac09-64038c4ced3b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6522f34e-6ff5-4ef3-9bb3-179b29dc459e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f1c3117-0e58-4ef9-8f29-5aa157c05d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b850cac0-e075-4918-9f1e-cf9dac58f316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "61f01f9a-e90c-41ef-88b5-ab2c6891e13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27cd6d33-92b7-4449-a3ba-c942e1492e8c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11730534-d6e9-4885-9e41-21007c9fc8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b6367af-17b8-4ad7-ab8d-31e13edff1a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4222e4-83c1-4a04-a766-e46bb6ea7fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "940d021d-b197-4508-a967-5a435ece7e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45825b2-13e6-4169-8d50-3fdad914377b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c2e8d3-77ef-41d0-925b-e6f9148d330c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0866ddf-7eac-45aa-b206-0bb35268e412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55905f2-1ab4-49c1-99da-7ae4bcd191cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec19a8b-4429-4c55-949b-8392fdaab6ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d07508e-c29d-4b25-b6a3-0290c9415c7e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465ac4a2-2daa-48ed-9dba-42ec473cd7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "637c6324-d3bd-48c1-95d6-dc9b0a63a40b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7e1f2e-832c-4d46-9314-fefa0a8b8140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2cd3eb9-374e-42b5-95bc-63d071fc7042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e26243-1170-4fb9-aefd-5b8a22031194",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481bb1f9-81eb-4285-a1f1-61176d0fd265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e852a0b3-29c1-4d9c-9641-11ce09d2a4af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99eeb78-4352-4952-a992-2e21e70de2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66c5c4e6-f1df-495b-a51d-63e82238eb65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5756e6a8-496e-4f5e-87aa-276a99db6be1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e18cab9-dc3f-475e-a0fa-f9626ac28e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed31861-4cfa-4acc-a884-6008f8c98ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de2cfa4-3351-4179-9d8b-de5087a992e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b0f82f-d117-4ff9-84c5-d0ca36ae5eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1d87b7-ca39-45e6-a9bd-e3dd5f076c81",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "663a2888-d945-4450-b0a3-65c62c07b42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6a373a5-fb90-4fc9-9043-811e939e1d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc95a566-faec-43a2-9a23-c0646f03ffc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "237eab38-9bbf-4715-935c-7903f87c32a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee0ab2a-fd8a-4f94-9014-0675edbd8af9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453f8c56-c63c-45ac-be1a-c3a7e639c03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5943ba0f-6e4f-4027-b4f2-7546e1cd111f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6520ba8-922c-4b4f-af6b-b20c19a85035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8efe1f7-2cbb-45e8-9660-00a4c835f1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d635e38-4cdc-49c3-a748-8958cd75a26c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0e4cb7-fde7-4e4b-b250-629aba154eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59cff1c5-a6c0-439b-b0ba-e286b6e9d13a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9dd21e-bbf4-4d58-a334-7a6aba6f6183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd487d4-5e6c-4399-b7aa-53d6d2e75d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21d6557-d2a4-4e35-9975-3562a3874bbf",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c33b9b-ec33-47d6-b7ee-c34711a74e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ed1ac2f-9bf5-4d17-adea-f03fd6b86cf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb7cd77-ac07-4504-af01-401712512063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2449ffc3-b2f8-4029-9545-eeee9d761e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69e554a-8b67-48d4-ac36-d9c8956b8e4e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb032fd4-f854-4eec-b66c-b26dbd7e6d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf55c05-8f0b-4401-a9af-8f50681e6b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1db232-2ed9-4e49-a695-4ce61888eedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e630150-cd6a-4da2-b215-3d6b75223584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5280cdae-aadb-4cc8-8892-1aa56473838a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7d02ec-a1a1-418e-b1c1-93dbadc27f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c2d481-e9bc-4397-8c5f-1508302adb59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bf255a-bf25-4982-9cae-fd7bf9f44580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "673df0f2-3381-4c55-bef2-f1348cc05525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc11280a-fa38-4312-8052-5dcc352631b9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a914fbf1-b689-494e-bff1-22d3742622d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2789fe56-e691-4729-a43c-ecf523794170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff7c6da-02f3-42ec-a784-3afd8981fadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2c2f2c1-8c59-494d-aa29-3f10ffe66a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf060d1e-99ca-4ef3-a23f-eac61ab1908f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6c9f96-02c0-4d89-91a9-dd45caac1498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d961d8fd-955a-4cff-86e5-eb703ffcb030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85630eda-fda6-43db-b8ee-78736eb13df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8c7249-9f2a-46aa-98cf-de1b008bbde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c10a6e-e97c-4743-a04c-33772a509dbd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a022d1a-635c-4afe-8489-9825f8c3e219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce83d0f7-51b9-4091-aab5-7afa5b6f3284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204e19f1-43de-4ca4-abe8-014c91f4afdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "996b8cfb-4c71-461e-bfd1-7bb32eb726dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8018b39-6dc0-4316-a9ca-375828398b8f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1557676-d844-46b1-b272-b1ca0c45c50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7294a838-c20e-4870-bdcb-3fae7e567fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2577a773-a7de-4527-bfe9-7734e38e702d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a510a1c0-45f4-41ac-8127-6e8bbb3ce791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7354a303-6540-4726-a2c6-abe39d3f38c0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62495d81-751a-42f8-8bcc-abe70a9894e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad65c28-3f13-4d1c-b411-19eca975b5ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9c6da4-cd42-419a-a55b-848546493aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bf982a6-79ce-4b24-8e9a-bcd865abf6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed40538-5e5f-452e-a31c-28ce736036df",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f4d441-0b38-41ca-ba4b-7a25f25335ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1edd8535-921d-4cb3-ba46-f95e6ce4b849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25d783e-7183-45a4-b505-f9674bfbac3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02196b08-3364-48b7-9e91-65bd1ca71471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97978927-3b28-4e1a-8a79-00fa5876662b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89dd2b52-8b55-4946-9aab-f7ff44c4d8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56729383-1b45-4947-b273-e027734ab37b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7b30f8-2bbe-403f-8a0c-405e4d4e020e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd17b679-473d-489a-9e40-42db4d8ab60d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed885837-0f0e-4915-bad9-16373b9934b4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6abc2946-d339-412d-9d02-609d1ac793d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13739a1b-881b-4e01-9b23-320c70f4581d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb3bf8a-0178-4f62-ae2b-4bbe64c6e70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c95b3fa5-4224-44a3-b052-62694cfbae78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3c95b1-3b7c-4fbe-a4c9-01185df388c9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbf718e-031b-4869-9a45-f3baca1d1351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94116d4b-5efd-43d3-aa6c-4115cf010181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad3d61b-4e96-434b-9150-48c88d09f7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f61c4dd-85a2-4165-b998-7f17c7baacb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6591a4a3-4453-46fb-b4d0-cf69b755c114",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b016e52-c3d2-47e4-a6a7-ab70eae57847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4c2938-ddc6-452b-a151-eb36137a4687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbbd2f9-903a-4060-9039-f0cfe74ebc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c149d513-c375-495a-88db-a4d842f18da1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c7dcf426-7c3a-4bee-b3c9-ab5d72ec6bb4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83cb5feb-d616-443e-a37c-b5f14aa5187c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5546092e-073c-4acb-b9cc-0f3fe047b8c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7d6438df-2550-4caf-bee5-ec6b04cee681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6d2ef3-82d1-4b3c-a60e-a1575af8c0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7214eec-203b-4815-a8ee-5f6c04a0bc41"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4726a76f-6304-4dd9-be8c-98b44dcbd228",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b31efa3f-9e98-4d34-b2da-f3ce045dbff0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "685d6917-7cd5-4b41-8b3d-3c2f6e5f5922",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "064b37ef-e68a-472e-a8d3-44d007049a88"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4cc38377-d1ab-4f77-b619-bbb1b5a927de",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ef0124ef-9508-4ec0-be4f-345571ff3cf0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7542535b-0506-4a78-af0a-899a61c388f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cc5ed428-54f5-4d60-b3c3-209f7ac8817f"
            }
          }
        ]
      },
      {
        "id": "c2581fe2-db09-4e89-a1c6-a957fc6f0409",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f205e03c-d4a1-4c9e-bc68-68733e4c63e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6d1edf44-4088-4263-927c-4ed7aaecc359",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a3eb13f0-2e13-4097-975f-42e5f3a08059",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f21b7e-5df4-409c-9857-e26dff8f80fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "120977a6-f864-47e3-8fc9-f8ba3348c16c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6a6507-3b9c-4201-82fe-35677a541e26",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77711a48-a44e-43cd-bca7-e5d52a477bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e64f15-f190-48b7-99c3-d464c8dcf40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56cd5be-bc55-4ef0-a07d-e71875d64bde",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24dd7f4b-c43d-4d95-a307-2581800b2c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f0b22e2-fc96-4f50-9f6f-029994b6c820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a53fbc-3f53-4fd3-af91-4c7ea0460020",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e852cca-9434-46c6-ae3c-d16cc601cf50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de6421ca-4b0e-4343-947c-4dde09510d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d41328-099f-4d21-82d0-ad2dd309b56d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68772dc5-a920-48e0-a22f-838c9e070c1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b5ac77-a85d-402e-8cc7-5f3cf29f70b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45dc0c3d-e1ef-496b-b8ab-f4f4e4667815",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ba9223-8a57-4070-b58d-191cc3203249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc6f863-08a1-42e8-9502-3cdb739b2412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf81634-b6e4-47fc-9599-73076f34f036",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1509a04a-abc6-41fa-b717-fc030cdbe20c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871af699-7c39-4c60-9013-d4bb9a63a347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed76fdb2-575e-4e1b-871f-527330580785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1241ca8-70b8-4261-b995-80db29907a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa21a067-cc3b-41f2-b6fc-fca5297f2860",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d0c5ff-d8e6-46c5-92ce-d2475b55cc67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6446d71-aa1e-4c59-8bb8-33e64e8be25e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe81a0a7-c118-4053-b772-d31ec31a5bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb8fd0a9-a4bd-44b9-92cd-894854cb1f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ae09eb-1565-4ade-87b0-0b99a560593a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a350e07-6b66-47f5-bfcf-cdc34abc7118",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4654dc4f-1b57-4157-b9ac-2ba031617d64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "458a5dd9-6cb9-4801-b7a9-62c587b212ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde2392b-adb1-4430-83fc-9b14908f3f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983f193c-4a9e-4eca-9bba-49e05f34e9db",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c0dfb1-7a04-4ecc-b569-91ea42d964b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0ee8c9b-925d-4573-a57d-302d1f9955ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "173b5a6d-f448-4c6b-8a33-3a2fa6d391fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7fcd559-d77f-423b-bd24-b6eace4232f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a8dbd5-9e93-41a2-863b-5fda65842c0a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201ae2f5-abdb-47dc-8f89-37a7692e8c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "548b5a07-bdea-4567-bb33-3815a76a6cbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08412f7b-3c4e-4417-b133-cb479bebce28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfc61f8d-9a96-4c19-8116-762d6d26dc2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e3c746-e854-498d-a62b-713f30b577e5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af43f23d-2729-485e-9d1a-566ba64a2130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8c6d93-1f05-4f1c-a74c-424ba070412f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3231b99c-2460-43b1-b0e8-64b89ea042ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "013ecdfa-07ac-4138-90b7-8849cbe280e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28090f88-5830-4838-b343-eae7b96030ba",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5818b77d-f0e9-422d-8bc5-a47979b23b1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8d11805-d86f-43df-bb59-c5455691e095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb69a04b-ec85-41b2-8aee-e04458d1d7a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad10381-cd3a-4eb0-b558-a364fd6141b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea18785-646b-4fd7-baaf-3d798236364b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784b2ff4-1da9-4fdd-b9ce-104f82fd7e48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f445b2b2-04f0-42b2-a2f5-f52c8d552ba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "938ace64-db76-4cf1-961a-084d95631125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be9067e2-a88d-4b8f-8ec0-ae97db3c5401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b71132c-82a6-4c15-8115-2a40a8d18d98",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52eeaec-7c4b-4883-a1ab-f3e671a4e869",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b436c58-6e4f-408a-b41e-4cb4a78c86f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5294f15-20c0-48c8-8363-d48a0301f468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf04ce2-7973-4b24-8f4f-7cea50dd2123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cdd947-7e53-408b-a011-cb14c53b9a31",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5731d4-f270-484a-a092-831421f118e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cad21367-1d7a-4d67-b06e-59f2957b4170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "320a56c5-a722-4c52-8882-963c3f16fca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aec4f95-1c53-44ec-acf5-f17ed692fa5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fc9689-179f-4d3d-94e1-e6a2840aff05",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4212ba6e-3035-4266-b9cb-45b5f9dcdd49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3a6920-9959-4748-bb33-0dda38b861f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9a26eb-698e-4ce3-8403-98c8854a9e61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "547db006-fc42-400f-918e-0930c2591a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eada64b-f4a4-4990-8fc0-e3b483efe707",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f28894-065f-4ffc-aea7-a9771dc299a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3887e89f-4886-41d5-8924-a1429dcbfecb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cdfe49a-6d82-49a6-b1e2-20aa2af070c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93799b5f-b80a-443d-abec-720ae91b85e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54e36da-9ae7-4600-b969-becdbf8cd85a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c386adc1-99e4-4ddf-9879-f0bf522cf4eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61a900fe-a2e8-4594-bb2e-9d17200eb62a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c79229b-fa95-4e0c-93bd-8ad791c16e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f60fe24-c7e2-4c6f-8828-7afe600254f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2e7eff-669a-49cf-827a-a3d2aead1c81",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5c7646-80ba-495b-bd0d-be3823bfcf9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ae6840-ad4c-4b2a-b782-0892569531ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e11713-3a69-4daf-a4c5-ad2e59c1d3fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "812af1fb-40ce-429f-84c4-de7719e34d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e6c090-21fa-40da-9f18-57e7c40aa491",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9e8208-fde0-4579-8acd-06b512a4bda8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9daf3975-1f41-43fa-9450-5ca5c06748df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "761c3ab0-3f9b-48e7-9d9a-97f1ffb7f212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a32d37e0-a469-4eb4-858c-3661a6b3ba65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c46766b-1c7f-411a-9443-a5dee70e21fb",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b066fe78-9626-4d2e-957c-3287adbc4efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf07721d-2181-4a36-9a09-beb139b6d57c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a777d3df-b05d-4e4a-a0c8-6bb99d00c4a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e521e534-f066-480b-a331-7b38ff56141b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f73bf9-c039-4c7f-b95c-ee6854ebc875",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce97055d-454e-4288-8516-eff65423e1a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed0011a2-2ab7-4449-bbb4-0bc575a44673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c64ea19-12a8-491f-9402-f56d87d92879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e7a9966-90f0-4208-a9c9-433966332b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b930fa-9790-4897-be9a-0ae309069249",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549b50b5-f13f-45c0-85b0-12791c6e7265",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b3f8288-d92c-471f-aaa1-67ca8981730a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15ca086-6e21-4438-8ffd-86eafa3078e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e30043f4-771f-4864-a041-556f87645e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32102e3b-2253-429e-9c0b-12bc9ab6af0e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f626fe4-6c75-47f9-bcee-850c9ed00fd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de91de73-3fe3-46a0-a93c-6e15d84e1408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be1707d-3f51-4b44-aa42-2f38323acc8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f60396f5-b94a-4918-90e4-2c50f932d02b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a50b193-63d2-42c3-9498-97c92b447d1d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66fcfe14-409b-4545-a58e-9cb14b4b88bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d3d9c63-151d-479a-aa7b-2dad05b29cca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d8949d-8481-4f19-84c6-33ce4453cb49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74838b21-31d1-4c46-bdd2-a271855bea7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a79c539-145a-4371-b986-0e7f9cf349b4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e840d316-0fd2-4982-8cd7-885d529d7c0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bef703c-1477-45b4-86dc-5dc376e41f1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fdcf40-24f2-457e-b6eb-6b8917cedf2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9daab7ae-eccf-4271-87ee-d8142a55b661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a367105-0b59-4fa6-9344-e29bea4d2f35",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ef8ba8-aa7b-410d-842d-9961cbb47f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9477793d-0b40-4fd4-8050-42a52ced7cbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "448eaa09-e0b6-4bcd-bd6e-59fba4af09b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f59608c8-e872-4716-b0a1-5ad07010dfcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083fb0fd-4287-4f14-a249-3a8ffd5ec24b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7338b896-b4a7-448f-a1d1-e0b1aad03216",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d05726b4-331d-45dd-8ce8-3d2f334df6ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0481995a-24fc-48ba-b669-9aea10f29f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df5d52c4-e7bc-43e7-8345-e6b5a8acf6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3ceafc-2288-48f7-9c64-45be4e626a8f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a706b766-14f4-47ba-b5a3-38511b893cb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db1be47b-686c-4624-8048-51a960ef3209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "604f55fe-5c42-4060-960d-dc92808968bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "826eb15b-33f7-4bae-a2c6-4b91f667c0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04271d9e-9382-4e02-a870-be95e7a39c9b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698fd49f-ac9c-4438-956c-2982e800d8a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4cb25b6-bcd8-4248-a49c-2dc3950eff32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49d4ad4-8f0c-4bfe-8f3c-fc0bbdd4ea32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "049b058a-5d7d-425e-9b4f-ebc809dab12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfb8676-0fed-4d6f-ab03-5ae73e46d258",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e456f20-7b1b-4124-835f-eaacbd15e8cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26fc85f6-8800-40e7-a90b-ef28f8747230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd94c3e-15a3-4694-b961-16896ea5d619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "894b219e-8ce2-4901-a670-474f3e4a6ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666d892e-633a-4742-a94c-50ae0fd74f00",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f22ebe3-e57c-493a-8fde-4867febc9b85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8b5afd4-3cc0-41a0-8323-800f55b2e9f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72583adc-0a69-4455-8c8e-9ef38434c47e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52a0afcf-9359-4f40-b9c3-100adb19f814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01960da-d9de-4f82-ac00-761ed4ff2c18",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49bebbc-fbb0-4811-8fe4-a629ee5f989d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cfd4425-096a-47da-8f7b-4301e2bc4074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d23af6-ff01-4e8d-b48a-c5bd603ab293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6567653-a1de-43a7-bba8-42a1a541f573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1915428d-2d7c-4f27-8cf1-9b1da128a8ba",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e55975b-8a17-4f2a-8773-0b46987146f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e46f72-cb9c-456d-9cee-a7c5fcbc8720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b0fb4d-7007-4fcb-bd0f-685212291142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05adef8-c5fa-470b-b84f-5be31e4a66ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef13969b-7278-4e2b-9a96-0e1b7e2fb549",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71543157-327f-4b43-a729-5b30a3c17fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2290151-d16a-475f-b823-e970e71cd0b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dff5f03-add0-46b2-8b46-04ffda1a9e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a4dc24-d0ca-4ee9-8b6c-d2ec8b818a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a73211-20b7-43c2-b948-6504c600994c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd574f8-ca03-4af2-83c7-83982e226ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "947e5603-be78-4aca-925f-24f808ec9543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "090b7ced-1719-4b06-9127-28e502055757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "790f4d70-d08a-4848-838f-52bb1768cad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1712ae62-3f38-4325-b631-acbeb6a1a5b7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69676e36-f69b-4b84-8cd6-6a9b752a6b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70778045-e020-467a-8a97-657775db4775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf1fc21-f8f0-4577-94ed-3286edca291e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ee8392-e2aa-4132-9a85-4ed780eb2910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab37e35-ffd3-457d-9f89-e8ff3c684674",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4251dd0d-4105-4147-b398-92e89eee5360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeba4dc4-cad7-40bc-9c77-2468849c863a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "948f17d9-0982-4a7f-8356-09d1810471f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73abad77-e936-429c-be2d-624dd1a314cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b174e9f-a7bb-470b-b4f0-7ed145d6ed0d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8396a065-0a74-4368-a413-67925dac0c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb6aa6e-a1e3-4fe1-9f61-e3209dc36547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5439b5d4-0a97-4914-ae65-4886474674dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aff8fc5c-6694-4223-9824-b7ee70343c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcd0d8e-1149-4c07-9b43-4e78c7ec49a8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc303e7-2bc3-4219-8ed9-e7cdd1cf0365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "964bdc3c-3cac-4ede-9114-20726710f59f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "958c8ecb-41bc-457b-ae4f-0cc971a2e3ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "736589ec-037f-4347-bf8d-b0dcc88eb7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a89712d-8b9f-4576-aba9-f6156a8ada79",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f0e9c3-ec6f-4b00-88a9-f1b6e0b8f852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12bd903d-38cd-41c6-9da2-57e131872105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e86156e-9948-4b80-99d4-99676511fcb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcde38e5-b17e-4950-95ae-65156ab36270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a81a4f5-f228-4975-aee1-6126e7e82b93",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44aba64-69b6-48b9-9bc5-30ac799a57e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a1e3084-e0fc-4b1c-b2b6-37e902750257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d094498e-72e6-491b-9d7a-07d3403c5b22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb4d3a6e-f9ff-4060-a459-ec468c494ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc330bf-3a4e-4886-a5cd-4278e9597a6c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719909e8-b45a-4029-8f76-233d3f767c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a5ca7a-0ad5-4658-abb8-150c3fb2c263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85640fb7-bd06-49b6-8ca4-6996df65de92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da19e246-0d0d-46c6-ac38-9b955db737ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff424cf4-81ea-4a84-b7b0-7a1a387708f2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f93d77-7067-4f1a-8389-a5d212738ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb07850-2004-4939-be81-fb7a800a3189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1e63a0-96ed-4703-aa73-8c3909584758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c637f9f4-0db7-48b8-bead-ae28c59b35eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0710aae-67aa-447d-ba4e-7b378f5e6c75",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4662b99-1b02-4c21-b124-d0a8790f6373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3f74a5-b060-4d2b-9836-d8a12da1527c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e311ec4-15a7-45bb-9cfc-92a2b1623cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b314f462-ea8d-4eed-96c4-624dc2390d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243c1fea-b5e6-4159-b748-6a63d5617fd9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3f83fb-2c7e-443a-bc18-31fb39bbc5d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c70fae22-5250-420b-992e-7e4c27512bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79614477-198e-45eb-8ce9-b458362fc474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b4c75d-878e-49b7-971c-140f5fac9566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4215acb-f4a4-4103-9075-660e11b64dcd",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1bbf518-4bdf-444f-ad6a-264a5838609b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52ca5832-9112-4681-b1f7-c2d5be520179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d003d8-e0f6-439c-90c8-2eb974e7af01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d161ce-ca8d-492c-9f67-e25c5f93d3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d59b3b-203f-4c27-bd52-562d963b6439",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a119c7-012a-4b3c-92f1-18425aa6f5ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "465f4363-efe7-41f0-8bcd-ffb6479c11f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "106f434d-dd2c-4252-89db-13fd43b542f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c17218d0-ec14-46ef-9c5e-92e31a8de372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add9aae1-9efb-4a57-89a4-f9b898f0c374",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043c1b1f-7fd8-4ec8-b1aa-d93513cb99b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f6f1b1d-f22a-421e-9011-b2913f919f59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0406680-a0b8-48ff-9e6c-212c06f2d1a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0086ffd7-5801-4fcf-922d-697c5bcf44df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72d0b05-fcf3-4027-bfc8-cec035895814",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738c8448-d315-4c4e-8454-9a067de8ca22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "284aae12-2e78-4417-b389-1d6d21eed9dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b91ffda-514f-4ff2-a740-755132f542da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8d1736-fec2-41ce-9755-29a86686c7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29d2660-0bd5-4bcb-a4c3-747e8b363073",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e2063a-00b3-46a4-95d3-e151c6f0e62a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c30910-6ade-45cf-8a34-789fc81f51db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d089e500-3a6c-456c-af74-342450ce7651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d6bf714-59a0-4823-836d-5f28a219b642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e8e92e-9e5c-4d16-aab7-1f2765a9cf40",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073b62f1-04aa-44a0-921e-a0b4983d953f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67bb72e6-b87c-45ee-998d-2dfd8f646572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e257c92-d6d4-4bb6-872b-e7e3796b5ade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0620dac3-72ea-411e-a359-67e522aa395c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8904dbc-5630-4a9d-841c-581f0f5e6283",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fba636e-a50e-4326-99ef-9660d6b1cb0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "110ae620-623d-40bd-96fe-367af62282e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9769b717-289f-441d-9bc5-2c612225f1f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94806c41-2676-460c-b1b5-498f8159d6f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ddf3008-7c0e-4028-bb40-605f96bc747c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b68492-2560-4041-85a0-c4f40d7828c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d8cfd1-1490-4f87-82c9-c36543b31ffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8523bc7-2c3b-4b02-ad8d-de0e387e6f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f0256f-17ff-4ad5-8a71-3742e844b073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab64972d-13ee-44fc-a122-842629e84fd3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a46a90-3e58-4635-90c1-aa6a4f40987c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28a089e1-eef3-4c4f-950c-c03d653ea767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1934de-5764-4591-98d4-64ea51663378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dafe8076-1cab-4aec-9701-78f44e3a6c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5612e9-e194-4f2e-8d32-8e89763db9a7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ad1a09-b730-4698-a8b8-352dd591abc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae38966e-d846-4596-8358-82e54f16ddc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfc0477-a78d-4782-8ff4-3410f0461b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b98430-f845-47b5-9eb9-5c50c1c9412a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc2165d-c3c3-47ba-b0c5-adfd0de1e212",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291a7247-f2a3-4a4f-b179-80bed5dc88a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6523502c-0cf0-4b91-b985-c2d180132129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32bad65-fa42-411c-b47d-4f7c9634b2fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc0ad810-8571-40a8-a6ab-0f8b22f6ece6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62f6592-d61f-43d2-baa3-73b38af636a6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fd7d44-1949-4c7f-85ee-69c8f9eab166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b10488e-9e74-48fa-ab29-51d378c4bea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9409e8-e562-4d3a-b266-cf052119b6df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a7fa9a-804d-4f8c-a9c3-c54166d2e4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05ad7ed-23f9-40f8-9e35-ca294cc397e3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb7020d-4090-403e-8ce6-b418542675ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f155e6f-d39f-4ab1-bf3b-13c583bd26bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ec8e63-e95a-4fb8-869c-76f9b7f35d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d06510c4-14ad-45f6-b53a-fa084e94f807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bab6613-946d-4063-9489-0e2f50c5292f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6a73b9-f69a-4b20-b619-dd81aa34ad54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4eb8389-a040-4d4e-8ac2-413040a49b58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "476f251d-7a82-42a4-a7f5-2b8bca6a2f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be7f64fc-de1b-49be-8715-e5d0648e698b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5649c8f3-4f07-4640-9446-3bd838bc3fae",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e89f81-e3ee-47d7-9ccd-699a0a6719d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd2e0aa4-3fad-4ede-bfd6-1b66ab8bee73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f29bc3-fb07-447b-bdfe-3d6826a83ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a9ca87-c43e-4479-8001-146c992cfa43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b1b69b-0051-4014-ac30-7f64fe6b067b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ebbd7a-d8d5-4543-bf78-fa9bf5ea00a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b6a1a24-d14c-4364-b4fd-5ebc2d1c5f0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ca497c-77bf-456e-8f60-f45ca6cba571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a8aa783-b550-473c-bb21-6c03943526b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63e0a60-9532-4ecf-8adb-fdebef14fa94",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7a0136-7bca-4280-a4d5-02831265d0dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9c9185e-0440-42b7-945a-1f03607809f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6847c577-44de-472a-b158-21ac5dcacd7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdbd4f90-2750-49a0-a79b-3c672ced4a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c460c91-f178-489a-aac0-99a9a3053bd7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfb063f-04f6-4c6c-b203-43265ca75370",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bdd444a-8228-42cf-a009-86fd775d9366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8edc85-d0c6-47d3-b052-7b3f5f9a64a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c64bc9-1779-4659-ae55-d4c49c306f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47587177-ed6c-4afe-be85-d5af3a65f1a8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32cf476-ff82-46e9-9b8c-dcae974a97c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "831c538c-e508-42b1-93ea-16f0fc6a4135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff016d1e-c718-4fef-a718-b653b08dfeea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf10acb-6c3e-47ae-92e3-7d708cded532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e2bae5-f3fc-4673-b81f-d83fde143bb0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d933fc2e-87c3-4d09-9f62-cf88ae7ed695",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc2ea601-7ee3-4727-8c71-7a4cc7200c0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6800d2-927b-4e08-bd0b-220434d69372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02257219-a71c-4650-8794-8944a148dabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0faf3216-f6af-4928-907a-12ee9ecc11bf",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1673f22e-b016-47dc-9502-eea415130500",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e5a997c-47da-4f14-992c-f04176a34607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4924113a-f45b-4804-a01c-8390d85823a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aad2fdc-484b-4722-9dee-361663ddc661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826c6462-a6a9-4848-b7fb-a67a90cbeaca",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576eb683-7352-457b-880a-81add0d0f491",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f619efdc-1469-441c-8344-1610bc312521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc46a19-9a7f-4162-ad93-ba5466824680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024d7a79-ce33-4d4a-b5c7-a252c48295c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346fee14-3d23-44d5-8796-bbaff001eb01",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27c9781-9560-445c-a38b-da62b7e7b19b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a1cf44f-0304-4bcb-aad5-6af26d866177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98b2020-d2ed-4fe6-aaed-a807bba2008d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb904e8-d894-422d-9fd7-d86901083d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5bcd16-8dd9-4866-8cb5-9f6adb15c38d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546e67f0-8444-4a97-8ac7-2fd65f16789d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9d81483-ca84-4dc5-a7d8-a1f02ba71030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2f1ef6-add9-4828-810e-b6af7c717831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5215d36d-7682-422d-ad26-a560a077c2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e482417d-05ff-4a6c-a128-2bfc4ea51ebc",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c6ac23-a0ed-41e0-97b5-7d2759fbf4b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b53e761-a588-4b8f-bf3e-496d1da98e67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ddff64-ae2f-4c48-8bd3-962b480149d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ac0163-b3c7-45e6-b493-996da1418572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d91b15-6109-45dd-9510-b22f8e3ee860",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf85eec-7994-401b-b25d-a34e45b464e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38469a12-6953-43d6-a630-b18b628be78e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94cad4c2-a9d0-4777-b911-134ff4670c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fbc73f9-6980-46ff-ae0c-2a84d60b36a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3f6bb2-3e16-46f4-bcdc-d1cd32448781",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c548d6f-51af-4d60-876c-e901da53db7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0029c695-9f8a-4e6e-bb25-8deb2d3ccbfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9834fc-2e4a-4d57-8ad6-de292a265e1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e26b20-d3a8-49ed-8f19-fc790819eba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de17e85c-b59f-416d-bdc1-d5d1bbcbb397",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7775e6c-5dee-40a6-9692-a32c876ea0a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46adafd4-6b09-4b6d-ac6f-6318291c046e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "093daad5-9435-4d8d-a60b-7cbd6363ba12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "168f5a76-fe8c-4ee3-87f6-2a77738e4fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1fcff5-5e7f-4a10-963d-73c684918577",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e0fa5f-fb27-43b5-93a7-47a7275279a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a355bdea-9edb-4614-bc2b-2b4f2d6e4889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9faf6375-41c9-4ef2-a298-cb24a4512165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e812faa2-4a0c-44e3-9f1d-c3a1054bb8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ffd0ae-d1b7-4bfe-bb40-b75b86d7edef",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46900112-ee3d-4c1c-a390-1429e8487a4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23e6190a-0a30-4a49-aa59-ee61466a1075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1613a5b1-1b4d-44e5-b53e-3d089d221835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6d8aae1-7432-4d6a-b678-4917a49d4859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46295745-90b7-42f6-846e-bdc5ee42ef32",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a35e762-6f93-4a2d-a2b5-192cbdb3cf17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bf33c4c-49b8-4990-b83e-8e7707d0305b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64bc298-8f07-488e-9408-fba78cde2b40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3278507d-f793-44fb-85d2-e3f2d33d89a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb49a61d-ca87-4156-9cec-f08410980972",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554ef7e1-1ea2-4a17-98ea-f1495e916703",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bde08b5-9059-492f-a979-bb56212fba64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1800f91e-7870-42c7-96d3-53900a56395e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5876ac16-18fe-440f-813e-fdc9d2c59bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64d5b66-4fc8-4969-9ea0-6d3268e51f71",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0801fe2f-4381-4e80-857e-817c78d636a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fef5655-24c4-42c6-a0ef-24ea76d93b6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b8777c-5af5-4cc7-9735-f8265bcb58c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "355b76a3-910c-4379-81b5-abe05dc1e5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052717f1-88c2-49ce-b3d0-62cd47fa73bd",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40254470-5643-48ee-874a-798c2061c1d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "073ffb5a-d239-450e-94c4-38c14325335b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd77c7c3-a611-476b-9e79-4d52dcca5ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9860bedb-325c-4c06-b31a-7b7d7a82d02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9d4cdd-8847-41a0-92f0-44717ab8f3db",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92567ed3-d6e5-4622-8a8b-cfbf55405a12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a774b6a-c98e-4323-8747-36fca0a97e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52016920-4806-40ef-b8fa-d9835b460ca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61dc0ea0-6da6-41dd-ae23-275761921635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c97d4c-a792-4366-9378-c1f9682ad01f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc440ad-8af9-47f7-9ea5-d76b3edff5c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77a0bad6-4e4e-4eea-8374-92edc626a944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a698be-d1fa-4562-9dff-11388e27ffcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5261e279-98a6-4c95-a598-2839e245dd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bab54b-6529-461c-a5ad-1d221fe8d35b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d806a50-33f9-412c-9d6f-4759fe95501a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5907934-750a-430c-9ffa-14dbf19cc306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a06d892-3899-4f51-a8ec-e182d0bd0692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1645bbbf-d71e-45a1-8528-c0b1a66ac279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1530617b-f8fc-4cbb-99de-af5cac50d53c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886bc0ac-31e9-4000-a3d7-3e04f875f3af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "812dfc8b-72d2-4259-8ed4-ed80088baf9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d46ae6-ffa1-4347-8249-94cf2052e158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe8b823-20b6-45c7-9acd-93d28d49afcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa03df6-59be-462b-a6d4-53fe0456305b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48fc29fc-5d0e-4ac0-96bb-ebed456a3065",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5875ea5f-c8d8-4054-acab-8b062d833080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0273f8ac-bee2-4acb-b14f-da060b2e24a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58db18d3-4deb-41c5-b044-4dd6bf91c871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc508a6d-8281-4640-a8d7-13e7437f76ff",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb927726-af07-4740-9a71-20449752793a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ac9e997-9ac6-4476-9583-bb7e385aaef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cecf5bba-22fe-4144-8c83-00df01c7c819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30010928-a9b5-4d4c-bf39-b0b6190404b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db7e1d4-63de-484f-91b7-11b427dd0423",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec123c6d-5dd4-4a48-8ad7-be31dd00e086",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f68d421-fa3b-49db-aa02-9f696deb57bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b6cf7e-e466-4cbc-8a3e-3a82198b3055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e0871a-092b-4164-afc1-981baf9d2919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079d4c1d-74ea-4a02-9a2f-ad70214d38d8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40e3e47-dd96-4cc7-a835-956a03e17a85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4418118-318d-49f5-88f1-aa405f081585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4e19ca-af49-43b2-8701-0bc1f7bf52fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb9de58-daec-4dac-9caa-62a0429f7b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f6fea7-b0f8-4a6d-80f5-2b3b8a40921b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbd2015-398f-43cd-9bf9-5e0cae47a13d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dd7ab1e-9165-40a5-9372-6726edcd2c19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6bb26f-72fd-4787-8b2d-4b1bf8bff9b6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fba179b-5cf0-46b3-8771-c708bcb5aa17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9d55ef-1ae6-4b06-9c58-cd6cd5024cf2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97f2ac0-9b30-4360-adde-4e7136d9d4fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "217bc30c-b9df-4989-9dfc-b3b47d2eddd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7812888e-d63f-449d-a6f5-a2c388b6305d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ea953b-6efc-40cd-9e44-2c45f3b51457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24635323-a115-4e60-83f2-3cd9387da192",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e8e610-0007-4811-887d-1d94cac7b4c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed9ea93f-e4e1-441b-8781-a6fd266ee826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca172f10-27f3-483b-a9cd-ba6fc6982e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7087666f-0097-461d-b2c6-a5de30e6575b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b52226-dc56-4c08-9585-a56543a8b6ba",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60d1287-e140-4e4f-9d5b-0649be2d61b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f15e9b1-0bfb-4a36-ab60-2efafb764efb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41c1584-6c33-4288-ae70-8bc9f244c6a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8540ef4-e7c6-4d82-8187-50689aae038e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e61abfb-463e-4855-b11a-dc3bb5ff91bc",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ed65a9-867e-4b26-82fb-db6a81aca2c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad91f714-3481-486e-84b1-b16cbda2636e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df95c544-46c1-4aca-9b05-9c733ca79652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c72ef3e5-c0be-42a6-aebc-dad69677268c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af3af71-3521-4950-be55-9dc6db1f1538",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b07c59-d2ed-4513-a7e6-b3f4f99dae82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b30b886d-a50a-4ad1-aacf-9ac9aeb0aebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62142c15-8fe7-4fb3-81e9-3aae222edc25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd90243-267f-46a4-bd0e-7cbdb8b25893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e691d2-7168-4b6f-8b17-0a87a318fad3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a622b5-be4b-4fe5-9804-383be8c12010",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da72bf1c-a284-4972-8194-ca6b6a5d50a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a047a545-b921-45eb-9021-2691d672ba79",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec61e117-0e1e-4438-ab48-975abb120a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41be298-b375-49e0-aebf-340b89fdaac3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b871f3b-954b-464d-8f95-d7c8f56343e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0ccf50f-d88e-44a4-8552-8ea79663dd49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9cbc9b-eb80-4b61-a184-c79beb5991a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "974e2927-0814-4c51-a5ab-6086756c4d27"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c49dd0b-fcb9-439e-b5c2-7d29ce910aaa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0429e70-41d0-4cbf-a98b-945ce439639a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8937c161-5234-4c4e-b01a-a46a3b8102a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad928fe2-d170-424e-99a4-69dd0a7e53ed"
                    }
                  }
                ]
              },
              {
                "id": "441472a6-0a16-4394-82e0-05ed2336eca8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "23a9e531-c0c8-4001-b341-a5a542734854",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44adf3d5-5029-4520-8932-15bcb39eab76",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "68e3cd71-0cac-4792-b7ac-95d4299cf064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca80845d-2930-4966-8aef-ee032faee90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5121725-5ac3-4451-8ff5-0b8cd76af404"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2fdd3b1c-2910-4634-9c19-b2e388792356",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1b9ff57-6b6e-40fd-988a-e0b516acf769"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0d596a4-661b-4bee-849a-9e44fcd6e9aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5b7e2e9-0130-4d09-9ca1-961c197c211d"
                    }
                  }
                ]
              },
              {
                "id": "ae642162-8008-4356-b3aa-4b971dc1d8e3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4632493c-8967-4873-8e8f-ffce0cc22d8b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e1a317-738c-4433-a895-be844b2dadfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e41cffb2-4ea8-40cb-a1dc-db9229eae12d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db782c59-4b85-4408-acd8-493481b62996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e6fb9b-ed1b-43ae-a536-b194884a3b77"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "99aaa605-4360-4c75-a1cf-95ffb52d887f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3b9b282b-ec49-48c3-93d9-988e08cf62d9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c7b23c6-7d29-4dac-80cc-3b97dbf2eecc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8965b05b-692a-4cc2-8d46-ad281121a87f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb40421d-cb09-4315-b9ec-ab3b022dae50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1bd3dfc-17fc-4b37-b9f2-b301e8619a8c"
                    }
                  }
                ]
              },
              {
                "id": "b657f757-9c87-4002-8570-7713b71d8c6b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fea24e08-5090-4d98-9e3c-5205f2106a3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2b5b5beb-fd0c-46f0-9358-b1a8cc4a2ad8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "efc2131f-7b16-4675-abc2-d9e7cc007d7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94603cc5-2c89-4cbb-838d-b29132367f0f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "adec1624-a447-4dad-8422-6fac2dec4dce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "bfe68732-20db-4524-83dc-2137769fe74e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f867abe8-4f48-46bf-a518-a853349e1e74",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9de1d9b2-a6d2-41da-8a59-7f153a1531a5"
            }
          }
        ]
      },
      {
        "id": "3481d5f3-a570-4357-a463-02043ec75654",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "fa2ace36-a4d9-46b1-a5cb-2340da0598fa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d20e9548-353a-44f2-a289-ae52449d2cd2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "583e7e3e-cfeb-4a4e-986f-4a0e7d616d2c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038de272-af84-43df-b36c-77c8bf3975a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "21bead5d-dcfd-4f36-a0ba-a4c0c9bc9779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f08e24-ced7-436a-9448-6e29577952b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05e29282-6cad-464b-a54c-773433b87044"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f246c6e-0a81-407d-9870-93989bfe4316",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ea36403-9374-41cd-ae1b-ef458f35c9f9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f16614b0-ac9b-473e-acc0-6d8329bb70ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b180390f-2a8b-4ecc-958e-5a3ff945292e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "405d728f-4ff1-428b-ba53-a90117e899a2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "931a8279-818a-4af2-8edf-32b6aa94f7a0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22943afe-793d-4114-bd00-97dafa30fa78",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb41edd4-1a2a-4245-91ab-2c76143ac127"
            }
          }
        ]
      },
      {
        "id": "a0d413d5-2f7e-4be7-be5c-a590d46b9113",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5ae7eee7-ac92-45a7-85b9-5899e79926c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e73bc4ff-bb93-4060-a3c7-f877835e0c67",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dd950bbd-ac42-4a42-ae44-742d8e32c93c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5dbbe7-685f-48cb-b060-2ab8bc6d050a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb05c51e-042a-4955-843f-8cf2e35bab20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e440958d-46c9-4234-937e-3b5f3aadf015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f808009e-6bf1-4ac8-9812-a4f793393401"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4a79cd9-c99d-4049-a9b2-605b5bb79255",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e4794a2-2063-4b6b-8834-756f076b2db1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bd75016-865e-4d45-9d44-4a2088c00a8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "824728c9-592c-4d47-ae02-0213871245b2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88c156e9-9373-4cff-aa8b-dbddbe5b6e0b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "123001d8-699f-43b4-b799-4cfc6bf21462"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bba73de7-4ce8-4b11-8003-91e922441443",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c5e50bc7-476f-49c3-bf02-d2490c49cc9c"
            }
          }
        ]
      },
      {
        "id": "9398735d-13d8-4058-b894-d142e30e8fc6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "375270bd-1386-4e3e-915a-928c85fbe50c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e9aa5ceb-323e-4654-a18a-bd0d3a5ce5e8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca0d2ca8-c654-417f-a782-30d0053a8049",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16bd3a65-a591-4a6f-b523-77907de84836",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0492a90d-d592-42d2-ac69-a3188cab4a5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b94c32-3949-435f-baad-833a0744e5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee33dc67-fa82-4c0e-882d-aae38a29c104"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7a3c40d-3757-4424-bd1c-9332106697bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd180679-688f-47ea-964f-7e8aefc80db7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f89f383-c631-4b8e-9168-2c070e13f35a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b0596fa-2097-4681-b71e-1495161629c6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e77cb2b9-2407-42ee-8f46-0ea94c29b7ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "acae4070-d15c-4c82-966c-dc155d98b673"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "771590b4-6a81-4b0c-a514-b818f40aef71",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d9605e15-a9b8-486e-ad1a-56de76a72a3d"
            }
          }
        ]
      },
      {
        "id": "363e55b2-9936-4e50-a25a-c4877dc9772e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36671c73-6486-492a-ac1b-48deb2da56c3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3726f58c-6830-4b0e-a713-bd3ce95761c2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "042f0c50-093c-4e92-b264-6096bc58b285",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "241c3263-9b91-40cf-98bf-6f8b5dd659fc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e06746aa-8324-410a-9b32-0c562406532c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 101.95087719298243,
      "responseMin": 6,
      "responseMax": 6051,
      "responseSd": 439.33914211856444,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1711326942814,
      "completed": 1711326981754
    },
    "executions": [
      {
        "id": "d9ef9065-012d-4afd-80db-fb97f5bfd243",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9cf36b36-86f6-4960-a369-ff8811763196",
          "httpRequestId": "3995a7e9-14af-4dad-9c93-fa180d748e32"
        },
        "item": {
          "id": "d9ef9065-012d-4afd-80db-fb97f5bfd243",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a751e218-55c2-4972-8d11-909ff6929965",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "a37fcff2-3f3f-4f16-b765-d69ba746d245",
        "cursor": {
          "ref": "cfc85ba8-4215-40a4-b70a-496bacf774c3",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0b3fe55c-9c8e-447f-95bc-3df6b113c199"
        },
        "item": {
          "id": "a37fcff2-3f3f-4f16-b765-d69ba746d245",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fedd2a9a-a1dc-4a0c-9bf5-3d8ee5dcdc88",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "372a262f-fdd1-47d2-b8df-ae9742102fb3",
        "cursor": {
          "ref": "361b730a-12d7-4dca-869a-ed76dcc44962",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6f365879-31ce-4f1e-b623-7c8d539da859"
        },
        "item": {
          "id": "372a262f-fdd1-47d2-b8df-ae9742102fb3",
          "name": "did_json"
        },
        "response": {
          "id": "67140c4e-7517-4162-add6-39a47b007826",
          "status": "OK",
          "code": 200,
          "responseTime": 292,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2b2ca7-4496-4424-a181-b3d0f693aa6f",
        "cursor": {
          "ref": "74a8103e-c2d7-4eeb-b5d2-4bcb520e533c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "566fb476-d794-43de-8526-736d3b10fa11"
        },
        "item": {
          "id": "6a2b2ca7-4496-4424-a181-b3d0f693aa6f",
          "name": "did:invalid"
        },
        "response": {
          "id": "da22b37d-de08-48f7-a07c-b34ae6d00dc1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 315,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2b2ca7-4496-4424-a181-b3d0f693aa6f",
        "cursor": {
          "ref": "74a8103e-c2d7-4eeb-b5d2-4bcb520e533c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "566fb476-d794-43de-8526-736d3b10fa11"
        },
        "item": {
          "id": "6a2b2ca7-4496-4424-a181-b3d0f693aa6f",
          "name": "did:invalid"
        },
        "response": {
          "id": "da22b37d-de08-48f7-a07c-b34ae6d00dc1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 315,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4114beca-b5aa-42f4-bf7f-4bdd7275c7c9",
        "cursor": {
          "ref": "38a3f7b1-f093-44a3-822a-e1479b701c08",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b6d5eac7-2902-4e43-b382-bf7c1e40bba0"
        },
        "item": {
          "id": "4114beca-b5aa-42f4-bf7f-4bdd7275c7c9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "064e2477-6676-4029-a213-37cacc2a5334",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3898fb92-17ea-4fbe-b0db-8698ba9b72c2",
        "cursor": {
          "ref": "8899f9ca-a5e4-4ab9-bc48-3cc2f5a20d34",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "348eaf52-877c-499b-911d-dee281bd5436"
        },
        "item": {
          "id": "3898fb92-17ea-4fbe-b0db-8698ba9b72c2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "868cb451-d6bd-4cce-b494-3a1a84189fb9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e424bd3-5e2f-417b-9352-a668fab379fd",
        "cursor": {
          "ref": "7e6ac869-22a7-4d1b-af7c-e6d9faffd4b6",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "48cf0b55-cc02-40b2-b5de-c88484d3bf28"
        },
        "item": {
          "id": "6e424bd3-5e2f-417b-9352-a668fab379fd",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "605cb7a4-2fb6-45c2-a430-f9fbd36c65e9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6811d38-f1d0-4ec3-a77b-07702a1b4b33",
        "cursor": {
          "ref": "96a09b7f-1182-4cb1-9d20-c2b02363c2d0",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "fe460663-7bea-4753-b1bb-9f7eb0c35322"
        },
        "item": {
          "id": "e6811d38-f1d0-4ec3-a77b-07702a1b4b33",
          "name": "identifiers"
        },
        "response": {
          "id": "2e875ca7-ff1a-4dea-8cff-6fc5ebaa8bb8",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06429b8-0f41-4ea8-9a4a-250a002bdb6e",
        "cursor": {
          "ref": "2f5ec98b-53ae-4f07-9ac6-35875a9b3395",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "85a5b3a2-31cf-48a9-8273-669da0617ebb"
        },
        "item": {
          "id": "f06429b8-0f41-4ea8-9a4a-250a002bdb6e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a6864775-38cf-40cc-9480-0b1c238e0874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949d7c52-d749-49c0-a5e1-37dfbcdba499",
        "cursor": {
          "ref": "031fbd81-2a7a-4ead-b67c-84c564594ce8",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "886c0b65-0d96-47e6-8cb7-8dbdb1c6e667"
        },
        "item": {
          "id": "949d7c52-d749-49c0-a5e1-37dfbcdba499",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "40fb547f-7167-4c0f-bb7e-43685c42ad00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ce5c25-d3bd-4a1c-9dd2-6128496f1d9e",
        "cursor": {
          "ref": "a569464c-29b5-4c0d-af4b-dadb6cf12c94",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "daa30194-7bde-448e-ae45-9add4587c908"
        },
        "item": {
          "id": "f9ce5c25-d3bd-4a1c-9dd2-6128496f1d9e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5940ebe2-3456-4027-843d-1d033427e865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51bc9d7d-4073-4fa3-86f0-37aed81e13bf",
        "cursor": {
          "ref": "cf2475da-dbf5-4676-9927-f095a863a19f",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c8067323-b034-4d70-88e6-d61f815a78f5"
        },
        "item": {
          "id": "51bc9d7d-4073-4fa3-86f0-37aed81e13bf",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d759d47a-84a8-494e-9709-7309f712b64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b506acde-9474-4e9d-8131-d3dec2a2912f",
        "cursor": {
          "ref": "843a7b73-5e70-41c2-9037-1f3d55e4e4d2",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5c07177c-8ad1-4741-9d20-37930aab7714"
        },
        "item": {
          "id": "b506acde-9474-4e9d-8131-d3dec2a2912f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b23e5c70-746a-4e3b-a538-e13bc82d187d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88306ad7-dc7f-489f-bcc1-067c630c1295",
        "cursor": {
          "ref": "702e4728-dd54-4add-9dcf-794c0e065d9a",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6197f95e-e9af-4b2e-94a3-3fc4bf0601e4"
        },
        "item": {
          "id": "88306ad7-dc7f-489f-bcc1-067c630c1295",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b301c35b-9f4e-4ea8-b18f-2e306a611d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c2e507-f480-4a35-add9-22240354707b",
        "cursor": {
          "ref": "fad3fd08-c1df-4ba5-8fef-766a2cd555a6",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f0d4cd18-a600-4f18-a89d-ad714d719284"
        },
        "item": {
          "id": "55c2e507-f480-4a35-add9-22240354707b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "028de339-9e0f-4502-a234-9af3ddc7df89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22dfb983-440f-4da0-92c2-4eabb6e9d3e9",
        "cursor": {
          "ref": "22ddef28-2378-47da-8bd4-fb0ffc62dcc5",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8e9a0f5d-7cdc-4fdc-a737-be9afd2ef20c"
        },
        "item": {
          "id": "22dfb983-440f-4da0-92c2-4eabb6e9d3e9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f80bebb0-4cb8-43db-b611-214b2068951f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78504d15-d324-4af4-b384-4631e46c8052",
        "cursor": {
          "ref": "3a54665b-d4a7-445e-9bb5-88645f9dce6f",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "dda99de8-cce4-48df-bdbe-27001dcf02fc"
        },
        "item": {
          "id": "78504d15-d324-4af4-b384-4631e46c8052",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2e688ca9-54c0-4a58-a810-cdef1f07bbdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a04d681-ce7f-4984-a7ee-94c169b4ed7c",
        "cursor": {
          "ref": "e25a358d-10d9-4b46-8c8d-1cd0c31d24a2",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6d85b6e7-bc1d-4d68-b526-dcc0e9ab8519"
        },
        "item": {
          "id": "3a04d681-ce7f-4984-a7ee-94c169b4ed7c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2afa0658-93b0-46ae-9549-3eda6c987f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f4d963-90e8-43a0-8aff-3681ab3b788d",
        "cursor": {
          "ref": "7584f159-5d41-49cf-8606-ee53849d9472",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "cb8450ed-85ed-42f3-a815-8db1e6529328"
        },
        "item": {
          "id": "57f4d963-90e8-43a0-8aff-3681ab3b788d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "373d937c-7055-4a8e-b10c-dbeb60baf958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aedd3ffc-6bc4-4399-9cd1-74d9d9226309",
        "cursor": {
          "ref": "2bed30cf-e4bc-4fcf-9532-1ede2a0c7b86",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2da556a3-e32c-4a56-a0f2-8d2fd4fc2ad6"
        },
        "item": {
          "id": "aedd3ffc-6bc4-4399-9cd1-74d9d9226309",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "acb882d6-c024-43f5-aa1a-5f462308dc50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5cd86e-99ad-4c48-9c67-229ab4ddd59d",
        "cursor": {
          "ref": "3f56ab19-4174-4997-8166-b0c9019f37ac",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6554a718-9aa1-4d58-bf3e-fbe39587e715"
        },
        "item": {
          "id": "8c5cd86e-99ad-4c48-9c67-229ab4ddd59d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "86a5a61e-09b6-44f7-be2c-849a73eedf62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e311856c-c6ed-46e6-b617-a9c5b5e81a69",
        "cursor": {
          "ref": "b6e238f6-d145-4c39-9a5b-475079739777",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "abf6a86f-70c0-4b69-a2ca-3c66fbf6f50b"
        },
        "item": {
          "id": "e311856c-c6ed-46e6-b617-a9c5b5e81a69",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1f9f3d69-a712-41b4-9ff6-6b15aa9719ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf00654-f643-4de9-930c-1bfdbad4be93",
        "cursor": {
          "ref": "e58357c9-1ec6-4d29-a6c4-66b9710fa072",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1fb7347f-14b3-4110-b097-00a6598f923f"
        },
        "item": {
          "id": "ecf00654-f643-4de9-930c-1bfdbad4be93",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8a650540-4a52-445d-8b06-d7be7562e574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a522f44d-a645-4f2b-91a9-d3a315f5c592",
        "cursor": {
          "ref": "50504973-9a1e-4b5b-b4a0-d2ad6ccdfc06",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4345d40e-4667-4f26-8c4e-4160e9e60b9f"
        },
        "item": {
          "id": "a522f44d-a645-4f2b-91a9-d3a315f5c592",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7c7bff95-327d-4b8a-a097-4bceb01387c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861d6f3c-dbf8-4dbc-9a02-2b4cfd68b3d9",
        "cursor": {
          "ref": "5fdd8e4d-fd32-4db1-9391-7ce935243a51",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e4e50bf1-1492-4fd2-ae6c-ee09ae094ed0"
        },
        "item": {
          "id": "861d6f3c-dbf8-4dbc-9a02-2b4cfd68b3d9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "992055f0-3dae-48a0-8d34-7427662413d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b09f05c-a0b7-468c-9f88-a0ab2db2c9c5",
        "cursor": {
          "ref": "7adc0d07-e592-4aa1-99e8-bde6f502ba69",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c2ab9ff5-acc5-4310-9e61-6a639324bdf1"
        },
        "item": {
          "id": "8b09f05c-a0b7-468c-9f88-a0ab2db2c9c5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fa166901-722d-41eb-a75f-6b06bc8a5f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31b5849-e9f8-43db-bced-36bb69a33cc8",
        "cursor": {
          "ref": "54e3d8b0-60ac-46a7-b5bc-4d8294ad5f02",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7fdafad1-10e0-422f-ad66-52fd2c6bf82c"
        },
        "item": {
          "id": "a31b5849-e9f8-43db-bced-36bb69a33cc8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "15d9369f-ad0e-4d7c-8cee-c8c74f38b95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226a151a-93ad-4f29-a6d4-b9e9396469e6",
        "cursor": {
          "ref": "8cc821a8-510d-4a21-a958-08f9eae70ff8",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d9b83b0d-4b2b-4349-b680-d03444dfe2b3"
        },
        "item": {
          "id": "226a151a-93ad-4f29-a6d4-b9e9396469e6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7f4764d8-78a8-471e-8c55-8febd7058e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1750f75-9f04-40f9-a862-d9e39dbc90d1",
        "cursor": {
          "ref": "6734a638-47cd-4d39-bab4-8b176bb1615f",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ae3a0154-9c70-4735-9235-d4fa7eecc49e"
        },
        "item": {
          "id": "a1750f75-9f04-40f9-a862-d9e39dbc90d1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "662befcb-d3d0-4a8d-a1ee-e23e3d95fc71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52cef92-74e3-4b26-b4d4-9e22ff702746",
        "cursor": {
          "ref": "7bb29286-7450-492e-bef3-d483c03269f4",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "37b940b8-284d-4753-8366-66f04a925687"
        },
        "item": {
          "id": "f52cef92-74e3-4b26-b4d4-9e22ff702746",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d7f64b47-a0cd-4b2a-b4ea-733e03f02251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0600dcc2-2da2-420a-ba88-95c7896aa86d",
        "cursor": {
          "ref": "f890c368-5b38-41fa-a873-c3db59d5201e",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9d8373bf-d592-4c2f-aadf-7b23bf0a8a1d"
        },
        "item": {
          "id": "0600dcc2-2da2-420a-ba88-95c7896aa86d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3250b899-13bd-4e25-85f4-9a6e763850be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56eff9ea-7946-4885-a2bd-84787c092a68",
        "cursor": {
          "ref": "c836ea72-93de-4d8d-bc64-1bf1847b4e0c",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d3f99b5e-ba3b-4121-801e-bd4084da7bed"
        },
        "item": {
          "id": "56eff9ea-7946-4885-a2bd-84787c092a68",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "15805d20-0c9c-4d3b-b32f-50c7777d8a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab2cc9b-6a1f-44cb-816a-6e92d3e96b49",
        "cursor": {
          "ref": "7367df01-613d-49ff-b072-d3dbfe1fcf0a",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "12026a2f-ef85-4969-ab55-a3d169e6832a"
        },
        "item": {
          "id": "fab2cc9b-6a1f-44cb-816a-6e92d3e96b49",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c78aff52-0255-4563-8e80-34b28b37f7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1387c831-e2ab-403e-8203-bdf46ee6c1e0",
        "cursor": {
          "ref": "3f8deb91-2c41-47a0-894e-f5c1aee0c0e8",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2c800d5d-e466-4d4f-81fc-2b4e4aa426f9"
        },
        "item": {
          "id": "1387c831-e2ab-403e-8203-bdf46ee6c1e0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c276923c-3e2c-43e0-abf0-88f9ec35d2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d91e95-216c-41d7-9f1a-08cf321f1911",
        "cursor": {
          "ref": "3fab892b-e798-4a09-920b-b4a1ad6b92e1",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2aa51d8f-41d7-400e-967f-26bcaded7bc4"
        },
        "item": {
          "id": "c5d91e95-216c-41d7-9f1a-08cf321f1911",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e5c1656f-617c-438d-a01b-fd712e55a60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e3d115-c9da-410a-996f-0a996fd6b74c",
        "cursor": {
          "ref": "46c71150-1974-4db7-bba3-98625d046dfb",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4c74143f-ba05-494f-8758-235d01887324"
        },
        "item": {
          "id": "c7e3d115-c9da-410a-996f-0a996fd6b74c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "835251dd-4206-4be8-8815-a446847c6e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2ee931-6fa0-42d3-8481-c494e3054e87",
        "cursor": {
          "ref": "08b04c3c-d45f-45a2-9684-a220d9c1c178",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cbe3c969-c960-435a-b093-7d36f0d593d3"
        },
        "item": {
          "id": "aa2ee931-6fa0-42d3-8481-c494e3054e87",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d551b443-5f5b-4b9f-abf3-853a7493d240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da2c7fb-afdd-4453-bfac-6ccbd805fbf5",
        "cursor": {
          "ref": "660e2dd4-8e87-410b-b4a8-fa5201cf4e1a",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6331d7ea-c2d6-48a3-a7ab-53c04f3d8ef5"
        },
        "item": {
          "id": "3da2c7fb-afdd-4453-bfac-6ccbd805fbf5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4c42c692-1cab-47e9-b991-19158ce97a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1561a757-560a-486e-8586-68d395f13edf",
        "cursor": {
          "ref": "e0e0ea24-7cd4-4280-9b16-6e0ad9b18444",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f41370fb-d417-4916-9217-b3518bfdb18e"
        },
        "item": {
          "id": "1561a757-560a-486e-8586-68d395f13edf",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6586a345-f5c3-4122-a9ac-fcf65429fd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7128dfe-eb36-4c85-a247-e0e5f63fb9d0",
        "cursor": {
          "ref": "d3db2bf0-7ec1-4fc2-820c-5e8c9e3a6cc3",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e51eaf17-c9f6-4a1d-a475-f5342d103431"
        },
        "item": {
          "id": "f7128dfe-eb36-4c85-a247-e0e5f63fb9d0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "24e48415-512f-4b66-a2d3-bc85dd9555d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5c97f1-710a-42eb-aa1f-6f58acbffce2",
        "cursor": {
          "ref": "72b1ea55-5fbd-40d1-806d-bf754b5261ce",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2ce0eefe-83bd-45c1-a71a-9ea563b9aec9"
        },
        "item": {
          "id": "6a5c97f1-710a-42eb-aa1f-6f58acbffce2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "73f746b5-6684-4a7b-b841-75501999b986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b07e42-ebf4-4f50-9d84-0bdee62a24e4",
        "cursor": {
          "ref": "5e28127f-1bef-4267-8d75-98faafda8726",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1bac1b74-c3e9-402a-84b1-7ca8f87a2556"
        },
        "item": {
          "id": "97b07e42-ebf4-4f50-9d84-0bdee62a24e4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a7695bdd-8250-48fb-8fe4-8e476deaed3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6486b93f-b0d6-49e4-bb17-d6f5cd2c28db",
        "cursor": {
          "ref": "3159f93e-5b09-4070-bc16-12d6cf3c4a04",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fac6b170-5a60-407f-bd6b-5bbad499d0a1"
        },
        "item": {
          "id": "6486b93f-b0d6-49e4-bb17-d6f5cd2c28db",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0a45038a-dea6-4900-8be9-d4ff60686eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c6edf8-698f-4bd6-a14f-e3464d1611bf",
        "cursor": {
          "ref": "9d53187a-a3c5-4342-838f-534d57f157ba",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e20eabac-6767-42de-87a3-6e6f31844661"
        },
        "item": {
          "id": "e4c6edf8-698f-4bd6-a14f-e3464d1611bf",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c7cf2f30-9596-4683-bc44-b6a17811035d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348bda72-66da-4654-bd2f-fe21e3e22b0f",
        "cursor": {
          "ref": "0f4b2fe7-4ea7-49c1-93f7-4ee790979be4",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "24decd01-7ef1-4eaa-a13c-45e3ddf40da7"
        },
        "item": {
          "id": "348bda72-66da-4654-bd2f-fe21e3e22b0f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "08a69a58-18e9-4aa8-aed1-176045f5972c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3009e938-36e9-4886-9695-f8e8c60bc364",
        "cursor": {
          "ref": "27233c7d-685a-44b7-9946-28e857a45afc",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "341410ab-4ce9-400f-af29-3c122f618fbe"
        },
        "item": {
          "id": "3009e938-36e9-4886-9695-f8e8c60bc364",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b4c350ed-52ca-40d6-8911-140b9ee8ae43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f412f68-92dc-4334-a679-307e94be6c46",
        "cursor": {
          "ref": "6b0f18ff-4397-41de-b213-78f248295593",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5dc2bba7-9491-470a-bd91-d2b8edc5de15"
        },
        "item": {
          "id": "0f412f68-92dc-4334-a679-307e94be6c46",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c164c309-f99e-4f3f-b0c5-768e194808de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775aeea6-0c6f-4425-9f45-f1d4071cfebe",
        "cursor": {
          "ref": "537f0f2b-010b-4d86-8e1f-aa72d276ce90",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "911a8dce-024e-492a-b19a-ec7a01446eaa"
        },
        "item": {
          "id": "775aeea6-0c6f-4425-9f45-f1d4071cfebe",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "910d1c72-0afc-4883-945c-8ef4ba67cf8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5a4cde-4350-4f38-a9e3-d87240f1fa13",
        "cursor": {
          "ref": "cb8b54a3-dc36-455f-b543-56658b6ef1dd",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5b8524ac-78b3-4b70-9694-5b72d611003e"
        },
        "item": {
          "id": "4f5a4cde-4350-4f38-a9e3-d87240f1fa13",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "abce08a2-85b7-4b6a-9721-3b7d52f67711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f7dd97-09e8-4bd2-8f74-298b593fee10",
        "cursor": {
          "ref": "90b4aba6-41e0-4daf-b23b-2ae7c1a2c0d7",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2322ea78-162e-45fc-8211-a66007ee06f2"
        },
        "item": {
          "id": "77f7dd97-09e8-4bd2-8f74-298b593fee10",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2b0069a8-8bf9-4d91-8797-623df5d1e5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f974502b-c80f-4a86-9c95-4ead29be6c1c",
        "cursor": {
          "ref": "0c35584f-d6e2-408c-918a-88303625f61d",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1c112ddc-25cb-4793-939f-dd1f54728b25"
        },
        "item": {
          "id": "f974502b-c80f-4a86-9c95-4ead29be6c1c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f892ff89-ce3b-44f2-bcba-11a66f32b7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afb7399-e13a-4be5-9d8b-90711e776775",
        "cursor": {
          "ref": "0f83d8bd-0d13-4996-8537-c3f9244f16db",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "35b3f4b3-2c7f-4223-8151-c37e3fc52fd3"
        },
        "item": {
          "id": "4afb7399-e13a-4be5-9d8b-90711e776775",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "10393ac3-c3a6-495d-af64-8e9b75bb7d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f59ff59-8e55-4d58-93ad-218a2f0cf822",
        "cursor": {
          "ref": "f13fab9d-b84d-432f-829e-053e0fae5749",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7d329f10-49fd-4185-9323-9f74a0cdc54a"
        },
        "item": {
          "id": "2f59ff59-8e55-4d58-93ad-218a2f0cf822",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "93200891-0e18-4b91-a42d-4e05dec68795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768d933e-5da5-44f3-bcf1-b90ea892a3d1",
        "cursor": {
          "ref": "3f903bf7-d1c5-4d30-ab9d-8d50bda79f56",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3b7d1a4c-7b36-429b-ad93-7151e2e77da8"
        },
        "item": {
          "id": "768d933e-5da5-44f3-bcf1-b90ea892a3d1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0187efed-ed50-45ec-bc73-cd7feeceb3d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da23eaf-c6c4-4d3b-b4a8-f701de17b086",
        "cursor": {
          "ref": "e051cec6-b749-48ff-9a41-7fb2c26755e7",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "370fd784-a75f-40cc-b23f-8bc8be7aae01"
        },
        "item": {
          "id": "6da23eaf-c6c4-4d3b-b4a8-f701de17b086",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b0232b05-932e-4c70-a41f-2454d9bdfc40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc30a212-0cce-4aae-be9a-984df9eac540",
        "cursor": {
          "ref": "e9f4842f-5769-4034-bbc8-8bf13878adba",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2d3f14db-8cbc-4ca2-8cd5-d3c771bf9c61"
        },
        "item": {
          "id": "cc30a212-0cce-4aae-be9a-984df9eac540",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6e575923-a917-4cc8-ab5d-ec715147519d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b401b148-78e7-4231-9c79-91b3c1ade9b3",
        "cursor": {
          "ref": "c2db06b4-4deb-4498-828d-7df7bd32dd1e",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "995f2195-ef16-4fd7-92ec-9fe85ec14eb9"
        },
        "item": {
          "id": "b401b148-78e7-4231-9c79-91b3c1ade9b3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0fc9dafc-f79a-4bba-8a75-288c5a27e43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440631d0-648e-441c-8c38-eb5d36921e2b",
        "cursor": {
          "ref": "76385b10-3d8b-4067-9b64-741635bcf81d",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ece0c03d-7a96-4321-9014-f98acef0e93a"
        },
        "item": {
          "id": "440631d0-648e-441c-8c38-eb5d36921e2b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f7c9a555-24b4-4856-a9c0-10acb814a400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87967ff9-bc7d-49cf-9022-aa0b5e3ff9d6",
        "cursor": {
          "ref": "981415a0-e0b6-407b-96ef-5cd428dc149d",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1961a8c0-9b18-41f2-bcc9-7ecf91acfcac"
        },
        "item": {
          "id": "87967ff9-bc7d-49cf-9022-aa0b5e3ff9d6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f95435a2-9e9a-480a-b799-cf16554e5142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b37af6-7343-4d4a-8aa4-5e9850d3002c",
        "cursor": {
          "ref": "496207f9-821c-4d46-868a-6f4ed1a25d50",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "bcf9b7a7-3366-4e24-a240-4129ab446c58"
        },
        "item": {
          "id": "c7b37af6-7343-4d4a-8aa4-5e9850d3002c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6562ab9e-d65d-40f7-bdf7-d686c97cbfdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbe57c8-f1da-4110-a2dc-3eebccd4fd38",
        "cursor": {
          "ref": "1b15c349-c4d1-4c2f-ae31-0fe8d1bc8c1b",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "100c9a55-4a0b-4517-87ab-87bbdb068cd7"
        },
        "item": {
          "id": "7fbe57c8-f1da-4110-a2dc-3eebccd4fd38",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "81037b01-2ac2-42e0-bfaa-28346cbf5bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9185e80-b601-4fd7-bd20-afb2c41d6e5b",
        "cursor": {
          "ref": "468b6861-6a1b-477b-a525-c76f5c5ef69d",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fce224db-f742-42c6-a091-3ed8592d94f1"
        },
        "item": {
          "id": "d9185e80-b601-4fd7-bd20-afb2c41d6e5b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "97454cee-abbf-4a1b-9b20-6467e8c9b749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d60a983-2a88-43b6-85eb-b3ef363e96a5",
        "cursor": {
          "ref": "2018e802-d0c4-4398-ba37-6b8047adc851",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1834bb11-88e3-448e-8966-ac85643393a6"
        },
        "item": {
          "id": "6d60a983-2a88-43b6-85eb-b3ef363e96a5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1ae2f590-bf45-41da-bb8e-aee55f222f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04938d8e-3589-40e6-979f-53133d856f22",
        "cursor": {
          "ref": "7ad3f2c0-379e-45e5-a57f-ec9fae322835",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0f079675-d069-454e-856c-1ae2b454d28e"
        },
        "item": {
          "id": "04938d8e-3589-40e6-979f-53133d856f22",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7c0d8540-15de-4dd5-a1fd-38a8a217954f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9e3e2c-c5d2-44c0-bbed-fca75c6ec0d8",
        "cursor": {
          "ref": "2e9cd40f-acea-4e58-acaf-9697aa74fdbd",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "88797f8d-e97e-4b21-a638-aab0df6e0508"
        },
        "item": {
          "id": "1c9e3e2c-c5d2-44c0-bbed-fca75c6ec0d8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d26a76c8-4ea8-4c67-a9be-683b93d51426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4420a997-2cd8-4976-bca2-e02e57ac71e5",
        "cursor": {
          "ref": "07d41af7-0958-47da-a6fe-e38ea9c3a74b",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6cfb6973-c7d1-4149-b7d6-84c31b3ffd57"
        },
        "item": {
          "id": "4420a997-2cd8-4976-bca2-e02e57ac71e5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1b1583b4-283e-4bcf-b5a6-8b754ba7a51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e592f522-cfd4-484d-9dcc-8400aaa6472c",
        "cursor": {
          "ref": "a9fc5c60-f81a-4369-8b8f-71a9b618d2d6",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "deaf10b1-bf41-4fe7-8730-d03d98dc31b7"
        },
        "item": {
          "id": "e592f522-cfd4-484d-9dcc-8400aaa6472c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d397f858-c4de-4929-9537-f7464be40461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4106985-f413-454d-8857-ff03e0c9601a",
        "cursor": {
          "ref": "45fa320f-66ea-4ff2-a25f-43f5f1fee964",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fb5cad27-57cb-4b17-abde-213f72ed750a"
        },
        "item": {
          "id": "d4106985-f413-454d-8857-ff03e0c9601a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c8d015e0-cccb-4ed9-98b2-772bab90c3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf19a1a-a231-4206-ae15-beed43ea22ff",
        "cursor": {
          "ref": "f9b6c435-1920-41fe-823a-a1ba8c59f003",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ca4d0b14-e819-416c-a6bb-dc7029598859"
        },
        "item": {
          "id": "1cf19a1a-a231-4206-ae15-beed43ea22ff",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "59306768-09af-42fb-b72b-fc4eab621a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0ec2d5-8c1d-4d3e-8a3b-d4c3fbc006a5",
        "cursor": {
          "ref": "8c3d0d22-5eae-433c-aa57-dabc895050a8",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a3476805-4a25-455a-99f0-bd75c508bd25"
        },
        "item": {
          "id": "db0ec2d5-8c1d-4d3e-8a3b-d4c3fbc006a5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9c4d24d2-dc06-4c33-b42d-bdb9b56e3353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafbc7d4-9781-40bb-bc53-aa9f65294fff",
        "cursor": {
          "ref": "7e7c90c9-4445-4188-b8ef-b9436b2b304b",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "72e7e3f6-6df6-4f55-bcb8-97bdc7c0df0b"
        },
        "item": {
          "id": "aafbc7d4-9781-40bb-bc53-aa9f65294fff",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f9fe1637-d675-4049-9741-8185823947be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350cb165-49ed-4bf7-a23a-52bbb43b36eb",
        "cursor": {
          "ref": "9d3f28b8-3329-426c-8da2-e0961dad63b6",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9ec565d1-83d3-4564-893a-539babf78a87"
        },
        "item": {
          "id": "350cb165-49ed-4bf7-a23a-52bbb43b36eb",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "cbcf7bae-9d03-499c-9e4a-2f1e624a0eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c4bbac-7866-4935-888c-045a658e04b9",
        "cursor": {
          "ref": "14762a8a-eccc-4502-87a1-9cd21656c89a",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7dd9f64e-3ada-433d-b459-49489131798d"
        },
        "item": {
          "id": "a7c4bbac-7866-4935-888c-045a658e04b9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e5f2dd38-41b9-406d-9add-e412f46c53f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31dfd1b7-fa3b-46d7-8585-e8ab782c40bc",
        "cursor": {
          "ref": "8d025c31-3e99-4452-ae0b-d01383fcb0bf",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f3ae593e-2f1a-4b92-b3d3-a0667c5b49d9"
        },
        "item": {
          "id": "31dfd1b7-fa3b-46d7-8585-e8ab782c40bc",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "39cd9571-2de8-4fbf-8e52-7910add6a6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0932638a-628b-4675-a4e8-ae8c32479f62",
        "cursor": {
          "ref": "cb18a94c-a729-4c25-8008-7ae0fb51de7f",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5763fcd1-49ce-4571-aee4-b904d009fbe4"
        },
        "item": {
          "id": "0932638a-628b-4675-a4e8-ae8c32479f62",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "55e3c456-87ae-47c5-97d1-b9f71597c17b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01854696-7b0c-4a12-98b5-4f519122d2a9",
        "cursor": {
          "ref": "b4bc95c3-53ba-4bb3-bb94-0c13155a655b",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "bb0863e3-ba28-4b59-b710-224a4c327c65"
        },
        "item": {
          "id": "01854696-7b0c-4a12-98b5-4f519122d2a9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "701c350b-7da2-4f59-9cd8-b210a6bfb8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1874ed-114f-492e-8f60-07ff1950148b",
        "cursor": {
          "ref": "36d09091-67fa-4d22-b4a3-a9a7f01583c9",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cec65c90-dcdc-434c-b6ce-11b6e4e77633"
        },
        "item": {
          "id": "5c1874ed-114f-492e-8f60-07ff1950148b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1301e20f-eb75-48c2-b74c-bad9d1d4f55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc0accc-6b74-4b68-9401-04cefeccf001",
        "cursor": {
          "ref": "de3c3f21-a4f3-4586-954e-d88aa6beb17f",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a01a9d84-d94d-477d-b092-f291f3113413"
        },
        "item": {
          "id": "4fc0accc-6b74-4b68-9401-04cefeccf001",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0362241a-4327-49f9-ac24-b092b0ccc50f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af85a763-4ec6-42c9-8755-1d4a53f4fb77",
        "cursor": {
          "ref": "1ad509cf-8f5d-4d11-97b9-7083afbb2beb",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ad6ddd8e-1f53-45de-9260-f312aeb233d0"
        },
        "item": {
          "id": "af85a763-4ec6-42c9-8755-1d4a53f4fb77",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "62626543-5976-4cae-b8c2-f78490743feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e152895e-fe5e-45a4-ae06-cc3c047b3751",
        "cursor": {
          "ref": "905e9929-05c5-4b36-84fd-839636eed31f",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "19d6233e-5058-4fea-8745-3e4b41381c39"
        },
        "item": {
          "id": "e152895e-fe5e-45a4-ae06-cc3c047b3751",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ad92b1ef-dedc-4684-b672-fc3ec38d38c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 181,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5c8f01-4229-4369-8583-9588b347295f",
        "cursor": {
          "ref": "839789c5-d70b-4854-b73d-8461bb24d175",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2f2608f9-3a25-4383-a4c9-372897df4aa3"
        },
        "item": {
          "id": "5c5c8f01-4229-4369-8583-9588b347295f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a34fc1f9-fa37-4778-aace-7cbaff4a5a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beaeee15-0d25-40a6-9cdc-054153361fd0",
        "cursor": {
          "ref": "d8f17b5a-2cdd-49db-a112-1b996174648d",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ba5205d8-057f-4c91-a985-de97bd0fced2"
        },
        "item": {
          "id": "beaeee15-0d25-40a6-9cdc-054153361fd0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4636a126-6a51-47c9-b7d9-9b82fcf713b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 216,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f406bd-4d96-40e8-992b-4860b851c30e",
        "cursor": {
          "ref": "9c8f3056-5541-4fe9-b1ab-7e53a3fce384",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "72a6cd15-4783-42c0-8708-10e1ba968ecd"
        },
        "item": {
          "id": "f5f406bd-4d96-40e8-992b-4860b851c30e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4cd82c62-2727-499a-b84c-1b369610c7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c348e7aa-a536-481c-9403-369b24adc79e",
        "cursor": {
          "ref": "44b012de-acc3-460a-b7c6-a2fb23583a64",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "688b229e-02cb-4f14-aa89-a97c35fdc295"
        },
        "item": {
          "id": "c348e7aa-a536-481c-9403-369b24adc79e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3cc74ff0-e594-43bc-9f8b-113e6e13767b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b4b7ca-ac70-4ef2-995a-2c6d09018e45",
        "cursor": {
          "ref": "837b9879-afd4-40db-8626-497c6492fc6b",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "119a6702-923d-4a65-9dd6-64bca7fed492"
        },
        "item": {
          "id": "31b4b7ca-ac70-4ef2-995a-2c6d09018e45",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8dbbfc68-6037-4e1d-abaf-c4eb107862d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a754b7ed-1b98-4c20-a653-587638579788",
        "cursor": {
          "ref": "e0843046-53e5-4313-b425-6ee708ba6f23",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f23609dd-28d1-48b9-aefc-18e74a714d94"
        },
        "item": {
          "id": "a754b7ed-1b98-4c20-a653-587638579788",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ab6a9ae1-03f1-460f-9cd3-cbccb3bae8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c37f42c-b911-4ca0-95d2-7c8d3593b4d3",
        "cursor": {
          "ref": "2516a635-f01f-424d-b30e-b5949947f7d2",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "34ad7f02-94bf-492f-b5e3-d95ebd3120f4"
        },
        "item": {
          "id": "6c37f42c-b911-4ca0-95d2-7c8d3593b4d3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fcd0a572-f0ab-4402-9a44-fd2c98856cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05e259e-1b4a-48b6-9729-0f3decdd9d8d",
        "cursor": {
          "ref": "cb4aa345-9136-4893-bb72-224e93d30da5",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d5fd042f-049c-40d1-b1ee-8a16e0b40f4a"
        },
        "item": {
          "id": "d05e259e-1b4a-48b6-9729-0f3decdd9d8d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "81798b79-be4b-49dd-ad7e-02e6b42f68ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de5e88f-8682-484a-bcc4-2a43c5b839fc",
        "cursor": {
          "ref": "4f53a6c1-c303-4125-bd14-6188120ceb4d",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a6da9b57-6789-40c5-ac60-b68b657c1530"
        },
        "item": {
          "id": "1de5e88f-8682-484a-bcc4-2a43c5b839fc",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "47b1b8ea-6086-43ac-a955-e1a962c4b3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097e8675-96fc-4235-a562-1c6da798fa1b",
        "cursor": {
          "ref": "029834f7-8c90-4912-b474-19d173780a64",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3f2012a7-75a0-47c8-8fcb-dbb01832a76b"
        },
        "item": {
          "id": "097e8675-96fc-4235-a562-1c6da798fa1b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3e15d781-5045-476e-a8cd-cef81e6c532b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ce61b3-bdb3-41c8-b04c-89e0986214d9",
        "cursor": {
          "ref": "1b8a5237-d10c-48e1-8349-7392a6c15d7f",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "dda05280-7638-41ee-bb89-5fa9025d77fc"
        },
        "item": {
          "id": "05ce61b3-bdb3-41c8-b04c-89e0986214d9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "64571577-3917-4ac5-b84e-6314b39819a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723bf75f-b6e5-4d4a-809f-2d753f70c3f3",
        "cursor": {
          "ref": "c163d805-7f12-4fd0-bd13-c3a04cb0fbde",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2ae5e03b-2036-4c80-b331-db7c2a9d6b6c"
        },
        "item": {
          "id": "723bf75f-b6e5-4d4a-809f-2d753f70c3f3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5babb1bd-d496-46e5-bd59-2e58a6f8699e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a749dbf-7f16-410c-abe1-109beaa73398",
        "cursor": {
          "ref": "f550ac35-433d-4742-b862-bf7ab6488053",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "bbfa88d6-3583-48a9-a054-1c16ec49cf3e"
        },
        "item": {
          "id": "5a749dbf-7f16-410c-abe1-109beaa73398",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f74620d0-c05e-415c-ba8b-8f3ec09f3a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4356e10b-a858-4bfa-8425-6f7ff0231148",
        "cursor": {
          "ref": "a5abfba8-1b31-4a13-89c5-3bfaf46ce91c",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7654b0a1-7061-4eff-9728-35359fc88380"
        },
        "item": {
          "id": "4356e10b-a858-4bfa-8425-6f7ff0231148",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4c048177-f066-45d6-87d3-8e06033fa44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231cb7bf-4592-4499-871e-ca0efb28c653",
        "cursor": {
          "ref": "ec23e50f-0079-4754-9cc0-c463a4fa676d",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d2de8df0-f1ca-42b4-b146-e9198a7de8d8"
        },
        "item": {
          "id": "231cb7bf-4592-4499-871e-ca0efb28c653",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "17cac0a5-c2d5-4bfd-93a9-acfca0eae8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7211e767-1fd3-4376-beb8-d79d7d8c615a",
        "cursor": {
          "ref": "422c9a69-a90e-4747-8273-5c8e7b350ab1",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c782cadc-30bb-441d-9a9e-3e13fc218bd5"
        },
        "item": {
          "id": "7211e767-1fd3-4376-beb8-d79d7d8c615a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4150f13a-a006-4372-81c8-8e98d14b825a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53366e91-37cc-407b-a0f5-c90af54e8942",
        "cursor": {
          "ref": "003d65d4-f586-4129-b03a-67a4437f76ea",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2c6c2e1c-9eb0-481c-bd67-2542cfde8338"
        },
        "item": {
          "id": "53366e91-37cc-407b-a0f5-c90af54e8942",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "28a8bffc-3fe4-4ce3-be91-a1208c60d2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad37664-f756-4f3b-afda-a25a446aee58",
        "cursor": {
          "ref": "1e952194-a088-41f3-93c2-ce5c06091438",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0e8726c2-7f31-4b70-b8c3-93a777c48a5e"
        },
        "item": {
          "id": "2ad37664-f756-4f3b-afda-a25a446aee58",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a3bd73f7-4a1f-45b6-ad2f-7055c596f75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbd7d96-0b62-4d87-8a5a-1fbf570aa038",
        "cursor": {
          "ref": "99716c12-f6b8-45f0-a8e7-162742c442c6",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f8d29169-3cd4-45c7-af8d-a1548ac50c3a"
        },
        "item": {
          "id": "4dbd7d96-0b62-4d87-8a5a-1fbf570aa038",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "50b33622-dd92-4f1d-aacf-75973d0258a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998588fe-97dc-4681-bb1f-da4625ef1e88",
        "cursor": {
          "ref": "db657905-3dc0-4f1e-bc7e-3af0339c2d6e",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "72307178-a93a-4c05-997f-3d7306cef568"
        },
        "item": {
          "id": "998588fe-97dc-4681-bb1f-da4625ef1e88",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2011cb17-fb4b-4377-ad98-5954fde8dee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f2ae76-6dd1-4dbc-9838-a729999d5119",
        "cursor": {
          "ref": "46a136d2-d3d8-4a6c-be4b-47fb89b0ba7e",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6539387f-18ae-4cf1-b553-3056de25b0e3"
        },
        "item": {
          "id": "21f2ae76-6dd1-4dbc-9838-a729999d5119",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a95db61d-a2f8-4c5b-80ba-816df5423b37",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a88da0-84fa-404a-9b17-b09eb965dc8b",
        "cursor": {
          "ref": "3f0d8d8e-d841-408f-929e-6569224ed1b6",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c1480209-b7be-4807-94e9-eeb86087887b"
        },
        "item": {
          "id": "c5a88da0-84fa-404a-9b17-b09eb965dc8b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "0ef5857d-73cf-4d21-bc54-f3728dac25ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "30ee13d1-e4e3-4676-92fa-ee269df46c70",
        "cursor": {
          "ref": "761fdd00-e19f-4030-8808-51f5137b1ded",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "574bbedd-1d7e-40d3-8760-a1a1d91c5fd0"
        },
        "item": {
          "id": "30ee13d1-e4e3-4676-92fa-ee269df46c70",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d8d1263e-9e72-4002-be89-7d154c46c648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "4903867a-1935-4c02-b3ff-a76bd7575d15",
        "cursor": {
          "ref": "1fe7b2fc-770a-4ff3-a78c-817503e48b99",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5a59ffd2-7d08-4d16-9609-11e400ce3b59"
        },
        "item": {
          "id": "4903867a-1935-4c02-b3ff-a76bd7575d15",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5bc255c2-47dd-418c-b6e2-e0a76f8498b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "00027026-82f1-4300-ae15-babd033e0102",
        "cursor": {
          "ref": "1bcb7fd8-8bb7-41f0-ae52-3b54af25dea1",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "279a134c-3d73-4301-865c-cde39e610402"
        },
        "item": {
          "id": "00027026-82f1-4300-ae15-babd033e0102",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "daca28ee-572f-4d19-93d7-fa903f12579f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "17dfbd26-3612-4b21-b640-b540bb6f7133",
        "cursor": {
          "ref": "6ae9742b-a1ce-4d47-8ca8-8d55dadb82de",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1f3b9141-e702-433b-ac75-0d6757e6445f"
        },
        "item": {
          "id": "17dfbd26-3612-4b21-b640-b540bb6f7133",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4bae7880-2447-4656-b7bb-8708fa70fae3",
          "status": "Created",
          "code": 201,
          "responseTime": 6051,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c85225-1982-4a27-b0ad-dc1bff336649",
        "cursor": {
          "ref": "8ce0272a-5f25-4a10-a681-766ce1c8186a",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c82bd5ab-2eb0-4738-8853-dd1d74ae0a7d"
        },
        "item": {
          "id": "97c85225-1982-4a27-b0ad-dc1bff336649",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "dd5213ee-1a34-4136-9bb3-ade092490e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "763b808e-929f-43c5-980a-dce23d97cb75",
        "cursor": {
          "ref": "2d501088-328d-4493-ae0d-4c72b25e4ec0",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a90ce728-188f-4d02-ba10-e309238f8b77"
        },
        "item": {
          "id": "763b808e-929f-43c5-980a-dce23d97cb75",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8fbcf73a-c490-42f8-a7a6-c69e9456ef08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "a6f4d3c0-f0cb-4565-b821-5593f90364d3",
        "cursor": {
          "ref": "5dc62c5c-7721-4127-afe6-7fe56d4fdfff",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c3eb6d91-68fd-4320-a622-7b241d712931"
        },
        "item": {
          "id": "a6f4d3c0-f0cb-4565-b821-5593f90364d3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "39573d1d-1b77-46fa-8dc2-53096671f309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6302188e-f9d4-4a1c-bfa1-c36663884c73",
        "cursor": {
          "ref": "c25b60e5-9bb9-43b9-ba2e-489d134e0d53",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6c20c5c9-3ef7-4b37-ba6e-e7d694297342"
        },
        "item": {
          "id": "6302188e-f9d4-4a1c-bfa1-c36663884c73",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "de7b5c5b-2d94-4cf9-a5f6-3ca2391687be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2610d45c-65b5-4306-9752-9023001cb161",
        "cursor": {
          "ref": "1cd2557d-26dc-40fd-aaae-605ac67111e3",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ee8eb3f2-a3b3-4be5-94b3-9c989be90443"
        },
        "item": {
          "id": "2610d45c-65b5-4306-9752-9023001cb161",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bcc4a9d9-684d-4aff-82f3-8797a664dad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a38417-7f5d-432a-9f90-e77c0d84f831",
        "cursor": {
          "ref": "fae60b32-45a6-4760-93f4-15e19c05f091",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9ce3885b-1792-4d6c-b272-10592142135b"
        },
        "item": {
          "id": "83a38417-7f5d-432a-9f90-e77c0d84f831",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1db8a6ff-1dbe-4260-a94f-8370cbb88af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a170251-a86e-4c15-a9a5-f8db7c16be8e",
        "cursor": {
          "ref": "3787a971-e102-456e-a3b6-63e9c7cb1e64",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "745a555c-3b51-4646-ad78-b66246e093b0"
        },
        "item": {
          "id": "3a170251-a86e-4c15-a9a5-f8db7c16be8e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0e4658f7-6db5-4cb8-ad8f-32a05ca87709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5315ab99-a211-4cef-93eb-e69773c64549",
        "cursor": {
          "ref": "f886316c-ee65-43ca-a0ff-438666443101",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2f845562-6ecb-4288-ba81-144561b91f10"
        },
        "item": {
          "id": "5315ab99-a211-4cef-93eb-e69773c64549",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f2aa0e28-4222-4207-ad20-75d7f5ec1b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce63bf43-f518-4a83-b1a1-5c6e31441dc7",
        "cursor": {
          "ref": "2113ca82-5123-4785-92a2-025334c4e94c",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e57a2fb9-22a7-4380-aa2c-c4fcd9a32a99"
        },
        "item": {
          "id": "ce63bf43-f518-4a83-b1a1-5c6e31441dc7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "232dd70b-6970-4f8e-a159-71519892b150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fcfd18-23fd-4e7e-afda-06c048204e1f",
        "cursor": {
          "ref": "a6a2ea7f-560f-4a6d-bf6f-c3f4b982c41d",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d77c5510-e958-4889-b23d-38601adf8ba5"
        },
        "item": {
          "id": "31fcfd18-23fd-4e7e-afda-06c048204e1f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c5ef30b6-8879-4206-be02-8b79abe4a1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717d547c-52da-4b99-b688-fd38d87ba44c",
        "cursor": {
          "ref": "e7eb9025-22d5-470c-bd5e-880ec4c26a67",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fe75e44b-34a7-43ae-95d5-40fbe46f8b1f"
        },
        "item": {
          "id": "717d547c-52da-4b99-b688-fd38d87ba44c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2b0a7086-0241-4a6e-9368-559ab5d79ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15694d78-d599-4429-b0b4-60acc7a9109d",
        "cursor": {
          "ref": "25f5a94c-194e-42df-9ab8-4ec21ba409eb",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "eea357a6-7a46-4f6a-b608-c80cf9e133bf"
        },
        "item": {
          "id": "15694d78-d599-4429-b0b4-60acc7a9109d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bfa7a53e-0b6b-40b0-918e-a3226cc18a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79eb33b7-694e-4a49-ae87-66e0d85a0ba9",
        "cursor": {
          "ref": "db0837cd-d297-4ab4-8ef9-371cf6f73c14",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5db323aa-378e-40ce-992c-67ca90443154"
        },
        "item": {
          "id": "79eb33b7-694e-4a49-ae87-66e0d85a0ba9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "58487de3-bc0c-4ecc-9e97-8a296f1d32c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b96925-d77b-4d1e-9ec8-1245edb2384f",
        "cursor": {
          "ref": "63749a2c-5c83-4e54-bc0d-efcf77dfcf24",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "46eb9548-609d-4b6b-956b-557c62ff88f6"
        },
        "item": {
          "id": "d7b96925-d77b-4d1e-9ec8-1245edb2384f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4013996e-ca0a-430e-9fb9-96b1fe20552e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94319799-6633-4dc7-a373-f3c9617eb490",
        "cursor": {
          "ref": "97a017e4-6c00-4b59-88fb-8a1164db098d",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c80f544f-1cf1-42d4-a9cf-5b33cbc5b152"
        },
        "item": {
          "id": "94319799-6633-4dc7-a373-f3c9617eb490",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d76e8d93-9c14-4360-89c7-615e2eead3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da179c00-e0f1-4f0d-8b06-7b62df1e1b01",
        "cursor": {
          "ref": "79153e94-b9e2-41a5-94f1-83b9eb71d214",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f177b65b-764b-48e8-8347-1355bcb7edac"
        },
        "item": {
          "id": "da179c00-e0f1-4f0d-8b06-7b62df1e1b01",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d3ed69a3-54cf-406f-aea5-ea1d487628ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f83db51-eaa4-40e6-9708-d06118a09641",
        "cursor": {
          "ref": "4e264774-de58-4d17-8d23-d35b024aa013",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "546faa64-0cb2-434b-bd03-3f76a1f4b086"
        },
        "item": {
          "id": "4f83db51-eaa4-40e6-9708-d06118a09641",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "49445c82-8523-4058-8f7c-4eda6d60d7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf7f46c-b5cb-47ef-a6b3-91ac501a3643",
        "cursor": {
          "ref": "63db1330-e7b9-4792-912f-60a248fb9100",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "fe4376d3-112a-4994-9c7e-24bba4913ff1"
        },
        "item": {
          "id": "ddf7f46c-b5cb-47ef-a6b3-91ac501a3643",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "76f5f283-d323-4bce-81dc-de6b6809e5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce67a8de-3e5b-4292-88dc-5002e846342f",
        "cursor": {
          "ref": "ed0ac19d-7ee0-421d-bbb2-e85699adb55a",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5060104d-fe52-464c-b85c-8e1e3b5cc503"
        },
        "item": {
          "id": "ce67a8de-3e5b-4292-88dc-5002e846342f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "66382da2-fb82-4011-add2-34d5d09eeda2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "3824379b-ff99-4c12-b45a-64314ffba154",
        "cursor": {
          "ref": "0d361454-aca9-47b5-a882-3efbdb5efce1",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e8f0968e-23a0-4bff-88f6-965ebf7d45b0"
        },
        "item": {
          "id": "3824379b-ff99-4c12-b45a-64314ffba154",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7f5f3da6-e677-42f5-8613-5bbbfb6f807b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2e783a-4bf8-41bf-9b57-fee7528ed53a",
        "cursor": {
          "ref": "7e3764d4-832d-4e98-ae6e-544d7282053f",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b7a75b82-1465-4bcc-9d67-d1e60091a130"
        },
        "item": {
          "id": "dd2e783a-4bf8-41bf-9b57-fee7528ed53a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "80bde25a-593b-459b-b426-2ffe527b95b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafa0b55-02d1-41c6-aba2-94b72b8e8c63",
        "cursor": {
          "ref": "9d4a056d-86b0-4a36-b0b5-2a2955b0729d",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "516f911c-d01a-4ca3-86e1-ce4863f9a06b"
        },
        "item": {
          "id": "aafa0b55-02d1-41c6-aba2-94b72b8e8c63",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d67a57d2-88ef-4379-bdf8-99d6f2fa9eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13bf48c1-0bd6-4645-ac02-59fd7b469b61",
        "cursor": {
          "ref": "033596f0-50e9-45be-8184-42c85dd02f1e",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6a21e76b-9dd8-4934-a59e-d1fe423df6fc"
        },
        "item": {
          "id": "13bf48c1-0bd6-4645-ac02-59fd7b469b61",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "52233627-2c97-4598-bc71-8d4005c27aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c29d70-8c53-488c-92d8-2c3b79533c15",
        "cursor": {
          "ref": "91114aa4-ada1-400f-a125-1f3be6f8a4c4",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "78eb81a0-3bb9-4a36-84d5-afbdab031d22"
        },
        "item": {
          "id": "e7c29d70-8c53-488c-92d8-2c3b79533c15",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "40c8b594-6ef8-45ed-bf3a-072c1f7f3444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48dd6780-38a9-4cde-8df1-dfd46ca601a1",
        "cursor": {
          "ref": "a732065a-e836-4597-80df-63abfef82360",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "afe148aa-b13d-48fd-bcb9-231e0a74a610"
        },
        "item": {
          "id": "48dd6780-38a9-4cde-8df1-dfd46ca601a1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cb66cee8-4cda-4bc2-8e9c-891a2b0b9abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7730a82-ee60-4e15-b3f1-fe3a65ed5950",
        "cursor": {
          "ref": "734920be-a5b6-47ef-9297-23189c4304a6",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "149fcc67-ebba-4bfe-83a3-68e5a9a64f1f"
        },
        "item": {
          "id": "d7730a82-ee60-4e15-b3f1-fe3a65ed5950",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "78edbd73-60fb-466c-a66c-427c6728474d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e60765e-b283-4e17-b4b6-030f7d5b5c99",
        "cursor": {
          "ref": "b58185b0-4c82-4c13-8d45-f6d8922f29b5",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4d5ecb43-abd1-47d0-b28a-d9ca0d85f645"
        },
        "item": {
          "id": "7e60765e-b283-4e17-b4b6-030f7d5b5c99",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "47cfe42c-2b67-4498-b2a3-f45e55dcdd3b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "e924a079-ad87-4c28-9318-eea4629e96e8",
        "cursor": {
          "ref": "1d33bf7a-e957-4d59-ab79-2573d671e14f",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a1b6f2cb-903d-4590-8095-d85a15e2a053"
        },
        "item": {
          "id": "e924a079-ad87-4c28-9318-eea4629e96e8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5aabf7f6-4037-4e9a-a85d-124058dd3410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9b6459-c212-4a9f-aa6e-6447bff478d8",
        "cursor": {
          "ref": "d4f81b6d-c42a-4a20-a425-a05763c90f68",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1885c974-233b-44f7-ac64-015c0ba3c66a"
        },
        "item": {
          "id": "7c9b6459-c212-4a9f-aa6e-6447bff478d8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "22ef9454-53d7-49fb-95e0-e33b25ce8996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ed1c86-d5f7-4a19-844e-f43770a034c1",
        "cursor": {
          "ref": "c21d6f51-6dd4-406b-ab1b-6d690aaac8d2",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "03dcf0db-fa33-46df-9018-534a303993ba"
        },
        "item": {
          "id": "d9ed1c86-d5f7-4a19-844e-f43770a034c1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "18638282-29d6-45ac-92be-5b4d6efd40e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11025f01-d7e9-4049-aea3-c797539c3f2c",
        "cursor": {
          "ref": "ee26ed26-f7fb-4bbd-b885-6f0a2881579a",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "533a085f-033a-4943-a7fb-cbdabdccba61"
        },
        "item": {
          "id": "11025f01-d7e9-4049-aea3-c797539c3f2c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ad3cc358-8949-40fe-b705-268aada44f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18128e91-8821-4f27-ad40-56de4f39e060",
        "cursor": {
          "ref": "980bf7e5-a046-4192-a3b3-35b52a24f65e",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1524558b-d6f4-4270-b3a5-d19178deea0a"
        },
        "item": {
          "id": "18128e91-8821-4f27-ad40-56de4f39e060",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9a68b644-3ca8-4d8a-9243-b2befc0578e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ea260a-7337-42f1-8361-a9956759bb70",
        "cursor": {
          "ref": "d14ad1b5-8594-403c-a26b-f82aee3b2619",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "16d50c8e-aafe-48e1-9a47-e020da55ab4c"
        },
        "item": {
          "id": "88ea260a-7337-42f1-8361-a9956759bb70",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a6adb752-4e48-4540-abaa-44169f79d645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d394550f-5932-4fb4-a1df-beeefeb2d17f",
        "cursor": {
          "ref": "b4e815fc-a326-434d-a51f-4b49ca8d807a",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "42725eed-399a-40ad-82b2-c1668c9d8225"
        },
        "item": {
          "id": "d394550f-5932-4fb4-a1df-beeefeb2d17f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "fd84eb91-5d30-4475-8ce8-098120edd247",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 91,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "1c231271-b584-414a-b24d-5f02bda342f1",
        "cursor": {
          "ref": "157a4334-0c4a-46c5-a0a5-3fdc857a749b",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2c49a0c3-a685-40cb-8621-15792627d05a"
        },
        "item": {
          "id": "1c231271-b584-414a-b24d-5f02bda342f1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f4d99d83-9b19-4621-8741-7ac927d8f76b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666eb684-e682-4b37-b8e7-16e1b337f44b",
        "cursor": {
          "ref": "468bf4c3-111f-497c-9f9b-88d04106f8ec",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "13191330-21df-40e9-8737-e1b444f1722c"
        },
        "item": {
          "id": "666eb684-e682-4b37-b8e7-16e1b337f44b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bdbeb478-d5e6-4bae-adef-a3174b0186e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622dd543-7ee4-4abd-8476-7185705eae57",
        "cursor": {
          "ref": "378f73b0-213e-4bb9-84eb-752efc94dbbf",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "05614478-235a-4cad-b467-af904cbe0a14"
        },
        "item": {
          "id": "622dd543-7ee4-4abd-8476-7185705eae57",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8bec363e-5f6d-4ee5-83e7-01437b513eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c699d3d-4396-4d68-8cf4-02b13e14bfe6",
        "cursor": {
          "ref": "939c1320-c671-443b-8784-eaff8d46d876",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "eccb5c27-889c-46c4-9526-88c5c43d7d19"
        },
        "item": {
          "id": "7c699d3d-4396-4d68-8cf4-02b13e14bfe6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5a0612df-3a7c-4246-b400-60c06a906f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8a85be-5a26-4f2c-b547-c0ea557cf858",
        "cursor": {
          "ref": "9bc72946-d141-4133-88b2-bb5d82f583e8",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "fe2c825a-2bd6-4ae4-b975-f8a41ffabfd4"
        },
        "item": {
          "id": "8c8a85be-5a26-4f2c-b547-c0ea557cf858",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4c253246-6e14-4985-a195-d55e8dcc742d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff8487b-b548-4d2d-9d2e-fc8e971ac728",
        "cursor": {
          "ref": "02d63007-116d-4313-b607-82c352c72bca",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ddc9cada-1169-44dd-b15b-52a1d5b91863"
        },
        "item": {
          "id": "2ff8487b-b548-4d2d-9d2e-fc8e971ac728",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2bce98f6-0915-474e-acf6-eaf2d6f1d351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84098fc5-f6fe-45c1-bd74-6d5d48bcdb98",
        "cursor": {
          "ref": "ed2b3175-940c-47f0-b45c-34535f25bdcc",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b5233977-053b-4e9a-a3d4-b8771db7e908"
        },
        "item": {
          "id": "84098fc5-f6fe-45c1-bd74-6d5d48bcdb98",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6a182aed-bcf9-4542-940f-5e50b0dc0201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87b143b-1ab5-4039-9bf4-5b7ed3c0e83e",
        "cursor": {
          "ref": "de67353d-62c2-4432-aaa6-6b41018739f6",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0d8ad0d5-495c-4b15-a71c-3c8d4eb345a1"
        },
        "item": {
          "id": "c87b143b-1ab5-4039-9bf4-5b7ed3c0e83e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c4b6c18d-bc9b-4766-b097-270eca4c7327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e223ba8-cba3-4f99-bace-ef6a08f43c98",
        "cursor": {
          "ref": "36a9990b-0da9-4639-9fe3-31e9671abf93",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e27fcd4e-8e0c-406c-a99e-9f5d1316cd92"
        },
        "item": {
          "id": "8e223ba8-cba3-4f99-bace-ef6a08f43c98",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f1be4388-9eee-413b-9f6c-fe56a6fe51fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 885,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35368984-7f51-4363-82b8-39bfee2e5b8a",
        "cursor": {
          "ref": "62facda6-2dc3-4d1b-afee-c95b2a456dad",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f221841d-7edd-4bc8-b8de-582623999023"
        },
        "item": {
          "id": "35368984-7f51-4363-82b8-39bfee2e5b8a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fac50842-a3b9-421d-afea-040b0650450b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e09335-4194-4c05-9f13-edab61452238",
        "cursor": {
          "ref": "9ef92cdf-0873-4f0e-a2f0-55344142255a",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "898fc852-7940-466c-88c8-f2a6d0f7c14d"
        },
        "item": {
          "id": "52e09335-4194-4c05-9f13-edab61452238",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c504cf7e-30b0-4ae7-a261-afcaee8ec426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fc95ff-bf93-497d-b9b2-e18246f54f72",
        "cursor": {
          "ref": "262d0b6c-2f7c-4ddb-80ca-b24c2f54a7f7",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "815c9b1d-e0d9-46a9-955c-7238d6cd772d"
        },
        "item": {
          "id": "96fc95ff-bf93-497d-b9b2-e18246f54f72",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "459846ac-14a2-4a49-a7ce-30f01b8debf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6d27cf-0efc-4615-9179-602b91f24c56",
        "cursor": {
          "ref": "2e57dd41-fae5-4320-ae11-858f01f3e1a6",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "77a03853-bdb0-40fb-b5ce-b8f2cfed20e0"
        },
        "item": {
          "id": "7a6d27cf-0efc-4615-9179-602b91f24c56",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6e338bdb-2885-4950-9b71-516d43484c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b56aa25-2fcb-465b-b1ce-06f50a157204",
        "cursor": {
          "ref": "002bbe14-42d8-4e57-bc48-67adf1ee7284",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5f5aa2f0-c048-41c5-9339-ab14033b3170"
        },
        "item": {
          "id": "8b56aa25-2fcb-465b-b1ce-06f50a157204",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5a322fb0-425a-4e8e-94bd-9f9e8cb2dd54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dabeb46-d4f0-4af4-919f-7fc16f7fef83",
        "cursor": {
          "ref": "e98b816e-9ec2-4a05-9684-f92e08b73dc5",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f41df660-1b1c-4f22-ba4c-1ffa79ab105c"
        },
        "item": {
          "id": "1dabeb46-d4f0-4af4-919f-7fc16f7fef83",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5fb1b96b-6b88-49f6-b517-2a7f4ab96257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0773469f-d559-4a88-bf2a-16c7e9e9305a",
        "cursor": {
          "ref": "ab59e09c-ecb0-4723-8f78-27411a5592ad",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "307ac659-60b4-4b06-8e01-b700c9911fa3"
        },
        "item": {
          "id": "0773469f-d559-4a88-bf2a-16c7e9e9305a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3e2095d0-ca5d-4b36-9451-8cbde88758ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a6357b-a2a7-49f0-ac09-64038c4ced3b",
        "cursor": {
          "ref": "04a9c041-fefc-48a0-8a62-931095acc36e",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "23852d1e-5333-4f36-8c5d-6dd7f092a1aa"
        },
        "item": {
          "id": "f2a6357b-a2a7-49f0-ac09-64038c4ced3b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2bd9863c-51bf-4e95-a5c8-cebc87a3bf17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27cd6d33-92b7-4449-a3ba-c942e1492e8c",
        "cursor": {
          "ref": "9f4c4a24-ab95-4bbb-b621-799960d15b68",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6714302a-1528-4c19-bc1a-b8014daca007"
        },
        "item": {
          "id": "27cd6d33-92b7-4449-a3ba-c942e1492e8c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ea18b13b-8f8a-4dbb-a17e-a42621d2651d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1015,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "f45825b2-13e6-4169-8d50-3fdad914377b",
        "cursor": {
          "ref": "77780884-94e8-4a43-a4db-1ff79a8f17a1",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "14a87665-e71b-47fe-aa85-4a5364dd096c"
        },
        "item": {
          "id": "f45825b2-13e6-4169-8d50-3fdad914377b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "503c57a2-7815-47ed-9ba9-f949824f23e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d07508e-c29d-4b25-b6a3-0290c9415c7e",
        "cursor": {
          "ref": "36c523ba-e3a8-4bbf-b7ba-d518d8fea306",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "bef33868-79f2-4d0c-9d7d-a71aa6135ed2"
        },
        "item": {
          "id": "8d07508e-c29d-4b25-b6a3-0290c9415c7e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "72485a4d-3967-4af2-a47f-6d4839cf5328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e26243-1170-4fb9-aefd-5b8a22031194",
        "cursor": {
          "ref": "82ace80c-68f7-470b-aa11-cdb69b72b749",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "830f4ac8-8fcc-47a9-be59-c2ee96501d1a"
        },
        "item": {
          "id": "d1e26243-1170-4fb9-aefd-5b8a22031194",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "94fb162d-992a-44c5-912f-261d92c08c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5756e6a8-496e-4f5e-87aa-276a99db6be1",
        "cursor": {
          "ref": "5d665202-1629-4dcc-8a1b-77d874292009",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3b30b676-bd28-4339-8d30-9cfd6e7067dd"
        },
        "item": {
          "id": "5756e6a8-496e-4f5e-87aa-276a99db6be1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d05f1821-0244-460b-a4bb-cd506136f927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1d87b7-ca39-45e6-a9bd-e3dd5f076c81",
        "cursor": {
          "ref": "df021947-34b5-480d-9a49-29c66b5c9a7f",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "983c9eba-a2aa-4430-bba4-7cc06af62a60"
        },
        "item": {
          "id": "3c1d87b7-ca39-45e6-a9bd-e3dd5f076c81",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "31066e4b-1455-4dcd-b8b2-4152ba866623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee0ab2a-fd8a-4f94-9014-0675edbd8af9",
        "cursor": {
          "ref": "4fa5b649-4ec1-42e5-ba68-53f13ddbc2cf",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "211b9d1d-ede5-4b79-b8af-4da06615f411"
        },
        "item": {
          "id": "6ee0ab2a-fd8a-4f94-9014-0675edbd8af9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "658f1a9e-e3e7-4595-9ae3-baa83e5f9bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d635e38-4cdc-49c3-a748-8958cd75a26c",
        "cursor": {
          "ref": "461f0041-f2e0-48fe-8212-ccae2635976f",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2d12e089-639a-4d69-ad6b-ed24663ba05c"
        },
        "item": {
          "id": "9d635e38-4cdc-49c3-a748-8958cd75a26c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "15a290ad-fb51-4594-9cdd-34585796b94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21d6557-d2a4-4e35-9975-3562a3874bbf",
        "cursor": {
          "ref": "b97ec067-a4fd-4e5e-b65a-9cd96960f199",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "cc2c492b-6543-479e-b90f-8cf29a165619"
        },
        "item": {
          "id": "e21d6557-d2a4-4e35-9975-3562a3874bbf",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c969afe4-13d5-4fb9-96da-b110905df40b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 29,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "c69e554a-8b67-48d4-ac36-d9c8956b8e4e",
        "cursor": {
          "ref": "62f83455-4da2-49f5-b226-a31bd3572746",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6a772cbf-dc75-4ddd-ac63-891069150414"
        },
        "item": {
          "id": "c69e554a-8b67-48d4-ac36-d9c8956b8e4e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d4980216-930a-47f7-8200-914095e4d8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5280cdae-aadb-4cc8-8892-1aa56473838a",
        "cursor": {
          "ref": "5ca3d37c-0216-42fb-b71e-3903d902628e",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "20c9f05a-c7e5-4dec-a4ad-68e254dbfe56"
        },
        "item": {
          "id": "5280cdae-aadb-4cc8-8892-1aa56473838a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ccd8b220-4026-4edd-b425-1caf6018e76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc11280a-fa38-4312-8052-5dcc352631b9",
        "cursor": {
          "ref": "fd800fe7-1f85-4f56-a471-e9232220dea5",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0b5f123e-d82a-479b-a925-ea624078cb8f"
        },
        "item": {
          "id": "fc11280a-fa38-4312-8052-5dcc352631b9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fa113ed0-d0d1-4daf-b9c5-9612b684ebaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf060d1e-99ca-4ef3-a23f-eac61ab1908f",
        "cursor": {
          "ref": "9df6918c-620c-492a-b232-dc698b222acf",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "20c74c1d-4d1c-4a75-9e42-feee57ad8023"
        },
        "item": {
          "id": "bf060d1e-99ca-4ef3-a23f-eac61ab1908f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ffb284c6-4c09-4300-ba66-327f6cc12ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c10a6e-e97c-4743-a04c-33772a509dbd",
        "cursor": {
          "ref": "8d2a5827-b2c6-4e08-bb73-f37cc91ed78f",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "753a8225-90d4-4cda-a22c-a0cbcd1dd063"
        },
        "item": {
          "id": "d8c10a6e-e97c-4743-a04c-33772a509dbd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dec32456-241a-4f59-aeac-7f34e4c96785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8018b39-6dc0-4316-a9ca-375828398b8f",
        "cursor": {
          "ref": "e3309650-66af-4993-bac7-7d14b21d653b",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8d2e99e6-fb52-46a9-a455-ebedded9dfc6"
        },
        "item": {
          "id": "d8018b39-6dc0-4316-a9ca-375828398b8f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a94951fa-02b4-4a13-9dbc-b5c8e8953f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7354a303-6540-4726-a2c6-abe39d3f38c0",
        "cursor": {
          "ref": "586a7552-1b31-449a-a580-812d14f4c4ad",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1779b253-867b-45e4-a6c6-fd91efcc5d0c"
        },
        "item": {
          "id": "7354a303-6540-4726-a2c6-abe39d3f38c0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ae59f011-a86d-407e-ae82-aef15cc725a3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 29,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "0ed40538-5e5f-452e-a31c-28ce736036df",
        "cursor": {
          "ref": "7e935e25-082e-4f94-8296-a7a42f08295f",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "25c2be4f-5cc1-4463-83c5-980324911817"
        },
        "item": {
          "id": "0ed40538-5e5f-452e-a31c-28ce736036df",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b6664f65-6d23-46e3-8082-12466483e841",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "97978927-3b28-4e1a-8a79-00fa5876662b",
        "cursor": {
          "ref": "05850b07-1de5-4d81-997f-450162db3288",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "73240e49-1d1f-436d-8c82-63c139e14725"
        },
        "item": {
          "id": "97978927-3b28-4e1a-8a79-00fa5876662b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a7ecb49c-0e36-4b85-8928-6b3b112657fd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 29,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "ed885837-0f0e-4915-bad9-16373b9934b4",
        "cursor": {
          "ref": "b8fde24b-4611-4f26-a293-cd6d5b21bfd2",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "855ebc97-419e-4c28-aa6a-5ea5d079f69b"
        },
        "item": {
          "id": "ed885837-0f0e-4915-bad9-16373b9934b4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "62184d72-3fe4-485d-941a-6b236b0b691f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "8e3c95b1-3b7c-4fbe-a4c9-01185df388c9",
        "cursor": {
          "ref": "11d40b0f-ea0a-4025-9dec-ee33ed99bb3b",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b13f433b-7b6f-42da-912f-78e69ecf19a0"
        },
        "item": {
          "id": "8e3c95b1-3b7c-4fbe-a4c9-01185df388c9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d5a2d961-c7d9-45ec-905e-10c2a87646a7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "6591a4a3-4453-46fb-b4d0-cf69b755c114",
        "cursor": {
          "ref": "afba9dd0-8007-4913-92e0-cbbab534f57b",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6b796ef7-d69a-41e0-9b34-9b2d10eefac2"
        },
        "item": {
          "id": "6591a4a3-4453-46fb-b4d0-cf69b755c114",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "dfecfedf-1cb6-41c0-8338-2ad865b3c12a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 28,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "83cb5feb-d616-443e-a37c-b5f14aa5187c",
        "cursor": {
          "ref": "570a239e-4039-4fa2-8622-5e2803a97de5",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9a1fc415-a6fb-40e1-9a57-a5c0dc2f35a8"
        },
        "item": {
          "id": "83cb5feb-d616-443e-a37c-b5f14aa5187c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cabc88f3-447a-4832-b7a1-09a58f19fd1c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3eb13f0-2e13-4097-975f-42e5f3a08059",
        "cursor": {
          "ref": "6a4bd85e-dfb2-4a48-a2a5-3512315d99c5",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b8f36ef3-d404-49b3-ada3-364acfd08268"
        },
        "item": {
          "id": "a3eb13f0-2e13-4097-975f-42e5f3a08059",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "36195af8-58ae-4753-adbc-382b078d4db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6a6507-3b9c-4201-82fe-35677a541e26",
        "cursor": {
          "ref": "1ad448e9-26eb-4811-9472-4c2886e98db8",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ea2b79b3-e54b-4ce5-b407-e99e1afe216b"
        },
        "item": {
          "id": "df6a6507-3b9c-4201-82fe-35677a541e26",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "349347a9-2b7d-4aaf-8a6e-9a3cd9615df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56cd5be-bc55-4ef0-a07d-e71875d64bde",
        "cursor": {
          "ref": "ff61faf3-aaee-4ad5-ad0b-78713bbe7403",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7822c9a3-f367-4aa6-b052-52359ae5d85f"
        },
        "item": {
          "id": "e56cd5be-bc55-4ef0-a07d-e71875d64bde",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "fa4e02a6-a7a1-4209-8c47-85a57afadf2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a53fbc-3f53-4fd3-af91-4c7ea0460020",
        "cursor": {
          "ref": "c09b91fb-b4c8-4f3e-aca8-9998bb9fccd7",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1ba8e4db-308a-46a5-9798-3d45a3777b00"
        },
        "item": {
          "id": "35a53fbc-3f53-4fd3-af91-4c7ea0460020",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "408b8cb4-a960-4522-9c05-caed5ee94e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d41328-099f-4d21-82d0-ad2dd309b56d",
        "cursor": {
          "ref": "d91fb11b-3b13-46b9-b565-9af7c5309145",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3d1a8b07-2ebc-4bb6-9d63-8475e1ab83a6"
        },
        "item": {
          "id": "a5d41328-099f-4d21-82d0-ad2dd309b56d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d9abac86-a0c0-4860-8ce7-19f38943fc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45dc0c3d-e1ef-496b-b8ab-f4f4e4667815",
        "cursor": {
          "ref": "ba01ec32-296d-44a3-addd-ddc8e8eac89a",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c841023b-85af-49b0-9052-62c29e6835b8"
        },
        "item": {
          "id": "45dc0c3d-e1ef-496b-b8ab-f4f4e4667815",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7be07895-8be5-485c-bd29-377a61757719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf81634-b6e4-47fc-9599-73076f34f036",
        "cursor": {
          "ref": "3d63b772-8c31-482b-898a-62f1d588ff62",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "798c6f81-461d-4e50-a747-ebf4ec001cf3"
        },
        "item": {
          "id": "1bf81634-b6e4-47fc-9599-73076f34f036",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0d9b8961-ea15-4913-9c50-428d6ab43e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa21a067-cc3b-41f2-b6fc-fca5297f2860",
        "cursor": {
          "ref": "352d04dc-90fc-478a-8f28-44a964b119e6",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fffb0cb4-cda2-42c0-b464-ea6f4a51c24d"
        },
        "item": {
          "id": "fa21a067-cc3b-41f2-b6fc-fca5297f2860",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f9b16a6a-1b04-4b38-b1a4-9aa6e77d5e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ae09eb-1565-4ade-87b0-0b99a560593a",
        "cursor": {
          "ref": "2aa8c2cc-8be8-4bd3-99ff-3f522ae162c0",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "211e93c7-ee34-4d6a-9913-c0a123b1acd1"
        },
        "item": {
          "id": "90ae09eb-1565-4ade-87b0-0b99a560593a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "021e2040-bb14-473b-abd4-6cd062c5ca6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983f193c-4a9e-4eca-9bba-49e05f34e9db",
        "cursor": {
          "ref": "1b5d0bab-a76d-4979-811e-352984b688f5",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "318caaf3-352a-4f8b-afcd-8dac1a1c3532"
        },
        "item": {
          "id": "983f193c-4a9e-4eca-9bba-49e05f34e9db",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "88deafa3-2c58-4ceb-9cb3-12f6ed438d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a8dbd5-9e93-41a2-863b-5fda65842c0a",
        "cursor": {
          "ref": "2baf1fe0-5a80-4ed9-8c62-55e86e6b0378",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d12c4b6b-8bda-4557-80dc-aa594cf01fd9"
        },
        "item": {
          "id": "e5a8dbd5-9e93-41a2-863b-5fda65842c0a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "cb68b8df-21b8-4bd7-b467-c635492c9fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e3c746-e854-498d-a62b-713f30b577e5",
        "cursor": {
          "ref": "4750de77-5acc-47b9-aaad-35d824c05c36",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "95086c84-9edc-42f0-90ef-115ef44d08cf"
        },
        "item": {
          "id": "26e3c746-e854-498d-a62b-713f30b577e5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f086b413-8122-4c71-951e-fcc398320068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28090f88-5830-4838-b343-eae7b96030ba",
        "cursor": {
          "ref": "290a0185-e9a4-4c56-a279-214953c17d59",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "687b6505-4733-4266-bc67-29356e280f00"
        },
        "item": {
          "id": "28090f88-5830-4838-b343-eae7b96030ba",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8d2ab6a1-e926-4e92-9eeb-0b8db1ca3e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea18785-646b-4fd7-baaf-3d798236364b",
        "cursor": {
          "ref": "4ead951a-9545-4690-87bf-f99b22de4df3",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9814582f-0a1b-46bf-be14-c6a686e499e6"
        },
        "item": {
          "id": "1ea18785-646b-4fd7-baaf-3d798236364b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e530d52d-904e-4d78-8493-f979be9e26a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b71132c-82a6-4c15-8115-2a40a8d18d98",
        "cursor": {
          "ref": "438fc3ed-15f1-4bdb-8899-bde9d15aac13",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "47f17355-79d3-45eb-b755-7a95667e0ed3"
        },
        "item": {
          "id": "6b71132c-82a6-4c15-8115-2a40a8d18d98",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "63f98b05-f37c-4b5e-84bd-5b6085b78086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cdd947-7e53-408b-a011-cb14c53b9a31",
        "cursor": {
          "ref": "1aadb033-e6c5-42ee-9b25-5964b4407931",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "cf6d47f3-4662-4d2f-9971-7c9e4ded1ab6"
        },
        "item": {
          "id": "f4cdd947-7e53-408b-a011-cb14c53b9a31",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "87f18a47-3a80-47dd-9a8d-5253e384384c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fc9689-179f-4d3d-94e1-e6a2840aff05",
        "cursor": {
          "ref": "183a5fcc-9ffe-464d-b09d-b5bc1d3c105c",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c9f100d3-8768-486b-986a-14a16288173a"
        },
        "item": {
          "id": "c3fc9689-179f-4d3d-94e1-e6a2840aff05",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9ca0c13b-6fc3-4c01-af6b-54a39585f51a",
          "status": "OK",
          "code": 200,
          "responseTime": 171,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "0eada64b-f4a4-4990-8fc0-e3b483efe707",
        "cursor": {
          "ref": "f1ae98e2-9e48-4ac5-8698-a5915e14e14f",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "fc935f08-4718-42cd-93a4-8255390e0339"
        },
        "item": {
          "id": "0eada64b-f4a4-4990-8fc0-e3b483efe707",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0a80e10b-96fe-4ba5-9b7a-aea183fba06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54e36da-9ae7-4600-b969-becdbf8cd85a",
        "cursor": {
          "ref": "42ffd8da-ed16-436c-84cc-a17c3eab8557",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "15e1fddd-8675-4234-87c7-0f28d5071ee2"
        },
        "item": {
          "id": "f54e36da-9ae7-4600-b969-becdbf8cd85a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3cf80ecc-a097-44f9-bd35-b5e77aa66dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2e7eff-669a-49cf-827a-a3d2aead1c81",
        "cursor": {
          "ref": "22db262b-9f9f-4fcf-9e2a-761f6b864a71",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "832d2402-51dd-4c8f-b4f7-b90921a7c227"
        },
        "item": {
          "id": "0d2e7eff-669a-49cf-827a-a3d2aead1c81",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "21642862-9922-439a-bcfc-15a8d746cc95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e6c090-21fa-40da-9f18-57e7c40aa491",
        "cursor": {
          "ref": "aa76685b-d682-4f9d-8d50-1545697c756f",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ad9ec2b3-3f30-4543-b5d8-894737ebdb6c"
        },
        "item": {
          "id": "f5e6c090-21fa-40da-9f18-57e7c40aa491",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0baa5d1f-a420-4b58-a3a8-ca08f9a71985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c46766b-1c7f-411a-9443-a5dee70e21fb",
        "cursor": {
          "ref": "38090858-413e-4b6c-9dd2-bbf769eb4d95",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ac254cbf-6edb-46ea-ab14-f478ec1b5924"
        },
        "item": {
          "id": "5c46766b-1c7f-411a-9443-a5dee70e21fb",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "89d03202-3c10-4c1d-90b0-84cf598956c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f73bf9-c039-4c7f-b95c-ee6854ebc875",
        "cursor": {
          "ref": "fcbb666b-8bd6-4454-af94-b27b4382b284",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5de415bc-bc8c-465c-96e2-d1ac9cccacf0"
        },
        "item": {
          "id": "b8f73bf9-c039-4c7f-b95c-ee6854ebc875",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "00153200-5225-4b59-b29b-b52b80436d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b930fa-9790-4897-be9a-0ae309069249",
        "cursor": {
          "ref": "717d021f-19ce-4581-87a7-0ed653fe1761",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "75986970-ccde-42b2-b731-698d058607fa"
        },
        "item": {
          "id": "e8b930fa-9790-4897-be9a-0ae309069249",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2d53ebc2-257e-4177-9e9a-c7c72cbd6edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32102e3b-2253-429e-9c0b-12bc9ab6af0e",
        "cursor": {
          "ref": "b747a6c7-5c37-4090-ab86-39b8006eea5e",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "52eef67f-e75a-4266-a966-f7244d802b99"
        },
        "item": {
          "id": "32102e3b-2253-429e-9c0b-12bc9ab6af0e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3a7ab549-8d64-4e45-b10b-a6171b7b9de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a50b193-63d2-42c3-9498-97c92b447d1d",
        "cursor": {
          "ref": "5b893cea-cf58-4fc1-9598-a769170d788a",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b6442096-39a1-4c4a-b32d-01076c292368"
        },
        "item": {
          "id": "9a50b193-63d2-42c3-9498-97c92b447d1d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4dc3757c-156f-423d-b188-9531d506a294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a79c539-145a-4371-b986-0e7f9cf349b4",
        "cursor": {
          "ref": "67400774-c121-43dd-a6a3-44185d5f307e",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2928590c-ff35-4756-bf43-699d234fc78e"
        },
        "item": {
          "id": "0a79c539-145a-4371-b986-0e7f9cf349b4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "181c87b1-c592-4702-bf03-ef2b653d379b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a367105-0b59-4fa6-9344-e29bea4d2f35",
        "cursor": {
          "ref": "46b9f824-52d6-4e40-a484-f685fcacd85a",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "241d1496-a714-429a-b2c6-746d2555c8b7"
        },
        "item": {
          "id": "2a367105-0b59-4fa6-9344-e29bea4d2f35",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fc953713-b0ac-4751-8c7c-679a8a3e1ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083fb0fd-4287-4f14-a249-3a8ffd5ec24b",
        "cursor": {
          "ref": "bbb530a2-4ab4-4ae0-be6d-859722b1b234",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f0680e23-7172-4017-9c9a-7547a9412232"
        },
        "item": {
          "id": "083fb0fd-4287-4f14-a249-3a8ffd5ec24b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fdea096c-63ea-4c3a-b747-0db434f04104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3ceafc-2288-48f7-9c64-45be4e626a8f",
        "cursor": {
          "ref": "a738400b-23cb-4d53-93e1-6b0d936e4046",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e337b0b5-b829-48da-a4cf-9cd11e9e7cc2"
        },
        "item": {
          "id": "6e3ceafc-2288-48f7-9c64-45be4e626a8f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bcd8b27b-66fd-44d7-b635-30888e6be3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04271d9e-9382-4e02-a870-be95e7a39c9b",
        "cursor": {
          "ref": "5c5cfc8b-1747-4a2f-9328-99a92ac52a23",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9ba17ec5-690f-42b9-9084-4cdd1b82b16a"
        },
        "item": {
          "id": "04271d9e-9382-4e02-a870-be95e7a39c9b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "80596202-f8dc-4e86-8ed1-445a5bb6b3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfb8676-0fed-4d6f-ab03-5ae73e46d258",
        "cursor": {
          "ref": "fa24d988-81f3-40f5-88ee-56778a26979b",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "65a22dc2-e121-4d51-a84a-ff7e30dd74ca"
        },
        "item": {
          "id": "8bfb8676-0fed-4d6f-ab03-5ae73e46d258",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e40dcc5d-2627-4847-a1c4-05601f584666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666d892e-633a-4742-a94c-50ae0fd74f00",
        "cursor": {
          "ref": "4fb229e1-ccb0-4101-a5fb-08172e2dd46d",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9080a509-6e8c-4d29-8332-4eb904a7429b"
        },
        "item": {
          "id": "666d892e-633a-4742-a94c-50ae0fd74f00",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "965cdedc-dd20-41c9-9910-c4a35f1ca979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 928,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01960da-d9de-4f82-ac00-761ed4ff2c18",
        "cursor": {
          "ref": "2889485e-e9f2-4fd2-aa25-1db1a105e70d",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "98d6a22f-0082-4a2f-85c7-23e2cc819a84"
        },
        "item": {
          "id": "e01960da-d9de-4f82-ac00-761ed4ff2c18",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "692ec9e8-3f70-42c7-93ce-c638e3dc9855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1915428d-2d7c-4f27-8cf1-9b1da128a8ba",
        "cursor": {
          "ref": "ac4f3ea0-e758-4896-a722-d90a523819e5",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "476306d9-12ea-4397-a37c-ade913a64d5e"
        },
        "item": {
          "id": "1915428d-2d7c-4f27-8cf1-9b1da128a8ba",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4d768a21-e083-40ce-a04e-3550785203f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef13969b-7278-4e2b-9a96-0e1b7e2fb549",
        "cursor": {
          "ref": "779c2b77-3c73-4adf-b27f-77e258cdec64",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5469b8a3-8359-4601-bd71-5de6f347f0e3"
        },
        "item": {
          "id": "ef13969b-7278-4e2b-9a96-0e1b7e2fb549",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "269380a1-ec92-4716-beed-90bcb63ca1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a73211-20b7-43c2-b948-6504c600994c",
        "cursor": {
          "ref": "aa22d20b-3b9b-4a87-b661-0eccf870de5d",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "df6229f5-e900-4626-86eb-25fc57a8002c"
        },
        "item": {
          "id": "72a73211-20b7-43c2-b948-6504c600994c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3d45aa65-a62e-4a86-aab3-a631ed1d568a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1712ae62-3f38-4325-b631-acbeb6a1a5b7",
        "cursor": {
          "ref": "5b9c21d5-5bf1-4acd-a1f2-96ede372d83d",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "dcb5736a-1551-46ab-a03e-3c139de68aad"
        },
        "item": {
          "id": "1712ae62-3f38-4325-b631-acbeb6a1a5b7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b7451fe3-f3a1-4bf7-b469-1323cf2d0ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab37e35-ffd3-457d-9f89-e8ff3c684674",
        "cursor": {
          "ref": "44682545-00d9-4873-bbe8-741d9eda0172",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f932d032-df87-413b-b5bb-9e58b5c09586"
        },
        "item": {
          "id": "9ab37e35-ffd3-457d-9f89-e8ff3c684674",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d8349594-a4b6-429e-8c99-3b88b02f0506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b174e9f-a7bb-470b-b4f0-7ed145d6ed0d",
        "cursor": {
          "ref": "fd5ea22a-8d25-4780-b371-6425f9c7a572",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0b0d0b13-96b8-4790-840f-cc874734fc09"
        },
        "item": {
          "id": "2b174e9f-a7bb-470b-b4f0-7ed145d6ed0d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ce140fb7-33be-419d-aec0-27965ddeba62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcd0d8e-1149-4c07-9b43-4e78c7ec49a8",
        "cursor": {
          "ref": "344dcf01-4910-48dc-95f1-92b5091a7476",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a2e3d0f2-3f02-4565-9fb5-f3c8a05242c3"
        },
        "item": {
          "id": "8bcd0d8e-1149-4c07-9b43-4e78c7ec49a8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "07f25019-25c8-49ba-baed-e7b991d48c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a89712d-8b9f-4576-aba9-f6156a8ada79",
        "cursor": {
          "ref": "81d6f64d-b056-4f93-b90c-08d9d458fd23",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "065ed6b9-5734-4285-9003-4715c0416316"
        },
        "item": {
          "id": "9a89712d-8b9f-4576-aba9-f6156a8ada79",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d11c6f9b-7d1a-4c6b-b85e-003c8eddc5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a81a4f5-f228-4975-aee1-6126e7e82b93",
        "cursor": {
          "ref": "39660c48-eb3a-45cf-a783-37696698ac6e",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "249a6b61-7bdb-4b97-8cb7-85aa99b3da91"
        },
        "item": {
          "id": "7a81a4f5-f228-4975-aee1-6126e7e82b93",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "65734ff1-707d-45b6-bba8-1b0c6717fbd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc330bf-3a4e-4886-a5cd-4278e9597a6c",
        "cursor": {
          "ref": "ddab9143-1d13-43d8-8033-2b412dfb6482",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "cb5f2953-c9b1-4a83-8927-1d6c7b5d4e45"
        },
        "item": {
          "id": "8fc330bf-3a4e-4886-a5cd-4278e9597a6c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d3501c2a-b6ac-4a3a-b65c-93fa5ab66f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff424cf4-81ea-4a84-b7b0-7a1a387708f2",
        "cursor": {
          "ref": "1ff58c13-c2a1-4995-8d54-0634e4ffdd04",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "37df5d9e-f0a0-4d98-84c8-6cb03b970e4f"
        },
        "item": {
          "id": "ff424cf4-81ea-4a84-b7b0-7a1a387708f2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8e82ccbc-3c7e-4eac-a805-6722fa1ce650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0710aae-67aa-447d-ba4e-7b378f5e6c75",
        "cursor": {
          "ref": "f97e650d-d8bf-46c1-8006-27ccca4cad1f",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7e1abea5-6e1b-4615-b35f-63ceedead91f"
        },
        "item": {
          "id": "d0710aae-67aa-447d-ba4e-7b378f5e6c75",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "170779e6-178d-4cf2-b17d-165022be7028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243c1fea-b5e6-4159-b748-6a63d5617fd9",
        "cursor": {
          "ref": "885cbe99-f590-46e8-9b8c-1135033296f5",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "af299732-12ac-40e4-86c3-52599fb7d966"
        },
        "item": {
          "id": "243c1fea-b5e6-4159-b748-6a63d5617fd9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ca68c23f-c339-4e26-adf1-2ea57cd7c63b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4215acb-f4a4-4103-9075-660e11b64dcd",
        "cursor": {
          "ref": "c52f9da2-ebe4-4ea1-84f6-4fe97f903b82",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fdfea479-79dc-4813-bee1-4daff5a38852"
        },
        "item": {
          "id": "d4215acb-f4a4-4103-9075-660e11b64dcd",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "653f688e-d719-4592-aa30-f0a7f5f75385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d59b3b-203f-4c27-bd52-562d963b6439",
        "cursor": {
          "ref": "64055ae4-9698-4d0f-b41d-721151c57c41",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c157d500-32c3-47b7-9066-fb1e1ce1dd32"
        },
        "item": {
          "id": "d0d59b3b-203f-4c27-bd52-562d963b6439",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b803eb9c-6ef8-48f2-b845-7129e6420372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add9aae1-9efb-4a57-89a4-f9b898f0c374",
        "cursor": {
          "ref": "d45fdf11-bf9a-4b16-b0b7-8a8a3f8e74e7",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "25671622-5a21-46f2-8d07-b5dfed782331"
        },
        "item": {
          "id": "add9aae1-9efb-4a57-89a4-f9b898f0c374",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "07182ae1-547a-46d4-8b3c-0524e4aa4c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72d0b05-fcf3-4027-bfc8-cec035895814",
        "cursor": {
          "ref": "a3735911-a21a-43c5-aa6c-c9ee90d04c55",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "afe3b119-9838-4cb7-a49f-bbc336643fe4"
        },
        "item": {
          "id": "d72d0b05-fcf3-4027-bfc8-cec035895814",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ad118130-bd66-485a-ac03-526c0fe02074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29d2660-0bd5-4bcb-a4c3-747e8b363073",
        "cursor": {
          "ref": "62747ca2-3017-4758-87e7-bac14ef0ed5d",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5f78f5b0-facf-4e0c-ba88-fba033252495"
        },
        "item": {
          "id": "b29d2660-0bd5-4bcb-a4c3-747e8b363073",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "72fbeb53-edae-476f-bd47-b5111e26004e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e8e92e-9e5c-4d16-aab7-1f2765a9cf40",
        "cursor": {
          "ref": "f3e175df-e80c-4023-91e6-0d4fbc1f8523",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9aaaf2b2-3590-45fe-bd08-7b261e0df7da"
        },
        "item": {
          "id": "32e8e92e-9e5c-4d16-aab7-1f2765a9cf40",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a407fb8a-eee4-4279-820b-1d01efa01c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8904dbc-5630-4a9d-841c-581f0f5e6283",
        "cursor": {
          "ref": "66ca3566-f699-4c58-838f-db043549691c",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c009e22f-3108-4216-b14c-7b09f9f47862"
        },
        "item": {
          "id": "b8904dbc-5630-4a9d-841c-581f0f5e6283",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "dadd6f80-2dee-4541-86fe-3ef87c8fc0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ddf3008-7c0e-4028-bb40-605f96bc747c",
        "cursor": {
          "ref": "3b18bb13-c6fa-43d4-8ae8-f6a172965eec",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "033b37e8-5d99-44a4-8d3a-ff760958fd02"
        },
        "item": {
          "id": "9ddf3008-7c0e-4028-bb40-605f96bc747c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3a20defd-5a18-4804-a900-3db7ec649b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab64972d-13ee-44fc-a122-842629e84fd3",
        "cursor": {
          "ref": "7886db1e-1d75-4786-a315-3b33d0a6f3a1",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7c992c03-e244-46b3-a878-17ae8b5849cd"
        },
        "item": {
          "id": "ab64972d-13ee-44fc-a122-842629e84fd3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e557b412-2d7e-49ec-9acf-4c64c536fafc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5612e9-e194-4f2e-8d32-8e89763db9a7",
        "cursor": {
          "ref": "7764d5b7-a33b-441b-83b7-f474aeeef7e8",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4ded34da-6b34-4bd0-99f2-2f314e3df604"
        },
        "item": {
          "id": "0c5612e9-e194-4f2e-8d32-8e89763db9a7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "492d5987-2f55-47d0-8762-c98cc4948466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc2165d-c3c3-47ba-b0c5-adfd0de1e212",
        "cursor": {
          "ref": "f839234e-b599-4de1-b507-31f4dbb73749",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1bbd8ec6-b72e-4a94-959f-50caf51785d8"
        },
        "item": {
          "id": "9bc2165d-c3c3-47ba-b0c5-adfd0de1e212",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b7bd586d-e441-483a-9df6-e4dbd7930a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62f6592-d61f-43d2-baa3-73b38af636a6",
        "cursor": {
          "ref": "ad730b44-a7db-4981-a4fe-44a04a623669",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "937de966-a76a-4e8c-b118-0f8b4c82ab89"
        },
        "item": {
          "id": "b62f6592-d61f-43d2-baa3-73b38af636a6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "eb3f2722-0110-4f21-aea5-4ce059d23ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05ad7ed-23f9-40f8-9e35-ca294cc397e3",
        "cursor": {
          "ref": "447bd70c-c63b-4151-8009-a9914ac55450",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6926e3e5-bcab-442e-8bbf-316d977c7ce4"
        },
        "item": {
          "id": "a05ad7ed-23f9-40f8-9e35-ca294cc397e3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3a43f0de-138a-42ed-a8b6-e54893e60999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bab6613-946d-4063-9489-0e2f50c5292f",
        "cursor": {
          "ref": "9ea6a820-274c-45c8-8abf-c638f756238c",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "788cf9a2-4f25-4337-8a49-a375912268a2"
        },
        "item": {
          "id": "8bab6613-946d-4063-9489-0e2f50c5292f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "58241062-7773-40aa-9299-90135f101e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5649c8f3-4f07-4640-9446-3bd838bc3fae",
        "cursor": {
          "ref": "ebd3b8b9-8c73-4102-828a-13b25047f88d",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "614fa412-826f-4fd0-a001-3851b7d256b2"
        },
        "item": {
          "id": "5649c8f3-4f07-4640-9446-3bd838bc3fae",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "94ab2621-9074-4d22-98ef-93e805499409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b1b69b-0051-4014-ac30-7f64fe6b067b",
        "cursor": {
          "ref": "5aa8dbd4-1703-4bbb-b5f5-d53473b94a38",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f4d3ada9-fdde-4892-afa8-796736dfd150"
        },
        "item": {
          "id": "29b1b69b-0051-4014-ac30-7f64fe6b067b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "700b5110-1138-43d0-ab62-c74fce8effd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63e0a60-9532-4ecf-8adb-fdebef14fa94",
        "cursor": {
          "ref": "90a488a9-6ea5-49aa-b533-0799d62169e0",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "fbd64606-9a22-427b-a757-b8203c10f5ab"
        },
        "item": {
          "id": "b63e0a60-9532-4ecf-8adb-fdebef14fa94",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "16c7096e-ace2-468c-b120-ed30f1929cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c460c91-f178-489a-aac0-99a9a3053bd7",
        "cursor": {
          "ref": "58c398c1-e241-40d5-a352-ed784a4fe3e3",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bc83c823-5c19-4e87-a160-7d0a4b424daf"
        },
        "item": {
          "id": "1c460c91-f178-489a-aac0-99a9a3053bd7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "48920b49-4ff2-4cf3-9acd-8d92107e2d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47587177-ed6c-4afe-be85-d5af3a65f1a8",
        "cursor": {
          "ref": "9c7973e0-2eb2-4a2b-b43b-cbac846d100a",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cc85005e-513b-42cc-a2e4-7aee0facbdcb"
        },
        "item": {
          "id": "47587177-ed6c-4afe-be85-d5af3a65f1a8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "da098770-e35d-4706-873c-eccbde28f466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e2bae5-f3fc-4673-b81f-d83fde143bb0",
        "cursor": {
          "ref": "0712b447-98cd-4fcd-9635-c83e80c3131c",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c074d1d9-3af3-46ae-8353-a5300e4d6492"
        },
        "item": {
          "id": "d5e2bae5-f3fc-4673-b81f-d83fde143bb0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cd43ea99-4388-4174-bf24-524d2a466b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0faf3216-f6af-4928-907a-12ee9ecc11bf",
        "cursor": {
          "ref": "c6b98ee6-a077-4cf6-bf7d-19492bd2e2ba",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4138d523-70d1-4f32-a0c4-074239786930"
        },
        "item": {
          "id": "0faf3216-f6af-4928-907a-12ee9ecc11bf",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "54b58f6c-d327-4399-8702-03f323d27c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826c6462-a6a9-4848-b7fb-a67a90cbeaca",
        "cursor": {
          "ref": "face1b21-5803-4141-8d5f-2d76949c5db6",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7bce6a57-aa1c-49fa-8a08-4594d6af0e51"
        },
        "item": {
          "id": "826c6462-a6a9-4848-b7fb-a67a90cbeaca",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "aa4b73e8-5d06-49c1-b18a-417afe665e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346fee14-3d23-44d5-8796-bbaff001eb01",
        "cursor": {
          "ref": "4d0f413e-73e2-41ed-9ed5-75a4c51a0869",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4f75ec02-835f-43bd-89b7-d7896fb7fc4d"
        },
        "item": {
          "id": "346fee14-3d23-44d5-8796-bbaff001eb01",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "091ad722-6d45-44c7-91a1-8f9817e9f1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5bcd16-8dd9-4866-8cb5-9f6adb15c38d",
        "cursor": {
          "ref": "bd51c125-9679-4628-bc1f-edf34489283b",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "06c53b59-adc3-4e00-a505-9de3e0c1aac9"
        },
        "item": {
          "id": "aa5bcd16-8dd9-4866-8cb5-9f6adb15c38d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5dcf77b9-a3ce-48b1-8a1b-3bfee170cc94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e482417d-05ff-4a6c-a128-2bfc4ea51ebc",
        "cursor": {
          "ref": "4663f4ee-3b77-4311-953d-c0d1515c55eb",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9d8768c1-452b-43e4-b2c0-f36bf050946a"
        },
        "item": {
          "id": "e482417d-05ff-4a6c-a128-2bfc4ea51ebc",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7fa1d837-b553-4be3-adde-ddcd74eaf356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d91b15-6109-45dd-9510-b22f8e3ee860",
        "cursor": {
          "ref": "70a59486-6859-4bb0-9b2c-f49bb8c55774",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "619b369a-d4b3-41c9-8844-424a9c775f9d"
        },
        "item": {
          "id": "b4d91b15-6109-45dd-9510-b22f8e3ee860",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "086cec7a-279e-41ec-88dd-dddb45a83c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3f6bb2-3e16-46f4-bcdc-d1cd32448781",
        "cursor": {
          "ref": "ee32a651-0011-49a1-99a7-c7d4038a1ba6",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "32308d17-eaf5-440d-9a69-19ac320e3c6b"
        },
        "item": {
          "id": "5b3f6bb2-3e16-46f4-bcdc-d1cd32448781",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "fc1615df-0b3f-4f7d-8678-e3476c52b7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de17e85c-b59f-416d-bdc1-d5d1bbcbb397",
        "cursor": {
          "ref": "fed1a563-0916-44cc-ae53-116a4629aa22",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "c02a1db0-215f-4ac7-94b6-41e88585859b"
        },
        "item": {
          "id": "de17e85c-b59f-416d-bdc1-d5d1bbcbb397",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6011ddba-f2da-4267-a49d-4be819ed379e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1fcff5-5e7f-4a10-963d-73c684918577",
        "cursor": {
          "ref": "10f93206-6154-4659-818d-7d4eac463ec8",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d45525c3-949c-4841-a3a3-f8ba04cccc9b"
        },
        "item": {
          "id": "3b1fcff5-5e7f-4a10-963d-73c684918577",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3c98d9cd-61bd-4784-bab3-575c6564854d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ffd0ae-d1b7-4bfe-bb40-b75b86d7edef",
        "cursor": {
          "ref": "4afce93f-815d-4bd2-a0e7-b59f398e8332",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "0c529123-fe74-4f9f-b8b2-fe1f6bec4a36"
        },
        "item": {
          "id": "b0ffd0ae-d1b7-4bfe-bb40-b75b86d7edef",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1b9a0b1d-231d-4128-b762-eeb7c5b58698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46295745-90b7-42f6-846e-bdc5ee42ef32",
        "cursor": {
          "ref": "d4e04470-0095-49a6-9336-9b763b261321",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "bfb26d29-9068-4365-8fdd-04af6ee81ba4"
        },
        "item": {
          "id": "46295745-90b7-42f6-846e-bdc5ee42ef32",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "366c0584-610a-4ec4-b40d-0f0ceddac522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb49a61d-ca87-4156-9cec-f08410980972",
        "cursor": {
          "ref": "74e5b270-02ee-4605-afa8-23045f02e666",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "17d2be68-dc23-42f2-a384-231b94c72d0d"
        },
        "item": {
          "id": "bb49a61d-ca87-4156-9cec-f08410980972",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e0e96b3b-1ccc-4e3a-bce9-4fd175035898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64d5b66-4fc8-4969-9ea0-6d3268e51f71",
        "cursor": {
          "ref": "3cb41692-4e8d-4719-b62a-0e06ccb54dfc",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "88f58b1f-6f86-4927-86ee-3af959ef1702"
        },
        "item": {
          "id": "d64d5b66-4fc8-4969-9ea0-6d3268e51f71",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cf0d3117-8387-4d14-a2a4-f401bc553cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052717f1-88c2-49ce-b3d0-62cd47fa73bd",
        "cursor": {
          "ref": "4aeeef02-17e4-4e04-8d3c-f255da438f16",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c1c45d43-c1b4-48f2-a094-94388ac4dfb0"
        },
        "item": {
          "id": "052717f1-88c2-49ce-b3d0-62cd47fa73bd",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ce10475b-798e-4c48-ad44-d6abc505708e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9d4cdd-8847-41a0-92f0-44717ab8f3db",
        "cursor": {
          "ref": "472a4508-a79b-4ce3-8fe7-83c1adfde2fa",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "b5093315-af0b-40f3-a2fd-95b77021aee4"
        },
        "item": {
          "id": "3c9d4cdd-8847-41a0-92f0-44717ab8f3db",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "354f3eb3-fcbb-4c38-872a-da956944277f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c97d4c-a792-4366-9378-c1f9682ad01f",
        "cursor": {
          "ref": "73ecdd2a-e8c3-4d8a-95f2-6acade081dd1",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "ff1dd851-71c8-44af-8185-6c02468d17fb"
        },
        "item": {
          "id": "f5c97d4c-a792-4366-9378-c1f9682ad01f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5127e0fd-0b8c-4a01-8342-de622d56242d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bab54b-6529-461c-a5ad-1d221fe8d35b",
        "cursor": {
          "ref": "9e66e061-cbec-44e0-a047-d45fdffdc812",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "154891ac-eb0c-44b8-8c14-ed2e2b083ed0"
        },
        "item": {
          "id": "c5bab54b-6529-461c-a5ad-1d221fe8d35b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "405ee1ad-46fc-4be8-8200-8c6c1ce466bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1530617b-f8fc-4cbb-99de-af5cac50d53c",
        "cursor": {
          "ref": "c9898a2a-3c1a-48fb-8766-66b013d2efdf",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "65d498b4-a852-4c22-a986-731fd8a45e49"
        },
        "item": {
          "id": "1530617b-f8fc-4cbb-99de-af5cac50d53c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f0a9573c-3b70-4a6d-a96d-c4a0a588d837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa03df6-59be-462b-a6d4-53fe0456305b",
        "cursor": {
          "ref": "4536e50b-a451-4454-9d41-addc271dc706",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "11e5d9de-ec36-482e-b595-f16ff69d2e85"
        },
        "item": {
          "id": "bfa03df6-59be-462b-a6d4-53fe0456305b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "71da3cec-c701-4883-a689-370aa352b205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc508a6d-8281-4640-a8d7-13e7437f76ff",
        "cursor": {
          "ref": "c77cfbea-f69a-4729-8e4a-bc62ee57cc2b",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b7c4aa07-29e5-458c-a003-de8d110f0889"
        },
        "item": {
          "id": "dc508a6d-8281-4640-a8d7-13e7437f76ff",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7baa36d1-6e50-49ef-888d-6fb2af13b7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db7e1d4-63de-484f-91b7-11b427dd0423",
        "cursor": {
          "ref": "8c0123c2-e1c7-4574-8e98-df4e36b9601f",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "b0e31e5c-3a1a-492a-84cf-689572a69f79"
        },
        "item": {
          "id": "2db7e1d4-63de-484f-91b7-11b427dd0423",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "61e5c956-3da1-450e-806f-31b507d161e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079d4c1d-74ea-4a02-9a2f-ad70214d38d8",
        "cursor": {
          "ref": "3cca19cf-b0ac-4200-8ed1-1e006d63be43",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "662d319f-8c5e-49fb-9e8e-e516dd2536b2"
        },
        "item": {
          "id": "079d4c1d-74ea-4a02-9a2f-ad70214d38d8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c7bfec88-f5ff-488c-8eec-34a2cac7a61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f6fea7-b0f8-4a6d-80f5-2b3b8a40921b",
        "cursor": {
          "ref": "311ac9c4-4674-40cd-a87d-4f2fbdf44276",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "908ffd53-4708-4841-bc30-65d8797fe870"
        },
        "item": {
          "id": "90f6fea7-b0f8-4a6d-80f5-2b3b8a40921b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f794fa07-a63f-4195-a1ea-610f3ffae6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9d55ef-1ae6-4b06-9c58-cd6cd5024cf2",
        "cursor": {
          "ref": "77cba94a-9b8a-4a6a-9ad0-d587db85280b",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "0be1baa9-6d47-42c0-a7b9-5a50daef4ebd"
        },
        "item": {
          "id": "5d9d55ef-1ae6-4b06-9c58-cd6cd5024cf2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "382ffe39-7916-489f-84e4-7a299c9f19ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24635323-a115-4e60-83f2-3cd9387da192",
        "cursor": {
          "ref": "6ccbf686-4783-495a-9f5d-d0d6b4e2cedb",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c38c4d6d-367a-4b70-825e-90f5a9216314"
        },
        "item": {
          "id": "24635323-a115-4e60-83f2-3cd9387da192",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "53b6aca5-e374-4dd4-81cd-1e36b2524ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b52226-dc56-4c08-9585-a56543a8b6ba",
        "cursor": {
          "ref": "a2252657-661d-44d9-a6fb-5ab5720dd012",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "31b14582-2cc6-48cf-ace3-b67cf3d8b6ac"
        },
        "item": {
          "id": "38b52226-dc56-4c08-9585-a56543a8b6ba",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1187d741-64d6-4034-bc1c-5364e36bead0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e61abfb-463e-4855-b11a-dc3bb5ff91bc",
        "cursor": {
          "ref": "be30c466-4899-4579-8b4f-cf4521df7e63",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "e55f138a-f1dc-4128-aa5c-07403b8b9bf8"
        },
        "item": {
          "id": "7e61abfb-463e-4855-b11a-dc3bb5ff91bc",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "db9b53f8-ac35-41cd-af9f-bda3a0cfd5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af3af71-3521-4950-be55-9dc6db1f1538",
        "cursor": {
          "ref": "ade111da-5c21-4ab9-bb1c-84b21e6f5efc",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "9178d1bd-a371-408f-afad-2e6417c275d2"
        },
        "item": {
          "id": "7af3af71-3521-4950-be55-9dc6db1f1538",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "55842cd9-34bb-4467-8bc0-66cf40ecae31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e691d2-7168-4b6f-8b17-0a87a318fad3",
        "cursor": {
          "ref": "95d45527-67ff-43e9-82bd-0226fd0738e8",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "67e4c0ad-0191-45ca-ade8-c419ee183aa0"
        },
        "item": {
          "id": "a2e691d2-7168-4b6f-8b17-0a87a318fad3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9cb130d5-c643-482b-b064-ac9c5028a93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41be298-b375-49e0-aebf-340b89fdaac3",
        "cursor": {
          "ref": "5352af8f-91d8-4e6b-8596-cd6519aedb7a",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "bd1eb335-49de-4a6f-a8d0-f40fac3a91f8"
        },
        "item": {
          "id": "c41be298-b375-49e0-aebf-340b89fdaac3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "eff4ea48-7073-457b-ab44-2a155d726940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a9e531-c0c8-4001-b341-a5a542734854",
        "cursor": {
          "ref": "283db331-d4f8-4a4e-b293-04659d8dca05",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "aa32be7a-03bd-4f99-9357-334808efd0ba"
        },
        "item": {
          "id": "23a9e531-c0c8-4001-b341-a5a542734854",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e2b5fdaa-ff21-4421-8f6d-12fdb1d34ba3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4632493c-8967-4873-8e8f-ffce0cc22d8b",
        "cursor": {
          "ref": "02b6611a-cfd0-4de1-8f02-8c0cd3133ab5",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c5de60ed-2f95-4bac-a8e5-66cbf7052cd9"
        },
        "item": {
          "id": "4632493c-8967-4873-8e8f-ffce0cc22d8b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "dd996e4f-d9cc-4bbb-a632-aa1c4554a01f",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9b282b-ec49-48c3-93d9-988e08cf62d9",
        "cursor": {
          "ref": "2784e4dc-6061-4129-892f-fe604acfbf8c",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "c43a3b78-8bfa-4aa6-aba2-a57864ef0d8d"
        },
        "item": {
          "id": "3b9b282b-ec49-48c3-93d9-988e08cf62d9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1f0ed4bd-2120-4a22-b74e-0aaf19de19ff",
          "status": "OK",
          "code": 200,
          "responseTime": 3192,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b657f757-9c87-4002-8570-7713b71d8c6b",
        "cursor": {
          "ref": "67abddb6-68ac-4bd5-bbf2-734098fddf4d",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4a47bdf4-af7c-429b-92f9-58180bd36437"
        },
        "item": {
          "id": "b657f757-9c87-4002-8570-7713b71d8c6b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d8a731d3-a60e-47eb-ae9e-07ca55f161f4",
          "status": "OK",
          "code": 200,
          "responseTime": 2501,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "583e7e3e-cfeb-4a4e-986f-4a0e7d616d2c",
        "cursor": {
          "ref": "317367b6-b6a2-4878-985a-6ccf80ac3830",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "20bb765e-79f8-4319-94c8-1be8432f7678"
        },
        "item": {
          "id": "583e7e3e-cfeb-4a4e-986f-4a0e7d616d2c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7cf8e323-b73c-467d-8261-2d3f8e14a6d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583e7e3e-cfeb-4a4e-986f-4a0e7d616d2c",
        "cursor": {
          "ref": "317367b6-b6a2-4878-985a-6ccf80ac3830",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "20bb765e-79f8-4319-94c8-1be8432f7678"
        },
        "item": {
          "id": "583e7e3e-cfeb-4a4e-986f-4a0e7d616d2c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7cf8e323-b73c-467d-8261-2d3f8e14a6d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd950bbd-ac42-4a42-ae44-742d8e32c93c",
        "cursor": {
          "ref": "7a42f6b5-4cbd-422d-ab6b-56e87bc3b076",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "01c137bf-b63d-4aa1-9253-f14ba4b7b585"
        },
        "item": {
          "id": "dd950bbd-ac42-4a42-ae44-742d8e32c93c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "463cee31-446d-4ff5-b3a4-30f0705f28e9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0d2ca8-c654-417f-a782-30d0053a8049",
        "cursor": {
          "ref": "cea4f0e0-2bd0-4e94-8ae7-08e41c801bec",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "779130a5-af1d-4bfc-a2bd-e08fe993b2ad"
        },
        "item": {
          "id": "ca0d2ca8-c654-417f-a782-30d0053a8049",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f86bbd4c-08a9-4045-9ed4-2bd28bc20a3e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}