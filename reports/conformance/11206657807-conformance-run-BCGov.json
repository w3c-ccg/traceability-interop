{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b806d5c4-785f-448d-a61a-01832c3a3e38",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ecdfa6aa-73d6-491e-9c7a-998745097b3d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "09763ec4-8ca9-439f-af77-363b93cd9c27",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a1ad2c69-1064-4294-9e3c-676cb4507ba1"
                }
              }
            ]
          },
          {
            "id": "00446ea2-24b3-49e2-9136-f3a899e94762",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ae80abbc-4631-4d41-bb25-0445fcc9c7c2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "52f1001e-f236-40a9-8b04-81e7c1e79727"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1def0869-66ac-455f-af5f-f4721f029b2a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1467fc42-4590-4891-8450-71d340c7d59d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4b0b95ec-a2f2-4a23-9f8e-3dcd121904f0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b5f7132-eb9c-410b-b9f2-c2c404e0bac8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4647d10c-ccf5-4c50-a482-e5e5675eca42"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a2bb462b-ff01-46c2-91b8-31de05959015",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "980d96f9-29ed-48ed-b3cb-e2745013ddf0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fa340826-ffbf-4918-b613-179e3ea137f6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "35489a98-1aff-44e8-8321-7923f7b23432"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8289fa02-df9b-4b9b-bb25-942907262be0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1204129a-bf9f-4b59-a527-656368e93988"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d7f968a-7175-45d7-a0f3-badca4aa4046",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56a4402c-04d5-42b7-aabc-a44b629f5633"
            }
          }
        ]
      },
      {
        "id": "f31e3317-90fc-4e5d-9c49-f3f6e1b59c19",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2ef1dd09-e0a0-4973-98d4-5b0312627070",
            "name": "Negative Testing",
            "item": [
              {
                "id": "25ca0e09-3d2d-4c0b-ac46-6ca447d25bff",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "802d98f5-e8c4-4517-b639-37a91e7a3045",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd379bfe-539a-41a3-a0b0-4f773b341634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b6935fe-2098-4228-abad-2bd62b9c55f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5007f72-f89e-4112-957a-e22aed2279cb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6716edb7-d46a-4bf4-9dde-8c1830ded5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3b0ba03-3934-4e5d-86dc-61b6a8fa7525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa3da65-1ee8-48ec-a71a-6f1358fde57d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc089e7b-8021-4a5b-9805-1b4ed974351d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22282757-1fad-4102-bfb1-d07190894dcb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "36e1c0b7-0e72-4449-98dc-976cf6e5a454",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "576aab8b-a10e-47eb-a49e-19932aeed3ff",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4decae31-a7b3-46c9-a8c8-172ccba04acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b2b4238-539d-4a08-96b0-1f4565a93348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4429943-f303-453b-bc8d-84478f97a3e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "456388fc-7ff0-44aa-87ae-9dd6f64faada"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ec84b29e-a89d-4316-8cec-4d4ae69538c6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "91974fa3-ee2f-4ed6-bd1b-5901129e8d7e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c0327bf-1b03-4b3a-81e4-4a5878895e9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2a45c5b7-e31b-4658-a59b-9e2f118ebb72"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb9909dd-b0ab-4e5a-bb7d-b00f9343b7d8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8fe783e5-4b1f-41f3-b87b-cd7981572f37"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a9ac7b1-2c39-43ab-af19-e8643a04ead3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d5d3a246-9ed1-4855-b4ef-8b7c1004b744"
            }
          }
        ]
      },
      {
        "id": "56b6bc21-0665-420e-abe5-c150f3e0b983",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "52a3f0dd-36c0-4757-9bff-acf43187f55f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "34be3747-6536-4c06-b9d8-78acb146b651",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "65fa4c64-7a88-465a-9269-5074d8cdbd4d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37c028e-1a46-4325-8fb0-52b6522dc8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef617ff8-c9c5-45d5-86e6-edcf40223cf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf68579-33b5-4d07-b753-683282bbe717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d3f4980-80e2-4232-984b-6fbe8c8a4d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb52a0c5-e1d2-41cc-9ece-b7c48864a7a4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "238c932b-fb77-4094-b4e3-0e63591e71ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b8cfa3-ad35-4058-89af-87fa118ddcb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48abcce6-4dd4-4c36-b177-d99aed172663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5cf2aa9-0a73-4260-8245-d9d0a3ecaf56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d56b286-41fb-497f-ad67-d60149b06de7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ba37ef-987b-4e6b-810f-3597ea4a0af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b50ad4e-52e2-4992-9c23-64e36a4d4735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfac6a4-9202-4495-8b2b-732f63cd765f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72344f26-5243-4de9-bb2c-e8b4c1945e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86cb11ad-ab2a-489a-8cdc-81e8ac3cad73",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f29a4dc-0a4c-46b5-80c7-936d913ef301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ee2ad1-bdbf-44bf-ab3c-0286185c5ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9f5a93-f5c5-4263-82cd-3d9bc450a64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee198c22-71ae-40b1-8334-bc2873ccbdf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b401cc2d-b824-4e7c-a9e1-f83372169033",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613a30f5-e939-46d8-961a-0d8d42aa6e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d715d1d7-20d1-4321-bc02-2e5d78dcc830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f5c03d-5309-4bf6-b2f8-5b7a9769e6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "417905f2-5e78-448e-ad1c-ccf0ac5f2f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d823edf5-d27f-4dda-9361-38eb7fa137ef",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5deda5c-1636-4155-a690-24e8916f073c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f15422-0c11-46b3-9a55-eddbd5fef973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001dc7cd-df95-4864-9340-45d0b6940174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aceab0d7-7037-41e2-bc93-2679a1019e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71bffb2f-b1af-4e02-9bf8-f228977e394a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5fb4fa6-508b-434d-9900-2633595ddb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9fa7343-5a52-4d90-9e16-cbd6b81ebd53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631e564e-58f7-46af-8e5d-fca5d239f550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34cad908-7f29-4f44-b8ae-b6179925ef4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa15ef0-d9e6-46d6-83c4-28319a73db55",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a7e0be-f241-4e50-b6a3-d146adceb4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57c7154-e98e-4e7b-a269-c910a86ff77c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9393a33-9018-4a8e-984c-98d6977c3761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f447f97-1f6d-4fdc-b182-1704676a8dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd949454-a457-4a92-a5b6-c63e577e8eea",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fc863d-3a80-4610-8371-c7e70a78d53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef95c1d8-46ec-49c7-b894-7c4f28992881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c682a1c5-c399-4a9f-b153-fb6bdcd54b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38099273-f57c-4b1c-abbe-61f5ac035f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2e2f76-b6f1-44ea-abcb-792c0dc18630",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b66ba0-085e-43ef-a2c5-63c35c7095c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "935b3126-9822-49ad-a8cd-509c1c069a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d3367c-a791-4425-a6f5-a1d5d5ccebe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c492e006-c4c7-460c-9bec-276e02ea45cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c2e447-1f32-4d0e-8dba-c10a6a861844",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ac3f8f-8197-42a6-b2f9-303e98996685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379e272b-bd71-42cf-b168-e199d893b38d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19d1c38-b2e8-4d09-9666-2e49feaa1709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8647f110-feaa-40b6-910b-105beb9181a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ef2ad7-bf36-4761-b438-d4d450034a0f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f08a5fd-1308-4212-911b-2f2e714fee58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93fde099-ac46-44fe-9e31-0ed302e5c8d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b255f5fc-1f65-477d-8a25-229adbcff89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b59767af-7f27-4158-a60c-b95a15e46d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3492a01-c0a2-43e5-95d3-b8f0e7ba7f46",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff054abb-1f35-4ec3-a050-958b9a17e1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bffc7c8c-cfdd-4c4b-bf74-ad9feb61e5c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc0ceda-c492-4b1c-b329-a2c911b73a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05bd1b8a-9dd5-4185-8314-7344c2491000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86fd70e0-3af0-45c6-99f8-1bdbf3a6f2f1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9d5d98-2ecb-46c4-a87d-b199f6ae360a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21259bf4-0649-4446-9800-68dc2d9a2a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcca06e6-f398-4c0f-8a21-dd963bc17b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19d207be-3867-4311-bb34-14253e5f7039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c07a236-de02-44e3-99c8-2e76663d7d66",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8439e28-49ab-4f89-a913-e6bd92dc5ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abd91c96-eaf7-4411-8885-4cc1b0e9dc20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41619938-a9cc-4da5-9586-da4ffdbcf9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f52754fa-1bb9-462c-94d6-3ea948983068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484fad6f-9bba-439b-84ff-bee117aeb7b6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "089aaad6-6af4-46e4-b0f4-7cbb42d3517c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b1db367-9e0f-4e66-b014-174ca3b6a448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d385b430-12c4-4da2-ac8d-3b81732d5211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0039ade-4ee0-450f-b265-0df829a8b280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5920244-8813-4568-b90c-7b47120dd4ed",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f05832-1669-49ba-a3e2-f6632e1f842b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c7f75c2-159b-4a5f-82fe-7645f5054828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc645321-d7f4-4921-a6c2-dba540f97b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7939dbe-7c1c-492b-9d29-f2b653419b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a86064-7523-4ccf-b5b6-f8e4b879bd4a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf4e7f5-cc35-479c-bb47-3fddf29f8936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e4d0ee5-235f-4bbc-9c64-69e6498d491a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7f387d-51e9-4ab3-a318-7a8a98878bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "46f7d8a5-5415-4994-a63d-ee559ba3ac07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d8f6c3-10a9-415a-94a2-ee0a5d5dda16",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ad886f-8473-4b37-a0dc-f176fa788e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b4ceb20-751f-4ffa-8d72-3b750e44d9eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ade3e5-2031-4e35-8d8a-7ac916044803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "834b0f1c-b9be-4b66-9a62-a6dfeca2c059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6dc0b5-3209-43c4-8283-7f37c036b6c1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f983eb0-d1d9-40ac-800c-4004a66984f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "013e648a-2428-4141-80a4-968022e98cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1051ea9f-9f75-43fe-bd58-6e291c88ed84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "879ad577-eb3b-4445-8bc9-278ca6d48328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0805df7-d1b6-470a-b1b4-eadabdc05a54",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df61599b-f533-4986-b7af-20df6fc3297b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c284548f-89ee-4746-8650-98ff77df7ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0db5ef0-a44b-45b9-91c8-01771d2411b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "533874ad-c512-4630-a592-30bcba0e517d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8280ad69-26e2-4dd4-94d4-ad4cd7eef258",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bddf727d-09b0-42e1-800a-ca94f0f672ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97f16b1c-3a9a-491a-a834-02ee8b15d4a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f163d7-d5ee-4d1a-8326-72e6e0ded48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "570cd5b4-2c25-4997-9088-09b206f354fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf06cb1-7009-45f0-818c-81e7bed43340",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fddbeb6a-ce90-4a4f-a658-c115ead8eef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e03fd92-f2b9-43fb-8f74-6df91482a500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5393f33-c3f7-410d-bd98-eb0c277f3891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eabca17e-9684-40f3-aee4-f6dcc106f795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7880e28-6cfc-4f87-af8b-16e0dfe8dfc1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4c92af-f46f-45b0-93bb-2ee941617d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ed9dfe8-c3fa-4ed5-b1df-8e7df5d88b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8a6f49-2e73-49c7-8c84-aefa6ee1fd89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "851c615d-d493-43ad-97d6-3d34f17df99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cb48fd-1a72-49bb-b38a-dcedd0c66cca",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabd7ed4-9abf-41f6-82ab-dc274a86b3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba89092a-d318-4574-ae6a-18ce5d0e4a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3daca15-fd05-4b73-b85e-bf0096e5322f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0448169-43f5-4b0d-98f2-a43c9b4605ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487c3df9-e810-4064-8a31-ed872f5ff1aa",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "859b1e69-758d-4aae-b7e2-02cab74588b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13912671-3721-4ae0-8818-9eb268a86435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c849cddd-645f-49a9-a9ee-8bcd9f0e1a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab58cec0-6e34-42b3-9980-bb555c2ad993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4a215f-689f-48a7-a861-30d79e66b7f9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd07bd77-d696-4b46-9a6f-a76122d98941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ab105f-9cd4-4c42-b993-eeb33e99a48d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729682ca-7e1d-4ba4-9252-a542ac09efd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0091a432-77d2-446b-b87d-9b2e7be43882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9975dd23-c087-4d4a-82ee-17286bcba168",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a8df23-6f3a-4986-b00c-c630f4a32fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a6b20b-14e8-4a1d-bb02-4ee9969595c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3c6b8c-7783-494e-8e1e-fc4c35ec6f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f638729-15e4-45a0-86c9-8a4b78c607bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361425c4-8620-41d3-bf60-bf9e709c078e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7762ee10-7302-45fa-bb76-8ef0dd23fb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe29f6ca-d64c-488f-8461-d600ad6a709b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2a0754-a7fa-45c7-a212-1931c03746cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "025aa291-580b-4fff-b986-9c6b27ebf47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68c6885-9242-49a4-b7fc-5efc70311e6f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee689145-002d-4d62-ac1f-c93963db5700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17545cad-f733-4bd1-bc9b-fbc7bdffc4c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de8ddab-7a75-44d1-8191-941857c76978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b75f0eb3-b659-4979-9a7d-ed886e6e43dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84df5c84-2e29-4ffa-a4c0-b8c5ec9af6c8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc7b696-44fa-42a8-98bb-bb4f8f26200c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a28d5b-d2b2-4b28-9add-6ff6def03af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8752ef0e-8108-44d6-8592-c9a7e2605b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bfa539a-3207-42aa-a771-fcb5d7a5ea6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e86f43a-38f6-4d65-9966-b8c1f268ce7b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7754c2b-331f-42f7-8434-c8b525b87c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940f6d87-db67-4a1e-a992-9873559e35e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1efd8f0a-0fc2-4eec-8e29-ed7c94346250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5daccdd7-2a16-4d39-b45c-570a8b2cb203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b253531a-2e47-4a31-b143-ef29c7dcfa5d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79614f80-736e-4f21-9132-9112319f7d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ec3d6b-0892-43a1-9b8e-2735e3a0a344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9537ad03-2b91-4766-9698-5c0eafef3f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45c5fca9-aa77-4cbc-af1f-f28347ff157d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a0bd3f-b93e-44bb-bc7a-f5b93db1f72b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d715c6c8-4618-45ec-b211-e6575c003338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee1b6345-296e-4066-a8f9-718ef94ffc61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71593feb-1000-45b5-a5f0-faee9aa02c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc13a8c-b928-4d0a-8d2d-c1fde2e19159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8932d09b-2bf1-4d86-a1d6-61f34dbef98b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67126896-25bb-49c1-8989-5bb24341d44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1836ef76-8c0f-4e01-8282-25b71202b878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84085b27-6a35-4636-b8a9-0817d189f101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5edb1313-6ac8-4d41-a61a-02413e44cd2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5652941b-93a5-494f-927e-2accea7989ea",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d27aac1-e4ef-4d69-8de1-40b23bb6e206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0080ed5-9786-4065-8ddd-e498be1d3dbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346acd5b-dcc8-4d2c-b2e7-42e87060a40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aedf9cee-17f3-4fc0-a52e-a8eec6f7bccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf6a9f6-6662-4056-8dae-000596534dc2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6bf4db-6a64-4118-b575-57b03677d36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4fbea32-f934-47b0-8ab8-b0a691ab0c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac6d1ec-9e30-4e30-a9c0-7776673ed1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "91e82f8a-678c-4c85-9288-946195d5e486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8392fcc9-000f-4576-826b-eba7a80cf9a9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "758d39e0-5b5b-4d3e-9b2f-9189664905b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546f7885-ad2a-4f64-b2dd-e82e3c3c8cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43d515c-e4bc-4b8b-9d5c-c92cf4e9ea43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ad0b375-853c-4a93-9448-d67151567e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852442c0-75f4-4f6b-af07-de710f17f6b5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d36e155-67ea-47c4-9b07-c95ad29746de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad3fd78-11cc-4cec-9cc3-8d921b4ac85a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402713cc-7a72-4520-8701-144f4a802b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a60311c-3e13-4808-9998-de24db29c215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b2cfcb-74e1-4277-839c-83d282615548",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31c0ddd-b2c8-422c-abcd-5646ef127874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a92cb543-3615-4d9f-8a4c-3be43fbc1220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7142a47-f43c-414e-9d22-b4fcab676e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f0c78cd-1fbe-4cd9-9e74-ad61778c91f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549583c6-cae9-4f5c-b51c-9dca9406b6d3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a3c78c-ba7e-4f4c-8e93-c57d88219bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc3bea49-8e68-4f27-8523-cc14a229359a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6ad7f0-159b-470b-9013-e176bad3980c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "553c49d0-df04-4e81-a53e-406c66533be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb63d183-79ce-4319-85e2-f58002dba24e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff1b4bc-2c62-4023-a362-c5713086647d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73380f8d-7d2d-46bd-a288-6b1dc71d4389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713380ca-ee22-426a-9fc4-846948d5e936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4ab15813-926d-42bb-a853-165dd3445aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954141d2-15f2-4969-ad3c-f57085771d3b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6304f7-b242-4091-8690-3637177ed41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b09dc3d-fada-476f-9a95-b1de83e78c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0618a3-6647-43cc-b90f-28d9943f35f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b793c78d-69da-4116-a429-4abfe7e7b8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba01a8b-0ddd-4617-b3d4-edbce7caa5b2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136750ca-f330-4335-9597-10575cb69487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e3eeb5-13c6-426b-bedb-fea1309d3ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4ef150-36d4-44cc-ae58-0e2eb9be99fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "07b88072-52b9-4385-8726-a25cd8000085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4819d804-a866-454d-ac3f-35df0b6d36cd",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07cadfe-b525-46f1-b2aa-5ac7e4e25131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "981bb074-ce38-4acd-9e6f-911c0afb8f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06bb2e31-17a2-49fd-a30f-116a9be956a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "62265d42-6b2a-4b1a-944f-88a654423278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76dd2e7-7863-424e-88d2-20ae3987401d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46582211-3502-4a96-baac-19efc4f3b266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644d1b22-8ab7-4802-a4f3-258a0929da7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf723f7e-74ef-4f8a-a239-8a68b79124b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdea46e5-9010-4ced-b216-409a91a2910f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299d2f44-0a0a-4a69-8bf8-02295076ea8f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "340018f1-a85b-4c76-960e-4925d88b866a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa17b31e-935c-4723-bfd9-575ef067fb0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60801cd-5828-4064-bca1-7ea6961673a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00973dfd-4db7-4290-8f55-09941a7be2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e651758-a910-4d8b-ab47-22ab0f7d2d8c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff602cc7-4c52-40c9-91ef-295685c2c506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87b39a5a-e872-4f24-83c2-9d75c5c19ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967a5110-d3fe-4bb5-9841-b985e153f41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84099243-3a4e-461b-89b6-0b66d9ecc576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27656a7c-546e-456b-8209-c814d509e695",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc264c4-ed4c-41ad-9522-6c98f2585a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b51527-128b-43a6-a2cb-cf2641f33911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec45bc6-363f-4865-a31d-1c97d1f3ec51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "406fa2a0-0408-4b78-a008-c9daed5999ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978cdd7e-2fca-4f46-862c-b48f9ea10efd",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcebf81c-eb6e-4cb6-9388-03da2920eeb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ef3345-b4cc-442d-9ead-eb59fa809bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfc2e2a-f2c1-4677-8944-a5330e3a8e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fdedf648-f22b-4599-acb3-ac91af4203f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf9fb3a-e931-4fcb-b58d-a24136dbb49d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bbf41e-581b-44be-b5bf-077d76a7b805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a574a440-9858-4d4a-9e1e-425bb4b2a517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd42b50-4652-4458-a6e1-66a2d6d5eb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d12ba6e-8965-4fea-8ad7-48414ee85f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88fb0cf1-3d02-47cc-bd92-92575b89c675",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f76802-246c-4a4a-8d0e-71fe752bd4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12695a5-a41d-44e0-b3f8-76ef1064f86f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b96b4f0-6c68-4af2-846d-b1e5a9009ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe1904a8-cf85-4e7b-b119-9faa0c3d8599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb9a4b4-4bda-494b-93dc-8cf97138aade",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2eae37-fa27-4996-9072-e8de6cadc5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82bee295-64eb-4db2-bafa-49c91cc8cf81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e88c81-2e50-47bc-938f-04d548cae851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e83d00d1-25f7-4181-8309-3b768aafc8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489d1bf0-5a20-4409-974a-194dfd0b2d17",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1514fbff-2f86-4069-9f37-e9deafe8a524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e9ee23-0cfc-4845-9369-2303c7b5d2ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c75400-47a1-41c2-9ef4-6c912e58d555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7c887c-3d77-4adf-ab8c-a3ba83aebe44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09de0761-0a33-45e7-87a2-bb7a2a7cf6f2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de8ab20-7d86-42a7-8afa-2a53e2b56672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e094c668-419d-4706-b419-315c73077932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60cb6ff3-e0e2-4cdd-a714-e8c86289f179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56ce0c7f-4b45-4df5-948d-3f92ad79e79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de90f6dd-9472-4f9e-b8a9-b07017347c3e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0262b41-02d9-4368-9cc9-549d36fbb52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4baa6345-d765-4276-b584-81380d7e3a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea31ea7d-390f-4e2c-b480-3d8c969667d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "494eb5f0-e778-480a-adde-492fee79865d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ea6d94-4cf0-4c95-a443-60263a510276",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8777432b-2492-4957-8a9c-d88cd225d04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df653ae5-f70b-4776-b0ae-f3b4c9cdc80f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb13b2c2-976c-490b-a0d6-61f22d2593fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aed63ea3-2cec-4057-8ac3-82c7aff1646d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8b5b08-1481-4b41-b41f-9265181c1d36",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9315f6-9362-4b9b-bc46-7ddba7b1de50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc1da992-c5d4-422c-b037-faac0c660647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a54c74-7b17-4cb8-9374-17ca078d5e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d96c7fba-0b49-4260-bf1c-a24c0e5d8fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b829617e-5a96-4da1-b45a-96ee05dc6c36",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104f1831-0597-48dc-9efe-b671d3bbdc11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a8f2d94-9e96-4e7b-b09c-602f22f3c70e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763c47d9-dd28-47a8-8c6e-31471c137bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "97ea2adb-cc3c-4c9e-bbfe-9abcf8e4dd01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f4f0b5-9b6d-465c-9c80-95b4275d34b8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "172e5c57-7cca-40f6-855f-7999049d3037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d1ee5a5-cec0-46df-80c8-450d129daf8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566bd1b4-ad1e-4910-8013-d779d6371813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f1cb36-65a3-4da4-8035-5d3148978c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f7674b-d3e3-405a-ab4c-b48fd0e78d8f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1ab16b-06ae-42fc-a3f4-dbb464afe5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5861d09-9fe5-4ad8-bccd-e48779ed0570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2f491e-5e0a-4abb-b691-dcf73bd792fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec02fdef-135d-4c94-bfae-39e262e29d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452f7eea-2a9f-4865-bd2d-9ef05c3347ff",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8027fe-3a50-49c8-a59a-13d2f4fc003a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aadacce-aef2-42de-af1e-f27e183f54f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87d064d-067f-4e68-a740-ff6cf3f5965d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f5906d3-f430-49ed-ae8b-8683aba0df7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2681539a-2768-4639-b4f5-09197c47ede9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b993fabf-821b-4c9e-8266-bc25a49d9a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2bcd1ec-c79b-4891-b1a6-90785a9992c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092cb8ec-efb5-49d6-bd0b-3238a621ac52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "66260b16-3453-41fa-a5dc-ec055fb5d5f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b81ff8-6baa-482b-a67f-8244c9a7be54",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c13fb0f-cfd2-4403-ab85-2b75bd0463c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043beafd-77d0-4dee-9aaf-3c8c88a41c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc57ba5a-3a14-41ed-8b26-c437689fd73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee898af-d84e-4f3a-98d2-33a9d9fd5baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ad571f-ebcb-477b-b7bb-b1669ff6abee",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7123e459-3b74-4232-8026-1502215a30ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b99c66ba-143e-4c01-8954-390a2d5458f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d648b70-0d5f-48ff-a9e4-5083c554b3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46769067-7c31-46a1-b0b9-d2554a2168c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678d27f7-c85f-4568-8399-761d0081b61e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42fe3b8c-246b-4bf3-add1-9375614e49ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df01b4f-57ee-4e74-9cc8-ce62f8076fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ce8d2b-c580-49a2-8461-6cd7024813b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "736e5ac7-7cf3-43c5-b85d-9dc48668b7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd39f35-bf83-4819-83d5-41da093064f5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb9e05f-2af6-4a71-bf77-86060cd03ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b685db3d-96f2-4a5e-98c6-c49439f7a548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3856332e-d14b-49ed-8b7b-3d2b2bd953c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94995490-df57-4d9d-9d11-b98e75c82708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567f9482-78f1-4da7-8575-f2e6d58724dc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "848ba18e-b309-45fd-819a-c90c489039ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049ca8d4-b34a-4c69-a47e-972b1069b309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a0834d-bed8-434b-9b35-811247d25dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "29d1d6b2-c382-45e0-a0c0-d0a384ef3f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e707799f-2514-4783-a496-bd9ce2661069",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9991ae80-2c3a-46ab-ad8c-c430e629d76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f898a01d-5dac-43fe-967e-4662c7dcbaea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9365595-02a9-4b0d-9f8c-323256374e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ca513b6-efe8-4b44-b2b7-edf032da8a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd48472-f92b-4d70-830d-510f58dee99b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9019cd4-84ad-4e96-abe1-4f31cad6a9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "401ea0e6-7830-4e84-a0f0-5ac70d3f2ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a181a1-8380-4721-956d-2d3a1dd1cf19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2d61b4c-5109-41aa-ae5b-b1af6b854780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622abe84-767a-4067-9c75-52f5a68052cb",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88a9e44-9e52-4300-9d00-7516fcb1a3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2d0b1a8-5ebc-4b65-99fe-c9f406ca76fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd03a17-a865-40cc-9ecb-3aea0088defe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b77f79f6-d543-4ce4-b913-1a1505c64f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7febcb7e-cbd6-45f3-9039-1d842f2cb606",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "637b980f-4f47-4c0e-8cb8-10884cff006d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed598504-bb8a-4d5b-a559-08b81d606f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148055bc-4a61-47f9-96da-51fb2b755fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a95a820a-53b3-4c66-9c90-7ff02b40ac6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8de88be-d65a-40d9-933c-10e1b64c967e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587384d7-5941-44a5-a3fb-06f66b78b47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d0b74a8-ad9b-4f1a-83c7-775a11668d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5de983-fa22-42eb-95ae-d5edd8af03cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "571027a6-5747-4f5f-91cb-84a3da02e6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3eb57a1-8ece-47e2-adc2-37066084cd2f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce770ac0-9e43-4d69-9a4b-cc81159b10a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426f517d-9edb-4674-918a-48b0e28d766c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba623f1-7721-48e8-8cb9-fb8577376933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8c9b390e-d14c-4a5a-8aee-0fc3fe446e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f24bd2-7491-42d6-834b-bb79f1aeef92",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0fdc79-7253-4bfe-bc5a-6f907b244750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f751d903-a51b-4290-b255-2a93550d83ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d750bb-544f-476c-8c8e-6b314c131022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "58374f67-2fef-48e6-b4ef-025cd83fac66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97062e21-bf70-426d-9f65-cc12ff64a4fe",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e36a18a-b4ee-49c8-a38d-403ebc14a221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99dca7fc-811d-4d8d-8359-ff3be07bb7de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee47d03b-6fa8-49ad-bcb6-fefe24944f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "baecf566-71e8-4609-b93e-47e143838612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304695ea-14e6-4bf5-b95f-07dffa5d227e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbffe01-254a-46d3-be6f-13ce65c88082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1843b0a2-8483-4618-a911-13c99c81f813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d554e98-d37e-4990-b4f0-1b8b6d68cd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0861a4cb-9ebc-4e57-8af1-2a1d18941da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd823b0f-64ff-4c98-a495-4ad4e997b5b3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace7fd7d-d927-4731-99eb-d7515f0d0d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf006ba-7c26-45c5-a1f4-0e8e48f7d148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c72fad-d476-41d5-a85e-18b78be49a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a217acf-bf84-430c-81c6-55e6f2c36a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373652f9-193b-4d77-9168-ace6e51393e3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a486c3b-441e-437c-b8bf-d36dc1ea7662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb3a91fb-b60c-44e0-9791-b40a030f6239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085b3166-a755-46da-b75f-696206d71239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c51e6a92-e90c-40fa-9d87-193ddbf69944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658ecb37-a771-49e7-88fa-612dc99315f3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f611ab-dde2-4836-9519-194466ac8a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "193edb6d-3577-4f71-ae53-b652c3c98c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67716b4-0e22-47b9-a96a-48e675879c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "87a78d8a-f020-452e-865c-84cb4faa544a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0adf553d-9ddf-4279-a0fd-73ced7dd3b47",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f07fa4-a6d1-4a22-b36b-c21a30ff58b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca78ae63-ca04-4577-8031-45ac516e8890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b737f79-0836-4ecd-bf52-cce67dfc44d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c26bc8a-5b66-4945-8afc-37d664e7be32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455af769-ecff-482e-9e70-a21024453763",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f5436e-d915-4fef-ac9e-975f6fad17e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db391e1c-c7b2-4828-a07e-054fc50a958a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef35bf1-d1c5-4241-bdfb-299fa385ab1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b4b527b-1349-4ed3-b6df-7b435110d6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1011390d-5fcb-4521-8185-e4680295e230",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ad9708-a64c-488a-8898-2b991deade8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee8e201-bab5-49c8-9804-86dde8d83eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626f39ff-c3b6-4667-8d3d-da60aad083de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9d3d991-9199-48f0-bcb5-640cd95c7057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53ddff5-9a26-4166-8377-5d1ea0c73f49",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ab6cca-e878-4014-89ac-b1e4fa6019d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c50514a5-6fd2-4c43-bd16-ee5282417849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1058e9c-85b9-4ad6-a0c0-e503a4b7bf61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f75ac937-d7d8-4d26-aafa-1f21e1d2ce4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cda948-adc3-4506-ad24-904317bd2e81",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbd273f-8341-414c-bcb0-083f88957cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c7128eb-d7e5-416a-8c75-62fb216285cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be77156-9c82-4312-af45-659a6740f53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2efc35f8-b437-4379-91ea-812d7cd25135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d641d7-7a07-42fe-92cb-b2844b29303e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5455f02c-4b96-414f-84fe-e365ed71f502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5120286-d312-4ffd-954d-065fac81fdb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5292c95-9b7d-4d28-bd8f-ffea8d8e7e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "88ed1c01-b7de-49ed-9cd2-fe5144e77927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b056b4d6-d473-4479-bb1b-cf5e66ffd6e6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd81b22-5e7e-4c71-a858-8788c257cc5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c32f06-758e-46ff-a013-9622e7b0ba29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555b7c51-6b2a-4cc1-a28b-319f41c2aa89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8178ecc9-97fd-4777-9e52-fd081af445cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7581dc3a-9e87-4e2a-9304-03a85401661c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "912534ec-d6ae-4fff-b003-56ad8b2a0c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc99dc20-e2ab-4332-8725-4e059315dcd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ec3232-8901-469c-8ff8-6045eac3229b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c30c165-b36b-4c72-8d38-ae77ebd8de19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a153f83d-2fe5-4029-a5f9-9ac547315c30",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f71b1b8-af5d-40f5-a6cd-dd45f17fe69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68b089f3-6d1c-4024-a9d6-524885b782e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f50267-813a-4517-82e6-6b40ea1bd6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7411b49f-e55d-42bd-b32c-91c83c410eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d79a2d4-6749-4f73-8aa1-e83add4fefc5",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8fdabd-a24a-4bf5-aae8-43f6dbd51a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "797562d7-0831-4596-88a6-1301f9804fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66e44dc-4174-44c4-a729-d0ef3ed03607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2875b74-094c-4163-9c06-2067a6a7a0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb92396-71c4-4ea8-81b5-cef051a16067",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ebab4f-822e-410c-aef4-61c647af3d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4747f825-f151-4fc2-b37a-5c0783925476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe103ce-eaee-4429-98fb-3b7720ebe1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf391f9-e8f5-4cf6-aded-28e16f878621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b43a99-6db1-448c-b038-f93340070417",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "691cbc42-cfdc-439d-80a8-e48f7c3845af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "264f93dc-77a7-461a-a31c-108afe5c8387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42925327-d21c-43a6-9996-ef9dc0893ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b4e170e-ae3c-4028-ab23-776423ba957b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d5c16412-8034-4d7c-a467-f2f03ae17528",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "116fb59f-7bd7-4a45-b57c-9ee1a10a5978",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8e2ad8-3f7a-48c7-9acd-945dc8104434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fde1c6a3-db74-475c-a411-4877fa2de264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3c468d-3f27-4ded-a09e-f61786c0fddb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a97772e-9ec6-4270-8d89-cfaa974fcf3e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6fcfcfba-c274-4531-90f2-803c317bc79d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4abb2072-9768-4a9d-ad4d-e7b266d99744"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ccbfbe51-dc43-4a88-97ca-42186cd59231",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3ef6120-3727-45cc-b73f-e3fbbe942d60"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "442c136e-6f97-4ac2-a00b-8e81a4fe9116",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a3066ee7-755e-4b0c-b734-8dbb5fd0b42b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a38fbe35-c94d-4628-bb35-160a4f244e47",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c1654348-c02b-42d1-b324-1312c1fa1b42"
                }
              }
            ]
          },
          {
            "id": "5c8fcef0-395c-4702-b4b7-42f99e73ed00",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0f1053d2-348c-49ee-8ccc-6cc1c85cb5c4",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "fbb948b1-68e9-4692-8cb0-2f5ba12d41be",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685cfb37-8bc1-497c-9f24-7780d0eaff09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1c3d9ae9-66e0-4b8e-b9e5-e3f677c3c19d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553a8526-ff61-4e63-82ed-88800cf27721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5fb95ca-50a4-4386-8e10-7c0b31003b7d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aa6be109-5311-42df-826f-17c42cb23f89",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ff12967-053a-4700-911a-deb2def314a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d2fd59b7-0005-4837-8e7a-efdc20ddc39c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30e9eb91-8751-435e-90f5-fbef02d59ade",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a2cffcb0-bc4e-4661-99f8-21c25db3c3cf"
                    }
                  }
                ]
              },
              {
                "id": "b53bb23c-a149-4870-864b-dd4201963fcb",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02f142da-ac92-4186-b62e-e1ee8cea09cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "59040904-89f7-42a6-bc6b-38534a650c2b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1265d2c5-94b2-4550-8350-7faa27ebc467",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cca1c6e9-0573-4506-bc55-e86bd5aec726"
                    }
                  }
                ]
              },
              {
                "id": "2559510e-3354-4ac1-bc6f-27ce390efce3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8369038-4ea9-47af-a5f5-d8c0f4674415",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "82729695-d0eb-4d6b-aea7-b671a6cee3e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bb62175-0008-4353-a8ff-c7b4b0089415",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9d189304-dd39-4383-abd5-6458677d3028"
                    }
                  }
                ]
              },
              {
                "id": "26347344-dae0-44b3-ae88-1384543f565a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7cfc83e-5db2-4ab6-ba5c-c23209904a81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0284fe14-835e-4dd8-aee2-064af3815d7f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c20a397f-f78b-4dc0-86bb-3ce7815e8449",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "255dfeef-7d6b-40d3-81c9-05d54f78acfc"
                    }
                  }
                ]
              },
              {
                "id": "87b7a0b5-70ef-45fc-8589-817a30f6584e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0de43e63-5c92-40b5-92df-fb246497874d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2051c8a-590f-4cb3-8ff9-6d6b272692e7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7d8dfd9-b73b-49a4-a708-75b907388e60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a8064efd-90a8-4f2d-b030-febe98a91d41"
                    }
                  }
                ]
              },
              {
                "id": "1f6d6966-6912-49a7-aad8-e131ff8d1560",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ce28594-d19f-457a-b62b-51cd47fd9e43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c3e0368a-ca2b-48ff-9a15-baf02e5298d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95b9ef7e-6c28-4a4c-ad44-75f3add946a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1e75e81d-8f18-4d27-a9c3-31e7c8523235"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d9be1aec-239d-4d19-948e-6c84cda90097",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "49f5d1ee-aaec-4acc-90d9-898c0854c099"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8f30b389-2886-44de-80d2-02168ef0512f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "06a63fec-f5a3-4825-9245-bb9ac97f2813"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82889b37-851f-4b4d-af53-ca835a73de10",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "60c1f1b5-a2bb-414f-a4a6-60d5d7f74451"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c81ff903-bee1-4e85-b531-66d8657585cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf79882d-46a4-4066-9041-d1d5468eba8c"
            }
          }
        ]
      },
      {
        "id": "93723cdf-c48a-4430-a61e-7a5aa9397b51",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2975072c-e2de-49c5-99e0-e68d4e1411e6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95349751-6cae-4edb-8ecf-73dcb66d3b28",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fcff0fd7-3a29-4c2a-815c-e0bbcb1afb97",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66079a65-64ff-47a4-b5db-6dbc515bab89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb4cd38b-c5a4-4275-b524-63c71cef83a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d01509-442b-4bc4-9dd6-a92aaba450de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8989641-fb5a-4c53-89a5-6c5a1cf2efd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52dbf84-b7a0-44f4-8c69-0f26dd2995ff",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502f2908-5c85-4623-8ef5-849f9e44d978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936f0cbf-9fdf-4d65-a9d2-546f4aa10101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de434e33-bb6e-4c16-821f-672debe38c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "64b158f6-cca8-4d95-9b24-26cb19c8a499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e8a2e3-5e0a-409a-a1af-33aa74dfbd59",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a3d504-f919-4d48-b1dc-14b0f86b1d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8602698d-40e3-40df-8cb8-772d9b6bdc10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d4263a-0484-4514-aa42-b8a30a8b8099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e15e1588-0250-4ed6-8ea6-019c04ea7cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0b163b-7962-44ae-8de2-9b48a747e998",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3b4d32-d503-4062-912d-4c6a27d7cf01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec726d1-aebc-467a-b4b3-2d1561a451d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a914bd-d62a-4046-86df-48f8ca76e260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "160890d1-754a-4b3d-adfb-00012fd8326b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7ec0c3-8c12-40f0-b5c1-67b4c703dfb1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f189b12b-fe34-4683-8552-3d7fe2c6fac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4abde0b1-831d-4d53-aa95-25db742c5fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236f3bdb-1fd8-4f83-bda4-04c8035ce765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d83f2dfb-ede5-4624-9d39-c3dd496526fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e71151f-3360-43b3-9a24-15ba216f4c1b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0644c70-377e-46b7-8ce6-839ba9ef2f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c2d123-b640-4f62-adb9-dd5f3b00e4aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77501d1c-4b98-4dbf-a82b-9fa84748c0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab69acb-a298-46fa-b072-4d0dc6ca2cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69333d4-8bea-49a3-94e5-f470cad128c5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e454a45-94bf-4352-8819-a498868bc5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f876db8-99dc-452b-980b-1ba1efd5dd94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a659fb22-8975-47bb-91b6-8d433daaf846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e30b977e-ff9d-462c-bdd2-7dcbfef682e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f55a32-cbfc-4662-a1ca-7c5082d2352f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c964f71b-1790-42d8-ba2d-46f99712c001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ac76b3-51a7-4df4-8428-d26aa3df0af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3af809b-0e31-436b-ba6c-6b5fce4b5005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "578f6dc0-6b12-4195-a78d-65504c9b376f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55238cf-da2f-458f-a0b0-ccaf3d453b7e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "021f9d5c-0240-41bd-992a-21ca8468304c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ca7e49-9928-4c42-9eca-cc4a1f294cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4aca97a-004e-456e-9ed5-c64080232a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbce066d-7cea-4c89-bc18-2b8abf9d5496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80758a49-6bee-40c9-bbb6-40988e8a45a9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "087b918f-ec0e-4584-be14-dad4293e1c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce81f20-1d96-47c0-8286-046fe816c227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118f5b24-eb0b-4383-b2aa-4898b2bfb012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61882e26-b828-4104-8b71-7a3913fd521e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca5823a-92aa-49cc-b93b-de00550f7d48",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76c51a7-90d9-4f7f-be3a-3cfb52cadc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baf4ee9d-2e7e-4158-8c2c-ec821a0e3d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743dfb1c-4379-41ab-8b78-9cdada0b428b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "65449443-0e33-490a-a5de-fcd745c0e432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fee813-9102-4f9b-a92f-b42110d3a4a7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab0e62c-26af-444a-9183-c856e9c20805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103f5ada-0a7e-462b-9c46-e00bb5ff61ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc75ebe7-9237-4ed6-a86d-505a41f747c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "07c19e22-0053-40a5-b30d-926c6681769e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c5f07a-48f1-4298-8d26-9f4063f2cf80",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71353f2-30a0-41a1-8996-8e6e3b5b97d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a468e479-3c5d-4f4e-9616-b901f38b10d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59969b9-18c8-4ec6-b701-f333d4a2bd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bad1996-f68a-4830-a3af-742cef5a7e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cc2e59-a930-46f1-9adf-828dc59c4fe6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8490210-f388-4b10-b45d-6cb689252c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e56462de-e435-40f3-93c7-19bb62819e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a95494-9c03-429a-ada3-ae1a545ccfcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c2568f1-490b-4689-a640-5d0bd30d401b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589b8aa9-bc84-4d87-8b60-86d52cb22fca",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313d62dd-c83e-4b69-b7d4-a7c84239b215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef27e57-81a5-4e72-b38a-185858712a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90a606c-e845-4202-a4b1-e8e64bb2d4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d131ca90-b3a2-48ce-9275-1507dd23812a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad17d7c-87e1-4399-8aef-0a43b6e63462",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "487cc038-8497-4ff9-8d72-2a8cfd97f812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3d54a09-20c7-46c3-a328-19477f4765a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e30e3b-2513-4fe9-9d46-286697d3cdda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ac8cfe-fbba-4ebd-8425-9bf6ae26b4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734a65bd-7e06-4de4-ac7b-52f9219474d3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24676019-d596-4f9e-85e0-6cfc2270f57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e9aeff-68ca-4787-8e4a-528769ee8888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9204acf9-2bbe-4499-95c2-1a3e7f889e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b470426-1f78-44cd-810f-24613b43160a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b69d868-cd50-4824-a653-ed7c50b29816",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6aac79-a509-4c43-88a1-089044320772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c9b933-849d-4a90-afd0-f5d6d0e02a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38de90bb-3883-412a-91ca-72fe874951d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e65f2e0-8e77-441a-bd1b-f8f602e76812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d595562e-c654-4cc1-969e-9ccd0ed44076",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954430ab-b606-4c6f-8889-51414c8be4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0369040-2f26-4e9a-836d-e795f4d24202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408c0cd4-9b14-4600-8a29-694332f9e1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "573bff62-81d4-4534-b1cd-2bc260c9698d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8dd501-f1c5-4b62-bfcf-f7c82a1e0e35",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c3b65a-53a1-47ad-b385-7e71404f00d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f09861-228d-4661-a1bb-79f86a011688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61442a4e-b6e0-418b-8840-176ed7466126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55a30a17-586a-467e-9f74-df233eae97e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45623212-3520-415d-8f36-4e54bc2f159f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1eaf6d-d39b-4579-ab6f-8b53b7541e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78512fab-a420-4f4b-a459-4adb35311750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa66f13-e47a-4ea9-97cc-e472c6080066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cecadd3e-746e-4f84-87c8-7aea5f44546a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebcd096c-6bd3-4076-8316-11bc5dcbcbb1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eafcfb83-daf3-4e80-9022-db05d85d2e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c387d80c-08b3-4cc7-8cf7-82d0d7c412ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a20a7e-d718-461b-bde0-2313c2330851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27cef56b-7c72-4e44-b28f-2b8a6a62446d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707e7ca9-f13d-4700-b068-b771606d1980",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0580766f-5043-4fdd-aafa-8747aeef9e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f96138-5c1c-4951-8d92-471093c24af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37e6314-708a-45d4-bdd1-031103fc39b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac3dbfad-2637-45d6-9fb8-2b14fd326dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a414041e-4a73-4d0c-93cb-5ddf75e89084",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f217cf-fadc-48f5-a47e-ab6964dde6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a033fb0-7ce3-4a59-8e94-5649e116cd8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df51e849-4c01-4b5d-ae3e-d4ab03bc1000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce53ed83-3968-487b-83b3-f7fba6b44013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317ffa53-2a2f-45bf-baef-98cdfb68f0a7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caca4fc1-89c2-4e52-bca6-db44a0c0059b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a54abfc7-2ce7-4313-b7c1-0b711ed9572f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b50ab08-ad74-41d4-9d80-57fab86f2f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f28f2158-44e2-4988-8cf7-31d2b54dd699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ba5bdf-d7a9-42a2-ac7f-dc6bac89bbfc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7fd082-9e90-4140-b17d-b5cbf94397bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059b244a-3f31-45e7-bf0a-17d2cf145f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bad8ee1-e281-4482-b9aa-a41f20966512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9927658-be38-41d8-9cea-b304232c3b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebc8456-80f6-4f03-91f0-061b3136d68c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7a83d0-2b4e-4e9d-ad0c-4c3180e74c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba4d2f14-dff1-461b-b091-908b06216f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3455e72-f6ab-417c-9358-9c7932a82e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14659489-d678-4012-91ed-58ac73af45e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ab4db2-a92c-483d-8e9c-77a20aa86c87",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df75933b-b422-4d82-9d8c-120470dc660e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06ba6d4a-8abd-4ca4-bf71-cdbacbf464f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9304aa9-d435-46fb-a51f-1d21f50eea5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "875e323c-4f03-4e0b-a48c-0976e63680c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f3399c-c722-41a7-acba-2dc499300d25",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f04b73-2ac9-4118-9308-da6203dd8537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ca6741-a8a8-4ef4-aa4a-45d2fdf46866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afcb6e2e-62ef-4561-b914-47e7dfcfd755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24cf2f52-2739-4f89-8535-bd2f88b7c54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68115b1d-42ff-41f3-9aa2-ac6f8d2bba94",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8ceba5-47f9-4eae-8589-912ef8bed76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c410fc40-aca9-4567-aa4f-7b42a397750d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e69942-8535-40c4-bb23-0c3f7ee6f727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9b915e3-0074-4abe-854b-cb95c0ed6daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ccf7108-08a1-4ea9-840e-ff1c70e5790f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a162c0ee-f9e9-4a1f-b754-bc80ea2281e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f37df6-625c-43e1-a656-5e9326b12700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbef0ee-d578-4161-900e-76db78d8b540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c8570e7-9976-447c-87f3-e60a07216af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6a0748-7ae3-4f05-a83a-3c17eca2b67c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7ef7c0-17f3-4cc9-96af-fac62da4078c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd5d99d-77dd-4c4b-b20a-a26cb5b6faa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38bc2f0f-47a8-4e70-bca8-d5ced77c8578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7bede71-cd41-434e-af66-ea3a89fbc0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8208b2d-f693-4c3e-a31b-007ce6a9f8e2",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce53740-e899-4936-bc61-7c33b5a4590a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0576dd16-2bef-4113-b50a-ca135748c870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3552e2d4-de7a-450e-b752-572c3b30a0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d12f69b4-f7a6-41be-9021-929aca97c966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a848ff1-af06-4ef6-9fbb-c8c49ebff8f4",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aec955f-1323-4c93-8b9a-5f5d1d04495a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f30d9c-2171-48a8-97dd-b7f1ea5ecca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f453de-ee1f-4b80-85a8-f08543635165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0337ab34-e44e-4825-8558-36ebb42c9ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465594f8-1c32-4512-a633-37dd369cb8e3",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33faf12-addf-4a19-bd56-e90a3cd3b87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e50bef5-b4ff-44f1-82b6-9ae2859072bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7e191d-0c86-450f-9a9d-cef30cb5a3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8fabba2-b413-4b6d-b3e2-3eacc7d3f734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57610416-f5fe-4ae3-8a19-fc274c43cb2e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bddf9659-7281-4a26-8777-fd3e23f5cba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7202c67a-c06f-43dd-9e0d-dc0ff2e8c570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755d5698-5696-4165-a61f-a5dd79ada4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a2a047-baac-4fa9-aa75-b18ae3926bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1954568a-5910-4e79-b4b0-3488c2616c0e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4e34c4-400b-4a86-b5f8-e4b761b99bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9db59d9c-c44a-4161-bcc5-b0f327131569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e69c8fe-bd12-4cd5-8a18-ce8856439f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f803d9d-d7a8-4778-8a8f-e730aa6ce672"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "65ee0636-e37b-4ad8-baa4-a488f4a88cab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fc87d0db-be64-4a0e-881d-4427a2e7b9e2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d394465f-3080-420e-8e98-69ea2a67afd1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "86936020-8dde-459d-9ff8-2f4b4f99f862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a526b8b-e5e7-444b-bebc-3abdc2cfca64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b7d4b25-0bf8-4f57-92bf-4fc3470ff76f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcc31102-dbca-405f-81d1-07a0075f1827",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c9624a6-4596-4a37-86e3-55678fbf67d4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1729c3c0-7bda-4dce-ab1c-e1e4669f651e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35175514-daf6-4873-af6c-1638df6f0bf9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64d21269-7ade-44ba-b53b-e95e9452921c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ce980b6b-a44c-45c2-90d7-b52cffbfbdab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06498138-a41d-441d-ba6b-a60e66ff4ac2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42f17ac2-a41d-41c2-a94d-5127ef8da059"
            }
          }
        ]
      },
      {
        "id": "1160a683-8694-4a85-a3f3-425c55cbcea0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "271e9df5-bd36-4701-be96-22e45a6d7635",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f94b1ef2-cc56-4d97-999f-814b969ed3fe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "713f9983-eb21-4616-b550-7225383bda74",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07e6a0c-3c59-4379-924b-097a7dec672c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2eafacf-0dcb-4b49-89f1-c5d717c27c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1894dd-3b40-489e-97c7-c906b5e47ccd",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da349f2-6093-490b-86d8-0666fb38132a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "625410e6-ea5e-4606-b168-7fe8396a9368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1e2fbc-97db-46ec-8c76-121ab4f69ef9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b55620-b4e2-4604-abdb-233da71cb4e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c461ed-fd28-4b96-98cc-893c58204ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda27841-0403-4fa5-af05-8f844e510dfe",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902203f0-bd9d-4f85-9a2a-6bccd56616ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa9f392-dfb0-4f7a-b2b3-07934291b001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e60340f-0e16-4428-a659-60de7fa4a810",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c406dd05-71cc-4419-9858-1946b52c4d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60402eb-0d9e-4a61-a7f7-a089dc50cf59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92f4bc4-1a01-4928-b750-76d8d96f1d5b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed199e3d-1679-407f-804f-cd4416227cce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01dee852-01c5-4f2e-a4ab-cc0527064262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15eae9d-665c-4e20-a51b-01546ee83784",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1037e2f9-98ce-4478-aada-8db6a77dfc15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "384dbe28-b2e4-46ce-90d1-ae225698aff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe01850-cbf8-40e5-9a61-bed2ab9899dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fae0dfa1-f3f6-46df-8d8b-c7b0a7d359b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f09d0c-56e1-41b3-b32e-90338ebaf760",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23081d3c-6869-45fe-b4a8-6a67436cab68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90139792-19e6-495e-90a8-ae0318cfc64e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d22001a-7c14-48e8-80d2-f039e93b9c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a68316-aa8c-49e3-9e71-e4f00c85d707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e14dad0-2ba7-4569-8c4c-cb6743da310e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfee00ee-3c94-4043-bb18-a5a4a121889c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fecee15-e428-425f-a391-3d0e6ef7baf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1afb868-fefe-43e5-82c0-0655b1f593e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb9739d-e102-4f51-a529-86f8366a306e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba355aa-2791-4de7-967d-7349e9089c32",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2c34e1-a7fa-42b0-8c54-b516e23cc58b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ff520a9-02c8-41b4-abe5-8f997497d677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b722517b-3e5d-422d-89c8-53fbbf5879ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15e87f46-670c-4cde-9d9a-b4b797232cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1018151-300b-4a4d-b721-ba2c1fcdea64",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33dddead-8dbb-4e94-bf3e-284449f7c0fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5abaf953-a4f4-4365-890e-9b766b754fea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a735ca40-900f-480f-9da0-37c7ec28cead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63860f23-88e9-496b-a02d-e324eaa0651e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f79db4-811b-490b-844d-b9e993896703",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110dd156-d9d8-4290-92a4-c3ecfce1263a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "014473a7-6815-4461-b835-f2a7c21104f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2565831-1e60-4398-8308-64634434fe51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50af1ab1-efe8-4301-8d06-c2a1dcd0688a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2958feb-4cbc-4009-87e7-8bdcb0ab589f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e380457d-6b1d-4af0-a281-e6ffbc3bbb4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaf8e491-1e0e-473a-a110-0b5a661a4f24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f1923d-db95-4647-88a2-27f70599ca87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f231116b-6af2-4745-8de7-cbcb30c96ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e798aa-46e1-4f08-b780-e10c044b7fed",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f724030b-97e5-4c48-833c-d426034ea78a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c678339-3056-4b4f-b963-aea70a20ebfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beff7019-c536-4882-a656-c131d1d60ffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef02206-3d6b-438e-9399-14e840cd8788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43506a54-05eb-4734-aa19-19a92ab481a7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fcc02ef-41da-4f5e-aed0-13b8f78f10af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ae5f890-852c-4e15-8365-4e7215242d3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0b262f-c97d-430a-b26b-f3fbe16db391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b6cf45-c00e-413d-9082-59cf392b759c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b693e8d4-66c9-409d-a2c3-542ad2b9adbd",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0071ce-aaa2-421d-a9e8-ebf7b29c27f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85d36352-78a2-44d3-bcc0-592c4214594c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08943ec6-c7fa-4a4d-baf3-bbe48801492a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6529a59-ecb8-4cde-8ad2-b6573973fa74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8e15eb-da93-4f43-903f-f251b77f659c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b54a949-638a-4b0b-b06a-639d9aeeeaf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9331db8-3aad-44c8-b86c-5bc95016390a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acac979f-4a6a-415b-9a3f-c24461036dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218a9e0b-8e18-4188-885d-1d6701d286ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f3faf1-83fc-402d-8b79-5fb388d90ef8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1fea40-ff06-432c-9a94-b1113cdcca47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39369926-762a-4666-bb16-51aa90f0833d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc7dfe3-38cc-4ded-8f95-9b2bcddd82c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "252c5e07-46fc-441b-8df7-87b6ead43bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae033de6-5cdd-45ef-b227-86ea488f3877",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9006b9-528a-41b2-81b4-c0cfff2b3222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "976e8ecf-b64c-4d7e-8c31-1e0c4304e160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dacc5d1f-c16d-4d69-b4f0-aa259037187c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5161ab0a-8112-470a-9a4b-21c40159e8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6bae30-0efe-4bb9-9cdd-f58d6030b648",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b245cc67-15b6-48a0-a2aa-756696e12061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "034b4608-44e3-4f99-b963-38b2bf932b7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a242c6-7752-4574-80de-ee6f5c0e073b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfead000-6c3a-45a4-a73f-8f33b7293098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ffa08f-d4e1-4c79-bbc1-80de4d180276",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72bf0e49-fee5-4359-bce8-978272954370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57136eac-260b-4479-b334-196e527628f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b344f76-8e09-441b-b1f0-c0aae370cf52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f67e565-db85-4d44-860c-92b62f131bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74fcd07a-0f0f-4ac0-b69e-7b08774ca476",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78a5857-d36b-44ff-b7c9-6fac2760c304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1826588a-d82c-48eb-8e53-18147060362e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc70f0e6-afa7-4371-a00a-ec812978f5fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a80c5434-b2b9-42e1-8d48-37b39bec482b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a47116-a91e-40c5-aa2d-02c71cbf078f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba38b9e0-ca06-4cea-ae7b-f4225fd5c11a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eebd81fc-6603-430a-9d63-960ade568364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0edd1d05-1590-4691-8e2f-fa3c1edd82b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd9cf811-8594-4ba1-9565-a4036e145ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a79f969-7b97-4248-a70d-1002b9d961c6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce27de81-9516-4fe1-8275-69c74ae31570",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "830ce8cc-3877-4edb-a94d-9555e0f3322f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "643658ea-a71a-466f-b8f4-c9b739bdcb5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a114175-745c-45d7-84ce-f7cbd328aeca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acae839-4a98-44ac-b59b-ba9d50cca581",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5834632b-5ebf-43c8-bfd9-9639c9aa194f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac377af6-5fdc-4ed0-b87b-03dc3cc7fcd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4261e46-83d8-4bae-b6ec-544d05e332e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b7a7eaf-56da-494a-85c2-7ed0d374c5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf3f4ce-33ff-4e4d-921d-9029d2a8a9f2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63dab3b3-4d96-4a77-9437-460935f4e432",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "373b0c4e-72a6-4301-afe0-536815d8b31e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a332ab4a-081f-4547-95d2-d62eba59a3f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "582ebee3-26ac-40cc-bbc4-483387a17ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6935048f-99f5-41f7-a3e9-9282454dcfb8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd20178b-f6d2-4bcf-a9ee-64c92640bcd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdc162e2-a75d-4cf2-8a31-942f9274c2b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f1eec7-a57b-4c3f-8faa-f07725ed8603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c3d0ae-171c-4b91-9ee6-37e01508e3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a3d18e-e5fe-4546-98a4-4a10abe13c12",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233a8827-c538-4660-9471-91c1fe23f828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99fcc1b-d4f6-4ad2-b25e-264a4b7c0eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6c72fc-c2d3-4262-b2eb-a5555a7761d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00c769c5-35c7-4195-9073-c972cb82e46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019dd6bf-5227-41ef-b5ed-26a00cb696bf",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892d6dc3-c7c1-434d-9ec8-51f7d8761230",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9066efb-e31d-4b72-85c7-78f705462309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b9eecc-fad2-41a6-a31b-0f220d5fec2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d67265-ac59-436b-a9a0-c98c93a3090e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2941e2-e04d-47be-b5f0-e18966498a5e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f30cb1-f13a-4a49-a064-6f0d4d6aee94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b5318b4-7cc3-40fe-a41f-01d8f752b392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b9bdbe-a7ca-493f-bf2e-6c48c7a0b220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a1a88b-2114-4a3a-a8f0-e0e357e6f3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8adf98-e2c3-417e-83ae-5e7a00675059",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35cee330-8e64-4ee6-bd1c-5b78d017d866",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a284c02e-94e5-4ac9-ae5f-16f14ca54ed7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5586a667-aad4-43d4-ad57-e66c43d32400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f0cd5fe-7453-4020-bee1-3d53c97abb23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb3c4bf-4eab-429c-a1e2-c40267e3324f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8891c38-5fe3-4b4e-a5a4-a1af08e7b3f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba1ae565-da01-4658-ae23-373648ab72b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebaa9c2-005d-42c9-a783-f908aca3bd48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7668935c-bfd9-4433-8112-e3ae444c9caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85899204-ad64-40d4-96fd-5804e0a3e262",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081f24e9-124b-456b-96e5-0f117dce3c19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "999f5501-b9cf-4a67-a9f4-26eec8b79032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abfe377-fa47-4cf4-b728-1b5ec3d8f631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e14d5313-d6b0-4995-b3cb-6e1d24a80a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0201c977-ac53-458c-8e9d-59c392c63f24",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83555b59-fcfa-46f1-a71e-5be92dd5aa39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5085e47c-f257-493e-9bc3-c5153edaec1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cfd9754-f6b7-4d3f-a066-7f3877acd347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4414162d-8ba7-4b08-8c01-c8250685546e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4222661-2307-43b8-92dd-4460ff0bb73a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac30741-fa3b-4e75-a682-4c8de9b71a8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2c8f02-416c-4820-867d-2df5ffcfc824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36eaabd3-a9fe-46d0-be36-1fb654a9f5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8844a23a-abf0-4aed-9753-f65ca49ef097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56fb2b78-c522-4d99-8ea9-09dfdb25663d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391d54e5-175f-4f46-9f0c-a34abcbf43bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eddb164d-7af7-45af-acec-1a8d69c2ccbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffc7e09-1f14-435e-a31b-04f21d370e2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37967829-01f0-44a9-a665-76a519294afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209cccdf-6ed6-42e9-b830-0e69c05650c8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a3473c-a832-4e62-b0df-32e3fc360e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85fbce33-d327-4bbc-9729-00fdce19d2b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5fbf0a-0de5-4ae3-b9ae-d5c9f7fe2f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8069badf-6d8a-432c-b27e-e9573eec6a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb742b4-5469-4dbb-9007-4d403fd143c0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5bc09d-bda5-477c-b402-38fe70528dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "349d8c30-480d-44cc-af65-d41b4413c87f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6790e909-48fe-4a5a-9a79-c90bff12e506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271f9c89-e303-4ada-8f3d-898ffd10be97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9c3e16-6d6a-4c68-8088-d3e31fd91c9a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4fad3bc-aa4b-4cbc-a524-3140f5c890fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d21a474a-cfbd-4ffb-98a8-15cfad83744d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "021e8c10-4cab-402e-8450-55a0ee07829f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34257a87-db98-4a76-9a43-8d59f92d77a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f8f387-e1ba-4b61-8d8c-04745bc06e5e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aeb10aa-a004-411c-806d-dfc6719485a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "940ba3ee-0b5a-427f-8575-c0ce133374b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab96812-531d-49e2-8445-556f4a67fd3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49d7c8ff-1e5f-4f02-a712-400c3205bd6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0add526-9c8d-4786-8625-a8cd915cee61",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7651aa69-96ce-4b7b-ac96-df6c924e1c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2855e67-3069-4fbb-b719-08213a2a7429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1fe4a0d-13d1-479c-94db-6a6692133dbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7492e2a7-eed3-4e3a-b196-3ff0fadf852c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42271f6-0349-4e67-b277-2cbbfd62971c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca2d71f-b692-40eb-ad19-de57aba71c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "224800eb-aeec-4126-a838-872184e03e8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87b5502-9597-44dc-af14-e997d7fd6076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f842b66-c5a1-4947-8969-69fca3d6792b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a5b8f0-bc84-4350-8295-1b165a901001",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fe7b77-4458-41dc-9081-f93750dfd66a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b744c0-5bcf-4a1a-85bc-ee465ca80476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90860f63-9546-4ee8-af75-5c6530e7e172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef1792a-2230-4616-b81c-d74708a3d884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c1546e-818a-4d33-a1e2-ce87022a6f59",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292a6671-5839-44d4-b9a3-d08479c94bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2511645f-6ae7-462a-a1ca-23c24cc2572c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c5bb2b-0318-4db0-bc87-1de3424c6aed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1272e1c2-2888-4602-ba68-6344587740b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7813c62c-dadb-42bb-86cd-dca6c2706bb4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c5b275-6d13-415e-be46-d4a1bb63bb34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb0b3105-528f-4e27-8d92-59c64eb349a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69420961-c12b-4107-8e3c-cb37cde7ff20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "573287fe-5b68-4978-a263-17b89f1a9c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca293fbb-470a-49fb-88d6-1a1cb654e006",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a63eac3-f1ed-4c78-82f7-aadf5131d068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1523adc-622c-4d2b-911c-2802ddfc1920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad44919-6c12-4dcc-84bf-8600bb73ed76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79bcd5f8-92a9-4f84-b70d-5f3f0a95062b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a5c902-2e16-4c45-a1d4-e0f8706b700d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c2051a-2322-4e73-b260-e266483b8145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "824ea1b6-c5a5-47e9-9a12-0e8465a2ad93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd23d2ef-29aa-4db2-95a1-5f5b23db432d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88e69d6-cb75-4bcf-b28c-daaa2ceff3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e041910-9dcd-4d40-a016-7f8c9c964ccc",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708f9070-3a2f-46c7-911a-9c855c1cdcde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22adf9c-119c-4d32-9c50-3affb2d97410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e57f49c-8462-47ec-80d3-7dcea3f0f8ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37423079-01c0-4522-a535-4d828536e724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113040d8-6ce1-4adf-b8ee-d3aacc33cf3a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06f439d-aa93-45b6-8302-fa9a59bed31a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3437f96-f581-4a8c-9004-c107467cb26e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11ed6da-dccd-4eb9-9779-d1b90edb9cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4602a9-5306-4651-ae95-e503dd7a2d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2c5e88-be7c-4320-bbcf-a8b664c90eef",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a37d421-eaa8-4877-9b4d-9da45a126def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c53e08b-2530-48e2-9b60-16c2978383f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a0f5b0-47b1-4ca0-ae2d-4bb4b833cee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07451c52-316f-43a6-8271-28950bd465b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12b51be-5510-4bf4-81da-fb1cbf9ab547",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9bfa50-c1a6-47bf-86ca-b039cf65b9b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "955b3df3-12a8-45c6-a0d1-54e29e998af0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a4f383-7a4a-435a-b819-b7d4adbf012f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97bd6601-547d-4f94-a6f9-658470951ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f477a3-d819-4bc4-ae14-c8d3d4f7a13c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097a101c-c5b0-4270-bca6-e6fc50c21472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7686ed7-03e8-4ce6-9104-3a7874cff195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c6d000-2988-4302-9079-35252f0239ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb445689-de38-4123-bb79-7cdaebfe07a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba80e97-79b5-42a4-b72d-8a72d6174279",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535b86b8-8186-4dfe-8c25-0b2114b18d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5573596b-0e3f-48b4-ab7d-a3e5b525b715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef119a4c-896e-41b9-be5d-4d0916755d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac9b294-efa9-414d-8922-153903872f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de4e065-5623-4240-baee-3bf2f2ce677d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c89bef-6971-4f4c-8ca8-c9537cfeb929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c23715f6-13e6-4717-8bd0-fa7c2095e4d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7993345c-c024-44b7-9443-6314b0f82ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b4fdc3c-6dd9-45fa-b0dd-6214b84ee035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65005d07-7789-4641-b6c3-b8dcc86cbb67",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97723687-b7fc-4765-998b-75670f69d0bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4005cf47-1d10-4a78-9f0d-e3f0995b7c13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ea1f6e-b71f-49c2-af55-b227452fdb25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468c9a53-5db6-4a69-9c87-82abad1b3453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43dd032-f084-4690-949f-ac9421e492a1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db57ec2-6980-489f-ac97-1de1ab69b52b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ca5595-f68d-45fb-980a-b8fe094347d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ca02dd-d9ce-466f-b512-0a008359544e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feca6bd0-60f1-4311-81d5-bdf33a1557f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0aecd60-02d0-4a47-8226-9a01d110de1e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1ff1b4-ed1d-4066-b3cb-40870f3400f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e144fa0-824e-4a51-96c9-bd1378bfd160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ccf9da2-dbcc-4731-9a18-5fe8f2c4b9c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f27fe0-e40b-4b2f-8875-530eb2bfa9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147e704d-f149-48e2-95c9-45052287a8ec",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8ba896-b43e-4a11-84ca-1d7bab868119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "296585de-3f21-4d1d-a6ce-a5ade5bda650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "569916d7-2fae-49a2-bb46-1ea99df45313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95322ea0-d3f4-4875-9a3b-9c030073ceb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82bc952d-72ec-4454-8ddc-af62d525857a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2053ff-94dd-4cc1-9527-2aba3cfae013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc4acee7-5419-4e21-aec8-592a61fe233b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88c718f-908b-4211-9147-e467eb0204a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3519de57-249c-4ec2-9431-357721a2daad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940752ed-174d-4b88-8201-1dd33dae2721",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7660b1d-6426-43b1-a9be-6d19aa8b9f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "339cef2a-1b0a-434a-a695-8dca91598be3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc61e3f-41fb-4660-a121-070484150f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "318ab6b2-4855-45ae-ab6e-1d31999992c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f86e19e-a15f-423c-8241-ac2ae7c61b70",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987feb3a-b322-4e5c-bb09-aa418ee47392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "853e6507-8300-452d-a68d-eb6376b08e4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18e436c-96c2-488c-8311-2e446bcc4a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c31fcb-5169-49db-b260-cdc02ed1309e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52202be5-ea9d-4029-8ebb-ff046c24961e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b65613-b1d4-4498-8cda-13fc20dd806f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64f17d1e-0c4b-4beb-9505-7fb0fbf554af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "619353ff-3cb6-477d-b7b4-7ffcad103e70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325cc128-a7fd-43ea-aff7-4d3c59b4aa40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91bbf66d-28d6-41cc-a64b-18dd33a21844",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918e3969-96b5-4dbc-9cbd-b233daa0ae7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d4071a-8683-44a1-bbf7-807c7aa7e0fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f6302c-28c0-42ee-a26c-c0b18219d992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c3c820-0c2c-4d01-9bce-50a08741c769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014ceed6-a183-4f2e-be0f-a1aac10f8068",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419bd58f-ab57-483d-9c77-09541aca85a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5adfea23-f404-4c68-997e-e9f908a8b945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc75343-1b16-464e-8efe-1a64a9ace999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63727855-5c34-4575-8aa7-19c6d5fdc6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7ba507-3e0b-46a9-8b2b-aed02e52b833",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe95945-e032-44cc-8016-033d9fbb4837",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd1d96a3-c609-43ff-9c4d-bca99c09d007"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b67fdb5-ff55-4704-9e8d-db1c7c7fb0c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57bf0275-67f1-47c8-8dc6-5736942edb25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217a09d3-22be-466b-b168-09a33376dcc5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8721a2b8-37c5-4a4f-ae0d-32c9fcc27ccb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a3a405e-29b7-4094-9d4d-484accb696d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bddea14-defa-4f38-ac56-00865905e363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f2225e-ec4e-4035-bad4-f777d760442b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ecbe153-07e2-42f1-82db-138e8dff98b3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e13b56-4604-48c8-ae93-f0d7e7c876e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "869dcb57-bc81-4d5f-8940-c38438b18fb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7214f2-1d4a-4831-9e41-bcc97f0dad49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c09dd325-c634-4bef-bead-be4b6969454b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fad44a6-d5de-429b-b2ee-2ae1e4c8c6b7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795be7e8-463f-4fc3-850e-5df172ebf709",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a70c6a8a-00ca-4151-9604-4b2ea36bcea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "317ecfa5-e4c2-4036-ac26-8e8207e46dbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c487301d-f1d2-4819-9fc9-25e979582290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63eabc97-d476-474f-81a1-33b06180e54d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402f1163-fce9-4a42-b14a-4f0edd9c67da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bca04dc9-b370-4fc9-aa32-5f5b2d43a33a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab58e21-2082-4e03-9481-63098b7556d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f404c850-53ec-47bb-91c6-f0c7ee7a251d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197f45ae-0f59-45b6-b922-aff85df733be",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915a8792-d43a-4acc-a0c5-0d8de82380db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51af2ac1-f171-4ab2-ad0a-8e7bef3cb671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53f754a-65bb-4c7f-b597-d53274725feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be1e8599-2a37-4ab9-a3b5-98c2c824bc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21f3aac-f3c6-4954-a0d3-8071f7c60f79",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7562387a-86cc-45ae-b88e-950961de760c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9972556b-2da0-4951-a12a-570e050c4cc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eaff4a8-a28e-4166-938e-90e41a22aa61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "452a580c-49e8-410d-ad64-09c0d10c0849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab5edde-63c4-41d1-b817-491e1dedc3fe",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a01b838-dbd0-41a4-b97f-966c85e0d024",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1cdcdaa-f50a-446c-a268-671f5240025b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45d655c-ea49-4069-ae6f-dd6d136d515f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "210692c3-d99d-4527-a78f-7d7df6c00677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81522fc9-34f8-468d-b6b4-93270b2c11f2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8adcaa-407b-4b95-a889-c661e9576d56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fadbdb9-e95d-4976-a586-5075b5be888d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9e175e-4969-4109-8f45-6a202f3ee429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53454c5a-739e-4361-8ac6-2c799456ad5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44344b87-0e7e-43d2-8951-a5a435f1aaf1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f30900-05b0-47a5-9c94-440b00f157ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59d7f1be-a428-4e31-96b9-4afe2a13589c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ba9453-1fd8-4b18-92ba-4824c950aafc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fffe6487-dc16-4650-8425-b1244e499d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78324250-a56c-4b4d-bd6e-8fbc5e3a4709",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6942fb4-5433-4741-b7df-907bb86f3183",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50f3677a-b0d5-4866-a985-796a9699a946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "544c2fc9-fcc8-414c-821b-c750ed98f4d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd55550b-5df9-416e-9c0f-bb8c142459d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae563417-919c-45f3-bd34-4d3517aa56ce",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0d1b88-8257-42a9-ac65-492278225075",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be50a8d7-04ae-4ada-9a0a-06de8da3ec92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae4fbd8-0ba1-4021-a534-4e64c5e507f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2504a28e-3c87-4c4f-9222-d7a24b046dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e96f82-310e-4384-9519-daf2e39268f0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a46929-806d-46d5-8367-ea826bc65ea3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee89c970-a053-4df5-bfdb-69cbad8aab24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "001940d4-c13d-4c9c-a0c4-5bb0f138c6eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d6f028-b8f4-4990-af2f-87b98b1751f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe83096-e0e7-4a67-ac1a-8ef77e8b9ab8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02552825-5d88-4cf7-8383-3ea7831cd959",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea32ae07-e98e-476c-b26f-73b02efc3a7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a1b77c-1eb0-445b-9456-2e2f10f1064c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4150e25-f7be-437b-8833-fad75208c562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5d87ee-040a-42c2-b689-42f4d03c5756",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a897356-a8b4-4092-b872-e1d3f4728bbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5cbd06e-229d-4146-adde-5b6eaf3ed5b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d543e9-7572-46e1-beaa-c28b86e75afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed843f0a-1fd6-45f5-ad9d-794c6c06bdf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3898d6-017a-483f-9024-79b456abc23d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9128cb6f-73c5-42ec-bf13-08f5d19b37f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bbb0b2e-383c-42f8-8133-276d15b36e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73af9f6f-360d-40a6-b1d3-e048c3383fd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d1facde-3e37-4a3d-9241-37bd5fd1a5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4741f6c-e165-41c7-82d9-7e86d4267ad0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017861fd-7bd8-43eb-aacc-7c236e30cd43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "527e1f9a-7a16-4e46-9fe9-0b4f41bc494a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae123f2e-177d-439d-aa3b-e10770d05838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0963c01e-2c2e-4942-9275-94c51c54b170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ecf87d-7cd3-48c3-949e-79424c6d6b18",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e2e891-ed74-4ad3-bded-ca36213e4f83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5265e96a-e88e-4d9c-bd8c-619eacce2f91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2d5369-7267-4359-88d8-72e1deabdddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "595cb5fa-20d8-451e-b1a0-a9d75e152483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e6143f-c6a5-48de-a024-35e73f891546",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc67363e-fc26-4e5a-8a86-c02401ab988b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57e1311c-5a4d-4129-a03b-93b89c9cb381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6559d354-b0d0-4ee2-9bcd-8f17548ce2f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42011ecf-6ab4-4e94-a428-a8d10fd8368a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20773a91-2055-4719-88d2-44bacc33a055",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731432ff-2797-4a8f-8e21-93e38b237593",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "038b7780-fbb1-41dc-9f96-591e4a1e95fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25baeb6-8fae-4fbf-9aed-05959f04675a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6de0dfd0-650c-454b-9e73-60e46aed21a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474c3ca8-0f66-4387-a04d-9176a6c18e6d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691d19d0-d39b-4174-a696-2c59573f276a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6c23da0-fbc8-4076-ad33-d451d0033e14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c228249f-508b-4fba-a96c-684fffb2eac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f3e8570-85e9-4bf3-85a4-94096f13aa46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed83bf9-7b25-4ba0-8da9-3ef8524afd4f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad6a08f-d7a8-43a5-8fa0-3e9c221fc1da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92af6f5b-2d30-4dd5-9578-5919b3f63b1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3add91d-f551-42dd-bdb6-9eeafb0473dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "688947ba-4f4b-44a1-89fe-94a99330f99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ab4a0b-6478-4229-b78a-82cf610d181e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf541e5-cefc-42b3-bec0-29eb68b6dc89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d18bfd1-7255-45be-b717-81d051f91c00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e995a4-ed0e-4ff7-b7f3-1a101b3d2cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cab734b8-44e8-46ba-960b-d8b82e57e6af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350d05c6-f405-4749-ace5-2dd1f68e86b6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8b5f4b-a2df-4dcc-83e6-4ac70673db77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d552ed3c-1ea7-4be3-bb6e-61b12a5efb2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06372ae8-fda8-4bb7-85cc-e7806b54df10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2746ea97-7fd2-4e09-9840-141d1319be6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a790eff3-0b61-4eee-82d5-4eefb60bb240",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43c25df-3824-4b2b-8761-53b70000dc9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faaeaf38-806f-4b3d-bdb1-ccb67978cab9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa5fbe9-2c96-43a3-991b-cc52229ea058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2813b4a-03ff-45f2-a9cc-61bec6082113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e0a5e4-a2b0-4fae-bbab-60b6edc7c0fc",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04113bc9-6e01-4240-b8ab-07d142c29a2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba40da1a-3dc5-42f4-9397-e571b2817c09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd199da-03ec-4713-be71-e9ea3f9fa46f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd01932-aeba-4bf8-ad2f-338326c47335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b094ea-cb9f-4a5b-bcbf-d972734bf2b2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d2abe9-4067-4dac-95be-1cbaef56294c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14fc43de-c55a-4a0c-b42b-92bb5452b63a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "489438e1-1bc7-4c7f-baed-9bd9c77a879d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f947c8d-cf8e-453c-9f11-13d3a46bac76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3662a9-851d-4109-80c5-8e97436c5afa",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39ddefd-6d9c-4fbc-ba30-15daa8a91ab5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "215871b0-1cc8-44c6-a7c5-191120630702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61f21d4-76cf-4543-a8bf-0513c82413f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1cd0963-83ab-47ff-ae79-9f9332842ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1be4a1-2bd7-465f-aa63-4e7c5947fb76",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc703643-d53a-428c-8b13-95092e2c0171",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fe96752-c5bd-4f3f-a09b-c2ec178fbeb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8dbf63-0e5d-4972-8602-7940e8647852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d917191-211d-4ee2-9915-441b3ec6b051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485a8be2-5751-45d7-ace9-5150a81232de",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d874e495-4acf-4470-a36c-204d682ebf53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9023d49-0d4b-486a-b9ef-90ad74c490d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b833a57-e6d4-4628-8b91-361562ff8b4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b76d43cd-9296-4b58-ac6c-4d89a27d72ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3da83e-af1a-4f45-a2b1-e78c5b5737dc",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa2efd0-0406-41c1-8a7f-0f88acbe5e24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17325d3b-5582-4d0d-bdc4-bf918dc1db01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9b142a-2039-427e-9d1e-1315fb271b72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a94dac7-849b-482c-8ccf-5aa860f716cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72ec681-5b1d-45b1-8611-d8642f437c85",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7accfd76-4952-4062-9f5b-f7f933aea063",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2a65318-c7e4-4fea-bc0b-dc8fe830aee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf2daab-16d0-4ab9-bcf3-19b01bde88d0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2772450f-cb9c-4310-87da-bcd14cd3ca87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82748b30-5767-4768-8b7a-59ae4c816711",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9395620c-af4a-4a30-824c-342e94758d4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cf54b54-4353-40e8-b912-5e6af3db75da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1e0942-e0c5-4309-932f-09fcf1eb2abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e19ea367-2ff6-4381-a93a-3ac0e9bce3ab"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ba02251-330b-4657-8823-5a5866bf55d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28fe62b2-d70b-41c7-b620-fc0f1172fe71"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "974fab03-b4bc-4634-accb-ac23ddf7c9ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "34be34f6-e4d2-4820-a26c-56181d096daa"
                    }
                  }
                ]
              },
              {
                "id": "a536730f-625b-47a2-b0b7-cb47b2a4ff58",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9853eb0a-5132-4b4b-bd09-e2830163ffb5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e617c49-605f-4c86-b024-b91bb953e1c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d463713a-2244-4258-a918-5993a5668221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea868bcb-8a76-4b27-9512-c3147139f182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a843ddb-9a2a-4668-b04f-26ab96db3904"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d07ad7f-e794-4160-967f-9ed7fbb6a715",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "839371d6-1a41-46fa-a75d-c2f3cd39e5e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6c93a83-77a1-49af-8eee-fdf1e3fcae3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bfa1898-a591-461f-9717-77a780f07294"
                    }
                  }
                ]
              },
              {
                "id": "551a7fbe-f132-494a-b5b9-6c3c7cbbe4a2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "28c5e8e3-6bed-421a-905a-d5bd73f8eb1c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0e5e19-92fa-4faa-8aec-08b73297a3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4e69f4c6-867c-44fe-9213-62e1080e9409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b50dc8-b834-42fc-ad7b-95f4a285ef1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd37ad4a-0326-4a8b-a995-5cd0eb91ba88"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9a94ced9-129b-4e22-93c9-5ce7435faf59",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ca336c96-b543-4664-aa45-5eb7d303bc8e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be9d5a9d-0e1d-4140-8e52-0899e86a5788",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6d62bbac-f582-483e-b3c6-cc4171a2488f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79645fca-394f-41f3-bdc3-a64152dd26f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a79ca201-c308-4262-9c21-4a40286fe1a5"
                    }
                  }
                ]
              },
              {
                "id": "d45558e0-eee1-4cb8-895b-80ac2b3fafb1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44338c4f-3e1e-45e2-8b4c-732181b04252",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3744621c-1b77-4a82-ad99-ed0285bfa8e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ed230d1-c4e9-4cb0-bf68-879dfc6a50a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48796718-8dfb-4a47-80cc-67c3eb4f3010"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "314ad75a-2129-4bcb-a280-a6f194e94a0f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ff429cfc-1e4e-45fa-8f73-b01acf70e87e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc0f692f-b5a2-49ac-9080-d69f1a11ee53",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ed0686d-f0c5-43be-806a-6c6f3a2608b5"
            }
          }
        ]
      },
      {
        "id": "478c6e17-c7f8-491e-9413-554ec122b905",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a1ab8d33-28ca-4f23-802b-097918ac7eed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2ac2f7fd-b3cd-4432-8d55-a53d13e6f37f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a4d5d31f-ddca-449f-a1b7-0b86eafb316e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba6852f-d288-4505-a4bf-8629ff8e6a38",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "be6cac36-cc1e-4907-bcba-5ac51800b2ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f647a81-3cec-4043-bb9e-4d4d5fafa830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3cb9dc94-b2fc-4754-9fe3-b3e271f61e8b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90f222be-fb07-4e5e-bd0e-0593c0c1bd0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ba1aed6-7127-4dd6-887c-ef853df38c44"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fadcb6e4-dc6a-4304-a402-2f753da9ce19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28d31f7c-0a00-4f94-826c-182f7a2aa7e3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ba35627-c8c7-40e9-9881-0fc6fc97fe94",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a5d16dbd-5bd7-4b63-a727-0e3c7aefc034"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f973b3c-52f9-411d-9e46-11abe0757e3c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a7934609-53bb-47cd-b859-c9aee1333d82"
            }
          }
        ]
      },
      {
        "id": "dba99590-7874-4b49-8bdd-262931547896",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "61928dec-e4cc-44c7-8c74-9f00c622de1e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dd29077a-e42a-4d71-b68f-771254f768b0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4b76597c-a367-4fc9-8b8c-775c196ff5c4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330f30b5-61a3-48e1-a791-eb08d03111d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4860fce-ea12-4f81-a88d-1b3ac88479de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3e69bb-3055-4944-9a69-8760f6ab8fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0684cee6-8927-4c1b-9757-ddce9f1d142d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2419f4c5-d55e-459e-9fd3-99a05e8f9331",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "220c1f6f-519b-4fe6-81bc-e69e838a8960"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "15c15878-fb43-4def-83a2-f2e28613fef3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a05bfbfd-a569-47a8-9ad0-7d28b5b150d6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f01c5d9b-99fa-4bec-91f0-703c76572fbf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d6f0ce6b-eac7-4cdd-8bd1-3d056f62476d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a894d21c-3b15-4437-b319-88bf1f2cb33c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56c94536-3915-445c-8fb5-d7bfec2180e5"
            }
          }
        ]
      },
      {
        "id": "33eb1961-3d65-435b-95c1-e508e36702e4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5c4080c6-f801-43f8-8f57-57be60322b3f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b257a30f-c2a9-4a29-9cfc-9c8776ac0c19",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e9a6f40-ad83-4368-8b2e-6d62dd1bb6d1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14726555-eda0-4422-8812-1e5ad1902346",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a27a8dd5-4ec2-442c-a60a-ed3709358804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "096f4cbb-b4b9-4998-8a0d-66254a3438f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4dee8e0e-c210-4518-ad5f-8567577558ae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03881e0f-2c4f-4665-b84d-55692b425f15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6299ae14-7639-40d7-b68c-ef2c9eeeede0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb8b5d6f-25f0-44ae-8b5e-d8147542b184",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea8f8972-239c-4264-b89b-ae5a60a53c03"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5cc4006-d918-454f-81d0-7717cb730410",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bc38e6ac-e6b9-42a2-8d4b-749f5bdb757b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99bc13d8-9d79-4827-a591-04cc065c9df5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "80f434af-2c22-49cc-86f2-073870791d1b"
            }
          }
        ]
      },
      {
        "id": "9f1930c3-a0a8-4a3d-8c5d-74c7847b17b9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3bdf154d-04e3-4500-a83f-44c1bc1b9ba1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "234e67ce-4b3d-42ab-a1a3-3dba9fcce10b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1777ce02-7ee6-4ff9-b651-04a3838633cf",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "716129cf-4f02-4d42-b84a-61723f0d3cd8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dbdf3a4a-c1f0-4a34-a5d9-1a6707f62f5b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 749.6111111111111,
      "responseMin": 7,
      "responseMax": 27770,
      "responseSd": 4101.1642287654295,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1728262076644,
      "completed": 1728262274114
    },
    "executions": [
      {
        "id": "ecdfa6aa-73d6-491e-9c7a-998745097b3d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a217787a-aa48-4e5b-82ac-42c664faa346",
          "httpRequestId": "862e95e3-992e-4833-961e-9c15a41fb623"
        },
        "item": {
          "id": "ecdfa6aa-73d6-491e-9c7a-998745097b3d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "25077a52-29f5-4f02-a52b-d99d5a9e01d2",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "00446ea2-24b3-49e2-9136-f3a899e94762",
        "cursor": {
          "ref": "75a0578b-c732-4be1-b61a-0a6ebc425832",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "929bf3fa-1124-435f-b5a7-5e89bdf62b3c"
        },
        "item": {
          "id": "00446ea2-24b3-49e2-9136-f3a899e94762",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "372e341c-44a0-4b6c-8968-aaa0d1abd4a6",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "4b0b95ec-a2f2-4a23-9f8e-3dcd121904f0",
        "cursor": {
          "ref": "c5734050-e395-412f-8117-deb7ef0905c4",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7f22611b-115a-4416-bd39-14135fff2f08"
        },
        "item": {
          "id": "4b0b95ec-a2f2-4a23-9f8e-3dcd121904f0",
          "name": "did_json"
        },
        "response": {
          "id": "5cb1b861-0956-432d-9c75-e37de5f5ec5e",
          "status": "OK",
          "code": 200,
          "responseTime": 280,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802d98f5-e8c4-4517-b639-37a91e7a3045",
        "cursor": {
          "ref": "8b6dd679-843d-45cc-90f6-660a2c875cfe",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ccb0d8f8-36ea-4f9f-b535-f04af084c681"
        },
        "item": {
          "id": "802d98f5-e8c4-4517-b639-37a91e7a3045",
          "name": "did:invalid"
        },
        "response": {
          "id": "23397c0b-a498-43d6-92f6-3a915f56de7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2388,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802d98f5-e8c4-4517-b639-37a91e7a3045",
        "cursor": {
          "ref": "8b6dd679-843d-45cc-90f6-660a2c875cfe",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ccb0d8f8-36ea-4f9f-b535-f04af084c681"
        },
        "item": {
          "id": "802d98f5-e8c4-4517-b639-37a91e7a3045",
          "name": "did:invalid"
        },
        "response": {
          "id": "23397c0b-a498-43d6-92f6-3a915f56de7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2388,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5007f72-f89e-4112-957a-e22aed2279cb",
        "cursor": {
          "ref": "ef8063cb-8f25-4255-a10a-6776b3835123",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "27df3d04-5b47-4869-8e3c-8aef989328c0"
        },
        "item": {
          "id": "e5007f72-f89e-4112-957a-e22aed2279cb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0b4a9fc6-3951-4f59-90bf-c088ef9fc49f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2711,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa3da65-1ee8-48ec-a71a-6f1358fde57d",
        "cursor": {
          "ref": "566827f5-cca4-4f4b-ac23-fba2335ed321",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4ebf62a6-02bd-43fc-980e-81c437b7eb8a"
        },
        "item": {
          "id": "0fa3da65-1ee8-48ec-a71a-6f1358fde57d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a94a7246-1246-4842-a1a6-4f13b0b44cf5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2303,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576aab8b-a10e-47eb-a49e-19932aeed3ff",
        "cursor": {
          "ref": "eca209da-ff3e-450d-a3d7-ef5e3aceaf32",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "cc1286cc-2a6e-445b-9372-db92dc8345bf"
        },
        "item": {
          "id": "576aab8b-a10e-47eb-a49e-19932aeed3ff",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "329c1f98-e07c-4d4a-8712-f9892d86ce51",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91974fa3-ee2f-4ed6-bd1b-5901129e8d7e",
        "cursor": {
          "ref": "4e64de36-59b8-4e71-a0ff-5d2da5bdbbe9",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "06228671-f4db-498b-a8b4-be73038b4043"
        },
        "item": {
          "id": "91974fa3-ee2f-4ed6-bd1b-5901129e8d7e",
          "name": "identifiers"
        },
        "response": {
          "id": "a4d09ab8-a0e6-4325-935e-407b741c6096",
          "status": "OK",
          "code": 200,
          "responseTime": 2470,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65fa4c64-7a88-465a-9269-5074d8cdbd4d",
        "cursor": {
          "ref": "16e7b080-6e9f-480c-86bf-faf20ed540c4",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "16f581d0-25cd-471d-a3a9-55ada0f2631d"
        },
        "item": {
          "id": "65fa4c64-7a88-465a-9269-5074d8cdbd4d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8b4fdbbb-3f8a-4403-ab92-1b185b66de85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb52a0c5-e1d2-41cc-9ece-b7c48864a7a4",
        "cursor": {
          "ref": "2c62fce7-5126-4175-82fa-216059a113ea",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d2ed971b-b032-4cc8-9007-30c82b12590a"
        },
        "item": {
          "id": "eb52a0c5-e1d2-41cc-9ece-b7c48864a7a4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "86cebcf6-8f25-42d4-819e-89d31c984bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d56b286-41fb-497f-ad67-d60149b06de7",
        "cursor": {
          "ref": "d059916a-086d-45ac-a1ba-9c7095a2f7e0",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f72d1462-aeed-4054-acca-838e446a3884"
        },
        "item": {
          "id": "4d56b286-41fb-497f-ad67-d60149b06de7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6600932f-ae10-4c82-a84c-f4ea00e6ac55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86cb11ad-ab2a-489a-8cdc-81e8ac3cad73",
        "cursor": {
          "ref": "e07651e2-28b2-407f-b5bc-7a4805e26b02",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "360b48ed-343f-4cd7-9d3b-f865f8d34c1b"
        },
        "item": {
          "id": "86cb11ad-ab2a-489a-8cdc-81e8ac3cad73",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "04288919-6063-4794-bad0-561010a76860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b401cc2d-b824-4e7c-a9e1-f83372169033",
        "cursor": {
          "ref": "16911b81-69e8-44f6-a18e-7f6c72955edc",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "fc989e04-d97e-43fe-aace-a11eff5a9539"
        },
        "item": {
          "id": "b401cc2d-b824-4e7c-a9e1-f83372169033",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "726d86fd-5e15-409f-9dba-1f6f7973d38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d823edf5-d27f-4dda-9361-38eb7fa137ef",
        "cursor": {
          "ref": "5cfd8a74-7291-4f9c-b3e8-65783e820b3a",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "24c36ccc-dfa9-423e-9012-cdaf64e4f49b"
        },
        "item": {
          "id": "d823edf5-d27f-4dda-9361-38eb7fa137ef",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d5b61c27-5335-4b79-a76e-9cad3832a633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71bffb2f-b1af-4e02-9bf8-f228977e394a",
        "cursor": {
          "ref": "ca0cc442-c6b1-4d3c-a046-d669c2317c51",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "121f0860-4f7d-4a3b-8827-4ba6a485104b"
        },
        "item": {
          "id": "71bffb2f-b1af-4e02-9bf8-f228977e394a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9b2d8dd8-e5ce-4ee0-8f7a-4915719e074d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa15ef0-d9e6-46d6-83c4-28319a73db55",
        "cursor": {
          "ref": "20babd88-0573-47af-9dd5-ec0deaeca5b7",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "643720bd-b5f0-4914-81b2-2e92dbf8c3a3"
        },
        "item": {
          "id": "3aa15ef0-d9e6-46d6-83c4-28319a73db55",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f6a4c2a3-e11d-418c-8c1e-49cf52753b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd949454-a457-4a92-a5b6-c63e577e8eea",
        "cursor": {
          "ref": "9bf9ab7b-092d-421b-9b38-f39f071718bc",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ca7287d0-e98c-472f-aa86-72870240002a"
        },
        "item": {
          "id": "cd949454-a457-4a92-a5b6-c63e577e8eea",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "15db951e-4bdb-446b-ab1f-7f2ac0b2acf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2e2f76-b6f1-44ea-abcb-792c0dc18630",
        "cursor": {
          "ref": "5f03ab51-f1a7-4c0c-b133-7d7dd9e372fc",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ff465155-b012-45aa-859d-bdcb3ae4109e"
        },
        "item": {
          "id": "ca2e2f76-b6f1-44ea-abcb-792c0dc18630",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4883171d-4de6-4351-918d-a1ac51cf38e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c2e447-1f32-4d0e-8dba-c10a6a861844",
        "cursor": {
          "ref": "3f882453-4d67-4bca-8ea3-8f21e830e5d7",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "cc4676a8-fdc0-475b-b2bb-6efbd088c181"
        },
        "item": {
          "id": "d8c2e447-1f32-4d0e-8dba-c10a6a861844",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1b8958c4-236d-4513-8c5b-88befcb317a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ef2ad7-bf36-4761-b438-d4d450034a0f",
        "cursor": {
          "ref": "b56ad458-c010-40c7-82e9-3299bb340887",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c1dce3c3-89de-418b-8206-958b5dea99b0"
        },
        "item": {
          "id": "c5ef2ad7-bf36-4761-b438-d4d450034a0f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f37b0963-0af3-4dee-977e-b4380c5d5b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3492a01-c0a2-43e5-95d3-b8f0e7ba7f46",
        "cursor": {
          "ref": "093e16dd-50ce-4a07-b6c1-ef1b68aa8046",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b2187d9a-7c50-4b60-bbee-a85754446646"
        },
        "item": {
          "id": "a3492a01-c0a2-43e5-95d3-b8f0e7ba7f46",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "04635aaf-a93e-484b-b96a-0cb937cffdd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86fd70e0-3af0-45c6-99f8-1bdbf3a6f2f1",
        "cursor": {
          "ref": "a67a3d0f-24f0-4189-8df2-a5619ef89440",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6437d9d0-86a2-4d81-9ec4-cf8c8616caa9"
        },
        "item": {
          "id": "86fd70e0-3af0-45c6-99f8-1bdbf3a6f2f1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4ac18ff9-e8db-47b4-bf41-52e9318df183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c07a236-de02-44e3-99c8-2e76663d7d66",
        "cursor": {
          "ref": "831b881a-9d55-4f68-b1c0-73b47d3055ba",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d55bdf39-921b-4e09-bd75-39a40b7b4297"
        },
        "item": {
          "id": "0c07a236-de02-44e3-99c8-2e76663d7d66",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3196e7f1-cc1f-43bc-a297-2c89d7c2c44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484fad6f-9bba-439b-84ff-bee117aeb7b6",
        "cursor": {
          "ref": "8b3afb84-347f-411f-a6ea-4b78aa189161",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b909944b-76db-4df4-a4cf-d7a0c14a17c0"
        },
        "item": {
          "id": "484fad6f-9bba-439b-84ff-bee117aeb7b6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "40aba86c-f3dd-4a22-8415-34f8d70188b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5920244-8813-4568-b90c-7b47120dd4ed",
        "cursor": {
          "ref": "c23ef2d4-fd23-44fc-b659-6f4e3f35308c",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4160af90-2fb5-4317-9e18-5d5361f5ff48"
        },
        "item": {
          "id": "c5920244-8813-4568-b90c-7b47120dd4ed",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ac262a66-0587-4495-9c4f-48be6f9c3040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a86064-7523-4ccf-b5b6-f8e4b879bd4a",
        "cursor": {
          "ref": "cb6309cd-a2f2-429d-9ebc-a47fa3b6362e",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "36399b48-e9ec-4790-8241-f0191a27cd82"
        },
        "item": {
          "id": "11a86064-7523-4ccf-b5b6-f8e4b879bd4a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "dbb54eb9-81c3-4e3a-9717-2d4873cd68fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d8f6c3-10a9-415a-94a2-ee0a5d5dda16",
        "cursor": {
          "ref": "9c1c1690-7b1f-454b-8c49-ce498da0351d",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "87e304cd-47a8-42fb-8339-1a03457de43e"
        },
        "item": {
          "id": "97d8f6c3-10a9-415a-94a2-ee0a5d5dda16",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "04fbce22-5158-4290-9c00-bd405fdaaecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6dc0b5-3209-43c4-8283-7f37c036b6c1",
        "cursor": {
          "ref": "b5fc60cc-db1b-4455-ba8b-3effa5bceac1",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c0e7d992-2246-471f-b448-1d711d927745"
        },
        "item": {
          "id": "ae6dc0b5-3209-43c4-8283-7f37c036b6c1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f3ade447-c486-4513-bab3-0f05ea81865b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0805df7-d1b6-470a-b1b4-eadabdc05a54",
        "cursor": {
          "ref": "92312eb1-5c7c-4603-a55a-a6247b809846",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4498551c-bd43-49b7-8a32-84654996ef6d"
        },
        "item": {
          "id": "c0805df7-d1b6-470a-b1b4-eadabdc05a54",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "cd3538bc-529b-41ae-868d-647b5a2f9232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8280ad69-26e2-4dd4-94d4-ad4cd7eef258",
        "cursor": {
          "ref": "2f6d6e10-8050-4d50-9bb9-216ca5d47a1a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "72a8441d-cba8-4a4a-a6d8-eca0ad810c8d"
        },
        "item": {
          "id": "8280ad69-26e2-4dd4-94d4-ad4cd7eef258",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e3ea48e5-f89e-4b78-a315-220709a66a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf06cb1-7009-45f0-818c-81e7bed43340",
        "cursor": {
          "ref": "aad7d510-6e0b-4d0f-a380-364cc77a7c4f",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9d4538a7-4a0e-493c-893c-fe051407b43b"
        },
        "item": {
          "id": "9cf06cb1-7009-45f0-818c-81e7bed43340",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "01d358b1-1064-41ba-9a8d-2fe1ee9fb0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7880e28-6cfc-4f87-af8b-16e0dfe8dfc1",
        "cursor": {
          "ref": "d467e947-6c90-4815-b543-f015ad8aa16d",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "69233daf-3d13-4b00-bf2f-9ab46fa914eb"
        },
        "item": {
          "id": "f7880e28-6cfc-4f87-af8b-16e0dfe8dfc1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6f69d242-13a6-4514-857d-d36a7ccf8b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cb48fd-1a72-49bb-b38a-dcedd0c66cca",
        "cursor": {
          "ref": "d138796d-411a-483c-8a68-82d9854cc6ff",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "68694d9c-189c-40b8-8cd7-d49038a8e726"
        },
        "item": {
          "id": "c3cb48fd-1a72-49bb-b38a-dcedd0c66cca",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7d066831-2a22-4f62-8071-771909223036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487c3df9-e810-4064-8a31-ed872f5ff1aa",
        "cursor": {
          "ref": "754c3fd3-6308-426a-aa8a-5c14e18364f5",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e13e0eb9-d70c-4a0f-acce-ae1c3af7279a"
        },
        "item": {
          "id": "487c3df9-e810-4064-8a31-ed872f5ff1aa",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "424586b5-d7da-4bcb-8b4e-f7ff042e40b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4a215f-689f-48a7-a861-30d79e66b7f9",
        "cursor": {
          "ref": "e1dfc681-8467-43df-a1ff-d9e8bf9b162f",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5572e5de-ccfa-41c1-826c-fecf0e55959f"
        },
        "item": {
          "id": "cf4a215f-689f-48a7-a861-30d79e66b7f9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ad63c591-e1b2-4bfa-a0ec-f7fc1c81e1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9975dd23-c087-4d4a-82ee-17286bcba168",
        "cursor": {
          "ref": "dfcf4cff-c1b8-4a34-8db4-7e5568c2c00e",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f6ec9645-c8e0-440e-a9b5-55fed99e0d58"
        },
        "item": {
          "id": "9975dd23-c087-4d4a-82ee-17286bcba168",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6ebafab7-98e5-4234-8fef-0ef59dde42d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361425c4-8620-41d3-bf60-bf9e709c078e",
        "cursor": {
          "ref": "2a457e2c-447e-4de8-b847-5f1a8defd170",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9741b315-d6a9-44b7-978a-e59a04d8265f"
        },
        "item": {
          "id": "361425c4-8620-41d3-bf60-bf9e709c078e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "007c1288-2107-4724-9690-cb09ee2d1713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68c6885-9242-49a4-b7fc-5efc70311e6f",
        "cursor": {
          "ref": "90357db5-d08a-4798-9c59-530de6946801",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fd88cbdf-1db0-4ba3-a22f-33b1f14654d7"
        },
        "item": {
          "id": "a68c6885-9242-49a4-b7fc-5efc70311e6f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d2a1277b-f7d4-4561-9a54-13c8c02e9d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84df5c84-2e29-4ffa-a4c0-b8c5ec9af6c8",
        "cursor": {
          "ref": "8f8952ec-cefd-4fe5-ab60-0d84e11b1537",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "01676fd1-dff0-4874-8d18-5e36ff72e2db"
        },
        "item": {
          "id": "84df5c84-2e29-4ffa-a4c0-b8c5ec9af6c8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "bc7dc1c6-74d4-49f3-a08c-31e74008f58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e86f43a-38f6-4d65-9966-b8c1f268ce7b",
        "cursor": {
          "ref": "e073c18a-0c76-4827-958e-11366300c8ff",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "01dec2c5-c1c7-4e61-92b9-39c8125c923a"
        },
        "item": {
          "id": "5e86f43a-38f6-4d65-9966-b8c1f268ce7b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9fddae99-79de-4fa8-85f3-9f599757c59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b253531a-2e47-4a31-b143-ef29c7dcfa5d",
        "cursor": {
          "ref": "3d90614c-ca27-4a31-ab32-a2b4f1e70d53",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8eed816e-5d4f-4f49-929f-286259a471a2"
        },
        "item": {
          "id": "b253531a-2e47-4a31-b143-ef29c7dcfa5d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "684944f2-9ff6-4cae-8d25-ef66162026ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a0bd3f-b93e-44bb-bc7a-f5b93db1f72b",
        "cursor": {
          "ref": "2f898f3e-393e-4f5c-ab00-dc294b9b1216",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d1545a8d-d4f8-4c57-954a-4b1f19fe318e"
        },
        "item": {
          "id": "44a0bd3f-b93e-44bb-bc7a-f5b93db1f72b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "360d0888-3ac1-478d-a8d8-92d44f373c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8932d09b-2bf1-4d86-a1d6-61f34dbef98b",
        "cursor": {
          "ref": "914ab13d-9dd9-4a74-a7a8-ff9169764ac3",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d0410604-8d28-4160-a344-9e20bd021771"
        },
        "item": {
          "id": "8932d09b-2bf1-4d86-a1d6-61f34dbef98b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "07e727af-b15e-4602-9c38-7f27647e3249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5652941b-93a5-494f-927e-2accea7989ea",
        "cursor": {
          "ref": "750d0889-5d8d-4ea9-83bd-b98754789e7a",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1af7460f-7932-4172-a0c9-161d875f03ea"
        },
        "item": {
          "id": "5652941b-93a5-494f-927e-2accea7989ea",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "60c9d4aa-61d8-430e-885b-d721f047010d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 34,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf6a9f6-6662-4056-8dae-000596534dc2",
        "cursor": {
          "ref": "d425255c-8d0c-4e7a-9331-a864c7279397",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0324fd01-91c3-4a1d-ae26-e47cae9b8166"
        },
        "item": {
          "id": "0cf6a9f6-6662-4056-8dae-000596534dc2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "314fdbde-672b-4c5c-9e3b-f4410b322e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8392fcc9-000f-4576-826b-eba7a80cf9a9",
        "cursor": {
          "ref": "e82bc188-3d2b-400d-85ec-0deda8e1ceaf",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "76d9ebd9-7c48-4c25-9fec-24e4656bbaf9"
        },
        "item": {
          "id": "8392fcc9-000f-4576-826b-eba7a80cf9a9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "fcf00af3-fb2c-421d-8cfa-522e0a782dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852442c0-75f4-4f6b-af07-de710f17f6b5",
        "cursor": {
          "ref": "dc450cde-2e33-419e-97b9-940d5e408b06",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7534738a-9589-48e8-ae23-7ff060eb543c"
        },
        "item": {
          "id": "852442c0-75f4-4f6b-af07-de710f17f6b5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e3b6fca5-4d8c-4805-b797-6a3da2ad4c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b2cfcb-74e1-4277-839c-83d282615548",
        "cursor": {
          "ref": "23d921ad-a243-4ed3-8575-69e2ddc65eef",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8b8854f9-6393-4f31-8217-b139f3e8d042"
        },
        "item": {
          "id": "a2b2cfcb-74e1-4277-839c-83d282615548",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bca8d355-f380-43e0-a735-5ef472160971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549583c6-cae9-4f5c-b51c-9dca9406b6d3",
        "cursor": {
          "ref": "5af1c58a-0ec5-4791-8595-260293a9c96d",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f47d5f39-0d94-4021-9768-aff9e3ad3ff5"
        },
        "item": {
          "id": "549583c6-cae9-4f5c-b51c-9dca9406b6d3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "87c2bb82-8482-4c7a-8564-6cf86618497f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb63d183-79ce-4319-85e2-f58002dba24e",
        "cursor": {
          "ref": "2ba6e33f-eecf-4573-b86f-a8915102d75d",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7ad295e3-d69c-434e-ad5f-bc578ce572bf"
        },
        "item": {
          "id": "fb63d183-79ce-4319-85e2-f58002dba24e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e3383480-7147-49ef-8afa-5cd866add20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954141d2-15f2-4969-ad3c-f57085771d3b",
        "cursor": {
          "ref": "9b7366b7-551a-406f-b6a8-efa723ad2c57",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "fb27c0c1-42db-49ba-868f-25d825adedd4"
        },
        "item": {
          "id": "954141d2-15f2-4969-ad3c-f57085771d3b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "70b14685-ee3b-41d6-906c-4e206b39e0c6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 33,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba01a8b-0ddd-4617-b3d4-edbce7caa5b2",
        "cursor": {
          "ref": "7d00a20c-14f5-4a5b-9e1e-1f6323131cf0",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "42520a41-f070-42e8-8086-2315b0341be5"
        },
        "item": {
          "id": "bba01a8b-0ddd-4617-b3d4-edbce7caa5b2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5a2e45e4-9acb-4ee1-86e4-f3b403f9296b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4819d804-a866-454d-ac3f-35df0b6d36cd",
        "cursor": {
          "ref": "5a0610ab-94a9-4b4e-9038-df3777720c2a",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "78ac46a3-2985-49bc-99c7-a550879659a8"
        },
        "item": {
          "id": "4819d804-a866-454d-ac3f-35df0b6d36cd",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a225921f-5661-4927-8db9-04aa34a06424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76dd2e7-7863-424e-88d2-20ae3987401d",
        "cursor": {
          "ref": "1a76def4-eef8-41ec-bfd0-c30b63d51857",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "56fdaac0-641a-4c76-80f7-405d6e938cc4"
        },
        "item": {
          "id": "e76dd2e7-7863-424e-88d2-20ae3987401d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "fa4d1828-ed5a-4109-8f1c-e578e4a536f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299d2f44-0a0a-4a69-8bf8-02295076ea8f",
        "cursor": {
          "ref": "d4ae7b28-4daf-4124-b5d9-7efe2bb0707d",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d8c68fa6-60c7-47ba-ba80-10c5ea649e1b"
        },
        "item": {
          "id": "299d2f44-0a0a-4a69-8bf8-02295076ea8f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4979ee3a-fab4-43ca-b657-94c5196a2541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e651758-a910-4d8b-ab47-22ab0f7d2d8c",
        "cursor": {
          "ref": "07923f87-267a-479b-b82a-c2a170c2f382",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1ea33446-00f0-4d02-af3d-b56086d22ff0"
        },
        "item": {
          "id": "0e651758-a910-4d8b-ab47-22ab0f7d2d8c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8a4fc57b-560f-45bd-af73-50437ff4e1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27656a7c-546e-456b-8209-c814d509e695",
        "cursor": {
          "ref": "6344b033-1dd1-47fe-9282-7e2a34c9c638",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ea092eac-6649-4d4e-ad89-f45cfed25b51"
        },
        "item": {
          "id": "27656a7c-546e-456b-8209-c814d509e695",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "dae0fd45-f40b-4aea-be33-9cb14ba85090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978cdd7e-2fca-4f46-862c-b48f9ea10efd",
        "cursor": {
          "ref": "7fd36d5b-1889-4246-b89f-c0c581feb97d",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2a2a034d-c9e4-4d67-b5e7-ae12db88b247"
        },
        "item": {
          "id": "978cdd7e-2fca-4f46-862c-b48f9ea10efd",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1eb1bde8-87a8-4271-882d-2fce2899023d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf9fb3a-e931-4fcb-b58d-a24136dbb49d",
        "cursor": {
          "ref": "87f86733-295e-44a1-b009-d13d787b2e3c",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "613f293c-8538-4970-816e-16a7b628de1c"
        },
        "item": {
          "id": "dcf9fb3a-e931-4fcb-b58d-a24136dbb49d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4a57636e-70b1-4005-a61e-ae4474ee6b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fb0cf1-3d02-47cc-bd92-92575b89c675",
        "cursor": {
          "ref": "36405b7c-4c22-4830-b126-d2b18e1b9012",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "aa335f64-2034-48cf-b956-ce26eb2d8989"
        },
        "item": {
          "id": "88fb0cf1-3d02-47cc-bd92-92575b89c675",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4a3065b6-928a-484a-b2e7-3a417e80dc6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb9a4b4-4bda-494b-93dc-8cf97138aade",
        "cursor": {
          "ref": "50a5edba-d6eb-404b-887d-8f1c53d80975",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "09a2e318-99fa-439b-a30f-65cdb6937cf5"
        },
        "item": {
          "id": "dcb9a4b4-4bda-494b-93dc-8cf97138aade",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5bfe310c-f46e-4136-ae0f-d04362d8ccac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489d1bf0-5a20-4409-974a-194dfd0b2d17",
        "cursor": {
          "ref": "34bfce1e-454e-4a5a-9bfa-c1c25f93c29b",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2e6a59f7-d58f-42aa-803e-99ccbe716c38"
        },
        "item": {
          "id": "489d1bf0-5a20-4409-974a-194dfd0b2d17",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "95fd4702-9e8d-49f8-bcd8-94a4c1078b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09de0761-0a33-45e7-87a2-bb7a2a7cf6f2",
        "cursor": {
          "ref": "ede9bf58-3714-4c54-b722-67419ecf726c",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b683702f-49d4-4e16-9baf-0a9505f74145"
        },
        "item": {
          "id": "09de0761-0a33-45e7-87a2-bb7a2a7cf6f2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "00abd746-3c27-44e3-8dac-06a7c1218710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de90f6dd-9472-4f9e-b8a9-b07017347c3e",
        "cursor": {
          "ref": "19ca8242-ee9a-44ed-9335-1a3ec87e7e56",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3653e6a2-09f2-491e-a34d-ae33827f0080"
        },
        "item": {
          "id": "de90f6dd-9472-4f9e-b8a9-b07017347c3e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ef8d6bb7-1871-49ab-ae62-8627257e749b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ea6d94-4cf0-4c95-a443-60263a510276",
        "cursor": {
          "ref": "11ae6c18-94ba-4c30-b713-f0295c47c67c",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a8731350-e948-47b4-bcfd-2b6ea20ad328"
        },
        "item": {
          "id": "33ea6d94-4cf0-4c95-a443-60263a510276",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6bbad97d-40ba-4323-a0dc-f29368e55164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8b5b08-1481-4b41-b41f-9265181c1d36",
        "cursor": {
          "ref": "d910aa7c-9163-4603-882b-0c992dd82869",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1ce17105-9f5e-45f2-875c-1beb152cf042"
        },
        "item": {
          "id": "dd8b5b08-1481-4b41-b41f-9265181c1d36",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5439d36e-e233-406d-a551-41ed081693fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b829617e-5a96-4da1-b45a-96ee05dc6c36",
        "cursor": {
          "ref": "105146b3-466d-4b01-9e69-b2a9441e173f",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ec38ff7f-3d72-43d4-955c-fa0b37be8946"
        },
        "item": {
          "id": "b829617e-5a96-4da1-b45a-96ee05dc6c36",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1fd6fef9-19f4-47ee-8dc9-da8566dad2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f4f0b5-9b6d-465c-9c80-95b4275d34b8",
        "cursor": {
          "ref": "b42e6716-4c10-47a7-891b-14787c672b3d",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "64b9b197-f8a0-4e35-becb-70a89795a507"
        },
        "item": {
          "id": "b3f4f0b5-9b6d-465c-9c80-95b4275d34b8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3f2ff1fc-2a99-42a6-b577-218ce1a67314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f7674b-d3e3-405a-ab4c-b48fd0e78d8f",
        "cursor": {
          "ref": "9594652e-ef1d-4a6b-8e17-f91580324d9a",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e495bef8-6730-4940-8846-a36b7c69d6d9"
        },
        "item": {
          "id": "62f7674b-d3e3-405a-ab4c-b48fd0e78d8f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4f7229eb-00ca-4357-89ff-0227b3d1f0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452f7eea-2a9f-4865-bd2d-9ef05c3347ff",
        "cursor": {
          "ref": "440073af-c737-4360-b3ed-e0d641eeb98f",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "71799a1f-cf01-46f7-bdc3-4da3157b09c5"
        },
        "item": {
          "id": "452f7eea-2a9f-4865-bd2d-9ef05c3347ff",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "15cbf5d3-8881-4a12-a52e-db145c83fc8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2681539a-2768-4639-b4f5-09197c47ede9",
        "cursor": {
          "ref": "bef2d8b7-462c-4c91-810a-714c0fb1e2eb",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7733e0bb-1c17-444d-992b-2e443761f815"
        },
        "item": {
          "id": "2681539a-2768-4639-b4f5-09197c47ede9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6849cdef-1d22-4a55-8c06-942f7bd9dfbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b81ff8-6baa-482b-a67f-8244c9a7be54",
        "cursor": {
          "ref": "b0184d4e-a55e-4663-900a-0f4ba2ed9114",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "517624d5-eb50-4985-b2fc-71196da87309"
        },
        "item": {
          "id": "04b81ff8-6baa-482b-a67f-8244c9a7be54",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "cc60c9ec-dea6-4eeb-90fa-eb34de450a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ad571f-ebcb-477b-b7bb-b1669ff6abee",
        "cursor": {
          "ref": "7c78be24-14a6-48e3-b036-1132fc6f84fa",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "71373a8c-41f3-42ce-a792-2e62dcfce01f"
        },
        "item": {
          "id": "11ad571f-ebcb-477b-b7bb-b1669ff6abee",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a421450b-c194-49a4-b5d9-6a5a407d8137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678d27f7-c85f-4568-8399-761d0081b61e",
        "cursor": {
          "ref": "bdb0a272-e9d6-40c6-a1df-9d4f78c6d5bd",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "977253b5-47d6-44d3-b6f9-e6db95c025de"
        },
        "item": {
          "id": "678d27f7-c85f-4568-8399-761d0081b61e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "66379b35-205e-461c-a772-028ae306acc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd39f35-bf83-4819-83d5-41da093064f5",
        "cursor": {
          "ref": "14572777-8d03-4855-8893-ddc6c92b2ab0",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2d1f1a6d-f35c-4205-b82a-e349dac973be"
        },
        "item": {
          "id": "1bd39f35-bf83-4819-83d5-41da093064f5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "015bc0df-8f8d-4ac7-8e10-d859a6a1313a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567f9482-78f1-4da7-8575-f2e6d58724dc",
        "cursor": {
          "ref": "5fd14b5b-682f-43f5-ad18-3d1235152b9e",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "40638145-8ce4-4218-9739-0bb0be1294d4"
        },
        "item": {
          "id": "567f9482-78f1-4da7-8575-f2e6d58724dc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "92efc7d8-43c5-4fc5-8bb4-50092eecd923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e707799f-2514-4783-a496-bd9ce2661069",
        "cursor": {
          "ref": "069ecd11-4077-4840-8a2c-50d0da30d7ca",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2de65df6-9162-43c1-a576-940b4cd2e8fc"
        },
        "item": {
          "id": "e707799f-2514-4783-a496-bd9ce2661069",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "04f5053f-6fc0-4215-9000-0e5fad20059a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd48472-f92b-4d70-830d-510f58dee99b",
        "cursor": {
          "ref": "6cd1900a-f2aa-4b56-8819-9c475ab3f1c5",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "21b3ddbe-cd1d-4fd3-9b6a-0d051019a52b"
        },
        "item": {
          "id": "efd48472-f92b-4d70-830d-510f58dee99b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4dcd0efc-dc0d-4761-a75e-0539f4782c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622abe84-767a-4067-9c75-52f5a68052cb",
        "cursor": {
          "ref": "6f623431-b6c5-412d-9de1-3326ddaf0911",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b7aafc2f-e3c4-4053-a08e-afb61620fb69"
        },
        "item": {
          "id": "622abe84-767a-4067-9c75-52f5a68052cb",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9cc69a25-ef91-4ad8-97c0-396c093c768c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7febcb7e-cbd6-45f3-9039-1d842f2cb606",
        "cursor": {
          "ref": "8b980893-f3cd-406a-84cc-f133cf1b7f57",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "90c9daf8-b866-44d8-88df-6cc016a02344"
        },
        "item": {
          "id": "7febcb7e-cbd6-45f3-9039-1d842f2cb606",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a396783c-d00f-42c2-a268-9bebd31e55cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8de88be-d65a-40d9-933c-10e1b64c967e",
        "cursor": {
          "ref": "0868e672-41d5-4c4d-a4d2-233090352c1f",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0e372561-4c99-4c99-8bfc-87e6fea999ad"
        },
        "item": {
          "id": "b8de88be-d65a-40d9-933c-10e1b64c967e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5cfd91f3-209a-4591-be88-45b8adde0783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3eb57a1-8ece-47e2-adc2-37066084cd2f",
        "cursor": {
          "ref": "dea68f59-a66a-42b8-a9a8-af6748c2e920",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "eb60ec47-739d-43c8-a9ff-484e19955cab"
        },
        "item": {
          "id": "e3eb57a1-8ece-47e2-adc2-37066084cd2f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "382d679c-0d62-417a-8362-86c7b7bb6531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f24bd2-7491-42d6-834b-bb79f1aeef92",
        "cursor": {
          "ref": "1ed55ec9-e5df-4039-a04b-71ea92d54159",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "715d3ed6-be48-43b9-b8c3-4747d0aee011"
        },
        "item": {
          "id": "15f24bd2-7491-42d6-834b-bb79f1aeef92",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "82792842-9c68-41df-ae27-5f05bee958d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97062e21-bf70-426d-9f65-cc12ff64a4fe",
        "cursor": {
          "ref": "7c748fb8-8f87-44ba-a584-d59f47e3f289",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "efd40565-85eb-4266-860f-40a2c3b98f7f"
        },
        "item": {
          "id": "97062e21-bf70-426d-9f65-cc12ff64a4fe",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "54c1e0d8-71b4-4489-83fe-b87acd17073f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304695ea-14e6-4bf5-b95f-07dffa5d227e",
        "cursor": {
          "ref": "437a4edf-7bcf-4062-aee7-ad770a0b9469",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "45a4ccbd-f020-4c80-a1d4-5ab2acdbf2ce"
        },
        "item": {
          "id": "304695ea-14e6-4bf5-b95f-07dffa5d227e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3b9d0837-b2d8-4771-882e-79e7af5f16bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd823b0f-64ff-4c98-a495-4ad4e997b5b3",
        "cursor": {
          "ref": "a95d438c-df93-4d6f-8aed-a351c7da1f01",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8fc9d275-2047-44ed-b5b0-9a285e7069c5"
        },
        "item": {
          "id": "cd823b0f-64ff-4c98-a495-4ad4e997b5b3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ebd82380-b2b7-4c8d-b03b-bf4001837c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373652f9-193b-4d77-9168-ace6e51393e3",
        "cursor": {
          "ref": "d26e1773-d791-4891-8df3-80341bbf912c",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "96575247-b44c-4499-936e-2f09f016250e"
        },
        "item": {
          "id": "373652f9-193b-4d77-9168-ace6e51393e3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3d1d491c-6b84-40cf-98c3-310dcd03c66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658ecb37-a771-49e7-88fa-612dc99315f3",
        "cursor": {
          "ref": "ad508508-b26f-4559-b531-6f5830533b51",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "bb160895-b610-47cd-8246-d64a23bf21e3"
        },
        "item": {
          "id": "658ecb37-a771-49e7-88fa-612dc99315f3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ec2bdc77-bdf7-459d-9773-87547a48d258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0adf553d-9ddf-4279-a0fd-73ced7dd3b47",
        "cursor": {
          "ref": "20219124-f8f8-4ef6-900c-efc7a707ab39",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d0552fd6-ecb2-476f-b6a5-22ddcf3b2a41"
        },
        "item": {
          "id": "0adf553d-9ddf-4279-a0fd-73ced7dd3b47",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "59e67b47-bbc5-460a-ba72-8aa2b0ce4525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455af769-ecff-482e-9e70-a21024453763",
        "cursor": {
          "ref": "147743b1-621d-4ffc-be67-d83e10a71527",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "dfe330d7-ac97-4253-9e16-eaac55958f77"
        },
        "item": {
          "id": "455af769-ecff-482e-9e70-a21024453763",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8ed6b227-9b64-451e-ae9a-382e14bb4b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1011390d-5fcb-4521-8185-e4680295e230",
        "cursor": {
          "ref": "6801a351-0a85-4ba6-bf70-6960ab6ede15",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e97fe1cb-4b07-4cdd-b13b-2a61a9fc2329"
        },
        "item": {
          "id": "1011390d-5fcb-4521-8185-e4680295e230",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a8024251-38df-414a-b793-4dcafd81d91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53ddff5-9a26-4166-8377-5d1ea0c73f49",
        "cursor": {
          "ref": "d34f3bcd-f17b-43fe-8ec4-0565e835f1a1",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1a38feb3-6ab3-4045-b84f-2b19723ad713"
        },
        "item": {
          "id": "f53ddff5-9a26-4166-8377-5d1ea0c73f49",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ddffdb2e-8e1d-4615-b0ef-4072dd08237c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cda948-adc3-4506-ad24-904317bd2e81",
        "cursor": {
          "ref": "fc9bdcd9-d9cd-44d8-8911-309d20d540eb",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "dac7e79e-0c30-4064-8647-12e42c02b7c3"
        },
        "item": {
          "id": "91cda948-adc3-4506-ad24-904317bd2e81",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "04e9b78b-8cfb-4c76-8229-641e33ec3797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d641d7-7a07-42fe-92cb-b2844b29303e",
        "cursor": {
          "ref": "508ea130-3d24-41d9-8fd2-b884a3111a2d",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ee960cd6-496e-429f-8862-01f326cf09ee"
        },
        "item": {
          "id": "22d641d7-7a07-42fe-92cb-b2844b29303e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f1dca72e-6b8c-46fe-b801-715ef63ceb5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b056b4d6-d473-4479-bb1b-cf5e66ffd6e6",
        "cursor": {
          "ref": "0fd91102-f7af-4247-af47-4d8caf732b1b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2e5114b0-2a41-44bc-9397-6c063c2b5315"
        },
        "item": {
          "id": "b056b4d6-d473-4479-bb1b-cf5e66ffd6e6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c0600cdc-dde1-4617-bee4-09a6eb629bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7581dc3a-9e87-4e2a-9304-03a85401661c",
        "cursor": {
          "ref": "7fd6620e-4226-4e23-ab71-bd007aa0a72d",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "26390e8f-374e-4150-ac12-0b48d6645c78"
        },
        "item": {
          "id": "7581dc3a-9e87-4e2a-9304-03a85401661c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ccd30e02-6dbe-4c6e-b009-bedcde4cceb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a153f83d-2fe5-4029-a5f9-9ac547315c30",
        "cursor": {
          "ref": "d971e2c9-a26d-4bff-9de3-20f6dcc94fc3",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b70a558a-7e3b-405d-9567-a04ba0bd1d24"
        },
        "item": {
          "id": "a153f83d-2fe5-4029-a5f9-9ac547315c30",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2bf0ee98-c90b-4cc6-aba9-1b0924010cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d79a2d4-6749-4f73-8aa1-e83add4fefc5",
        "cursor": {
          "ref": "266f2903-96ea-460d-9c3f-0a499f67836d",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "95980fb7-fb85-4448-ac5c-f3338cdaee15"
        },
        "item": {
          "id": "1d79a2d4-6749-4f73-8aa1-e83add4fefc5",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "32c3f969-0a55-4ebb-b085-4f06c8c107cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb92396-71c4-4ea8-81b5-cef051a16067",
        "cursor": {
          "ref": "c0a8da9f-6aa1-45df-b0ef-72d0938b364e",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "41357aec-73d8-4d25-a51a-e154905ccfca"
        },
        "item": {
          "id": "0fb92396-71c4-4ea8-81b5-cef051a16067",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "75ee0002-4df1-42cc-a23a-9b8baae1c5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b43a99-6db1-448c-b038-f93340070417",
        "cursor": {
          "ref": "90d7eb69-532a-4994-ab4f-6e51921a5114",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "eaadd05a-d084-431e-8c4b-a943da0628ec"
        },
        "item": {
          "id": "09b43a99-6db1-448c-b038-f93340070417",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "177f9e3d-566a-4777-833b-5cc5c0b080a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116fb59f-7bd7-4a45-b57c-9ee1a10a5978",
        "cursor": {
          "ref": "91d61e99-3cf5-403c-84df-f68853df9edd",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7c6cae5f-509f-4ce0-b2a2-5397ecb498ff"
        },
        "item": {
          "id": "116fb59f-7bd7-4a45-b57c-9ee1a10a5978",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6173331c-c31e-40d1-8316-dfba2d05800b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb948b1-68e9-4692-8cb0-2f5ba12d41be",
        "cursor": {
          "ref": "499ad9a8-b353-4cdd-946b-7ffa8c687a7c",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f616a069-7e39-4a8b-891b-6211ba2b24fe"
        },
        "item": {
          "id": "fbb948b1-68e9-4692-8cb0-2f5ba12d41be",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1ce32e80-08e8-4b82-b885-a29b1cd78905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "aa6be109-5311-42df-826f-17c42cb23f89",
        "cursor": {
          "ref": "df0cdbbf-39c3-4d50-a28b-43c4de21d095",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4ac195a4-dd8e-4890-98a7-7d8e595a5493"
        },
        "item": {
          "id": "aa6be109-5311-42df-826f-17c42cb23f89",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7b263de9-7dba-49ed-b0e6-f4fbefdbaf52",
          "status": "Created",
          "code": 201,
          "responseTime": 27770,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53bb23c-a149-4870-864b-dd4201963fcb",
        "cursor": {
          "ref": "1e9e27e4-1804-453f-8c4a-2bd38ecc79e7",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ffc399d0-d4cc-4300-9367-251c4ec2f76a"
        },
        "item": {
          "id": "b53bb23c-a149-4870-864b-dd4201963fcb",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "664862ad-539d-4a83-9b16-2d54695f9f1e",
          "status": "Created",
          "code": 201,
          "responseTime": 25921,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2559510e-3354-4ac1-bc6f-27ce390efce3",
        "cursor": {
          "ref": "ca6534d0-184f-445f-b23d-32f8ec06095d",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a24ae125-9a5e-425d-9771-6a9cacd3a0a4"
        },
        "item": {
          "id": "2559510e-3354-4ac1-bc6f-27ce390efce3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7f04486b-1747-4efd-a202-af15545177b7",
          "status": "Created",
          "code": 201,
          "responseTime": 26088,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "26347344-dae0-44b3-ae88-1384543f565a",
        "cursor": {
          "ref": "d5f1928c-0112-47e7-aeae-03243f1732c7",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f9eef641-2efe-4043-882b-87a7337d6d91"
        },
        "item": {
          "id": "26347344-dae0-44b3-ae88-1384543f565a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "703ac4a8-11e6-4519-8263-bc1f175755b7",
          "status": "Created",
          "code": 201,
          "responseTime": 27414,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b7a0b5-70ef-45fc-8589-817a30f6584e",
        "cursor": {
          "ref": "ebacbf2e-e8d6-495b-90fa-3251ffe2c279",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d9d8b5f0-476f-495e-a5ed-6961628f27ad"
        },
        "item": {
          "id": "87b7a0b5-70ef-45fc-8589-817a30f6584e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9ae1be0f-0a37-43f5-a888-f0c929915e18",
          "status": "Created",
          "code": 201,
          "responseTime": 26808,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-10-07T00:50:28Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-10-07T00:50:28Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "1f6d6966-6912-49a7-aad8-e131ff8d1560",
        "cursor": {
          "ref": "74769211-674c-4042-9d17-2f0585b6922d",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1bf27867-b1a1-499e-a605-b97af08559ef"
        },
        "item": {
          "id": "1f6d6966-6912-49a7-aad8-e131ff8d1560",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d5d7515f-6848-4304-b812-d897144fb237",
          "status": "Created",
          "code": 201,
          "responseTime": 27015,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcff0fd7-3a29-4c2a-815c-e0bbcb1afb97",
        "cursor": {
          "ref": "35893413-006d-4f82-a88c-cf0a91b17e19",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2e4514d3-dcfc-4211-bdbe-7a5c8c88d365"
        },
        "item": {
          "id": "fcff0fd7-3a29-4c2a-815c-e0bbcb1afb97",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a1bbcd0e-214d-4d2b-9f76-8db7273a6f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52dbf84-b7a0-44f4-8c69-0f26dd2995ff",
        "cursor": {
          "ref": "ab93a3d8-80c1-4c81-9356-1769135aaf55",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "cecdeffd-ab49-4514-b860-b216fc86c983"
        },
        "item": {
          "id": "b52dbf84-b7a0-44f4-8c69-0f26dd2995ff",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3492138e-44a2-4f9f-88b9-f95fa504f0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e8a2e3-5e0a-409a-a1af-33aa74dfbd59",
        "cursor": {
          "ref": "b7384e07-a205-4950-97fe-f6fbf1908367",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c8a4501f-02b3-4f2f-899c-f92f4a4f1e89"
        },
        "item": {
          "id": "56e8a2e3-5e0a-409a-a1af-33aa74dfbd59",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ac70573a-8f53-4335-8eba-08558abd9a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0b163b-7962-44ae-8de2-9b48a747e998",
        "cursor": {
          "ref": "66044f53-c13a-4c2a-aeb8-8384f363c12e",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5855ede6-66a4-46d3-b4f9-982e00678d74"
        },
        "item": {
          "id": "7a0b163b-7962-44ae-8de2-9b48a747e998",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4e64881c-bd11-45fd-82af-537000299a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7ec0c3-8c12-40f0-b5c1-67b4c703dfb1",
        "cursor": {
          "ref": "bed13b0a-860b-425f-b051-15d94fdc4c02",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8e2e0f09-0310-411c-8d03-830834685699"
        },
        "item": {
          "id": "fe7ec0c3-8c12-40f0-b5c1-67b4c703dfb1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7c860e79-e86e-4b15-a879-3b21f4454adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e71151f-3360-43b3-9a24-15ba216f4c1b",
        "cursor": {
          "ref": "c5cb78a4-c552-4a58-b424-5cc20ffd60df",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a70389b0-4eae-48ab-b7a6-b54a69e8c1af"
        },
        "item": {
          "id": "0e71151f-3360-43b3-9a24-15ba216f4c1b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "73c5fbe0-ea2b-42e7-9c1a-50b502649b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69333d4-8bea-49a3-94e5-f470cad128c5",
        "cursor": {
          "ref": "41c6f7cb-ac55-4d93-ab79-8540dda1f4fc",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b3e7501a-3b75-4eeb-9ab9-74938e845aab"
        },
        "item": {
          "id": "c69333d4-8bea-49a3-94e5-f470cad128c5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "669066cf-a3a2-46f9-a091-f7b44adbb455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f55a32-cbfc-4662-a1ca-7c5082d2352f",
        "cursor": {
          "ref": "40db799a-b278-4b22-b17f-f43db9b1915b",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bafe5807-6b5a-46aa-b049-2245e7aa42b0"
        },
        "item": {
          "id": "13f55a32-cbfc-4662-a1ca-7c5082d2352f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e635cc4d-1bb7-480d-8caf-ba5309a42f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55238cf-da2f-458f-a0b0-ccaf3d453b7e",
        "cursor": {
          "ref": "4ea4feeb-bf84-4e3d-a807-da7dd5324348",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "df2b8ce0-12d8-498a-8e12-9964bf7f2572"
        },
        "item": {
          "id": "f55238cf-da2f-458f-a0b0-ccaf3d453b7e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ca4346d4-c451-4f45-882b-418aba2cb27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80758a49-6bee-40c9-bbb6-40988e8a45a9",
        "cursor": {
          "ref": "f6af66a9-6c99-46c8-8dd3-6cc0e3bcde60",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "28d5545f-fdec-4536-b8c7-a03b252190ce"
        },
        "item": {
          "id": "80758a49-6bee-40c9-bbb6-40988e8a45a9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "69fb7e67-a623-493f-97f7-dc0cc0905d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca5823a-92aa-49cc-b93b-de00550f7d48",
        "cursor": {
          "ref": "d8260e91-47f4-4d33-8984-681f92a17b27",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "49091249-90fd-46d1-a840-69a887c15f0d"
        },
        "item": {
          "id": "3ca5823a-92aa-49cc-b93b-de00550f7d48",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "923ef541-dfc8-487e-81c6-dec0bbfe63a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fee813-9102-4f9b-a92f-b42110d3a4a7",
        "cursor": {
          "ref": "9dd7e5b6-26eb-4b09-85e3-59589bf214af",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7e9b90a9-0658-44ee-84f4-00b256c0f12c"
        },
        "item": {
          "id": "97fee813-9102-4f9b-a92f-b42110d3a4a7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "43c59629-fc55-4383-baa4-eee5f87e0bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c5f07a-48f1-4298-8d26-9f4063f2cf80",
        "cursor": {
          "ref": "5c3cbb68-7749-4d85-9dcf-03527b9848a3",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "82236afa-a751-4fe4-8f84-44b50a580e6a"
        },
        "item": {
          "id": "36c5f07a-48f1-4298-8d26-9f4063f2cf80",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ff5dfdc5-e93f-4376-81f4-c01f9884dc07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cc2e59-a930-46f1-9adf-828dc59c4fe6",
        "cursor": {
          "ref": "20b7e8f7-2cf9-4d95-8187-7f763473e09c",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5fbe1301-0f6e-4652-9f81-97bf0463821a"
        },
        "item": {
          "id": "f4cc2e59-a930-46f1-9adf-828dc59c4fe6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3bd5618f-0eb8-4b27-932b-3a642f7a8e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589b8aa9-bc84-4d87-8b60-86d52cb22fca",
        "cursor": {
          "ref": "03d06eff-5494-48b0-8ef6-1999c8b31880",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "eb9792d6-17c0-4eed-a818-ec659841da01"
        },
        "item": {
          "id": "589b8aa9-bc84-4d87-8b60-86d52cb22fca",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "992f5a59-061a-4152-8660-e96acb3b8524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad17d7c-87e1-4399-8aef-0a43b6e63462",
        "cursor": {
          "ref": "4cd75100-b524-4497-a14f-8a68166cbe1a",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cbe1ce13-ba9c-467f-ba68-b93f42d596b4"
        },
        "item": {
          "id": "cad17d7c-87e1-4399-8aef-0a43b6e63462",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "aad72c1f-8177-41ca-bb36-9bdc5c2b8138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734a65bd-7e06-4de4-ac7b-52f9219474d3",
        "cursor": {
          "ref": "be032a75-9b52-4af1-9ffb-143e4d8e2b2a",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "cf7b907b-c8cc-43f7-b4c8-b96cc05c182f"
        },
        "item": {
          "id": "734a65bd-7e06-4de4-ac7b-52f9219474d3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "28366cef-0441-4668-9b1d-6b321e1ed00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b69d868-cd50-4824-a653-ed7c50b29816",
        "cursor": {
          "ref": "f1122877-0ff6-4426-ab0c-7dc7eb339596",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "71eedbfe-3016-49bf-a95e-a4ea7f5a8bf4"
        },
        "item": {
          "id": "6b69d868-cd50-4824-a653-ed7c50b29816",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6490604f-32ad-4e80-a027-2237bd83d049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d595562e-c654-4cc1-969e-9ccd0ed44076",
        "cursor": {
          "ref": "247a883d-84d4-42d3-9ce3-c5e12b5d1a38",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ec32397e-f15f-4598-8fa3-5a57fb18a291"
        },
        "item": {
          "id": "d595562e-c654-4cc1-969e-9ccd0ed44076",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e926da2c-4a73-4205-9218-b40a91d2c188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8dd501-f1c5-4b62-bfcf-f7c82a1e0e35",
        "cursor": {
          "ref": "8c6a60eb-f781-4f46-8aa7-db661014a4d9",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e11ec1c8-543a-4db2-b562-700efcb0037a"
        },
        "item": {
          "id": "8c8dd501-f1c5-4b62-bfcf-f7c82a1e0e35",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "119f64f5-6965-420c-ae4a-ecb0cdee3c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45623212-3520-415d-8f36-4e54bc2f159f",
        "cursor": {
          "ref": "7f67ae80-3d63-4f8d-8652-a309853c1679",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "922b56f5-7c33-47ef-92e8-9c05f8b614c7"
        },
        "item": {
          "id": "45623212-3520-415d-8f36-4e54bc2f159f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "129a8461-71fb-4aa1-8602-27d30614ebc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcd096c-6bd3-4076-8316-11bc5dcbcbb1",
        "cursor": {
          "ref": "19c2b588-e61b-46f9-8913-e06cb51ed429",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d70306d7-5567-40a4-a9c0-3b07169d6c03"
        },
        "item": {
          "id": "ebcd096c-6bd3-4076-8316-11bc5dcbcbb1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3003a9dd-1546-4830-9545-96d3493bbbd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707e7ca9-f13d-4700-b068-b771606d1980",
        "cursor": {
          "ref": "c54bea96-4360-48c6-883a-bb98a714039f",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b5296c04-f0b2-4f1b-acf7-e7524e0e82a5"
        },
        "item": {
          "id": "707e7ca9-f13d-4700-b068-b771606d1980",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "523d6630-e547-4e91-84d1-2834a0c7662a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a414041e-4a73-4d0c-93cb-5ddf75e89084",
        "cursor": {
          "ref": "13a3fdd5-6212-4ba4-87d9-cdc385553546",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d78235da-03f2-4bcf-bf73-cfc8a51d431b"
        },
        "item": {
          "id": "a414041e-4a73-4d0c-93cb-5ddf75e89084",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "afc5a4f6-63eb-44f7-9bce-25d2150654e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317ffa53-2a2f-45bf-baef-98cdfb68f0a7",
        "cursor": {
          "ref": "aa847c95-df02-4cc8-aff0-4677267095f6",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "17027bb0-beb1-4609-b1a1-95c5f56d4ae5"
        },
        "item": {
          "id": "317ffa53-2a2f-45bf-baef-98cdfb68f0a7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6f1c196d-b0f7-49bb-af78-6a2683425a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ba5bdf-d7a9-42a2-ac7f-dc6bac89bbfc",
        "cursor": {
          "ref": "641cde94-5ab3-4648-a6e5-2855005fb50e",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8ee15904-d578-420f-b03f-7c92d0c7fe52"
        },
        "item": {
          "id": "02ba5bdf-d7a9-42a2-ac7f-dc6bac89bbfc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5c6f1fbe-9822-47f6-8caa-c2577e29c890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebc8456-80f6-4f03-91f0-061b3136d68c",
        "cursor": {
          "ref": "7725a737-1055-443b-b009-97a2a35e3b03",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1ccb4c49-8c70-4055-bdf9-dee5d096be6f"
        },
        "item": {
          "id": "2ebc8456-80f6-4f03-91f0-061b3136d68c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "959c7077-f029-447a-9447-adf5c16feb76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ab4db2-a92c-483d-8e9c-77a20aa86c87",
        "cursor": {
          "ref": "151b6f84-1ea7-4281-8ab2-801c6bcf7399",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "df4e1604-2494-4b99-b18b-902fc50284ff"
        },
        "item": {
          "id": "20ab4db2-a92c-483d-8e9c-77a20aa86c87",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a8e6c9ea-897a-475a-a89c-459218d94b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f3399c-c722-41a7-acba-2dc499300d25",
        "cursor": {
          "ref": "cee5eade-97b5-4b1c-87f3-978e4333ae18",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ddffd4b2-98aa-49c1-9744-a0d70416e411"
        },
        "item": {
          "id": "77f3399c-c722-41a7-acba-2dc499300d25",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "71a3b641-ee23-4b06-a537-9b8d400bf86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68115b1d-42ff-41f3-9aa2-ac6f8d2bba94",
        "cursor": {
          "ref": "14f01808-5dea-4df2-9163-9464a188040d",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "857720ee-60e4-4bc2-a185-1e38694c9574"
        },
        "item": {
          "id": "68115b1d-42ff-41f3-9aa2-ac6f8d2bba94",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4d38ccdf-4b28-4df1-9053-b9a13962ae34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ccf7108-08a1-4ea9-840e-ff1c70e5790f",
        "cursor": {
          "ref": "cf12287e-f1eb-4810-a139-289a4681db5b",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "04e8c911-4de4-48af-b570-c1420bd9558b"
        },
        "item": {
          "id": "2ccf7108-08a1-4ea9-840e-ff1c70e5790f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9f72b5a5-6990-4ac5-aee7-d85eac41030b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6a0748-7ae3-4f05-a83a-3c17eca2b67c",
        "cursor": {
          "ref": "0987a6c3-bed9-463a-8423-f39af24b6e13",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7c68261a-baca-44b4-adff-6722e38154f9"
        },
        "item": {
          "id": "bd6a0748-7ae3-4f05-a83a-3c17eca2b67c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0c20fbca-96b0-4608-ae8e-67c9d55dde94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8208b2d-f693-4c3e-a31b-007ce6a9f8e2",
        "cursor": {
          "ref": "c3ad1b6c-3a30-42c3-9248-5ddadf5913b6",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "580f315d-77d8-4875-a73f-df2076b02db5"
        },
        "item": {
          "id": "f8208b2d-f693-4c3e-a31b-007ce6a9f8e2",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "3759199d-48ed-45c6-b39f-9a3428470b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a848ff1-af06-4ef6-9fbb-c8c49ebff8f4",
        "cursor": {
          "ref": "2d270216-c135-42d4-8e01-c5f62085b9a3",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d6423124-2ede-4bab-933f-d9db36ca9e4a"
        },
        "item": {
          "id": "4a848ff1-af06-4ef6-9fbb-c8c49ebff8f4",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7b0994e9-0090-4e93-905c-c3f6591e3ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465594f8-1c32-4512-a633-37dd369cb8e3",
        "cursor": {
          "ref": "4fa022ac-2ae5-4d93-95ef-0cd1532e5e77",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "54882ff8-acd1-4147-9079-765f0ab6abae"
        },
        "item": {
          "id": "465594f8-1c32-4512-a633-37dd369cb8e3",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "39f1232f-af9f-4379-bee6-9cf7e20f572c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57610416-f5fe-4ae3-8a19-fc274c43cb2e",
        "cursor": {
          "ref": "2f6bec67-259b-42d1-b81f-f513cbd592bd",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2e1a0464-d7bb-4bed-a2e6-dccbb0922fa3"
        },
        "item": {
          "id": "57610416-f5fe-4ae3-8a19-fc274c43cb2e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f5809b65-ddb4-4ab8-b743-aa972596aa50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1954568a-5910-4e79-b4b0-3488c2616c0e",
        "cursor": {
          "ref": "cf5d6a47-0b02-4f6f-bab6-87d45e69cee4",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e7cd98f1-338e-4856-b867-28c81e37f433"
        },
        "item": {
          "id": "1954568a-5910-4e79-b4b0-3488c2616c0e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c1a12392-4764-45f8-a29d-fb6968bc763d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc87d0db-be64-4a0e-881d-4427a2e7b9e2",
        "cursor": {
          "ref": "db42e347-2e16-4c6c-83f9-05fe7840bd7d",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "596cbb42-f595-4906-bffb-d2681a6636fd"
        },
        "item": {
          "id": "fc87d0db-be64-4a0e-881d-4427a2e7b9e2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "40a4a7d1-ecd9-4769-b7d2-7748ae1227df",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713f9983-eb21-4616-b550-7225383bda74",
        "cursor": {
          "ref": "6ff91d07-883b-4ed9-ab54-7c914f6e52fa",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "95649722-9800-4513-868c-ccfb4ae57028"
        },
        "item": {
          "id": "713f9983-eb21-4616-b550-7225383bda74",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b86a0dba-4f57-48eb-81b0-2cf73e862379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1894dd-3b40-489e-97c7-c906b5e47ccd",
        "cursor": {
          "ref": "d4c443c6-e04f-4a2d-a60d-0285df0d8955",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "483f4d1c-3002-4727-9c9f-778da260d807"
        },
        "item": {
          "id": "2e1894dd-3b40-489e-97c7-c906b5e47ccd",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "bd01967c-e5fd-4056-ba6e-72dab5b145e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1e2fbc-97db-46ec-8c76-121ab4f69ef9",
        "cursor": {
          "ref": "5e1679f5-480f-49cc-a256-54391dee996b",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e59c8753-f234-4a40-8aac-75ea0fa63b27"
        },
        "item": {
          "id": "0d1e2fbc-97db-46ec-8c76-121ab4f69ef9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2a2b531c-4c18-4667-9580-d414951a0e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda27841-0403-4fa5-af05-8f844e510dfe",
        "cursor": {
          "ref": "606d09db-7764-4f2d-aca3-4bde3ade09b7",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "288df29f-7196-4fce-bdf8-3cd9703c238d"
        },
        "item": {
          "id": "dda27841-0403-4fa5-af05-8f844e510dfe",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "bdfa5547-66c2-43a5-8fb8-a7da6520cd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e60340f-0e16-4428-a659-60de7fa4a810",
        "cursor": {
          "ref": "366431cc-7ae6-49ed-b27f-53dd6e4e8af5",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f4c593ff-e744-4802-9575-c32a246d1e8d"
        },
        "item": {
          "id": "4e60340f-0e16-4428-a659-60de7fa4a810",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "29073327-fccb-48d9-a78f-1f2729c5571d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92f4bc4-1a01-4928-b750-76d8d96f1d5b",
        "cursor": {
          "ref": "2b57f366-d5ea-43d2-b6bb-697bd1845a3c",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0a1cb846-7e26-46b2-accd-c88a58c53ce7"
        },
        "item": {
          "id": "a92f4bc4-1a01-4928-b750-76d8d96f1d5b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e71daa7a-347b-4e8f-b1f0-a6b3c191238e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15eae9d-665c-4e20-a51b-01546ee83784",
        "cursor": {
          "ref": "7233f5ab-3d32-4a16-812c-64781d870876",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "31e6d25c-945c-4178-8dbb-32c0bbc56adf"
        },
        "item": {
          "id": "a15eae9d-665c-4e20-a51b-01546ee83784",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "540904cb-4296-46d5-b727-d15f0218046f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f09d0c-56e1-41b3-b32e-90338ebaf760",
        "cursor": {
          "ref": "eb4a5044-3da8-434d-ad93-b0f9cd774b19",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3da5da93-17ba-44ad-acec-95dba9971249"
        },
        "item": {
          "id": "f0f09d0c-56e1-41b3-b32e-90338ebaf760",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ebc06892-4e10-433a-954c-dd627871f7a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e14dad0-2ba7-4569-8c4c-cb6743da310e",
        "cursor": {
          "ref": "04eb8c9d-af18-458c-821e-b339d21870c1",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "91795399-c049-43d9-8012-b19438b7ad5c"
        },
        "item": {
          "id": "1e14dad0-2ba7-4569-8c4c-cb6743da310e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8fad4d92-d9ab-4e91-9ad7-1ed669d71084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba355aa-2791-4de7-967d-7349e9089c32",
        "cursor": {
          "ref": "6dc74423-f3f1-4e16-b45c-12ab67a64429",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5cb60cf1-3c8e-44a1-971f-4ad8f11a98f4"
        },
        "item": {
          "id": "3ba355aa-2791-4de7-967d-7349e9089c32",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e8462094-2e3f-46d7-9957-57e0c37b7103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1018151-300b-4a4d-b721-ba2c1fcdea64",
        "cursor": {
          "ref": "8946f64d-1d4d-436a-b84e-28a0c444f413",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a5050be8-a10a-4192-938c-fa5121e805ba"
        },
        "item": {
          "id": "e1018151-300b-4a4d-b721-ba2c1fcdea64",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5b36bee5-c6eb-45e4-a970-c350727afef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f79db4-811b-490b-844d-b9e993896703",
        "cursor": {
          "ref": "349b8d3d-8815-49e6-93de-ed775081135a",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7330cf28-6d5f-4629-9b63-e0e11eacf63a"
        },
        "item": {
          "id": "99f79db4-811b-490b-844d-b9e993896703",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a06aebd8-34b0-44ec-9457-a63b1a0aae9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2958feb-4cbc-4009-87e7-8bdcb0ab589f",
        "cursor": {
          "ref": "4ed75c85-2b2b-43bd-892f-c48c72f0215c",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1ec3a862-3879-4c97-a67e-cba3c6a33c3b"
        },
        "item": {
          "id": "e2958feb-4cbc-4009-87e7-8bdcb0ab589f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d34f5775-770b-463b-9801-b6a99859d273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e798aa-46e1-4f08-b780-e10c044b7fed",
        "cursor": {
          "ref": "2b468b61-a6d3-45a9-8fdb-813e95425b56",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c237414d-0700-4e06-b45d-b407b2fda1bd"
        },
        "item": {
          "id": "67e798aa-46e1-4f08-b780-e10c044b7fed",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "99d23cb9-eede-47e9-b5cc-efd82424d7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43506a54-05eb-4734-aa19-19a92ab481a7",
        "cursor": {
          "ref": "0ec2d174-c245-41d2-ae05-6efd0a85fbf5",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9f306139-c1c6-40db-9407-81044bd97696"
        },
        "item": {
          "id": "43506a54-05eb-4734-aa19-19a92ab481a7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "521bb604-3986-41d6-bcd9-0796087f5ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b693e8d4-66c9-409d-a2c3-542ad2b9adbd",
        "cursor": {
          "ref": "2314a65f-b174-4687-b165-b7148a16ee3b",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "38879ac6-a8d8-42f8-a81c-2367897dba13"
        },
        "item": {
          "id": "b693e8d4-66c9-409d-a2c3-542ad2b9adbd",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "23aafea9-19db-4581-8ce7-9fca2456a467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8e15eb-da93-4f43-903f-f251b77f659c",
        "cursor": {
          "ref": "cd060916-92f8-4d9f-ac80-9c33a3f673fb",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "df8c7a8a-8adf-4fd6-8720-73d180e0e971"
        },
        "item": {
          "id": "bd8e15eb-da93-4f43-903f-f251b77f659c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6de428b9-a9bc-41dd-8a4e-447ea55559aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f3faf1-83fc-402d-8b79-5fb388d90ef8",
        "cursor": {
          "ref": "c5d66796-d4e5-47ad-91b1-8a1181cecf97",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6059d2a7-c909-424b-a7fb-6d2cae935ea7"
        },
        "item": {
          "id": "41f3faf1-83fc-402d-8b79-5fb388d90ef8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "051c3ee3-af9b-44aa-8053-aa37027a5cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae033de6-5cdd-45ef-b227-86ea488f3877",
        "cursor": {
          "ref": "92c11c01-4a05-439d-a5e0-b520488db223",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "420a4984-720e-4776-aa2c-ca8c6c05ea32"
        },
        "item": {
          "id": "ae033de6-5cdd-45ef-b227-86ea488f3877",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "edbc20a2-0be8-4788-b35a-81387d48a047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6bae30-0efe-4bb9-9cdd-f58d6030b648",
        "cursor": {
          "ref": "4621a6e9-8f05-4655-82a9-c02bedf425a0",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "60dfe901-5544-454f-9583-7bb3eaec93ed"
        },
        "item": {
          "id": "5f6bae30-0efe-4bb9-9cdd-f58d6030b648",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c66f8a28-1f6d-4dd4-b574-d510649a3415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ffa08f-d4e1-4c79-bbc1-80de4d180276",
        "cursor": {
          "ref": "43ad229a-cfa8-4a7e-b9e0-2288f6fc8da8",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5cb207e7-a734-478d-8856-138942c8e36f"
        },
        "item": {
          "id": "39ffa08f-d4e1-4c79-bbc1-80de4d180276",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d093e462-6888-4140-b506-b35607cd4a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74fcd07a-0f0f-4ac0-b69e-7b08774ca476",
        "cursor": {
          "ref": "2f950813-ca84-473f-9a26-20f4336c3daf",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2e8d64c0-fd82-425d-9d38-c03dc8f560b1"
        },
        "item": {
          "id": "74fcd07a-0f0f-4ac0-b69e-7b08774ca476",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "24914806-e3fb-4292-8dc4-555d796f6fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a47116-a91e-40c5-aa2d-02c71cbf078f",
        "cursor": {
          "ref": "a9bef48f-3143-4751-8ff2-e83f451b8954",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "bbdb8330-9493-4052-b9e6-f4d0a35e5e66"
        },
        "item": {
          "id": "51a47116-a91e-40c5-aa2d-02c71cbf078f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "03bfead3-a23d-4f4e-8e87-05385855ee1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a79f969-7b97-4248-a70d-1002b9d961c6",
        "cursor": {
          "ref": "74a281b4-6a96-4845-8ae5-5f1bc1a549a9",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c874be54-d03e-4993-8106-a7161609b55e"
        },
        "item": {
          "id": "9a79f969-7b97-4248-a70d-1002b9d961c6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "692d2cad-035e-41e0-92c3-78e79b04bac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acae839-4a98-44ac-b59b-ba9d50cca581",
        "cursor": {
          "ref": "5863e0e2-d630-4b8f-ac0c-68132173a0c6",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "625480e5-6adf-459d-8a5b-04b65748bd57"
        },
        "item": {
          "id": "6acae839-4a98-44ac-b59b-ba9d50cca581",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "682638c0-6d4d-4190-87ea-08ce21af29a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf3f4ce-33ff-4e4d-921d-9029d2a8a9f2",
        "cursor": {
          "ref": "d364c83d-1323-4199-9662-03ea524991f0",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2083240c-69c1-4e7c-aa03-866512509c37"
        },
        "item": {
          "id": "1cf3f4ce-33ff-4e4d-921d-9029d2a8a9f2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "27b6f07c-1139-4fd6-9e82-66c7378a91ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6935048f-99f5-41f7-a3e9-9282454dcfb8",
        "cursor": {
          "ref": "73ed96d1-3e3e-4746-969d-cec465a36854",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6e83cef0-b322-4ce2-8742-d0b1a5b05b9d"
        },
        "item": {
          "id": "6935048f-99f5-41f7-a3e9-9282454dcfb8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1e09aeb6-f96e-4671-a6fb-938efdd56555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a3d18e-e5fe-4546-98a4-4a10abe13c12",
        "cursor": {
          "ref": "0d6674b3-ebf9-4a81-b154-fc3e2bc44a01",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "da613437-19b0-4037-b31e-0669501abb84"
        },
        "item": {
          "id": "92a3d18e-e5fe-4546-98a4-4a10abe13c12",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "63e7b871-6b1e-47fd-bd7a-5d5b93f279f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019dd6bf-5227-41ef-b5ed-26a00cb696bf",
        "cursor": {
          "ref": "789e1687-6fd8-4b72-9852-aebf874af89c",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4a2c4d15-fe32-4cc0-a85c-8787133fad0e"
        },
        "item": {
          "id": "019dd6bf-5227-41ef-b5ed-26a00cb696bf",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7be97cb2-58f5-423c-85af-146ac9f688cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2941e2-e04d-47be-b5f0-e18966498a5e",
        "cursor": {
          "ref": "0196401b-cc9d-42dc-b3aa-c127cf9fa2c0",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "29f04b26-a400-4951-af58-d550c35129da"
        },
        "item": {
          "id": "6f2941e2-e04d-47be-b5f0-e18966498a5e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d2abcfdd-7870-41aa-97cb-292e178eb78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8adf98-e2c3-417e-83ae-5e7a00675059",
        "cursor": {
          "ref": "cdeddaa9-7a46-4c12-8f01-54a83a01ca8d",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "bb1ed786-4719-4a10-9819-2352fc282965"
        },
        "item": {
          "id": "ad8adf98-e2c3-417e-83ae-5e7a00675059",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e074b092-2f14-49cf-92f2-bf36f3040604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb3c4bf-4eab-429c-a1e2-c40267e3324f",
        "cursor": {
          "ref": "f2505441-8a4b-4048-840b-eaa905a8055f",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d8bd0b4c-86e4-4203-a604-4a3d1a7a776e"
        },
        "item": {
          "id": "2bb3c4bf-4eab-429c-a1e2-c40267e3324f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e432e686-2c5d-44c6-9bbb-b7d98f2ce6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85899204-ad64-40d4-96fd-5804e0a3e262",
        "cursor": {
          "ref": "75b4ec7d-a007-4b65-9b18-0058f22f31d2",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "96f2aa22-b44a-4bc7-a66b-0fe335f04f86"
        },
        "item": {
          "id": "85899204-ad64-40d4-96fd-5804e0a3e262",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "cad540c0-f687-41f0-a72e-b05f4a44c2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0201c977-ac53-458c-8e9d-59c392c63f24",
        "cursor": {
          "ref": "61d142d5-74b7-436d-be5d-f3e48432b6bb",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d555cba1-abcf-4f5f-97b1-e8d175a863e9"
        },
        "item": {
          "id": "0201c977-ac53-458c-8e9d-59c392c63f24",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e972f8a7-e8cf-4b1d-a828-f17323738846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4222661-2307-43b8-92dd-4460ff0bb73a",
        "cursor": {
          "ref": "0aafea1b-4382-4035-96c5-cc3d33d84d7e",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5511bc6a-b7c0-41d1-83f6-886f5c45c7c9"
        },
        "item": {
          "id": "b4222661-2307-43b8-92dd-4460ff0bb73a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0053c1f5-8fed-4b60-ad08-d1322cb47aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fb2b78-c522-4d99-8ea9-09dfdb25663d",
        "cursor": {
          "ref": "be8c5a85-815d-4796-9701-5a4fcc6fc754",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6de4fb3c-a7b0-4d2b-a7c4-c539c15c9cac"
        },
        "item": {
          "id": "56fb2b78-c522-4d99-8ea9-09dfdb25663d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8428a654-bf70-4146-bd33-8e04541df49b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209cccdf-6ed6-42e9-b830-0e69c05650c8",
        "cursor": {
          "ref": "1450f8e7-bf5d-44c4-bff6-6723b98f83aa",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8d164160-391b-411f-aa75-1fd90e386686"
        },
        "item": {
          "id": "209cccdf-6ed6-42e9-b830-0e69c05650c8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3943174c-2ac2-485d-a3da-d841054dc49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb742b4-5469-4dbb-9007-4d403fd143c0",
        "cursor": {
          "ref": "303b9aef-52b9-4780-b8be-d647c485e8b9",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "288295d2-8386-4a81-b448-7cf522c0d983"
        },
        "item": {
          "id": "4eb742b4-5469-4dbb-9007-4d403fd143c0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "627d157d-fbdc-40ba-9456-9cc8525e3309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9c3e16-6d6a-4c68-8088-d3e31fd91c9a",
        "cursor": {
          "ref": "76ca139a-0944-45fa-bb6d-18bc0475ccfe",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "78353b58-e9ec-446d-807f-b72d7ba8593d"
        },
        "item": {
          "id": "4d9c3e16-6d6a-4c68-8088-d3e31fd91c9a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "082c5d7a-9369-4b91-acb5-9cc4b7604b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f8f387-e1ba-4b61-8d8c-04745bc06e5e",
        "cursor": {
          "ref": "0c80279a-4ffc-403a-bcdc-67d6decbd260",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e11ceb13-a049-47da-8f75-b248d9b2f3b8"
        },
        "item": {
          "id": "71f8f387-e1ba-4b61-8d8c-04745bc06e5e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c3b5742f-6a8c-48d7-bb45-3a6e6174884a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0add526-9c8d-4786-8625-a8cd915cee61",
        "cursor": {
          "ref": "275747ed-f0b1-4a27-923d-d927e7742151",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b25a3b82-3ab0-414b-949a-ebef5fa043dd"
        },
        "item": {
          "id": "a0add526-9c8d-4786-8625-a8cd915cee61",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bd5bf6cf-f22a-4c0b-8e2c-9cd6647160c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42271f6-0349-4e67-b277-2cbbfd62971c",
        "cursor": {
          "ref": "6894e837-1c5f-4c80-88e1-7b0f21e0902d",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "07719e61-4fe3-4f69-b5d9-8a65b2937887"
        },
        "item": {
          "id": "c42271f6-0349-4e67-b277-2cbbfd62971c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a809b2a2-8e4e-431a-8694-741dbb37ff39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a5b8f0-bc84-4350-8295-1b165a901001",
        "cursor": {
          "ref": "9731ffaf-3d68-41c6-878c-364d2249c674",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d6a600be-57e1-46b7-aa7a-7259968bfdb3"
        },
        "item": {
          "id": "96a5b8f0-bc84-4350-8295-1b165a901001",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "dea9e969-737f-4208-ab49-156e4e5a0118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c1546e-818a-4d33-a1e2-ce87022a6f59",
        "cursor": {
          "ref": "89403542-c67c-467a-8fd1-e9d77000adda",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "fee3416f-5695-4d43-addf-d662c5003f1b"
        },
        "item": {
          "id": "e5c1546e-818a-4d33-a1e2-ce87022a6f59",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b3ffae47-f02e-4dce-a9b2-83a15a917736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7813c62c-dadb-42bb-86cd-dca6c2706bb4",
        "cursor": {
          "ref": "8c131a50-dbf5-4792-825f-e6b2accfd964",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "76435f6f-12c7-409e-b297-9a289d135734"
        },
        "item": {
          "id": "7813c62c-dadb-42bb-86cd-dca6c2706bb4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "496f32a7-8d79-4d45-8908-58ff81bb95da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca293fbb-470a-49fb-88d6-1a1cb654e006",
        "cursor": {
          "ref": "455caada-006a-41b7-9ce8-b8602713fc1f",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8855acb5-bd8f-46b3-8c44-9e03c893f284"
        },
        "item": {
          "id": "ca293fbb-470a-49fb-88d6-1a1cb654e006",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3dd0b769-e03e-474e-8732-465b5ece79cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a5c902-2e16-4c45-a1d4-e0f8706b700d",
        "cursor": {
          "ref": "ab03d2ee-a28a-4ba9-9813-8e9e5efcd73e",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c5cb5a6f-c98c-4b0b-a585-66ca9a4ab661"
        },
        "item": {
          "id": "78a5c902-2e16-4c45-a1d4-e0f8706b700d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "346110a1-2447-4c86-833f-26c787a4e8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e041910-9dcd-4d40-a016-7f8c9c964ccc",
        "cursor": {
          "ref": "cd5488fa-eb40-4446-b4b6-5000550a6bec",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "59f17fdb-89a8-4f91-b9ff-2cc10880fca5"
        },
        "item": {
          "id": "1e041910-9dcd-4d40-a016-7f8c9c964ccc",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0165f3fb-49ce-434a-a0ae-f7f400a6e60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113040d8-6ce1-4adf-b8ee-d3aacc33cf3a",
        "cursor": {
          "ref": "007aa714-5a1b-48f1-a3eb-3163c674b4cd",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3984068c-9469-4cbd-94d3-833a32d0ba7d"
        },
        "item": {
          "id": "113040d8-6ce1-4adf-b8ee-d3aacc33cf3a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "57cc5dac-05b1-4f65-a23e-4ee4cc054fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2c5e88-be7c-4320-bbcf-a8b664c90eef",
        "cursor": {
          "ref": "195b1068-5412-45b4-bdb7-7fbd4497884b",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d5a492b4-5c69-45fd-8fbf-a50063f63884"
        },
        "item": {
          "id": "ff2c5e88-be7c-4320-bbcf-a8b664c90eef",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e04f0839-410e-482a-8482-7d097acf1236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12b51be-5510-4bf4-81da-fb1cbf9ab547",
        "cursor": {
          "ref": "db7f6cb5-cda2-4139-bbc0-af337c28c260",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1fa9bb8e-7d1f-4464-b828-159592bedb12"
        },
        "item": {
          "id": "b12b51be-5510-4bf4-81da-fb1cbf9ab547",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3c9abe4b-d3ac-4ce9-8bf1-4d9b0da0933c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f477a3-d819-4bc4-ae14-c8d3d4f7a13c",
        "cursor": {
          "ref": "f5b3dc97-1742-4569-a226-fbc9515fdde5",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4a65102c-213c-43bd-8de8-4dae98254f44"
        },
        "item": {
          "id": "23f477a3-d819-4bc4-ae14-c8d3d4f7a13c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "25c9bd6e-0809-4f3e-ad31-73bd698c445d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba80e97-79b5-42a4-b72d-8a72d6174279",
        "cursor": {
          "ref": "3c2dc6f6-857d-4d86-91ab-9ad8c804c2b1",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4e37d1bd-b882-4606-aaba-cebeccb2de25"
        },
        "item": {
          "id": "1ba80e97-79b5-42a4-b72d-8a72d6174279",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "70a6efac-3ce0-49a5-8d40-f029c617c55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de4e065-5623-4240-baee-3bf2f2ce677d",
        "cursor": {
          "ref": "129ab36f-287f-4460-8bc4-c1408a2cee6a",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3e3be8b4-a1aa-4dd7-b01d-64138f0d0e0e"
        },
        "item": {
          "id": "3de4e065-5623-4240-baee-3bf2f2ce677d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "910e4402-fbd2-4b65-9844-1f69d4bada66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65005d07-7789-4641-b6c3-b8dcc86cbb67",
        "cursor": {
          "ref": "f10b002e-3335-47ac-9721-8d68060eb6fa",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b16cde05-00dd-4b83-917c-a946a7b46520"
        },
        "item": {
          "id": "65005d07-7789-4641-b6c3-b8dcc86cbb67",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "bfeebbc3-0a04-46ce-a907-2bc5a03b7927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43dd032-f084-4690-949f-ac9421e492a1",
        "cursor": {
          "ref": "b967cc9f-3555-4be1-8f2e-65caa4c1b7a0",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "84cad60f-889b-44df-b77d-acdd5d5f0754"
        },
        "item": {
          "id": "f43dd032-f084-4690-949f-ac9421e492a1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fdf8828c-c3f2-46f5-a2f2-852759014bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0aecd60-02d0-4a47-8226-9a01d110de1e",
        "cursor": {
          "ref": "2a4f6e04-b128-4e90-b10d-693dc5e524c2",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "db905d36-ec6f-44ce-ba50-605a96779c8a"
        },
        "item": {
          "id": "b0aecd60-02d0-4a47-8226-9a01d110de1e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c02240dc-6a3b-4363-9860-8b361cb52b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147e704d-f149-48e2-95c9-45052287a8ec",
        "cursor": {
          "ref": "83d09d53-6599-4a3c-8c14-0cf92472e1bb",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "05de8da7-d56a-4f42-aee5-9e9b3e810368"
        },
        "item": {
          "id": "147e704d-f149-48e2-95c9-45052287a8ec",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cc251e9c-a5a7-4654-a2de-0d22968fb47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82bc952d-72ec-4454-8ddc-af62d525857a",
        "cursor": {
          "ref": "bd25849a-9ca3-4a61-9b99-0e8e3536dd75",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "881c2be7-19a1-4842-a80d-134f71c04586"
        },
        "item": {
          "id": "82bc952d-72ec-4454-8ddc-af62d525857a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c41e2e05-3652-46b5-8f54-455c93480024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940752ed-174d-4b88-8201-1dd33dae2721",
        "cursor": {
          "ref": "5c7dded2-b5ab-4773-a1f9-f14934cfde3c",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d257baef-e065-4e88-a830-0811a6dae60c"
        },
        "item": {
          "id": "940752ed-174d-4b88-8201-1dd33dae2721",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a74e96d7-da2c-43e0-bc71-7e16fde17d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f86e19e-a15f-423c-8241-ac2ae7c61b70",
        "cursor": {
          "ref": "1cc9fc65-6226-469f-b9dc-a560f47f5250",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "eb22625b-53d5-4670-a7e8-0178a49e5328"
        },
        "item": {
          "id": "7f86e19e-a15f-423c-8241-ac2ae7c61b70",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "90fe2996-06c7-4357-b86e-00b7f55fa906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52202be5-ea9d-4029-8ebb-ff046c24961e",
        "cursor": {
          "ref": "87b44b6f-d85e-4f45-a73e-3d53dbac8a93",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f102d4e9-dbba-4697-91fe-8923e439fc23"
        },
        "item": {
          "id": "52202be5-ea9d-4029-8ebb-ff046c24961e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "204679cb-813c-4841-8127-0aa9b2c1e205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bbf66d-28d6-41cc-a64b-18dd33a21844",
        "cursor": {
          "ref": "940ed74c-718a-4959-8131-3d38a70707bb",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e1a49b0d-158b-4970-863f-530dbf7e48fc"
        },
        "item": {
          "id": "91bbf66d-28d6-41cc-a64b-18dd33a21844",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a6a7cd7f-6598-4da2-b4c7-88f0ca563f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014ceed6-a183-4f2e-be0f-a1aac10f8068",
        "cursor": {
          "ref": "2a83a775-15c8-4321-bc99-a6921352909d",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d1ecb0d0-da7e-4b5d-858f-702dd45b0548"
        },
        "item": {
          "id": "014ceed6-a183-4f2e-be0f-a1aac10f8068",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "92d5b1e2-0e46-47ec-bf38-2eaa87163e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7ba507-3e0b-46a9-8b2b-aed02e52b833",
        "cursor": {
          "ref": "afec812a-e31c-4f40-855f-ee9e8d966cb0",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e6d3ea8e-abdf-4544-b37e-b90ad05805e5"
        },
        "item": {
          "id": "ee7ba507-3e0b-46a9-8b2b-aed02e52b833",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "338aa823-78da-49a5-b6d5-9030eb6b6807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217a09d3-22be-466b-b168-09a33376dcc5",
        "cursor": {
          "ref": "d684c922-730f-42f0-a462-6a1e197a4221",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "829a7c7e-d603-4307-9827-25df3bb509b4"
        },
        "item": {
          "id": "217a09d3-22be-466b-b168-09a33376dcc5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "16a46f12-41a0-4ea2-91b0-8e6908f0060e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ecbe153-07e2-42f1-82db-138e8dff98b3",
        "cursor": {
          "ref": "8ff91414-cc91-44ae-a657-0121e54f80c5",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e88d1718-520e-4350-8798-8b1d17df729a"
        },
        "item": {
          "id": "8ecbe153-07e2-42f1-82db-138e8dff98b3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ee9db73a-113d-4301-bcb7-3b23c810a6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fad44a6-d5de-429b-b2ee-2ae1e4c8c6b7",
        "cursor": {
          "ref": "da7eb9d1-d6db-4af6-b55b-060bd309d733",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "576fb642-b55c-45fc-8d47-1b4043a89565"
        },
        "item": {
          "id": "4fad44a6-d5de-429b-b2ee-2ae1e4c8c6b7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9e82d40e-6f51-4d4e-b98e-4d74f2afa048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63eabc97-d476-474f-81a1-33b06180e54d",
        "cursor": {
          "ref": "145544e7-a578-46b0-8a07-2d2dcbef2acc",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a628fdfc-5350-473a-8d88-05b5128a6793"
        },
        "item": {
          "id": "63eabc97-d476-474f-81a1-33b06180e54d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cab3e510-417a-48a5-a3ca-7c363c2c022d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197f45ae-0f59-45b6-b922-aff85df733be",
        "cursor": {
          "ref": "71f91fe0-40cc-4e5b-89e3-c6af747ae259",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "77f4c726-9eaf-475c-8450-6d0dc99f3646"
        },
        "item": {
          "id": "197f45ae-0f59-45b6-b922-aff85df733be",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "68b5ee67-427f-43d7-8470-e2001a775873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21f3aac-f3c6-4954-a0d3-8071f7c60f79",
        "cursor": {
          "ref": "16440087-6001-480a-a533-00fb3bac3389",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e10b6d6d-ae9f-4e12-a811-94836c041896"
        },
        "item": {
          "id": "b21f3aac-f3c6-4954-a0d3-8071f7c60f79",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a91727f9-70e7-49c8-a0ac-9a0aa86e6c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab5edde-63c4-41d1-b817-491e1dedc3fe",
        "cursor": {
          "ref": "051b7ad3-664e-4afb-9d29-be61da4dcb7c",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "df509459-5573-44ce-a8fd-9c4faf995e51"
        },
        "item": {
          "id": "3ab5edde-63c4-41d1-b817-491e1dedc3fe",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0d75cb2c-6ea1-467d-a8ae-449f6906249f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81522fc9-34f8-468d-b6b4-93270b2c11f2",
        "cursor": {
          "ref": "72cf65d1-ee54-4778-b549-9b301e9d352a",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fff822ea-30c9-4b01-af39-d6d2e2cfb93a"
        },
        "item": {
          "id": "81522fc9-34f8-468d-b6b4-93270b2c11f2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "94682ed3-bca1-4509-917d-dd9e9a4e960a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44344b87-0e7e-43d2-8951-a5a435f1aaf1",
        "cursor": {
          "ref": "71fc8593-89c6-489d-94c1-dbb425a7100e",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a1034bf2-270d-454d-8bdd-be23db5594b4"
        },
        "item": {
          "id": "44344b87-0e7e-43d2-8951-a5a435f1aaf1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2026e80e-f316-48fa-8c47-ed7f9f576c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78324250-a56c-4b4d-bd6e-8fbc5e3a4709",
        "cursor": {
          "ref": "c619d2b1-8955-497a-9c8a-18265323f7ec",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "82b1b032-1101-437d-bd9b-a419f4ff00a8"
        },
        "item": {
          "id": "78324250-a56c-4b4d-bd6e-8fbc5e3a4709",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0f3664a3-d2aa-47a7-8375-166acfe4bb93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae563417-919c-45f3-bd34-4d3517aa56ce",
        "cursor": {
          "ref": "89d5d841-533f-4009-98d2-dd574edab39f",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "51717f96-aadf-46a4-ae86-233e721d1217"
        },
        "item": {
          "id": "ae563417-919c-45f3-bd34-4d3517aa56ce",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a05d3025-cfa2-4d6a-8a7b-e53a19d95437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e96f82-310e-4384-9519-daf2e39268f0",
        "cursor": {
          "ref": "51e19783-c8b9-4d2c-a5d3-69d34fc988aa",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4684edd3-b907-4261-a03b-71a43867d28f"
        },
        "item": {
          "id": "93e96f82-310e-4384-9519-daf2e39268f0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e5c507ab-3c4b-48c1-bd9e-477ae0e071f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe83096-e0e7-4a67-ac1a-8ef77e8b9ab8",
        "cursor": {
          "ref": "f860b1ad-48cf-4781-a307-ab0a21a83c54",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "97947f3d-65ec-45e2-9d24-60b7ac1c4c0e"
        },
        "item": {
          "id": "1fe83096-e0e7-4a67-ac1a-8ef77e8b9ab8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0368259a-a380-4ff0-9f3e-a8d627693bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5d87ee-040a-42c2-b689-42f4d03c5756",
        "cursor": {
          "ref": "8a07fa8d-8d92-42c4-97bb-6be179eef83e",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "85424e70-1c42-4805-9e55-de08b15b7852"
        },
        "item": {
          "id": "de5d87ee-040a-42c2-b689-42f4d03c5756",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e2e6b059-defa-4d23-aded-526a095daec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3898d6-017a-483f-9024-79b456abc23d",
        "cursor": {
          "ref": "91f89839-8032-4263-a468-21b64438711f",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "20786c36-3dc0-4ca0-8487-5543b41b1012"
        },
        "item": {
          "id": "6c3898d6-017a-483f-9024-79b456abc23d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7bb87483-fc70-4ad9-af82-a3823cd067d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4741f6c-e165-41c7-82d9-7e86d4267ad0",
        "cursor": {
          "ref": "82ef0a81-d6aa-4a07-b146-15c19caca93e",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9d7e1eec-615b-471d-a109-fe989a8ae5c7"
        },
        "item": {
          "id": "e4741f6c-e165-41c7-82d9-7e86d4267ad0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d95232d4-3e06-41d0-becc-39aeed3e6444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ecf87d-7cd3-48c3-949e-79424c6d6b18",
        "cursor": {
          "ref": "c2d76339-8861-464c-bd7d-c9fba9d32d39",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "07fa99ca-f1cb-43b0-94ff-a6d280d118fb"
        },
        "item": {
          "id": "91ecf87d-7cd3-48c3-949e-79424c6d6b18",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "806f6a08-f05f-4066-b4e9-a492753a532d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e6143f-c6a5-48de-a024-35e73f891546",
        "cursor": {
          "ref": "a45ea711-a34a-45b5-96f2-0a549d5abd25",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4d0ceb0c-33fe-43a8-a18c-d0620d7ee33d"
        },
        "item": {
          "id": "e5e6143f-c6a5-48de-a024-35e73f891546",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2aaf09ba-34e1-4c94-b235-18225589d206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20773a91-2055-4719-88d2-44bacc33a055",
        "cursor": {
          "ref": "42244faf-47ce-4a4b-9f16-f5bf0f0faff5",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5aae42c0-e4e9-4cb8-aac1-3f274d730992"
        },
        "item": {
          "id": "20773a91-2055-4719-88d2-44bacc33a055",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "aade2545-9ee4-4938-9f06-4f34b13817da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474c3ca8-0f66-4387-a04d-9176a6c18e6d",
        "cursor": {
          "ref": "41f25521-7800-4fbd-b685-6a618a9e8169",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d4474af4-a730-47d6-ade3-49eb6d11a7bc"
        },
        "item": {
          "id": "474c3ca8-0f66-4387-a04d-9176a6c18e6d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5e288134-ed11-4bab-b44f-226d3be6fefe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed83bf9-7b25-4ba0-8da9-3ef8524afd4f",
        "cursor": {
          "ref": "ec601d01-b5e4-4730-9bae-4d7759d56f05",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2975c44e-e0fa-4dae-8621-2704c73758c3"
        },
        "item": {
          "id": "bed83bf9-7b25-4ba0-8da9-3ef8524afd4f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "eaff0590-1690-45d6-b5ca-1f7ace539bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ab4a0b-6478-4229-b78a-82cf610d181e",
        "cursor": {
          "ref": "65c769f9-cdd5-40d6-9384-fec27761c891",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "963192d0-a1f2-438f-af99-7c128a42674b"
        },
        "item": {
          "id": "54ab4a0b-6478-4229-b78a-82cf610d181e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6bba5084-cd1e-404a-8868-a412fa60e7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350d05c6-f405-4749-ace5-2dd1f68e86b6",
        "cursor": {
          "ref": "2ddaa40d-e5d0-48dd-8fd4-ba45dda707cf",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "507b265f-d56c-4452-b1aa-38e9067063da"
        },
        "item": {
          "id": "350d05c6-f405-4749-ace5-2dd1f68e86b6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "900560d9-d6ac-44f1-8c6b-2f881ecbe623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a790eff3-0b61-4eee-82d5-4eefb60bb240",
        "cursor": {
          "ref": "4d35e333-c846-40fd-b566-ce6281900552",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "56b95ec5-616e-4edd-9ad6-6a46fc4c73e1"
        },
        "item": {
          "id": "a790eff3-0b61-4eee-82d5-4eefb60bb240",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "bf718248-6edd-49ce-8be5-a586cd64bf46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e0a5e4-a2b0-4fae-bbab-60b6edc7c0fc",
        "cursor": {
          "ref": "63b1b120-7087-40e8-9ff2-820d75e3d37d",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5d623bbe-16ed-43a2-a8e4-b89991be370f"
        },
        "item": {
          "id": "f1e0a5e4-a2b0-4fae-bbab-60b6edc7c0fc",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ce7084df-636d-4c7b-bde3-7196a8b42e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b094ea-cb9f-4a5b-bcbf-d972734bf2b2",
        "cursor": {
          "ref": "c96cf4bf-0112-4468-a12f-6eb9bd7eb8ee",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5b7e50a1-ac3d-413e-8ef9-7d833a2493e1"
        },
        "item": {
          "id": "82b094ea-cb9f-4a5b-bcbf-d972734bf2b2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d029f409-d8c8-4218-bee7-e53e3b59915b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3662a9-851d-4109-80c5-8e97436c5afa",
        "cursor": {
          "ref": "ff18b4a8-4cb2-4f33-ba7f-be1ee1878aba",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3f427fd6-8f62-4087-9d7b-999b1ebe5f5a"
        },
        "item": {
          "id": "5f3662a9-851d-4109-80c5-8e97436c5afa",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5d6ba626-c0df-4198-bd1e-ac2785b09053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1be4a1-2bd7-465f-aa63-4e7c5947fb76",
        "cursor": {
          "ref": "04c27bd9-6afd-48b6-9b8e-424114976724",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f0d97c1b-8703-42e9-a9fd-57c0a1241aaf"
        },
        "item": {
          "id": "7e1be4a1-2bd7-465f-aa63-4e7c5947fb76",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8abe499c-2ef6-49eb-ba03-b6941d97a2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485a8be2-5751-45d7-ace9-5150a81232de",
        "cursor": {
          "ref": "2c412d7a-82be-4cad-b73b-0fb6e992846e",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9e82886e-5295-4082-a224-ac289349e991"
        },
        "item": {
          "id": "485a8be2-5751-45d7-ace9-5150a81232de",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "77c644eb-6d9e-43bb-b7de-0f2af851e66a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3da83e-af1a-4f45-a2b1-e78c5b5737dc",
        "cursor": {
          "ref": "475c73c4-6cca-4d9b-9a26-60a89e56e3bf",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3d0c55c1-f197-4adb-8617-174769cb98a4"
        },
        "item": {
          "id": "2a3da83e-af1a-4f45-a2b1-e78c5b5737dc",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "446b705a-501f-488b-a0d7-f4950ca17000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72ec681-5b1d-45b1-8611-d8642f437c85",
        "cursor": {
          "ref": "c8366cf3-8eb5-4003-80ac-a3cc55434e6d",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d821b998-de46-494d-80aa-aa0914bccbba"
        },
        "item": {
          "id": "c72ec681-5b1d-45b1-8611-d8642f437c85",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "68181aba-d27f-4989-a3b0-2c1d4489095f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82748b30-5767-4768-8b7a-59ae4c816711",
        "cursor": {
          "ref": "2e42055a-d744-499d-acf0-09efbe3be535",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "fc35f99b-28bc-4ec2-9b9f-dbbdf4a18216"
        },
        "item": {
          "id": "82748b30-5767-4768-8b7a-59ae4c816711",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "28eb5681-51dc-4a2f-b14b-25b960f15d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9853eb0a-5132-4b4b-bd09-e2830163ffb5",
        "cursor": {
          "ref": "b4253592-1f1c-4da2-a8bb-64a46f2275c7",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ec46b1ea-39a0-41ed-b690-c3a74230ece8"
        },
        "item": {
          "id": "9853eb0a-5132-4b4b-bd09-e2830163ffb5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "bbe96e90-e2af-4110-812c-98eb5e31819c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c5e8e3-6bed-421a-905a-d5bd73f8eb1c",
        "cursor": {
          "ref": "bb5ee977-2ed4-42eb-a228-c3194af15391",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "60504955-50d4-4ed2-ad09-b30ab27faeff"
        },
        "item": {
          "id": "28c5e8e3-6bed-421a-905a-d5bd73f8eb1c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5b743151-4555-4f69-9695-2c5eba1c74c3",
          "status": "OK",
          "code": 200,
          "responseTime": 2390,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca336c96-b543-4664-aa45-5eb7d303bc8e",
        "cursor": {
          "ref": "2dab66e6-3b21-4bef-97ec-4c7e27b0f0f5",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "793fd4fd-e93e-43c0-a578-9da7067ece2a"
        },
        "item": {
          "id": "ca336c96-b543-4664-aa45-5eb7d303bc8e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6723939f-00ac-4a1f-9b20-c6bf1624967d",
          "status": "OK",
          "code": 200,
          "responseTime": 3881,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45558e0-eee1-4cb8-895b-80ac2b3fafb1",
        "cursor": {
          "ref": "dd21d606-7040-489d-b9e5-6a264f07fe88",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fa49fbae-6b68-47cb-9856-3e569f764495"
        },
        "item": {
          "id": "d45558e0-eee1-4cb8-895b-80ac2b3fafb1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7362c12d-103a-4029-aa88-3465e9489851",
          "status": "OK",
          "code": 200,
          "responseTime": 3296,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d5d31f-ddca-449f-a1b7-0b86eafb316e",
        "cursor": {
          "ref": "560277fc-04ca-4a1b-a774-783e8f363c16",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "95e31910-058b-4e8e-9ab4-cf07eca8d292"
        },
        "item": {
          "id": "a4d5d31f-ddca-449f-a1b7-0b86eafb316e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5e61c3b5-dffa-45b0-86dc-93396c0c1d13",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d5d31f-ddca-449f-a1b7-0b86eafb316e",
        "cursor": {
          "ref": "560277fc-04ca-4a1b-a774-783e8f363c16",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "95e31910-058b-4e8e-9ab4-cf07eca8d292"
        },
        "item": {
          "id": "a4d5d31f-ddca-449f-a1b7-0b86eafb316e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5e61c3b5-dffa-45b0-86dc-93396c0c1d13",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b76597c-a367-4fc9-8b8c-775c196ff5c4",
        "cursor": {
          "ref": "66b8bc72-5c38-4d84-945d-a81620e24d3c",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b8b19e57-fc0a-47bf-b88f-81d558ab1d42"
        },
        "item": {
          "id": "4b76597c-a367-4fc9-8b8c-775c196ff5c4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8d53a817-afb9-42cc-8191-542726d1e652",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9a6f40-ad83-4368-8b2e-6d62dd1bb6d1",
        "cursor": {
          "ref": "554aa8fa-2f73-4f97-b56d-29bb638f8d05",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ca8f4444-cc36-4edb-8747-0c3c975a4466"
        },
        "item": {
          "id": "0e9a6f40-ad83-4368-8b2e-6d62dd1bb6d1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c85be129-723c-4bdf-9a93-4c6bc159ecc7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}