{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bac39033-efe6-4e9b-ae1b-edb41fc2af5e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "892f1cd4-d484-41f7-bdd7-c993ead879bd",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0383188e-fdb8-47a8-8654-3922ca232b52",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cbede0f6-9796-46a0-8b5c-bd673067fa4a"
                }
              }
            ]
          },
          {
            "id": "cd93d111-c129-4175-b857-2a620a2ddb39",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "89d18165-800e-4406-bac1-70cf86ad8503",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2b561744-7a5b-4065-8495-946555b5a8b9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c7a0b778-03c3-46d7-9e32-ec67fc5cb76c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "54e459bc-2ccb-43ff-97c0-e9919f1fa74e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1a675702-0601-4fe8-862a-9ab040c60fea",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93ffd147-e719-46b4-add6-fb95aea08ae1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52945439-8c70-4f1a-99e1-72eba4d2156c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5da0e503-7eaf-4770-af54-a1f1a97554cb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac60a8fa-d0f4-4716-ad40-77c58508b918"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "44c2760a-aa45-46f8-9df9-41ba075f2704",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d2eb5b9e-2b56-48ff-b075-30fb4529f3b4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0418de4-3676-47f4-8298-3b095d609628",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fc00062d-b8c9-4511-8728-656900f662a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7cf294e3-dc6e-4faa-94cd-7b7df530e787",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2049b961-0a7e-4620-9e30-f585ac3a60cb"
            }
          }
        ]
      },
      {
        "id": "b6b5dfe1-d1db-4b76-ad9b-2c02f239e962",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "fc91b484-fb6b-4068-9e89-34a5ccd68b71",
            "name": "Negative Testing",
            "item": [
              {
                "id": "855cc53e-8e91-4246-8272-63bc53c15545",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "09af0d33-15c6-40b0-b788-8bc043221a6b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6187be8d-c9bf-4305-9dcc-61dfd830f7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b63780d7-97f5-4a98-bea7-8d7a67edd75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa155ef-921b-45f3-b852-ad1c3829f26e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0723f588-5e87-4a2d-9df2-725921efd9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e24c646c-30f7-4c13-b6c5-2ad75fb34b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e826310b-d324-4bf9-9562-716034ebf1ed",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d40ec4-d5cc-475d-b1e4-2961b5b5c54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "800837d5-0926-4d10-a699-4408da03b150"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "381f3a1e-b843-458e-938f-c52d9ab12184",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d45ce984-059e-4915-a9ab-23f184f58f4e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571ef7df-b3ac-4749-a2f5-4e3c1fb78424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2cd93b4-e8eb-45a7-9f31-fd926fcf877f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f61949-e146-483e-9ca2-ed956d7320a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb55e6f3-a23e-46fd-b349-03f5a7195ccf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7538ccae-87b0-4023-adce-7e95221bd8eb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ef786afd-a1cd-4447-a359-5a2895d9659b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a4be333-dca1-40cd-a6bb-d9ffbb773b8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "18788b0d-bf74-43e7-b9b7-6c80307f736d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2bba344-f407-41c5-a637-300ccb45e2ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7a40d2a1-a65b-4523-aa7b-56285b6ebfda"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e2ab0ac-4bf7-4dc0-8db7-fa76c0ecefce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f132fc42-8d1a-47bf-853e-b15f51e91ca4"
            }
          }
        ]
      },
      {
        "id": "9170dbaf-83ab-41e1-bb62-cbd998a8e14b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "88af13d6-59b0-45e4-94a8-50c145a434d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a969ae15-0fc3-4719-8d16-6e385522a8cf",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "749bc4ad-3436-469b-8782-baf019c228d6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea99d601-0ceb-4ec9-8877-940d0508a48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1d36ba-e332-4683-9298-134811ea9ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d4a443-8c8a-4b10-bdd5-cd4117f3e89c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9bc1a94f-8186-4653-a96b-6c6774b68e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175098be-a050-4cc8-87bf-695cdc68745b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86dd1633-f28e-43ab-b7c2-dd8c9b43fd48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0545c351-027c-419c-84b8-67a831c0981a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e6b24f-1d43-49fe-8526-b8cb1160fabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "320f9043-6ee4-4f47-8573-9e5f7291b3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e79cfe-ea74-4556-9d8c-4d61472d101e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7227eaf-1bf7-4758-8fcf-2292d813b59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6586a57c-853a-4089-a293-7020706a1b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70388cc-1b01-443d-8356-5b1a48589715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3e49ab9-de30-4aca-8f6f-6eadf93a9cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b65fcc-b283-4735-a7f4-1a7a803394e2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "732926d8-ca68-4b29-a7f0-d637ab4d5b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d735d5-c0ad-439d-bac1-d73c009d375a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5f083c-6202-4854-b295-723dc66e9bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ff20401-deb2-4abf-9ea0-12ed1b146837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814d1d39-7f93-498c-8e16-918b0591abc5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5805d08c-2fb4-457e-9700-70162faca133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9643dd1-3cea-45ba-a3b6-a7dbd7f38dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a09ffb-2c5b-4384-8582-eed99067f244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d8fb660-5e64-488e-a2a9-3eb22cf0427f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2cd51af-abf2-4d9b-9758-c7684c6fddf2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1046b268-b128-420f-8db8-60e78f8066ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "524b2798-a3a1-46a2-b190-aee8fc97b5f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93313cb-4a25-42ed-a382-e8066b59a330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33554480-c27c-4c49-88d8-522e6ae53cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b6945e-7dde-46c2-9a76-3a18dd90478b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86837237-783e-412b-bb0d-e690d5165ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd059b5a-a5cf-4f9d-afee-e10faf1be7c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8860a90b-f798-4f0a-bcef-3997ebe6b043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d628bb1-fc44-4c8a-a99b-45804b011f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398138ae-0189-400d-97a9-becf58cee744",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5252f9b8-8363-48a8-aca5-162bcc716ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fca03fe-3305-4f0c-93e3-b80c44214079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0f7141-6c99-41f3-b0a1-9923e3d85fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "276d9685-30eb-4da8-b13a-e59cf9ce4faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7e399d-24a2-4a91-9bd2-beab922cc93b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee96fa47-6eb9-4633-84b1-a67053462292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b9b6c1e-383b-41c7-973c-752cf7546211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819a7e55-efda-47bc-8529-5d628bf67464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "169980fb-3467-40f8-8d0c-a1a5d13b3892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0eb21ed-c6d7-4b60-9caa-b67f3f021054",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b383d0d6-b049-438e-b076-d53ea07205eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf13a9f1-3e7c-46f3-8134-f42131ec8c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642e1de6-e0c0-4d87-a545-9a88fec99bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1968224-28b8-4b86-831b-e39666a52f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a325ce67-99c5-4838-adae-bdb87d9b15eb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549a3281-9581-45c2-8f23-441833012724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a78167e-5d57-46f8-add2-850fc5df80d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a508a7a-f92f-46ec-b9d4-a478c0d483df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f329d52-edc4-4b57-ace4-ba1a5af24109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7be75a-9df3-4f82-ad62-478361a14328",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdb3787-cbc1-4727-a1e1-7f54d5e45fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8946f905-efb1-47d6-9d50-a7266d8dc3ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416150a3-cad4-4010-a2cf-901a12df9565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94ef981d-eeee-4d6e-ab47-6ed5ba807eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9408b931-f7fe-4533-a57d-f82a67e5b1e2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82f694a-413b-4604-aa6b-f191c104cd2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a945c881-ce1a-4b82-a2fe-aebd8d0162cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd1daf6-b372-4ef0-8475-111d10a97627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e9dcacb-dc6a-43c5-800e-db998063c5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592e523b-9c16-4669-be5e-f9c08357821d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50bbc6e-1c3d-41c0-af0e-99e0090d7188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78652deb-8f61-4c26-84d2-b238cb5add31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acba631c-b321-4c4b-95d1-938954df08aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a06dbab-c80e-46cb-b190-8830b8970be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfdf2e1-aa8c-4df5-a002-d43b74763f5b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78219019-7589-4cef-b798-0f4c359e70b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f09bcf-22f1-4d76-a462-31eb1ce63128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef36a30-a330-4944-b2c9-812df639caef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a84e493d-472c-4df2-9f13-1045c6888767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de44dd18-018b-4d2b-b8fa-fbbafc299a38",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eced089c-4c0a-4dc8-9d1d-69c17bdbd4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f0c017-8b05-4419-8e6e-1e3d9dc0ea0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f062a2-6387-425c-905e-4a4ea1d1d37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c03a597-bb6e-4f71-9884-5c12160b003d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba219d4-5c12-4903-a1a4-ff0d478f8c59",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa6415d-ab96-4f7f-9ff5-920d1f2f47ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77de0d6b-b1b7-4f2c-b13a-d431f25d2805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d01eef-1daa-4d51-9bb9-77f31a8fe477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "652def18-7fc2-45ed-b22b-4e24eaf642b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83be65c-9dc3-4871-b294-96511a0605d0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3dd9bea-4360-4a80-8615-a486031553ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a7a890-7e70-44a3-b063-c2078f5ee121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5982245-15ee-4087-839f-e4ec2ec69702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdcf6e51-e3e3-4373-9363-d78ad9ddc2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4cb5d4-4f88-4b22-ad46-4f1b1fb98b30",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf5ef88-d781-492a-b6f6-0e3c504336b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66d975f-03b2-4dc8-a22f-924bfbda320b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44698e3d-16f1-463b-a353-5dc48115ebe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c097e95-a3c5-44d8-bfbd-d1596de8037a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6a4966-66dc-4f06-92a5-18f5448fc046",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22fcb448-44bd-4eac-ae1d-05c99ab899e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "189c3f51-753a-4e80-ac18-ffdbaf6f6e18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70bd428c-767f-4b13-ae66-40c6648f0a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52e29055-fbbd-4038-bb6c-7ed234a20136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125a093a-d463-40b1-af7b-680a734ad462",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9ef6e0-c5bd-4bf1-a912-c4e641a2d60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba9a8a9-6a71-4355-8671-19f8cda5cc58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d9faae-859e-49ad-9dce-cfeede604f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "81a74fae-3184-45c2-9350-621463626d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21109cda-03d8-467c-876f-eb630687f41c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7670509c-e00a-48cf-ad5d-fbcabafc28c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a696742e-a4f9-4515-80dd-ca3dd3f0f58f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119552ba-2993-4eca-ab1f-cf65b9e7342c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e2d850c-bc06-4f38-a3aa-41d140e9132a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b79d4ef-7a28-4c78-a3ed-30c2ff09cdb6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d73d3dd-4698-425f-a9a2-6a597a966100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92aaf200-3efe-4db2-a8a3-aa18a8dd5e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c56ce6-8985-4748-ba52-7b90f88640b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7f1a57e6-d32b-481f-a326-6c607a1b3367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0de0d8-0a75-45c7-9717-9229a0b79b46",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cd30c4-20a0-4d3d-b4b7-a29ba4b9e1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c286e6f5-db0c-4c2d-a5f2-86c32639744f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b25738-d81c-4860-ada1-4d5154516c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8be3894a-0496-42c2-a65b-39ce05963279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00bc60b-08c1-48f6-a14c-409bd7b02095",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7685389c-e34f-40f6-8643-d03c929c9707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "592326fb-250d-4284-9f6b-34a1f4981d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44909282-8092-4f50-8932-dc98b9744096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8d87fda-83bf-4e24-aa03-ba4f5cb0f913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f724f8-e5f0-4118-a70d-3eb42837bce0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb7b446-218e-42e9-8e41-c39207b752af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f45baa-deb0-4ac3-823c-0b3619067b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2609199-2bf0-4cf9-9628-4a822ed6a866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d08c3e7-23da-4c5f-a0df-7b4950e17492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e344e87-5eb4-4cba-a08b-4d4cb897a81a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d451e4e-b513-443c-973f-c9edcb37a97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "280f7749-44a3-4825-9913-155808758f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdcaffb-d965-4d92-89d9-eb94e645fff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e9a4699-5aef-4b76-bdb5-1b14975caa6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f894e1-0e6e-4a44-959c-c212f874cba0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "008539f6-f507-433b-a38f-32f955949879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7ba49b-32f9-459e-9f81-d65038e7e190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0686f53-7301-4b15-bd81-b80621c36a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7159630d-b0e3-442a-a424-c07265a8079c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce28d69-75fe-47bf-b9be-8410748db672",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94417136-29bf-46a5-9f83-7a11cfdb7c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d05c00d1-13f9-47b6-89de-f4cb967b5000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f097c13-b8ab-403d-8869-246a40e73791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "624a7bf5-672f-4732-b597-6e7e3ad25bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c28eca5-0f32-4040-b88c-b9c67549639c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "400dd209-598e-4e64-b430-d30f33954aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a3036cb-95de-4d1a-b0a1-8c2285e392ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3166505b-a9b7-433c-946d-8a069969a92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f293012-e686-4e6d-b685-87507d428b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b725b406-2326-41c4-a416-4f30ece4a509",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3cf6f31-3545-441f-8168-f271ca1f744b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39198369-5b5a-4231-827b-30b60605b09a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce146773-71df-4681-80cd-5f77f05e6e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7997f6bd-92fd-4063-b115-671eb7aa6fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa29811-0342-4303-a61b-ed2b8a459205",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5ed835-846a-4e97-a261-656f65b8f937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1326c3b9-7ded-4dd7-b911-9806f25f2193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12606eba-b99a-432e-b1b8-587d6b7c9a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d07d8d0-f0fa-431c-b763-9bc03d345179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da91710e-0df6-4141-a604-a9fc8f96337c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13237fa-ec61-4e52-82dc-a10e4e14695d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e09e810-cbb3-464b-aec9-91fca5fe1e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3383f6-6f70-453e-8623-f62f05908f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6020f6f2-883f-447b-a963-3ee0bd2b3172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686416e1-d1a1-471a-b6f1-1bc9c2977b73",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f20cd49-8c64-4c4a-b769-47ab1b5e2310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7686e6c-ec97-4d76-8bb1-39a813eded81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf6bb9b-f9f4-4509-b114-6e7798add225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40f36778-8d22-4b67-abca-baa13a006a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e396a2b6-1f9d-4e65-9ce2-8eafd19083ba",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d2bb84-21d9-4554-b74c-0248a5b8eeb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ff95716-d4fb-4b98-bb90-378524deb4d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f766c29e-c262-49be-bcdd-c07085273449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "25a84fd4-5c80-4860-aa87-a59efb53e6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dea89a5-e323-4a40-9a0c-8097eec24ddf",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36ab46e-5e65-407d-a574-88014ecb18fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9248612-beae-4c4b-9b11-2f27b783d63f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04fded8-3f99-49a9-8eee-d59a5727c09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec78c316-69bc-4cc4-8f00-f5d9bf80314a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37555d5a-8c1a-43cd-9a63-635fabd98b51",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7489e8ad-1dd1-4fbd-bcb2-a907a5d5c6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f526d3e-9426-45c3-8946-183eafaceb60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306868fd-65bb-44d7-8e71-df2b9731bd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e899f32-f142-4589-bde3-6be7c2958cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e576cc-d96e-4aab-a858-67adb22397ca",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1543b0b-4244-49cc-b8b1-d0546cf79075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c7d8361-13ba-4980-a8c4-1f1e73766d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5affab4-b43d-4597-9ac5-9d840db81588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a75eb207-2c1c-49bc-bb84-fb502fbf7e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b21d6d-6457-49fd-aa10-e136c8b2b92a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d4fd92-9a74-47aa-a2a2-f952ece0d887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc38247-f719-4de7-bd09-08415837c81b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce91fc5-1d2f-47d8-ac33-b9417fac76c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf90e7c4-5fac-445c-aa22-52707c02518c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3aadf3-ea3d-4e73-b8b7-a53be1440430",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3666e4-b2c8-4873-ac96-bef27c8c8d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a25dbc-b77b-49a1-b60c-24202435fbd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21ac754-5950-421c-a515-cc01e2227995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fafcca3-8ff9-4108-b7a5-9cc14f94da16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74fbced6-b09d-4eb9-9788-f4241e937a95",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850f4c97-fad4-417d-9340-a914d55ae035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fdd61ba-c821-40ae-88a6-9f34830e2a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a537ab4-7671-4640-bcf6-63ebc8c63fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a938282-5e56-4062-83fa-b6c26d5fcdb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430f9840-cd42-447f-ba8d-872af96d92a7",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262e0366-59b6-4378-8199-1e6fd14521ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a38087-f023-4de6-800e-cd42fbc33e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16d0146-78dd-45fa-b476-6337c9ff6456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a4bcac-ccd3-4038-93ad-40ffe066bbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23bdcac-50d0-482f-a7e6-b3cd9b05f2b2",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4901b8f2-ac80-4173-8a07-40d5d00b0789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda31138-fd3b-4c1e-8133-e00dd5adf956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9cfe5c-551b-4da8-87bc-0ce0e9ed3998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f77e7648-395d-42cd-a1af-2869385c842c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc8ff9b-a311-4cbf-9ebf-ba59577521da",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3df2eac-24ad-4c72-890f-9b5156e56e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6daf22c7-4b38-4c41-9ebd-6584e3a3bff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06bfa54b-9334-4da6-93df-b782b5c47965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a13981b-e201-4a7b-bbf2-d8b5d1dd85c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac1d156-0d6c-4660-aad5-6cf152e83a92",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9a035e-b0fc-4e43-8cba-2a0a3e4f51a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a3a263-40ea-4894-ad05-2d023eb1751a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0f4b39-3441-41d0-819a-e5361e61ab65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0642198-7cfb-4011-9d25-d0b1694ff800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5db1b92-e2b1-4701-aff8-a3717e9fcc8d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d48caf-8ba0-4b16-bbd9-f0761bb621f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d600104c-11c9-40a6-b7aa-3c998be26726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed05a109-48c5-4f46-8756-de4ec20becc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3ea8e8f-3005-4549-a8d6-9534d0d73722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0103ddfa-4771-4568-837d-acf704ea5cf0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2c4e7f-0e53-4415-95aa-154213a471cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e150ed-0be7-49fb-9a33-1a783f1f7545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1277fd18-5c23-456d-805c-403ca2e2a0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed5daef-a4a3-4dc4-bd34-2371dc8184cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4916e5e7-a0d3-440a-b642-f5267031fba4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2fcb854-631b-4da4-9f33-565dc22ed291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00555ae0-fbe3-49c4-9916-76ddaa8b4063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489ca835-fec0-4fee-b1da-5f2400689e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24326535-ce63-4801-b321-374f1fcf190d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ef3329-7aaf-4423-ac7a-2b6a8fc920d2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4605df5-16c9-4d7a-9753-75f67c819141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccf4e5c9-2fd3-450c-82f6-fe651a8c04d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a5e7d8-2efa-45ce-9281-6b3fe899031f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "de720e1d-bfd7-4ee9-a5c2-a53f18119701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0097a94f-bc4c-43b9-8090-ef3106ff3a5c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7cb314-acbb-4e4f-8448-adc11abb74b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db3e24c-f7d8-4e49-839d-cd691ae8ec18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a05ded2-ccf4-41d2-84b5-f15332a2f112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e357dac3-25a9-44f1-900f-6cee49b61fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1eb244-4f1a-47f4-80b0-0bdf5017beea",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2645d16-95df-4488-83cb-497e5b72ba9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f286b443-c6dd-4a38-b2cb-1ff3c7e6425b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ec2cc7-4821-4310-a31e-0ff5d1343d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1702fc8b-c24c-4076-9597-4271177dd4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980dd8ff-9a42-4591-8df3-0b0cc1678a73",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e2b734-6dc9-44b5-9018-3cc7d06a6bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e6aed5-08df-4c5c-a5c4-023c1155835b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f162c440-7161-425f-b370-07e8a5a597ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c257ecd8-7954-4ee7-9a4b-a5670229206e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4001e2c-94c1-4d34-a1b0-5a65c07cacb1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe6f993-1d4f-4606-95c8-75336ef33fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04593acd-cd82-440e-ba76-9c917e23e877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782d22c5-dfad-43e6-9e14-a717721e78d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b47ff88d-7d3c-4dd1-ac4b-9736be404b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef12e398-9e78-40a2-a0a4-10d97dc98368",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1456cb3-ab12-4749-badb-08f81406e27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b6df16-8b37-4c03-8a44-66059ea88ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b8013e-1d8b-4443-9dc5-93c4409d06a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "871f23b7-ca8c-4bc1-9e89-1eee5f67ce6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37760c7f-74e3-4089-b376-d6ad4b843e5e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0efe35d-cab2-4f8f-ae22-f4bf425cf140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ca0484-28b5-4ed8-ab83-3d5692ea9289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99dd32ad-1dfc-40b9-a36b-2262c5e07bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d765a173-7bfb-4d92-9331-5e0a15de3559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20433357-d7a2-4848-b083-428342016aa1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc100f5a-27fa-4536-9ce4-a9e2c9b8596f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec7a987-623f-48b0-b2e1-49962d104c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299a0117-9d1e-4777-95b5-e47471397a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "25a78143-313b-43f2-b22c-70bf319922fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94afaa2f-4034-407c-975a-97e65994d1d1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6322ab3c-89f3-4464-97cc-4d778cf9238f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "579757ea-813d-4ce2-a0ce-337e0d42cfc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aff7620-363a-4481-832c-c9122d4db000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "30426b3e-0562-40ec-9b0e-545acda3de03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd7d1d3-6823-4eed-a67f-a365e3f20b8c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83c93a9-8549-4ee9-aadc-5afdc5666a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "340cc372-21dd-4b1d-9d35-03e36b47dcf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e470b32-8833-4bc8-b01c-b48b1674ca2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9859b018-3688-4a00-bc5e-55943829d22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8769b344-ee19-4de7-8504-1888713b077f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17865a9e-0f43-4752-8ae4-edb3b6c2e729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd306fd-bd0f-453b-a833-e76397de68f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb298d9-cc25-4556-b504-10849719fcd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c4fa739-0b23-4341-949f-70590ab94ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c6fd3f-f3bb-48e3-83a2-9047d8c9171b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10fbcd8-f4b8-4882-aa1c-2988b8059865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7e02b7-56c2-414e-9a28-f5e836491534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7157f2-1617-4586-a148-1cafd29b51fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c6d14cc-7d3d-4d4d-a457-a0dc40eef424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c78e95-5c9b-4678-9924-ecbe2f5208a9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "214336a5-f51f-4e37-83f1-6a6a4c7b877e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e3b49f4-3ad8-482e-bd2a-b52562476c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0d5ccf-7c4a-4f7a-baba-f39633492dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "638dd075-5135-4f06-acda-da02a207d985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e733b3c-6562-437e-ab0e-16ae2385b129",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ae0983-bd45-4b1c-be0b-bdae214b568c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79531979-69e5-4054-9a8b-c2c4f173cc59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42fb5eea-1f45-4070-89ba-18e22567d6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "be863474-fb32-41ee-a070-276d0953fc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca26eda8-13b4-48c6-a381-10560bfb6c0f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11153e9-9cde-48a6-8576-31a12dcd85c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b540850-989a-4a59-926a-09d8870da998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9201cb35-559c-48bd-b14d-d4090cfc72bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d89cab13-9de4-48d3-9df6-4252f5a4db08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f693fff5-30c6-4911-a15f-f8e549f6010d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b88191-b649-4745-ab83-6d9b0b40ec19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "874796c3-386a-43bc-aded-828daa25ca52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5b9779-a069-47bf-9f8b-33a954c56938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31bc5504-f420-41c2-990c-ad3fef15525b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9063f3f0-d316-4e18-ad1e-e9f73251d1cd",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8e7fb9-40ef-4fb1-bb46-c2ee87f120a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbad5655-1802-4890-a50a-569b58fdc302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b438c319-8664-43a3-bdb8-fbe38db31752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "900d2e65-1315-4a0f-b3dd-ead7d5fd8864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd167c16-c58c-41cf-870e-89133c455a9c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0400c8-be17-443d-9025-4762b540cbdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df3801e-79c4-49be-8fec-9070527584ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de428221-e177-4b73-a070-527799c0d9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09a373b7-2a89-4cb5-a065-35ce3cf09eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc56284-dfc8-4583-9162-84aae6ce2420",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4770b8-269d-48f3-b705-0b2f85dbda60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a514d88-6bd8-41a8-afb6-23d2c2f0d8a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c48ebd-dfe5-40e0-8e8b-e474f4a40703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0955d39f-812d-4f04-8535-0597a17ee205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431fe852-0969-4d17-80a5-bc5b1bfedc2d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1058a7df-f557-4498-b5e1-1b3308f8f614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51426ecc-c550-407c-a20a-ffd94f915f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2625eccb-e3a8-43c7-ac73-10ff172ba9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ffdcee-3255-4d15-95e1-e31fe5735d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb9226c-54d4-415e-a518-9bdaacfb5203",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb25cc10-db52-41f3-955e-f3eccef84185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e36dd3-b879-4a68-8837-54efe419cb0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67de3dbe-2209-4bd8-ace6-9cc79b0fc676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e56cd44f-c6a4-4c47-98b9-e331184543b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57bc87c-3a82-4d1a-a73a-d5262b2026ad",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95f01a7-440c-4709-845c-0d5dcb491eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3544f97-b4ca-43ad-84fd-569cf7bb19c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a439a4a2-21e4-4a43-9741-7c7ec0c12a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46ebbddb-028f-4ed8-824c-5a4b46f1ff34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b14830-37db-4b6e-a605-206e263f7e6e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3102ffcc-cf71-4824-af01-f4ff8bdd97c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b1e0fa2-cc24-4009-ac10-69637689d087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11114db7-97cd-4cd0-bf27-52905843e55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "947bd8e6-4559-4902-929b-d6d3edcb574a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a05a871-b843-4f41-b36f-c2c8b3a57e04",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c0ab43-55b7-4dcc-ada9-d9e9f72a8bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348554db-4f82-458b-a042-b267de172386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354fdda8-072d-4797-bfea-f8eb83478b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36e25149-6c8b-408d-b1b3-eebabd37af42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155b2467-0ac9-484b-ace9-893642fb52a6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc305430-645e-412f-85b3-7e5bd7f82a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c144220c-3c20-48ef-8347-824fa24cd48b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b807fc54-18b1-41e0-ba6a-c4f07d2ca606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c008557b-1474-4386-8eca-a31cd3f576b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec6c290-8852-437f-8aeb-142517f622a3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897eceb1-663b-4d3d-94cd-92b8c3b869c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c1dad1-0056-4862-bce4-cb18caef38a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6e347f-a31b-4ccd-a422-b94bf72c3927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "50a80212-42e0-44ae-b1f4-7db64977d1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435d6e3b-70c2-4af8-9663-b0b637faa8ec",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6fed161-c550-46e4-8b2d-45ffd6da2c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3288c414-6383-4153-b8ef-acfef75350ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56dd41c0-e6bb-45ef-b174-186e3721e8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9cf531e-3259-44a6-b60a-59b1d4e64bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4294ba02-a402-4319-93b4-1b2df2f6b193",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a00c0e6-8464-455f-8b34-2e80329b1c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d76b19-0891-4a4b-82d9-3053d0101207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e9c220-8aed-42e8-8593-9f155018d133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0456a7d7-22f2-494f-8eeb-664921e41919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38734461-696e-4353-9a33-0b8c1db2eb18",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1ba115-5a14-4f5b-a33d-c35ca71e961a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf784daf-5610-427b-83dc-b3dbd4975ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff54b79-c6be-4482-a627-ef9724814975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0daa9b10-1466-4204-927a-df3f8a0dce35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a0eb51-2326-42b4-b91f-90eee1fe39ee",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d35042-ea3b-4993-b3ba-98a4b862a623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b58f3ec-c2a3-4347-942e-634f6c9289f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42686655-8000-4e58-baf9-97d0743d1d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10944dcc-e8b3-40c3-8541-4c6c10d97a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f5e598-a6c7-425b-abed-5e8630a944d5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cae9f6e-e98a-41c5-b9f3-99a03807a27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c933ad8-7a1a-46be-b90d-5088a894bbf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7d62a6-4a7f-4372-8d2b-34caec2304ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb4ba749-5040-4b75-a724-29290f80695c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aef43df-b472-4c53-8678-67d2438a59b7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff508a93-94dc-43fc-8a9e-a4e0844e296c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e310b68-b629-4325-8d8f-78d3d5723cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70ad4d2-71ef-4c0a-a0af-a34f73dbe374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d0fb5f-2896-404c-a6ff-18202927f6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa007f55-ba0e-4b26-9379-b86f8141270b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3f7a10-1402-4e6a-b1f7-4a975a887486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a473c72-1436-4e66-bb55-c5a424244848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedd6124-42ec-46a1-9a98-1f2b10ccc31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8407032-c113-4d45-a61e-079139c4a94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce32f4c-ddfa-4e60-ab75-71b06cadb9fd",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f31ab73-a565-480c-a5a4-1daac766c2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5154db34-f2dc-4713-83ac-f9f6ec32655f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b908ae-81f6-4942-9173-1d0199e3030b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ee7d56-ee24-41dd-a9e8-1e3dc42f2ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2384d5-72ec-478a-b8bd-01a9ffa94692",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3e9b62-6f66-42c2-bc97-fb5eb5aeb09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e192a56-39d6-4c33-8de2-cb1bc6ae4186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2bf1f9-4c0b-4363-8337-6c5ec871d0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b86e23-06b0-4e0c-9d0d-657fa13b2db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065622c4-f0b3-4595-aeb0-efad387a936b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49705254-e294-432c-a528-fd6e5ddf4f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6c517a-aa0b-4772-a1ca-b629596e28bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4567e42c-3702-4368-a941-fb4254d020f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "964efd98-f85d-49ab-9da4-b32e725feae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa41617-7382-44bf-82f0-ee96f20437a4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5989f1ec-6c81-4a87-8d45-344d321338a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de51fc7d-bcd1-4886-898e-f4f38d325f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fb7abf-7b3c-44b6-a815-4d8d1e16d6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d1ce2f4b-c9a3-40e4-92df-df17fce20912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b91445-37e5-4afa-803d-e49536302c23",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ab5105-750c-4b3c-8fb7-f56bda507686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4138d09-ca78-4a4b-b4ac-571240902c59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49f89c9-515d-497a-b64b-189411428945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "301d6dc4-3ef8-4d36-8d15-3c90c5f0c7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e2a240-70ce-4623-9e73-c7952b638a3c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ecb6d2-d3a9-4ddb-a478-1e02f0d79aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "947d982a-fe43-456e-8d4e-06d21beda4e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d77fec71-820b-4d4b-af4d-ed3b89d77372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b98ddfaf-239b-4f81-8a6c-a46aaf90f589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16665a86-afba-439e-bb68-3be355384f25",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34aa1b9-547e-42a4-8437-72d7e5910a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca8cfb9-b257-4621-9dbf-9583c50c9c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2dd5e74-b641-4758-b378-b80ebf17196b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2baca698-0496-44e8-b077-07048f50acd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4b6b77-7ecf-45a1-a34c-99c8d18314bb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04903368-9ea3-4c85-b42f-9c92f663fc6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2173fe-cf7d-4942-af4d-6f4e45e85688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0c3082-9f4b-4db3-b2d7-949ac2486d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d7e1787-a4e2-4449-a8ad-cc7d0c466732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36bf14ef-1103-4d76-bb75-33bfd077f5fc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aacaa44-a4f2-4127-a3c5-97906b591e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e35275-f655-427e-9e65-eb214dfe38bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ed5df0-ee5f-472d-a71b-8cbd29f71bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a28d809-1b0c-419b-8b8a-82096a0287e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71de56e0-c00b-435a-be5c-cea2c08d2e22",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c529799-0ad9-4085-add6-e685b47154dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a7ad26-944e-4654-99f6-939ac0666bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446154a8-caf2-476e-b96a-2a0107486638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f59287-94f7-4874-8add-f933c34b0aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cf2cc6-c584-4955-af06-3798ad3e59d3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95c6e73-0152-447d-9858-0be5997e7a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b1c21d92-f089-465a-a53b-f6622c89575f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9a218d-a5f3-4ac2-bab9-848e76dbdc33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6cd4434-c492-4415-a940-6673050da986"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f228ca9e-f3b5-46da-8185-f060899dbebf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "89129f47-8489-4046-b7c1-db0830f0fee9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37c9c3a-bb2e-4aee-926f-82d3b4ff4eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1cfbcb6e-0f24-434b-95eb-b508770eb13c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0973893a-feda-4f4e-80f3-9a2171620580",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c664dde-6ff7-4c81-99fe-ef95d49eea38"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "784b0345-bfd8-45cf-aa3d-8dbdc9a3aa4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "897a9724-beed-465e-a00d-c04e89f392af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2eeda2fd-2553-4fe9-abe4-961e57cbc08c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60df7ee0-abcc-4957-a069-10789a95fa52"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d845f1c1-3164-4181-a36a-d7bf338f17fb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e6c25550-55ce-4e83-9519-41bf44dc4c19"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aa1426fa-85ce-438a-9abb-f5294abcb49a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f97f6f23-6844-431f-92bd-4a4bc1ad836c"
                }
              }
            ]
          },
          {
            "id": "e0eceda0-f301-4e8f-ab34-dcc7e2f117db",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d2ef1183-98f2-48f6-983d-fdd6344218b9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "759c8870-8450-4a9c-b61a-3b799f27d1a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7d21228e-f9c0-4f1e-b174-70db8acbf742"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2feba47c-f558-49fd-a7c8-68a202ea5952",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3440fa71-b895-43b0-87bb-46853412d225"
                    }
                  }
                ]
              },
              {
                "id": "e2f951cb-88e9-4e82-8a5a-ba5f2d64e5b3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79d99f20-49ae-4fa2-a71e-85f975a5dad3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "687cb622-02cc-4ea5-8ee2-ab000e814378"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4320253-1738-47fa-a261-de6710bc4208",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fd12ca1b-2327-49f9-9365-9db86ee726c4"
                    }
                  }
                ]
              },
              {
                "id": "09410a6b-4455-48a1-a7bd-b3e5ad5c4cd6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "efaf4a85-c15b-4a36-8102-f72fa0bf3526",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "98cbffac-f070-43b9-aa02-5110d9210716"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2865f3d5-92b8-4a31-8191-e628bd64ec2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "22463947-326f-4a7c-8a19-0750f4305c78"
                    }
                  }
                ]
              },
              {
                "id": "638c6734-9eb7-4df3-b569-a509a095dfc8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfbb92ee-b898-453b-ab03-7041c1b673e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9439ee87-9ad5-46d9-accb-c52f43c05b52"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aeb65f79-76ef-432d-9fde-6cb1fb2b1c2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5173f48f-5f57-4d7a-bd89-4e5e6c857c31"
                    }
                  }
                ]
              },
              {
                "id": "51fba0e6-c333-438c-8f3f-88f5b4c6b5f8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "271d94e3-9748-41dd-921f-09ee16f4bcb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd583e39-d68a-43cf-a29d-5966b532eaa9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ae8e391-b227-4de6-9234-4a48f43b81ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d2309943-8b83-4544-b78a-070125168aad"
                    }
                  }
                ]
              },
              {
                "id": "ce4f5469-bbe5-4db8-ae4d-44125079de62",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f4e9fd1-0f4e-42bc-8052-7be61861f333",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0155f98-d11c-4077-bd18-f3bbb490f366"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4369599d-4c60-48c4-8ac3-5ea18e46314f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6abe5f97-4563-4f70-baed-610e961e5060"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "33fc09b7-e8f9-4867-a170-7264cfcc3447",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "635733f8-f5e6-4fa4-a263-e35f1b05cb18"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0bd807e7-8a60-43e8-80d5-e56f935bd905",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5fdb62d1-3893-45d7-ac7c-4d3ba8a1433a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5ddc1d7-4c5e-495e-b728-dade5e9164df",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "bf661f41-9a7f-49c9-81cc-b4e77a01309e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ceb88a96-9642-402e-bde6-415f5d8162c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8a1a1dc1-f601-44a2-81be-2639988703f8"
            }
          }
        ]
      },
      {
        "id": "731b51b2-8af2-42a8-8e97-9d6e03b5f3ea",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ccf381b2-61ef-46aa-8fdb-086c9ddad462",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27fdfd4e-3b0f-4f6b-bebe-176892e42ee1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a34e5c7d-1626-4d12-94b4-c0d70224a74a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7634de69-317b-4b52-9515-422cfed128dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d473a2c4-9bbf-40e9-ba36-369f5c63cfe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c266c2b7-b7f8-41c0-b1d2-1f85d5ec2b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "04b59eaa-773d-47f0-ba5c-c2c4b410a37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c67190-19a5-46d1-b4a9-e9decb026cf9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c36754-4f15-48cc-b1f6-7b27837e18ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee80ee56-dc95-4164-8f5a-e39f78964790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82bd9cca-719f-4713-b793-dbf14aca61d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc75d33a-b506-4778-93fe-825155378648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941abe58-e176-4f85-b378-48a91a7ccad4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3367f33-2722-4702-a512-f90bbcebf820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c95330-c192-41d5-ae2f-10255c18572a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d606a6-7efe-49d6-ae8e-b7c9e9266ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8115b17-43d1-4968-a87f-a6e0733e7bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d015687c-353b-4099-91df-5da6550aa611",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2413926-1ab3-4e95-9bad-f8015ec5a28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24082a8e-df3d-4c5b-94c4-cda4fc4e2b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba93346-93e6-4962-9b50-ddc1ad7b5499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e721837-3484-4d7f-82cb-962a977134ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7397fe-d5e1-4a0d-b73b-4a1c9aa96ff2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebce846-ee7e-4691-b437-3063e373d1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4906339-8c78-40aa-bd83-65008e8b1fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b63b7c-71ea-490a-beb2-e4e81dfe09e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "adb46c36-7525-4328-b650-3865bc57575b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350489fe-a816-405e-8533-11bd5e3c2d0f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8344ae6d-473a-4f94-a623-394e223fa438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db79de0-8d67-48f5-a165-0605a625b1b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49e1bf7-9407-419e-9497-24587af97062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "98b126d2-8f32-4fa0-a53a-c2befb6707de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96d92f7-aa42-406d-9f4d-bbf967f58d94",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c0bdcd-32aa-4f7b-9c1a-d3d93826ca45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b3bcdf9-3186-4d45-8047-f12884d370e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0980db54-a473-480e-b018-3a1066fe6ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ddf47f0-2d2e-4120-90cd-d110ac7556a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0e6156-037c-4548-b744-987a6ffb9893",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c075ed6e-0f1e-4850-b3c5-de3b81fd124c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5d0f3d9-9d49-4fec-a124-2afbc221055e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19b0c95-8422-45e0-9c55-afa341c285e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20a17ff8-d64a-44cd-8a85-716317a2e415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02826aec-1117-4a43-807c-3f35db9a5f38",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6a0db6-666b-49d7-8d1e-70e31035b177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad31af29-c0e9-48b1-a17c-cd3a761731f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791340a5-a73a-4469-8d5d-b75f664cbe60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1618b516-1c0a-41f1-8e42-00abb6218fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a47402-00f5-42de-83e8-438d00f99057",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25c00d2-c8ee-4c8f-baea-6f0226333323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac73a00-2b73-401c-8753-c5fc8fed479f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8d7cca-b69c-456e-a8b5-efb1d1363f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "019f01fd-dbc4-4152-bed7-101e79117083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9817e5b4-2672-466d-8942-a31ea02f8d51",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80bbf560-937c-4e30-bcb7-b8262b086f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e6a96b-7e93-4cc0-9f13-821e149b1933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc20dc4-6a1f-4815-be34-db500d843fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "39d806c5-93c8-4469-bb8e-0850e9df3ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c033c7e-6542-43f5-847f-14292ced63eb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64db4d9-108e-4f2e-bf66-1df3d292a35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92274fbd-4dd8-4adf-a71c-b121decd421e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc0aa33-6f87-4b72-afaf-8f58db07668b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "49440fe2-16f4-4082-b4cf-0d3d7321853f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b3a537-bca3-40d2-a3eb-2323789ec034",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f8b33e-75bc-415e-a31e-6859173c1760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b1edb8-0006-4f21-bcc9-321820caf740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3402c9e6-be9e-4874-a327-dd0cebc14b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb501e3-9cd8-4b19-98c1-b1f8486f9c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2438e84d-f0d7-44b8-9fa9-bd592b4d0694",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e13120f-05e8-4e8c-aa44-ffaa0d6bdfab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ea4d03-36dc-48d3-b2d8-97f5242a5ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c38e303-8c1d-405d-be43-70ecf1422818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "41cfa6cc-aa53-45a5-b171-9cefa26ca9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada535a6-a587-4f8c-af33-71029ca3500d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bd82cb-7110-4e63-8043-8e9be0fb2e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a064b46-400b-4c13-a4e3-f896a38e7a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668b8885-7b34-4cc9-ac12-d8b374a972ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "042727e4-727c-467f-a040-34e1802ca4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39ee241-230f-4e6f-aa85-d6226e18dff2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4077fc41-96e8-49d4-81fe-7f64ed823de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f7be3d-a283-49ea-9a6e-f8df8ca2ad33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af4b82b-6734-4885-a361-a9f26442babf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "74f2ca90-7f6e-4d72-a689-221e042f4a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e3d6da-dc6f-4af0-975d-2d836b43a759",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6affe9b8-6b30-4e61-b74e-5b9f60b3bf9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d9bfe3d-5bc1-4066-b9f7-fa04994ab06c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2f15d1-2bb4-4fb3-af69-45e8a8152436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee79c1e4-6956-4d16-8c6c-77381beab254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbcf96f6-6163-4dda-a604-c9aa961b868e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31ffcc3-580a-40f5-ba1b-8e76a2aa543c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3144174-cfc7-4840-a179-e55c8a07363d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec764ec-5f3b-411e-a41f-a0884abeeac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b43729c-f4e6-421c-8adb-4291b8a3fa1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f19e97e-df17-45ad-928f-b1313b6806f8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "548f0692-5d14-45cf-9613-e77603cee988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a85ebe-cc6d-4f8b-acd6-8766cbcaeb1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a473def7-8dac-4470-b24a-d8450e911d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e43d69d6-66a7-4d50-ae5e-9c6468ee02f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec08430-c405-452b-bab2-b9ba60a298fe",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "415fdd5b-2128-4683-b0d1-caef86bf6650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c50b37a-4b75-4002-b99f-6bbb5d8763df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93789dd9-ce05-4321-afa8-513b580f83a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abb0f83a-db5f-45ff-ac70-3a3e2fdf0989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a334a48f-2779-4736-b647-faf2b20086e1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23defc86-baf9-432d-8e88-c501687507ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91bae4c2-e209-4296-ae66-6ff4217ae370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ffe96e-1c4f-4df0-9243-e8cf585e3095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "601049b9-f349-4cec-82c8-212646802c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1151d10-a29f-40b8-91bc-2a7452ce26ca",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48da789b-cc36-4d9d-ab54-9d3c4c2fbe50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99cdb7fb-6534-47b7-aa2b-84800b87f1e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812e9477-e8e9-4e23-a14f-3e30219a315a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f29084e-a81a-46fd-be0b-7a63a0ded4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0957cf36-8c1a-4e37-a8e4-2840ddb93758",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05671b44-acc7-4da9-a38f-d0f46b2af61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb86de5-803c-4c19-b3bd-0f76b2b01d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22156354-d5a8-4bb2-bf51-612260f336ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e300eee7-28a6-4543-86a8-8e01f07e795f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff03fd1c-3e89-4044-ac51-de5c8687e3f0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db15a359-9960-4012-94f1-fcc0ca839275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fdfd573-6b1d-4655-84d8-73627c8d9e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbfaf718-8758-4727-acf0-70743e33d7eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb1705d4-5cd7-40c5-b303-4d0f432f08a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56012510-733f-437b-b353-67224518ee31",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9e3a64-20d5-489e-81d9-2b8b2a1e0a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f93e02-d18d-4b39-abe8-8316119e5678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060bf9fd-e148-4854-a44d-07dec6cfa80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc6223fb-d2ba-4ebd-8bda-5cdb8d104517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76579bdf-996a-4f4f-9df9-ccaa75ade6c6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "359b7a49-18a5-4a77-8422-d28a8e277f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2258be82-126b-4fc5-83c1-28e2c2caf360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e93e4a-0b68-40fc-93ba-55f4a977baee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "076d5e3e-361c-4e25-b595-3e9b79a7e5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a8ede9-aa98-471f-9b7d-75fb58c43476",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5ad8db-708f-4cb1-8de4-d724488e750a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b2f866f-c0e7-4afa-b524-5f825d306f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aeeb7a8-d6a8-4fce-a40e-71f06e823f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35a6b140-999e-464e-92d4-c107347f32ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fdb4c37-6f8c-48e8-b777-e80ac65f8b29",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6deea984-9afa-4d90-93a2-303054dd4c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9801eada-9f97-434f-a7e8-e0077a69999c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890ccbb0-200c-40d8-88f1-0f1fae9241c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd89f479-6c53-4d8d-814f-c8c5965bf233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0fa33d-b7e0-4c97-aba3-fbb6d843e984",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6a8e26-f05a-406d-884f-dd2b3682c319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "780bff25-ef99-432b-9b3c-79b50a3cb9b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1fed6d7-85ec-47dc-8bf3-45a5e14166eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ef5700-a7ab-4355-b89c-2edf0937ba97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013005b2-7cd1-4cdf-8734-00ff9e274771",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5de9974-0732-4f10-9eeb-a896eb757150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d0dbd39-2e1f-4568-8653-8409bda5c943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f818d7a8-5fe0-4abe-87d2-64c91595af0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a17a582-f381-402c-b690-8b54e5e5d7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bedeea8-dc0f-44a2-ba30-c6e9a38bc784",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b4a36e-7f44-4526-9c04-40eafe7d1950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b169c80-2ae5-450c-8327-29d99ca5a970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1211889-a30a-486d-9c83-62a53533ef02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e0ea558-b56d-4c96-9363-b8f1a06ec393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2997c0ea-fe4e-4fa9-b9ad-47113816b98e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d512a84-b2f2-4f43-98bb-05482b924d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e78629-938e-4de9-af6d-c63ebafc0687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5bf60b-7062-45d4-8af6-b3a09ec3b1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e51b2845-6ee6-4cdd-9c9a-e1882cf6c42c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d040a2f3-5c4b-4c83-825b-ad9a38e5dea1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b5ede56-fc53-4c93-b837-46ee24ade0f9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca6b852-81a3-4ce8-b82b-03e1c366e3c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a14b0c5a-f80f-449d-ac6a-bc2d92c50f81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac51a80-c707-4d57-a0b6-7b446363a337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d136fc6-b89e-4e39-9dd0-7669a41bf6d1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "238fa67e-d43a-4e0e-b4fa-77757ed44a12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04460d9f-101c-4c6d-8a23-af8c635fecf4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "19e92d32-4a21-4ac7-9f1c-db72f0b60126",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e16f9ebe-9cc5-431c-b4a4-32a4e892abfc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58a968c2-8cb7-4bd4-98c2-7e36a976020a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bb292221-c243-477d-a061-398e3fda9745"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cdbcea81-5535-4d3b-94e4-b650a0196d84",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b1a7918-3451-4588-938e-3a063846b1a4"
            }
          }
        ]
      },
      {
        "id": "8f37b05e-aa2b-4713-ab2e-02961c6fe723",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "c9241c8f-b662-4467-8f6b-47345ff5e17b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5cf19eb4-c39a-430c-a604-5dc8047a95b4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1bca5375-acf7-46f2-ac0c-c46514ca5641",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3a6e84-ddc4-40d3-b08e-f6d0703de504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e422a0cc-42b2-4da3-ac42-50caf0a2e0a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4decdcb7-ee53-48f5-ad82-63ac40af88ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c41a3d24-0e06-4fd7-89d8-84ae973ed042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c26056e-cdd5-48b5-880b-0ec220ee1305",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e13acd-5c15-4067-8717-526ff72a947b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a148be52-1dcc-4773-9609-91a6fb7b3772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d05ea6-d3d9-4555-8ec9-be0fd09897fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "122bc216-2279-4b40-8241-fb7a675617ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158aa9ca-e84d-45b4-a49e-cbded07ed8bd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbe1c64-f008-4f1a-94ff-ab3e9d737278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09503645-f41a-4cfa-8488-bad004fea8b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb379aa-9191-4391-b9bf-c56012e7a1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c50e48-f249-4815-bf27-87a5bdd7eaba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c1c6e4-6d0e-4e7b-b610-ca90f1c8d1b3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf04d90a-09d0-476f-9603-ded1f2b997d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2042c5b-259c-4444-8359-58725a91b6e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800acdec-6071-4f72-a95c-cd60fa6b24d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "54918207-a1a2-4074-844a-85b72ae64253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deffa2a1-c1f4-49e5-930f-23821a0c4dfd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90598891-4ab9-4d7f-8ece-9f44906a5e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c955a7b-cb92-4c03-a91b-2e5ac6d064fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c0a40a-984b-4357-90fa-117ed5c93112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "32e57434-320c-4704-8e70-13c60f60ca5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a194ee-c956-4dbe-9b1e-a41dd714e6e7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d753aaa1-7d87-42d1-83d1-8a28c8c5b253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65fc8126-4077-49c9-9d67-f76630a08a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bcda8e5-d22e-4135-b9e8-9899ec9439cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70dd5f77-37e8-4419-8420-4f382a8fa759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f8a91e-7b24-4f9d-bc16-49c0ab0af87b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4e57dd-ea40-453a-8059-e6e945f64b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ca76eb-4058-486d-a968-cc561b107790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1f8249-5cbf-40fc-be92-4eb5d95545cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f517ac14-df4a-44f5-a9b1-0d41ec272c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f18580-f768-4cd1-9a15-f9f32dd16f7a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95661f3b-c211-442a-ba1d-2f1c79cdc367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3390a0e-8749-44bb-9fc8-642e221b4941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51dbcff6-5b23-466f-8309-9b47da78d185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3fd64e-982b-4c13-a733-2ac2d90238e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ea9733-f6eb-4bb7-bbb1-9b5ce43ffdf1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c580e3e3-5d11-4c55-a43b-414fdd816a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d00680b0-6807-4c36-bee7-324ff1b10b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21d50ef-1594-4853-8634-de379164f1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84058af8-67a8-4604-9f31-327e0f7f647d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee4a0af-68de-4a83-9a36-cda306eef538",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd8868b-3ea4-45a4-9537-f217b64ba86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7a4583-c831-45e8-a2cb-7e33d65b280b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35569955-757f-4a35-accd-f6c5372bcf7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ae774a9-7d61-469d-a56d-ea291760f4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732820f4-bb3c-4a9a-bb8b-3a94787df409",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea41af1d-b4ac-47b1-afd4-2c265ac0375f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e66297f1-0daa-45f1-ba62-007eb800752c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e04fa8-9717-40fd-867f-04ac5404d53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cc7d5407-2694-4d06-bde5-b3e2ccfd3d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5dd817e-d2d9-4d3f-9a4c-173db26fb0cb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba518cd-4791-4f77-a3e7-1fb9883bd6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca1c20e-febd-4694-b47c-8b9b5e012f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d04b3e-9877-4c9d-af56-7a42dfa49c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3d1a5c62-178f-4d99-a740-57169c339c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80771123-8def-4d7b-b9ce-bf9dd06f9e0b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ee34e2-683e-4015-8b54-06e7751c818e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c81ce073-5402-4c5e-8add-417376ff6438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd0583e-6e4b-4ce1-826b-bed3d6b3f1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "01d9e5d7-f241-4632-92ab-81a3bca56c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2975c72-1da9-4e57-bfeb-a2ac921b0b9a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be5275b-01e4-4807-bd35-bc5506f96fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "104cf85e-90dd-4e00-bd1c-ce4598dfc980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7a1ec4-2e6d-41fa-b1ec-5e2def2b74b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce34a2d7-1a41-4461-a359-f4dd5366b4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a56138-3e31-4b79-9321-8f1310687876",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f36019c-4a24-440f-b7c5-51270672964a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9188f7e-c3b7-42f4-b0bc-b30807db4f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5790c56-c0ce-4a5c-8838-c7740d5c4d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea768b2d-7d1d-42b0-aecb-1916ac33a183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c674e51-0dfe-4360-b93c-0def58b25e68",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e688e4ea-2204-4014-8d3c-68834b0a35bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb4acaa-b2fd-47de-ba7a-9909a5efb336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c687fd-3eb2-42a7-8666-ac3cbf08dd2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "026959ba-530b-44f2-9c25-f40ee9a9700c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba41f6a4-23d1-4915-b96d-37bcb15d971c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b06ce3-c2f1-4b5f-a93d-fd3c09c4982f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4c09362-384a-4f32-89a5-04c6fc70e588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53d2339-cc8e-4ab0-a790-75b4f43094ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c47c6960-43fd-40d6-8cb9-d93778d0b588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a97b00-977e-4507-be66-37124e1b2930",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ffa714-cb7e-4fdd-ae75-6021a3be9037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e8bcbf-e7a1-4e8c-a9e1-3ff2e0785603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451e6fe2-011e-4e00-8f2f-767c8bcebde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "73688591-ee58-4c4a-89e2-a704294d4b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378014d5-82a9-47f3-89b7-144e52eb2d53",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc897e3-044d-409a-906c-04fc710f57aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61eb33fd-4634-4cc5-b4ef-b566157642e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7983965-5208-4223-ba60-dc5122bcd4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57c29f62-dfed-4c79-875c-0699cac96d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4672810d-0df3-4c7d-a25f-6aa6d1e54188",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5617afdc-a5eb-44c4-903f-a1dc5f534490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5380aa03-a485-4ad8-9eba-446e91538dfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21dc000-63f1-4151-8771-b9c58012ebe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59746a11-0d1b-456b-a2c1-363ba8172948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3e260a-b5d3-4b89-b354-eb741e0dab03",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb7bc80-d2d4-410a-af36-cd83cf31fae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4576a02d-bc19-41a4-a57a-6dff5268c9ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5a0238-3558-4aed-ac56-e2500b6dddbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "225fc2c8-8dfc-45d2-b581-17ab5f05caff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c345ab2e-5b6d-4170-ba2b-6b6fb9fde25f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8840c0fe-1eb5-48bb-ad5d-e60c9bff1983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b258cfb-26d3-4358-b9e4-84921cdb0ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9190f803-3c53-4e0a-a9fd-9b5e8d097a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c95267eb-bef5-4afc-aff5-acd8a51e8d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b34896-d81a-4226-825a-a623c0072415",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdba7764-0589-4562-968b-e42b0624dd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d5dc74-6dcb-463a-bc03-f5e5ccc90f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248e2b9a-3a8b-43e3-998b-7bcd70943e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e780a752-ac21-417c-af34-45047108e6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330ad04e-19ac-4be6-bead-11c7e146957e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81af6694-0f61-4c8d-902c-0f5c177ea434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240be1df-01a7-4bfb-ada4-3935efc87aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ace5aa6-35bc-4e34-b4b1-0e6285c2a28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e5b18a5-dc45-4102-83db-ac6b5c68442f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01651fd5-ab69-49ab-9dd5-35331aca22b1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c62ad27-63c1-40dd-88aa-27516d216129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad8145d5-2199-4f3f-8ee4-7c8d44e55cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202099ac-772e-4195-a6db-4bcf7a5bd830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a007e02-2142-41c1-bc1f-170ca0cc871a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85398e1e-8548-4a43-8b03-eb71341fa716",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e73894-a34c-4fe4-85ef-cc36c5f70752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a881649f-1588-4be4-b451-26c4dc480353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c875bb-5c84-4b20-a574-dd8db1e7b7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca004cf1-5205-4500-94ee-9fb3771d8762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9c5086-b316-481b-afc1-9d4e208722d4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbfe134-128b-4d1c-8ec7-f15748fafc37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f53af619-5681-4971-8635-3cb08a248331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc79b640-4b9a-4e15-a030-aacfdd21fcfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd079ebd-7b5d-4a3c-aa89-85b0991a2029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0bb1f2-5532-4e04-a053-e0d74f608e2d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68eee165-02cf-4cb8-b8fa-d3d0f9659b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "025c60a4-c6c9-4970-a601-821054247bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323c36d2-c668-4338-9c61-00df13b70c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86cab810-cec2-499e-b68b-1d92691fd72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebbaff63-ef40-4f5f-8cd4-ba2ee73f36b9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80fc07f-a686-4a79-b776-3e7616f0e9b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26e0b40b-afbd-4180-b0bb-23d30908777a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b65c687-e78d-4cd7-baeb-0abc27baf9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5096bc0-7fd1-4327-a8c8-68d45092a96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee5d44b-9de2-45f9-84f5-8d67ed5c59fb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0edad1c2-c1c4-4334-b8a4-b1af53e02bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c9d0b9-61ec-4ea5-8ff5-6aff85f23cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638e5132-6737-41fe-9cbf-49b48be36b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27f45747-2809-4b95-935e-0efc90d59002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ed1464-5fcd-4658-a279-4e87f639d0c2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fc7648-01bc-484e-a005-32eb77fba40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc96b7a6-d4c3-40cc-885a-4366326cd522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7326f924-2e0a-44e4-a518-c3c40805a5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "019a923a-ea46-4bdd-a871-2661481a39ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aecf05ef-13c8-49bf-a310-84756f0c415c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ec6c44-8826-4383-97c1-33a0f6e63e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6123ac-c852-4c93-b3a6-ca6742b7defb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91abd4f2-ad7c-4920-9b5b-8b2dafc80d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a7eb941-21b3-4475-897c-95a8e2c338ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04da61cc-ba4e-41de-aa4c-201a5aab3147",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5c571d-7628-4354-b621-fb897603a1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f644fb8f-7d84-4418-92b6-70c9c73809b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927e0580-cb99-4731-862e-b02088c93d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d3c4710-59e1-49f2-88b9-247ddef42b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878de591-482e-4956-8781-944ab0c177b7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "491d626b-77be-41ec-b54c-c3da7d5add02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24669dfa-b8f8-4d0a-beca-5188bb84fdfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3181e502-2e39-4f6d-ac38-9c15e2d0b054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9500090b-2a7a-4446-960a-19ca00815815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47bb5fb-9f97-458c-80ec-f1788d1b91fd",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c816d0f9-d030-4eba-abee-8a08a1841249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c3e255-fbc4-477f-a591-636387407e18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbaf29fd-d172-4c80-9e7a-fe012bb5ed40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "979f0f50-1c2a-4c1f-ac77-a7c3b634651d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b96e8d2-1af1-4dd0-a6fc-2b0f32d5540f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7a517a-0a95-40d2-8b90-b52d7beafd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1627d60e-5e14-432a-b214-a3c2357654bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2c50b2-af60-43eb-b255-bc187610f7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a2704e6-957d-45d9-a3d0-21a43c6f2e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a1e3aa-c72f-4d21-865f-69e68a64be8c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "928ab891-9ef3-48ee-af1c-7697d1674f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eebbe5a-162e-4caf-acc1-2935699ac93e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5b65de-71ab-4e23-b303-77d209e0b150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f34ff170-0f08-4b6c-b82f-03268920ff4f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b59c99ce-12e9-41b2-9712-1d9a304b5531",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3deb54b0-7ce7-464f-ac8c-7f1f13265ce0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c56f1a9-92b8-43fc-9c40-38ddd36926e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "20ee3a37-8082-44d7-b6c8-ce93bfdab3c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "683eb2f6-73a7-468c-a977-f3ed1b3c7f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8609576e-3045-4a6e-b7ee-2409983e0859"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2df57db-110f-43f6-8b38-63726f69c012",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abeaadb3-fcfa-4b8c-adfc-14a407d753fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9837254e-a99b-4ff4-9456-e13c01f997cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4752502b-7f88-4447-874f-f4f3f81406b7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8f87877-65a4-4ce0-ac64-e1958778eba1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "636dd157-b761-4eba-9a43-785e642bfebb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2806563a-b42e-4547-a3af-429140ebb1c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "989c4e87-88e8-40df-af1c-a33674908407"
            }
          }
        ]
      },
      {
        "id": "52165b91-765f-4d3f-8102-789647ec05fa",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b9a05e63-08bb-4f7a-a2cd-480e5fc84240",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86003904-5c67-4cba-af7b-8997cf6d8ac9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3e64154c-3fd2-4acd-b13c-f0759efb6a86",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10cb6ee-28ef-466a-ba1c-7ea620a34140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60827ad4-c744-4255-a15d-75013dd2fe8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2506d670-ad16-490e-b2fb-7da359d1cbf1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7339af-3837-4788-93b1-9aed1c05aacc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0aa204d-6f42-4ccc-aa93-3e92bbd28043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7253f8ad-391f-451f-a7bc-203304c3be9d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ab0f0f-e844-49a0-bd11-b2d0f01dbfe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80b4530b-91f7-4934-b9da-d57aa4b1907e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d90df44-38f6-4e8e-a6b9-0ac00c6e7e2f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d195796-789d-4ddf-b638-df47da1e94b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "945cb692-663d-4e03-9be8-d8b0a156e118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412943b4-beb1-4cd1-bdb9-3db8f24dabd8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "695c9991-7cbf-4720-8103-ae10b43fb3dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a267f3-b890-493e-9aac-ea2d849ba8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85e6f84-8227-4940-9c58-1c872ec14571",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcac391-4155-4466-8eaf-855582a877d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aae9574-6d86-47b1-a433-06a11cb47712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72aa22c-ae69-4c6a-9a52-fcee74a62ee2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e043525-476b-474e-8f34-91df93173255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f7049e-c30e-4719-a086-822efd74fa92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39340601-1da5-41e5-952c-8bbabebc0e63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33159e6b-cacf-4b99-a91d-61315c27bac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c87b4b7-da96-48f8-899c-2ba69f1df0c0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d043871-f09f-4b05-925b-758127287c3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccdb1d34-ce19-41b2-b332-4ffb1556ad9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9ea09b-bee0-4558-bf22-c4a7c83cd7ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b75b13c2-104f-480e-bb4c-7c22a3545006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478fb1fd-67d3-4ccb-8327-470506051cbf",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b2276b-7a01-41fe-a341-74a75bae6f86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd1f6652-91ce-4ff4-a704-3dea768a617a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44159e9e-e90f-43a7-a5a5-6aec8eacb99f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d6b811-1ca4-4878-b2e2-cbf7adc46fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42da90bc-5684-428b-882a-af8c0b705bae",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec823271-afd4-4dd8-b179-be471246ea57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68b068ef-ba7e-4943-ba64-c6a813c7a063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b49e05-7d7e-4ce4-8498-925281787b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8e8271d-d89a-4ce6-b46f-02544ac52609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa738c00-559c-4075-9cea-62e4ff9a004c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60811981-8138-44a7-ba68-509f93b02acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9fdbff-24ad-4462-bcad-3e8a6924ed03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0750cd77-134c-4d83-b03a-09c490d8030a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "234d5231-60ee-4801-865b-7f878f173420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15b18d4-20e5-4c63-a358-d1a87c33b173",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2bd01f9-4312-4714-bfc9-79f9dce54594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3480269f-e033-47ec-a965-51776ac896a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8144ede2-e369-4ee4-9d9b-f586d255a7c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf65efb-6b42-47c6-881d-002d970fe316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c26c4a-217c-4ace-89bf-15d0bd3e0040",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55032ee-0898-43ae-988f-0c9a51ff9eac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46186493-702c-4859-9fea-ae91f1e7ea72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47ed919-88ce-4aee-834a-8180ae6998d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b136f565-f1fe-49ed-a882-9df8b29c971a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9123bb8b-6f12-45c3-b293-8d96bc17c25e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138b0288-3fc0-4c1e-954f-90772d2e1f5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88066a86-15a2-4f22-9af3-522023c2a316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb92638-265b-42e7-86fd-92198e0111ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "250e2ff7-4300-4dee-8141-cbbc21b16e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ae97b1-2d0c-424b-a6c6-849764c94495",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b58122d-9368-47bd-b50f-fe720d55672d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eefa08d1-dcce-415e-95c5-7e24e039cdd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a3fa7e-ce1f-4f89-a6ab-257bc2b6731b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e2bd24-6949-431a-a8c8-06a340765f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00459768-cfb0-4279-9661-fd60962d978e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef4ef6f-8092-4af7-99d5-7fd90a2ca77b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f30245cf-317c-4ed2-8f6a-cbce6663be7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb904773-bc92-462f-9a4c-11db6ca31ceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89c4194-aaf3-4688-bdf5-c16ca82e1424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2170566b-9198-4398-9292-91ada0c61873",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cccf756-247e-4fed-b6ba-89c9895174b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92204906-4d98-45e7-8ddb-ddcbd4078eb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c17582c-ff98-4197-96ee-9221e3ff1773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fabecb6-caf8-4e41-82bf-8ed63a95cc9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8418ae08-17ee-450e-aa64-76edcbc0eb9c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f76d5a0-a9be-400b-a80e-b818ee404167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6427713-45fc-4aee-bc84-537cfdd4d4c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01947d1-1c88-4cae-b2c3-a8697b9a0314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d84ba1e3-9112-4067-9a12-182337122fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5306dcd5-fa69-4c9c-8cf7-bb7d2bbed261",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06d1123-a7c3-4b8a-98db-a49fd206a026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf020d4d-84c0-4e1a-a6c5-6fd4699bd2b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "001adc20-3b56-4b3a-a13a-7683a5d346da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "375a969e-5fa4-4fde-b615-857bfdeeaf0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad0bc9f-b401-4d5f-bbf6-c135e290ad21",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eca047b-172c-42be-b051-d46d10e98628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7ba7fa-4010-4d2f-8743-57055c19aa6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e8fc5a-3956-4cb8-bcb9-1787c5188475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d6370c-ff11-4b4d-9a7d-f52257f9aec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34894dae-f15b-422c-83b8-a39fe6b1283f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4894a4a5-bfc9-42e8-b8af-ea5bbd2f9f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f888e0f2-0a19-4afa-adbb-edc2fbb9f1af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7733996-8a52-4f08-bef2-76a18812034f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05a11173-fd70-494c-b89e-e48d0f6532f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9551f31-71c3-4f30-8f7b-e0b19a909218",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50633e9-43b7-4f45-8bb2-14b4168efa44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3741c3ae-46b6-4067-b63c-33b74d2d4546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae3ed11-7f54-4509-bb15-b1e97d0f4feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf21076-13dd-4de3-9907-194e7244f4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77befd61-f03c-4f35-8e23-67ce3fbec355",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b02162-94f8-47b7-849c-e10d044d79fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fbfb26b-5f3d-4010-b15b-c403009eacca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3549978-9335-494a-9028-5f87b3b85e1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7c035ee-4e7b-4044-b4c9-77e65f92b30e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3246bf-70a6-411e-9b4b-cc1f8666cb2c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ffb51e-61ae-4249-a2b4-5035381a6e7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "515bad19-7202-4d95-b1b9-b87b5944f78b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3fee1d8-426e-4c6c-ac0f-5439a4454771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea5a7786-4835-43e0-bee0-0e84b81e5d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f9102f-0f96-451c-bd3e-99c43dc8a6eb",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9734638a-1dc1-4c98-9a05-f33a83155ed3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c05f4e64-52bc-4950-b1b7-9855a5f76229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ea71df-a73a-4f98-ae63-a6abf8812d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2024601-4c47-4d32-9f39-5cc0d79a40c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0281a18-cb58-46a9-840b-ccc5eef79150",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7513f5-5a8c-456c-ab18-54c161743eec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "859aa47d-17f3-496a-8cdd-753f4155bf2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf1f234-e4b2-41f8-a47d-bdc0a09610fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "446fee27-9d50-4ea5-bb6a-3e90e3081cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbdec012-e16f-49f2-8134-41d0f220e94c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4721a2ab-1142-4879-b401-fa676a24b68a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f8bea14-d0c0-47c3-9566-112054a7d43e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a586cc66-0097-4bfc-843b-f741ab4d1995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f118f6a-bb86-4e2f-bdd0-8c460e164652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5470b28c-78e0-4fa1-95fa-d9d75941b7aa",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c009264-223d-4c28-bbc7-07c24facec7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eeb6003-c293-4c8a-8ee6-a450f5245769"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2817a84-672d-4f41-9b1d-97db9b30adfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b9387e-3416-4941-ae64-78c818f61bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a3d12b-1730-46ec-9a9e-130637f30521",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c186ec-6679-456a-9af5-857b2361837f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e69ed581-d621-4107-ad5a-18e407bd0640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71eb7a5a-ee6d-4fca-82b0-d8f74b3979da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca4e549-346a-46c0-ab5d-acefef3f8484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e35f03-4783-442d-8408-d1821ea8fbb4",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bf2367-d077-44b6-8fed-6dcea7c9af12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee97dbc9-d147-41ad-9e69-053b742a56bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b814e7b1-388a-496a-8926-796a19021a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ac144f-27b3-4a0e-aa23-97b5de463ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb08d48-44d3-4a3f-b139-5658de05e7c2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c2acc6-9a17-4742-87a4-9e4ff8686a08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42921453-2aac-4f27-ad28-ca1791b434a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b0f170-6f52-41ec-877e-a0cba4216e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c2f203-71d1-41b8-b3b8-2b66d51e3ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d70c6be-0056-49ce-9638-bd005f7f8644",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131fc4d4-667b-4590-9b4d-5401e8115c85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a20241fc-3184-473b-8b19-8eb5c438e835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01dd4655-b408-4d45-9fdf-c355a0c46d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271e32cf-414e-4c4f-a709-3d497852b22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4841c4b2-a41f-46d1-84b6-75d0355c4aa7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f10806f-b50b-4019-bcb6-807b0c9e0d11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5ba6e30-969f-4048-a8ca-3bbc93bfa4b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed190d5-6b9a-4a5f-88e8-3303e55c2e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bed2b0b8-dbda-406c-a389-a11d88403137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4310df-9f4f-420c-9e18-4c77973d09c9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45735ab-fbde-4c3b-bb5c-ef707329c256",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebde6536-5899-4e52-9407-d2f8fd7c37af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71fd200-bd24-4574-80e9-ffcb02584f56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76bd861f-708b-4594-b270-40b85313dc5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5519ef2c-b9ea-4559-bae7-70d062d5b429",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173d871b-17d7-48df-8ee5-483479481f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "736bbfd4-2a28-4995-8728-2f5e69ae8863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64e3426-9442-408c-bf79-73e9b3cddd9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e98de1-c657-44ee-87ef-cf08b189869e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25eb8165-3d97-4749-87ac-42b77b3b4b1c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f3a699-dadd-4954-8a30-32825b1ebb66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8e0857-2057-487a-abe0-54a21594f271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f270a584-36ac-455b-acd5-00a1a2ae2b38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70baec98-620a-4ac3-bf84-26c14932d131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043b862f-28de-4d13-9c75-a374295dfdf5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e3259b-daf5-43b2-87bc-923bf859ab6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deca649f-ff60-44d2-9a84-d1139cb57f8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77cbb18-2fa7-4481-9c08-8bed18511a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a64aef06-7e2e-449d-be61-6534b6a1186b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f131ea-85a5-4edc-b548-d1357f0a773c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbb3fbe-b975-4e46-9bdc-3d1f6b7e791b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16af249-6630-4a2d-a437-943d20f26950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1369f32f-ad70-4f3f-9bcf-444a0a6af773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c799e40-220a-4b6d-a14a-efaf5750ac52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f4932c-b38c-4416-af6e-9134a6e629a2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf3adb7-3dbe-4145-8f3e-410e669bfddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0663f9d2-8392-4ba5-81be-e4f84a16e57b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9cc708-c9bb-476e-b268-fadd3cde4ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60490241-4c35-4735-9b23-081fdcfb17ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189ef92f-9de1-42ca-9e9c-ddeff6ed5134",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885bb6d3-edc1-4d09-ab3b-ccbdef23908d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f6f3525-34be-401b-9435-361ce679b8bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc3b607-45be-4c33-b701-51c3ae03208e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8223a45-6cb0-4020-8cdf-81bf6651ad88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a62d533-a6fa-43aa-986e-9757832110ea",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3511175e-1b76-497c-81e9-f16d4d3bc526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9858c461-1df0-4a7d-99f1-dee7a1cda4bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b0d4a1-ab4d-4d64-bc7d-a8cc844d64f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b686e4-7869-4441-9a16-2bcfe1ca9771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470ac54c-9562-4df4-8bf2-7d6fdea078a7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2bd915-888d-46c1-a731-a13c0fd15931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faeb033c-f609-4515-9d7d-e20556c94b96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8176216e-34b6-4d53-92ec-b4978676f182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19fe335a-c3fc-4ffd-9ddc-7d91985f3856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e326a15-87c9-4a1c-bc66-6a25ebe6fd5d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ecd1b17-5c72-4fc7-9353-ad303fa5397e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0188d3a-5dba-4ba0-9af2-9f89e3bd8026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c62e5b-e96e-4320-b986-c0c2b41f3438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7147572b-84ec-481e-a2f6-ee96b30d37e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36866c9e-ed16-4009-9bc4-21e91404d89d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2f9a1e-f45a-4168-bbe0-1a40e3de56c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1aed3c-24ca-4876-8917-86c691ff9561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5b5db1-3cfb-43db-9e75-7a68226e2aa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73cb79e-8be1-47e9-b8ee-36b884384ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9101370b-46a2-42db-9e14-75fe79d42b46",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1dea502-2cde-47cb-83cd-0dd7a859f072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b52f71d-a770-4882-907c-622cb96e057e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c2c668-6a93-4ade-871e-7b85a1b7c0cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c6aa904-4459-4aa9-898f-c87536fdbef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9edf81c-1ab6-4eb8-8a71-017cdd367c5b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a898b7e-f34d-49ff-a3fd-0958c0b99570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d01f7d-7cf9-4334-ab28-f25d63538918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23c8088-083e-43d2-ae35-e660a3ad7618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cdef62e-60ee-43e3-9e28-367d29d6c541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5291b2c-324b-45a8-acba-edd1ed220b9e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9cadfc-973a-46e4-bc00-39bc18699679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe16f0ab-dc90-4fc2-b460-000a4b595eb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23705728-86c7-4470-a72b-e3d7c4578cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654123e6-4283-4dcd-b10c-6685ff40d6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fa7aad-63c5-46aa-af59-f08753ead3a7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f890758-2948-44b2-9db0-8431934eaa84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bbe5b12-0bb4-4d06-8702-4356310c3af0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f979a59b-411b-4852-b173-8dd9bbd939fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c2e64f3-58ab-43fa-a99d-db8f4f5027b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8004d496-a4a9-4139-9fb7-05ea37fb36a3",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f99ef47-dacf-4ca7-9705-e6b1b87cf731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b14780-a30b-49cd-8dfd-30f37fe6c98f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf586ff-b8c3-42cc-bf4d-a8f8d309737a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85df1f8-20c9-4d05-aab1-835c0c03e265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32045cc3-c5de-452b-884b-08d4b5007ce3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cf6495-d357-456e-a54d-b9a900b215da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "227341be-7617-4894-9647-5ddc35186fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ddb78e-e627-492f-b1f1-abf0ccfb334d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c2ad9e1-a4aa-40ad-a791-bcf546b1953a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93163b8-6f9d-4242-9b2e-a6e2a86d3402",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4abd63-5a84-4253-86cb-daebfd87eba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd708853-8e62-4d02-b07b-b28dfa886927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c13c06-630d-4a06-b8e9-aa90b8535ed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b533cb1d-3471-454e-b50d-d70147a2edcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c337ed-9b47-4118-a692-33df1ae72209",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06792fdd-3dfa-4403-a6cb-5a7ab988390e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed97291-034c-4854-97ed-6e247b8d080b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "278b7e1e-a7e6-4bcf-92d2-fd15c37c31d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2750a422-f141-4d44-8bd0-cbd6afabaffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9976689-87ea-4edc-b50e-7927e062f4e1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d7984e-5c03-45fa-8bca-daeae7a3e009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27b70184-1472-44aa-8573-086da6e2ca64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32aeda7-6e27-427c-9354-f4ba424ff84a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a5929f-68e9-4340-bed9-5af2dc9a4e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265971a2-f64d-46ca-a375-0592f49b87c0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32325ed6-b1ae-4f2b-a3d0-7b50ad50dba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31849969-664d-4cad-8f34-5a52ad985bd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9834263c-b00f-4b81-bb40-998a575fa584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee7b0a9-7471-489e-863d-4cd9a977ac86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fda66f-3da4-4637-bb77-13c7d06fd9cf",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ace1cdf-40b6-4a45-9225-cd6bcd1132b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7f262ea-3c59-4b3b-8afc-ce42f731e421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ce2bd8-1bf4-44be-b528-2758d56e879d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ed2794-68a3-445a-950e-40031715c7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c9c690-2b51-4424-aaf7-10bd46bced64",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f95b62e-d17e-4d57-a2aa-bd253d1e65c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1974402-f633-49fd-b161-933fb4d34186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a28d54e-1f69-414b-9fbb-5f2fdc4f62d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9da62cd-d407-428f-9d15-23074b5a1a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94390e8-781d-4403-bf91-b7912b730a6c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9adff8-f2b0-4b66-8ecf-94e41f07abba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f71950e3-f66e-4b57-8bfa-1802b96cc03f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09205c44-9f4d-4ffa-b065-d1f3d38ce37b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9dfed70-aaa4-4a0f-baca-22f424202347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a60d1a-23eb-4ea5-85d1-5946e1805ea6",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb0b9bf-5d9d-4272-9122-2a03ee64109c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2959dee3-e8ab-4b86-ba99-71eca1e6bf24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28034e21-7b97-4a72-a8f6-96565a227ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e23300a-0755-4a12-a8f0-597792f5497b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158e761a-8d57-46ae-9e49-cdfd29b2184d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd7b85e-e076-4266-91a0-c1b2500cd5b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a653f8-b7d3-4308-9aa6-6c51ec33e2bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b983dee7-184b-44e1-ba06-d0a59134dbd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85e2c12b-a4c2-411b-a0d5-3c09c2ec8e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fffbc91-45f4-4d82-9e47-77765fcc15eb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2399f096-4dd6-4bb4-b1cc-2f7b8d1c6db8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8d1ca3-84d8-424a-b8ce-35735c597d05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05444e48-ac48-4d6e-800d-117fb3f61cf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59cb25c2-7d16-4725-a525-6ef56edbe06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c46fc9-083d-49e4-9935-c0fc93fdea12",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0464daab-4631-4c79-894e-d8680f4e5e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1173bdff-8597-43f8-9b72-1e9f6593addb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36d49b5-acaa-4924-97b5-cf74e06fc5da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a34af2e4-93eb-4c9f-9038-9e69e4e3d632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b065e8d-726e-4909-9f1a-02f6077a27bb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46df56fa-b1fc-4462-9859-c751fa5c1280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cc12022-ebc6-4ff6-85a0-8063cca3cbdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa62b525-659c-4cac-91c0-ad381f95f483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c91d362-f5f4-41b6-8052-226792cbe2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d593b7c7-fcef-444d-be1d-93bd32be8bf0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628a779a-b087-4d0b-a6fe-7033c853ef75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "983c9e32-aa6d-40a4-a24d-70accf2ce85c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11273f6b-2e0f-4230-8a2a-1aca433e43c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab27b15-199b-4618-8b50-129873f91aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395cffb3-6c8c-4520-bbda-6c072505b2a1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c3d68a-75be-43df-8242-df28e457b430",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69c23a75-da52-4a54-8f08-aaacde690947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ed67f6-ca29-41b7-a0ba-0f45e53f7b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe277e76-6c91-4efa-8c0d-5a14212516db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a024449-fb93-408f-9e2b-56d023154b3a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6789df94-6a8f-4ae9-83cb-5f0cac8e502c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e00340f8-d0dc-41aa-9902-2dcdfcf20cfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2502db99-7d3c-4150-b459-73c2c316db84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cc8e707-ecb4-4799-b954-fdc6d3b9951e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862eb975-4aae-4bbf-8d84-9e5aa63da38b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9fdd23-6bfc-4728-8ba6-fb07201e0b4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2c79548-2a58-46d9-a4c8-89f6e2ecf162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55693032-6afb-4134-b98e-b9ca9d978202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25deca79-0453-45f5-9098-e1816d6e705d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f89bc3a-8e73-4cd1-b52e-b3eeadd07e77",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4fd193-044f-46a2-bc06-bd990f1b420f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "653fe5e6-323a-4c0b-9712-41ce99ce526f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "538b1d7f-d5fb-49ce-8093-0c01fd156651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f510c83-74c5-41d7-9c6a-194aa535772c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1f4583-489b-457c-af17-7a0c69a89a0a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c8b74c-3dbc-4f61-98ff-441a5e2af7a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78a0acfe-b932-432f-b659-5c56c9311a21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6666039-5fc7-42a5-bcbb-f894b361e47a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33193a68-8f0c-4597-8497-7bba81932a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282c4dd7-d5a4-4d85-80ef-66cb17500837",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb446b39-77de-4b75-a665-b8738d509442",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48c01a10-ee8e-4008-8e8b-d82a343ec8fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec195e1-f3cd-4737-83ae-57369522ad93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6241082-89f4-46c2-a32f-6d06f25d9b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48752240-f789-42dd-a285-b81a4c57fb5b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d28e2df-9b7d-47ee-8e21-c7ffa678a127",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6639a171-b77d-48b6-9cd0-2fc4750399eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2e31c5-f71f-4f48-8863-00a2ab00bcbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "119991a5-847f-4f2e-8754-a5679ab3e007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7a5660-1a2b-4e9a-9a33-03a6981883f6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9cac322-f6ea-4083-b27f-2686008e3df5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d8265bc-800f-4c0b-aa51-a6189437e824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6891fdff-55cf-49ed-ae91-6ba4773da7f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533dfdd2-0190-473d-8008-3a835070d6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e86136c-1c49-40d2-be85-19a6cae19593",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164a53b6-c0db-46ad-a984-2855658b7995",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "106588fb-480f-49ba-ad6d-d54d90d502b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f973c2-88a1-4f0f-bb1f-790e046c1254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb45cb50-3576-47d4-8505-6bbee79fea3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2431a345-5e3a-4d36-9685-fdeba3d1786b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba88798-ac43-43c8-98b0-82c2f80dd2b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "358b5264-9ef5-4c45-b886-0b0471207cf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60d3768-c969-44f2-a8eb-1c28977e5365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c3b318-9ecc-431d-b9d2-16fd04d0d3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c61d13-d2a3-472e-bf18-d7497f441c13",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059c1a41-01f1-4119-af15-8fad1f95ffa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d807018c-229f-443f-bd49-45d10cffdcf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a9077d-f1e6-446a-90f2-fd32695b1c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "062ffaee-de79-4ffa-9120-41dba76bcc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652b1a36-7744-4428-a142-348d843e2cc3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6389e0-83db-4ad9-b26f-6c088fbf9ffe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0c4355d-3c99-4e14-9c18-2743d36fa36d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13247fff-aab1-4a61-aca9-4fc05b8c3f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1503dcc-ff37-4b52-96bd-fe42115f75a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6f34c5-da90-4f72-9163-9f64a5fca120",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1b557e-f841-4b23-92d4-c41dc83b571e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbb77199-0de0-46f3-b1f9-3c437f61fc79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de69d8d-9d6c-4088-9a42-4680f1c0d467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d4d5df-61a6-4527-a48c-05d9aa11dec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e520421b-acf5-4d65-aae9-fc864dd7712c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ceeda8-d6d9-4b2a-be82-6b457ae8c22b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc47c869-a22c-455d-846d-53262ffaf0dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "858b62fa-0dac-45bc-9836-e4a4beccffe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc9f2c8-46fe-49f5-9e95-0e25d5672289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4879dfe6-ed5a-499f-a0cb-f472f480183a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671e8f11-6524-46cf-91e0-21a2f0ea09c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fb58fb7-2501-4706-b7cb-1db1071a0c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3963435-8d4c-453c-b445-b2168d9df561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46678393-66d3-4175-81a5-21ec700980da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b51219a-507b-42ae-8c1a-7eb1f42b35e9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64760ee-fa88-4d1a-b4bb-79a64304b6f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d7e1252-befe-4abd-9dfe-c5662230ebce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d37ff20-5637-41ad-bc7a-42784967e885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb5e71d-e997-4c86-be9f-0757f28d1235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711deeee-2854-4514-a16f-491dd0ae5f74",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae7aeab-f5b9-4d78-8135-efe7e3515728",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18dbf3ad-b723-4cc5-9613-8441cdf269e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7edce124-4b98-4eeb-8fb4-7e4ae60c2d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e0fbed-3831-40cb-b57d-89586f9e8628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef4beb3-2f25-4126-95af-c7929a05b848",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e169a0f8-c052-4f8f-9ba6-72a232cab64a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21800e7e-16ac-4b63-885a-3551f340e886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5adc5f1a-e0b1-4a95-8bb0-104441a2938a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36de58c2-484f-412b-ab85-e3b78d218791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7662d4a-4657-4a8d-99d7-8c9f4bd033b7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b79ac7-acd5-4dcf-8a64-6103992ac2fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28895ec0-7583-4913-9143-c9aed5b2a72a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79175329-e027-4d67-ae21-62fb0cffd877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f38c1bf-71a8-44b3-8d42-a467bb5ee39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30e488b-7b9f-41b0-ba37-04c60705b745",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e938ec9a-cb07-4c02-a0d0-e06499abc87f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b11023b-0083-4c62-a927-b09fc99a8671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dbd1e10-326e-4b5e-8279-cc5171b2a6e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "675da032-da10-4fe7-8119-47c7ff7adee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9382b042-0bab-497a-8140-14a3bd1577dc",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62457e91-ed75-4130-b8dc-8a50a288d149",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51d3b216-cd0f-44c2-931f-747ebe884b6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da09c08-3126-442d-bfe4-8bfee00aef72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6f683f-e386-44f7-a896-4dc1ef249535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac6531c-31dd-480c-8418-d9457f873c6d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c76bc2-b8b5-4326-abdf-3bfe26dca74f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff57f54c-2c23-4a93-9cb2-8c415ca7205e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a50689-374f-4287-865f-cd958a0c0bb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85440c3b-a1b9-4db6-b85b-1609a36481f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2080e2-1a98-4925-94df-8b71ec45b2f3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f745200-ed43-4e6b-8675-3af0d1cfecc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b45c3d28-69b2-48dd-9602-596787a17a60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd804558-9d0d-4dd9-ad17-3063130b2803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4bbbe56-44aa-476d-b5f9-1746a8385452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70fded28-142e-458e-a49a-bd97fa4e7ef8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1ed58b-6eab-4ad3-939c-aa28ab722fc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dcd9438-bfc1-4ed9-a138-a5309db6c6f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b030407f-ddc2-47ef-8dcd-7d4ce5e02745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2c54380-94f0-4217-9eec-6c4d51cca0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4119fa6a-1a3b-4f9a-9685-f701a5785c0d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19411986-7b3f-443c-b81b-c9c3b174038e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "713e8f51-dfa4-47f9-b359-bcf7a7b059b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf753376-ffed-4515-a50e-971896a78972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d804ab56-d930-478e-a27b-aca01f9fff84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4560d6-31c5-4494-a760-556df2f057b9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77737e67-a74c-4b3f-a35f-ca0b7e9d85c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "563d8ad4-6099-4694-a177-039507eaee15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df21fad-b131-4609-9b37-1f7ec9d6ae4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aecda2b1-cdd8-46d6-8b0b-85a886cb7ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d371c6a-6375-4a17-8989-16df71af8203",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955b5fe8-c57d-42fd-94f7-43ddb3c4d823",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3dcccd6-8315-4b1e-9ad7-f29b6cde01bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a03583-71e1-4030-bbfd-38b2e83e6c79",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c210d8-46a3-4599-8cbb-50d5ee6cfab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5598e1e3-b034-43e0-b033-b76d10118ee0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c8980b-a42c-4d3f-8f29-83cb9608d5f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37d5e18e-b955-49e5-98c1-95dac7c9b531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6a03c1-0864-4499-b0d4-25ba00da1381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e1a20f-7f50-4169-9c8e-29cd5c900556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab447a23-2f1f-40ca-830d-44754a0c8eb8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8baee7b-e22a-419c-b7f2-d7f7fa3849f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9ef289b-3d48-48ea-9254-6979102aea65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2d0544-f5be-4ce2-ae52-5116e4cf23fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63f4871-75e7-48aa-90dc-f0268d0dd3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd34f79-0c8d-478c-a10e-1bdf38c49c32",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da3f128-1a10-4739-a0ec-cf8982f08296",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b22393f8-9aa5-4925-9f7d-ea95501b436b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9c6e98-9cc4-4830-924e-5f0bf44ca74d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383edbe5-7c42-4324-af39-a1b8ffd77752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78a2726-5d80-49dd-a0c6-6457dc6a46b8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589c2a59-e187-4ec8-b975-4769646f49cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f148f77f-6a5e-4767-b2ad-c9f36bbc0ee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dba358e-f4ad-4064-8c9b-ba0abdc59286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3bcc16e-ce0a-45cb-8803-2a5cf0cb3acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3fd430-2ed5-4857-b7ac-7f012053e061",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c871a4-8b25-40ee-89f0-2ab193b929e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81e920f6-592d-4102-bade-9ac8458646fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "409f0419-dd8c-4c46-a48c-5b88f34d9a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a886b7ce-9bc7-43d6-aa61-f262132fe852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892dd05f-d21f-43e3-be2b-bd9099a562ba",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccce75df-26c9-4ed5-a91f-59cbd911b092",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "852162e3-cf2e-4f13-9c6d-2e83be58bb3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96e330b-1918-4e9e-a939-e0d0fb329d38",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aee2a9d-549e-45af-af8f-a74021d465cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167c6a05-3dfb-4f8f-abac-b4777f90947f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0394045-f1f0-4669-a95b-51b935c656b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ca5df84-6851-4bdf-b1e8-8f7409fa1bad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe7018c-1e95-4f9d-99ff-e04545d97f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35d02a77-0ea5-4bd1-8062-69cf02c71c87"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90be424e-2051-4216-ab8f-217b8ed72714",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3bd14f98-e05c-4f67-be38-dcfb8d62c1f7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "caba2d39-bd10-430e-b598-024b20fce17c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "01ae51d6-24c1-4665-845a-785306e98e09"
                    }
                  }
                ]
              },
              {
                "id": "385b9b0f-b3d5-419d-a28a-9e76c6d0290c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a1e4877c-ca39-4522-a44d-f5c89034fb65",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18110c65-54fe-4fea-a621-328e177f3653",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9b6a9f07-4c9f-4e8b-a107-a4836eef2a86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b238355-6856-45d3-95ef-1954fc4d4c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04017421-0495-466d-8967-542e282d9130"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fce9d41c-8c0b-452e-b7ba-12e4a333f105",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d80123c-aeaa-47df-8a6d-3d8ca411ce09"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9201fc4d-b0b1-4732-8d6b-f5183ae26a75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2647dec4-fde1-47ab-a979-9711f8f25e91"
                    }
                  }
                ]
              },
              {
                "id": "d58c77bb-24d3-42a9-b025-dbe6517d1091",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ecb1faa9-1621-41f1-8006-0be1f588815b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15af2a96-95da-44e9-b1ca-ee6b5c5431b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "27cdd8b0-fb07-4c8e-8ed0-26aba2b59f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35734b5-e2d7-4334-a97d-d178992d857b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2ec5ff-d6ed-4a07-8a1e-c1303099d671"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a9dbd312-419a-4f49-ad8b-d0744b96645f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ce506394-b01b-4704-a9a3-ddc422b9bbb1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d3a9d17-43c9-4a39-a07b-c2bdb46cff61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4275ba59-a93f-42f9-bb11-81b8f6d474dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9481c59a-9b8a-49a4-b00c-de10c889e4f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0bb2cec9-9671-437a-aa3e-f0185bbf9bcc"
                    }
                  }
                ]
              },
              {
                "id": "67592034-28cb-4f60-a284-823db89218ec",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a93509d-b8f9-4159-a218-78a6b0656fae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "36667f52-b9de-4ed8-92e1-252b335dfcce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abb4369c-c344-4f03-9744-9113601778db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5729751f-8637-4fc8-bcbb-1b415b2a9c95"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fbdecb87-30b8-4dfa-ba8b-5f1ee5d7cc36",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "218280d8-e3a3-4af5-a19b-962586a885b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98fd462c-f109-4efd-b2dd-73622fe6ef02",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "066dd582-b50a-473c-aa79-41579131321d"
            }
          }
        ]
      },
      {
        "id": "d46e9e2b-6100-435f-ac2d-6f2ae9a5f72e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "fd34641b-4d5e-4191-80a1-7bdd15e0d589",
            "name": "Negative Testing",
            "item": [
              {
                "id": "82c8a069-8841-417a-9f08-f8914e291dc4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6d7ac4cb-b1d9-4970-8f0c-0e3d63dd45f1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e249d41e-16d2-4403-b948-761b9760b03c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "725ba576-79c3-4f51-b7c1-90809be0b05a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f052bcf-7849-4d29-8983-1534579900f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5538205c-c9de-4eab-bd94-ad27bbfc7af7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95e54812-7ed0-438b-9200-c834a5b6be7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08e8545d-ebae-44bb-92a8-a6638a63c527"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f71d2b0-179a-43f9-aff0-a67c631aa788",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67f33f85-359c-4aec-82d8-b854f6a68bb9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5c712b4-3e09-4ce0-bc6e-2e492c4f2087",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5ea22200-42bf-42ab-808f-1cd4fe0036ff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0631f37-3df0-4571-9fb7-3370c0ecfc62",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4054229d-1bc9-4f44-bedf-064b8fb8fbba"
            }
          }
        ]
      },
      {
        "id": "bab928cc-6157-4d1e-af14-f1bc80a6114b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "35dd5c9c-9bb3-40d3-859d-fe6fd2159590",
            "name": "Negative Testing",
            "item": [
              {
                "id": "162df0d7-8613-474a-8442-d88b9d24a21f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ad66d40-4a6b-4372-be6d-44b41eaf09e3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fc8b7a-63ed-40c5-a9c7-d2a2c52ab976",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d85c6cb8-fbf6-4ba3-9342-372d2a74f58a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d38d98-8e4d-44e6-a306-01c95eb433c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a14134b-7172-444e-b00b-88e68e3b5904"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f174e54-715f-46cb-8cc9-50b614d6233f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6655dd6-2495-4c6b-a81c-137ad4b21d9b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "acd88ec7-69c5-4d73-82fb-d47fa68e4d10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae6d4c40-92b2-4410-b36a-d55f34b62941"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "edb69c17-3192-43e0-b4f3-86778b462e18",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9e13c263-f6e6-441e-8674-22037268a104"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0eee226-46a5-46a7-9912-62519a677e2e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a40bdfa3-8e82-40cf-9bb5-2303d84c9ee6"
            }
          }
        ]
      },
      {
        "id": "bad02612-94ba-4a32-b49f-5b5e6a88b710",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c03f5c9c-5cda-4e1d-9f5c-00b059c09616",
            "name": "Negative Testing",
            "item": [
              {
                "id": "def6b03e-bbb2-4838-b879-2df3c1a6bcfe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a5c70660-4b45-43df-a456-944944fe98cb",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5c80ea-b9d4-48c4-8461-e5b6efa6b9ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "281e870c-39d7-4d57-a442-af04cecd29b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd138cc-a48a-41a7-bf49-612a108c4173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70c18042-b328-458c-95d0-b70818c6cec2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a807678d-a433-4546-b883-743978ee4ed3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51a05ca6-a9cb-499a-bf61-6f4c012ff27b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f768315-f6f9-47f5-b408-cf021c5cc0da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e01f008-ab58-498e-9d49-5b126aa1a334"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "337a77ec-98f1-421e-993c-2d3d77c90af4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6f8eb451-463e-43d1-9b54-eb6198d0227b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9738f0ee-a96e-4d6e-9081-88cd719ac47e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "14873681-a8ad-4922-8ec0-6c59190738c1"
            }
          }
        ]
      },
      {
        "id": "dfafa7a2-b677-4b68-b59d-07b19c68e45a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fed64978-65ba-464e-b438-f8f4e6d655e1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa23ebae-f0e3-4e68-96bf-6dc996737835",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b1b251c4-d553-42f3-9110-7563bca8ece2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b982fd1c-9b8e-4132-a140-34140b4de932",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6cba17ba-e449-425f-bd69-d507321b5fcc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 87.52816901408451,
      "responseMin": 7,
      "responseMax": 4878,
      "responseSd": 390.6452083207618,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692232270646,
      "completed": 1692232307108
    },
    "executions": [
      {
        "id": "892f1cd4-d484-41f7-bdd7-c993ead879bd",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d1ccd3ef-b30c-4c03-9b21-f80dc88799d5",
          "httpRequestId": "a906852b-e4ae-4ace-a655-2b84fe2299e6"
        },
        "item": {
          "id": "892f1cd4-d484-41f7-bdd7-c993ead879bd",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4d2a43f0-85e1-4aa2-8f75-bc5d30b945df",
          "status": "OK",
          "code": 200,
          "responseTime": 87,
          "responseSize": 0
        }
      },
      {
        "id": "cd93d111-c129-4175-b857-2a620a2ddb39",
        "cursor": {
          "ref": "fb9d5b58-907d-43c7-bef9-f28812a9d1f3",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6ee56b26-0fdf-4dea-9ee0-f6a0beeeb6e6"
        },
        "item": {
          "id": "cd93d111-c129-4175-b857-2a620a2ddb39",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a9b87938-7c48-4a4a-85b0-46d5368b586f",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "1a675702-0601-4fe8-862a-9ab040c60fea",
        "cursor": {
          "ref": "012f29a9-673c-4fe4-992f-acd520fdf055",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0d28cf8d-106e-4bc3-98a9-1e4f95e619d5"
        },
        "item": {
          "id": "1a675702-0601-4fe8-862a-9ab040c60fea",
          "name": "did_json"
        },
        "response": {
          "id": "77024f17-7f98-410c-bd03-c6f570d28a75",
          "status": "OK",
          "code": 200,
          "responseTime": 290,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09af0d33-15c6-40b0-b788-8bc043221a6b",
        "cursor": {
          "ref": "8fb26449-62a6-4db9-a964-fea9a9bad2fc",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ac1855b2-b0c3-4108-90e1-a57c0357185c"
        },
        "item": {
          "id": "09af0d33-15c6-40b0-b788-8bc043221a6b",
          "name": "did:invalid"
        },
        "response": {
          "id": "c76ef1c0-90ac-4f2f-b858-d47498d757d1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 579,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09af0d33-15c6-40b0-b788-8bc043221a6b",
        "cursor": {
          "ref": "8fb26449-62a6-4db9-a964-fea9a9bad2fc",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ac1855b2-b0c3-4108-90e1-a57c0357185c"
        },
        "item": {
          "id": "09af0d33-15c6-40b0-b788-8bc043221a6b",
          "name": "did:invalid"
        },
        "response": {
          "id": "c76ef1c0-90ac-4f2f-b858-d47498d757d1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 579,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa155ef-921b-45f3-b852-ad1c3829f26e",
        "cursor": {
          "ref": "3495a178-fe80-42cd-91b9-294e71ea2e10",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a35c01b1-b8d8-4aa2-a642-87388f86fbf6"
        },
        "item": {
          "id": "6aa155ef-921b-45f3-b852-ad1c3829f26e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a8f99765-0b6c-4628-9bc0-17e4f9dac19b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e826310b-d324-4bf9-9562-716034ebf1ed",
        "cursor": {
          "ref": "06e0a189-d499-4c50-905b-6b1f104d806b",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "164711d2-4bf4-486c-a46c-4abc860af4a9"
        },
        "item": {
          "id": "e826310b-d324-4bf9-9562-716034ebf1ed",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3913ea8f-8892-4010-95d2-b679d56b5a71",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45ce984-059e-4915-a9ab-23f184f58f4e",
        "cursor": {
          "ref": "a5417c21-a203-4f8f-b294-317133a215c8",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3f81c4fa-27d1-494a-8568-01d952664aab"
        },
        "item": {
          "id": "d45ce984-059e-4915-a9ab-23f184f58f4e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a5a455f9-25da-4313-8646-c4c20d9d3c97",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef786afd-a1cd-4447-a359-5a2895d9659b",
        "cursor": {
          "ref": "9662c981-0a05-421d-82c6-a2683a6d7e8c",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9140e486-cb4a-400b-b419-b0548f96e0d5"
        },
        "item": {
          "id": "ef786afd-a1cd-4447-a359-5a2895d9659b",
          "name": "identifiers"
        },
        "response": {
          "id": "bfa063f1-02a7-4c38-8315-174f577a607e",
          "status": "OK",
          "code": 200,
          "responseTime": 35,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749bc4ad-3436-469b-8782-baf019c228d6",
        "cursor": {
          "ref": "70fc947d-67a1-452e-9665-e7ea83a63205",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "08761aa1-9da7-44e8-89bd-49371afb7d07"
        },
        "item": {
          "id": "749bc4ad-3436-469b-8782-baf019c228d6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "456f6171-e8e3-49e8-9474-6371a191afe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175098be-a050-4cc8-87bf-695cdc68745b",
        "cursor": {
          "ref": "62922779-6123-4fd0-bffb-308e854da43d",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "53329794-2bfa-4266-914b-c1725beffd46"
        },
        "item": {
          "id": "175098be-a050-4cc8-87bf-695cdc68745b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c5a9c148-478b-43f1-8dab-b8517ae63714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e79cfe-ea74-4556-9d8c-4d61472d101e",
        "cursor": {
          "ref": "8e59da20-df21-46e9-a0af-9a4296cd093c",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "cee2dfd5-2313-42c1-aa64-a63208efefb0"
        },
        "item": {
          "id": "39e79cfe-ea74-4556-9d8c-4d61472d101e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d36cfb06-eac9-4085-b422-32b5d3bf7228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b65fcc-b283-4735-a7f4-1a7a803394e2",
        "cursor": {
          "ref": "5e9a70ae-014c-4b4b-9a6f-14567e3d4dce",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "00bb3c79-fd1b-45d5-a759-f2791d5c805f"
        },
        "item": {
          "id": "42b65fcc-b283-4735-a7f4-1a7a803394e2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "73e8047c-7c87-498a-a0d4-038e6492de22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814d1d39-7f93-498c-8e16-918b0591abc5",
        "cursor": {
          "ref": "823526fd-3ffb-40fa-aed4-532506510a58",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "77f24516-8e26-4853-9a3f-3e6b17ff0b26"
        },
        "item": {
          "id": "814d1d39-7f93-498c-8e16-918b0591abc5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1e5eeecd-96de-4b7c-b47a-531e6865788e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cd51af-abf2-4d9b-9758-c7684c6fddf2",
        "cursor": {
          "ref": "1867f6a2-7b90-44d2-a793-541139cf4994",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "542b3f5a-bf99-4660-b925-66a28cc71095"
        },
        "item": {
          "id": "f2cd51af-abf2-4d9b-9758-c7684c6fddf2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0dc934a0-97a0-4a07-b6dd-850bbda8d796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b6945e-7dde-46c2-9a76-3a18dd90478b",
        "cursor": {
          "ref": "6e556313-02c3-4996-8337-bd119221804b",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "66da6467-bd02-42c8-a880-f4e66d842617"
        },
        "item": {
          "id": "35b6945e-7dde-46c2-9a76-3a18dd90478b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ef277ab0-9ec4-4bb0-9af0-c766e725e97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398138ae-0189-400d-97a9-becf58cee744",
        "cursor": {
          "ref": "714e10ae-d7e2-42ab-a84e-44b3374a02b6",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cd25ae83-bd5a-4bc6-a516-1e5d15bddd65"
        },
        "item": {
          "id": "398138ae-0189-400d-97a9-becf58cee744",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "22b9c724-d991-4eea-baeb-4faca13f61bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7e399d-24a2-4a91-9bd2-beab922cc93b",
        "cursor": {
          "ref": "53d907b0-d459-4faf-b371-374001300b19",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b1d9a3c2-d74f-4e37-977c-b7715673452b"
        },
        "item": {
          "id": "bb7e399d-24a2-4a91-9bd2-beab922cc93b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "fc2c6487-0e47-41af-82db-f2960e4f8a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0eb21ed-c6d7-4b60-9caa-b67f3f021054",
        "cursor": {
          "ref": "3c01ef1a-0c6c-4286-bd41-711420a33de1",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "453ce962-6389-43e0-ae38-d9f04d00952b"
        },
        "item": {
          "id": "e0eb21ed-c6d7-4b60-9caa-b67f3f021054",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1a2f40db-04fa-4e1f-a8c1-4d2eaf694d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a325ce67-99c5-4838-adae-bdb87d9b15eb",
        "cursor": {
          "ref": "733b2499-1b93-4c8c-9565-5ba25a588026",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1f5e424e-2744-4e2f-8a7f-1e4306bb9099"
        },
        "item": {
          "id": "a325ce67-99c5-4838-adae-bdb87d9b15eb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2c1569d1-359f-4b5b-94ae-78ab1ee4db57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7be75a-9df3-4f82-ad62-478361a14328",
        "cursor": {
          "ref": "74f459db-53fc-48b3-b505-fe05a4481918",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "86e6b469-057c-4705-9e83-576e2c6500c5"
        },
        "item": {
          "id": "7b7be75a-9df3-4f82-ad62-478361a14328",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "19610d1a-fab9-406d-98c4-69bfbf9247c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9408b931-f7fe-4533-a57d-f82a67e5b1e2",
        "cursor": {
          "ref": "42f31c6a-85f0-4886-906c-80b9540e8918",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9eaca305-e5e1-4c1d-aad3-19230dad27a8"
        },
        "item": {
          "id": "9408b931-f7fe-4533-a57d-f82a67e5b1e2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "89a1efb2-4634-4b5d-8bdb-1dae37648548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592e523b-9c16-4669-be5e-f9c08357821d",
        "cursor": {
          "ref": "d97399fb-f1cc-4c00-b065-bbd8d0baaca0",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "363f5807-d553-406e-a818-b141d5982f53"
        },
        "item": {
          "id": "592e523b-9c16-4669-be5e-f9c08357821d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e4beddb0-62a1-480d-b218-64b88ce09762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfdf2e1-aa8c-4df5-a002-d43b74763f5b",
        "cursor": {
          "ref": "35a3570c-892d-4402-abd9-78aa38e640e6",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "991a7a64-5899-4358-afca-4af072631765"
        },
        "item": {
          "id": "dcfdf2e1-aa8c-4df5-a002-d43b74763f5b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4d3592fd-e0b6-42e4-833c-36d8f097b789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de44dd18-018b-4d2b-b8fa-fbbafc299a38",
        "cursor": {
          "ref": "937a1f04-ae2d-4c47-ad7f-e9d00d281528",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "445f5906-9e14-4057-92fd-f5a3045179ca"
        },
        "item": {
          "id": "de44dd18-018b-4d2b-b8fa-fbbafc299a38",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8266ae41-727e-4e2a-b9a8-ac6eb717e25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba219d4-5c12-4903-a1a4-ff0d478f8c59",
        "cursor": {
          "ref": "b649471f-b950-484b-b1fd-50e3893be87f",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ad7ee112-6f68-4dd1-86da-5494081d1727"
        },
        "item": {
          "id": "6ba219d4-5c12-4903-a1a4-ff0d478f8c59",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0618c231-1a98-4720-ae60-fdab699b921d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83be65c-9dc3-4871-b294-96511a0605d0",
        "cursor": {
          "ref": "0e44204b-28ae-49c9-a2c0-6fd6990835b6",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7e0749c3-963c-4818-9702-95f2d54f1c2e"
        },
        "item": {
          "id": "a83be65c-9dc3-4871-b294-96511a0605d0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "029efc43-01d7-486c-84f6-8f0f47ded645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4cb5d4-4f88-4b22-ad46-4f1b1fb98b30",
        "cursor": {
          "ref": "3b6f8f95-dfa5-4174-b24e-fcacedbfc6fe",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9336735b-7b90-4832-80eb-38a553003312"
        },
        "item": {
          "id": "5d4cb5d4-4f88-4b22-ad46-4f1b1fb98b30",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d549183e-9d15-4fd5-a2ef-563da8bb210d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6a4966-66dc-4f06-92a5-18f5448fc046",
        "cursor": {
          "ref": "b6a44b08-0e87-4b5e-8092-b9a0925cae1e",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0f57087d-f0b9-4a6d-9ad6-478d82f8fa88"
        },
        "item": {
          "id": "0d6a4966-66dc-4f06-92a5-18f5448fc046",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f47c69bb-b7bb-4fb0-b403-0724803de576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125a093a-d463-40b1-af7b-680a734ad462",
        "cursor": {
          "ref": "c39d3b48-a8b9-44ee-9ad8-d291d09710e3",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f19e89d1-fd26-467d-82be-c6a3ffc9c01e"
        },
        "item": {
          "id": "125a093a-d463-40b1-af7b-680a734ad462",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "07c23157-7c9a-4090-bc3a-0563ce3a21de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21109cda-03d8-467c-876f-eb630687f41c",
        "cursor": {
          "ref": "7f9a00c3-bcad-4753-865c-f5cea2188d4f",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "52477f1e-8d65-4901-a8a4-f31d784ea53e"
        },
        "item": {
          "id": "21109cda-03d8-467c-876f-eb630687f41c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0e4a76ef-ce8f-48d7-b08c-617c9fd48efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b79d4ef-7a28-4c78-a3ed-30c2ff09cdb6",
        "cursor": {
          "ref": "dd264022-249d-4a6b-b194-93fe896b4ebc",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8ac781df-984e-4fa6-80b9-4792aa9aab34"
        },
        "item": {
          "id": "0b79d4ef-7a28-4c78-a3ed-30c2ff09cdb6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6b961e4c-9cc9-457c-9b38-06cbd58db2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0de0d8-0a75-45c7-9717-9229a0b79b46",
        "cursor": {
          "ref": "b26f015d-d782-400d-a9aa-1a2e12392df2",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f1279052-3453-4f1f-9328-f84be0cb664b"
        },
        "item": {
          "id": "5a0de0d8-0a75-45c7-9717-9229a0b79b46",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1ad56ad9-9253-4c64-ad09-a2b3a8500da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00bc60b-08c1-48f6-a14c-409bd7b02095",
        "cursor": {
          "ref": "f2ff8a9f-4129-42ef-88d8-a2ac8045853b",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "cfde4ad8-9b88-4234-bf81-083acf47709d"
        },
        "item": {
          "id": "d00bc60b-08c1-48f6-a14c-409bd7b02095",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "85ce8b80-e7d1-4972-8709-329e585d9c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f724f8-e5f0-4118-a70d-3eb42837bce0",
        "cursor": {
          "ref": "2edabd00-1b1f-4fff-b6a3-fcd194dc4552",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4edeb6bb-70f8-4ef3-a25b-bc93da8e0612"
        },
        "item": {
          "id": "66f724f8-e5f0-4118-a70d-3eb42837bce0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "91acff2c-19a0-4c8f-a07f-11586d86e49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e344e87-5eb4-4cba-a08b-4d4cb897a81a",
        "cursor": {
          "ref": "9f512d50-740b-4acc-87e2-02e739370bce",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5204085d-dedd-4a1e-8e47-f16c0327f285"
        },
        "item": {
          "id": "5e344e87-5eb4-4cba-a08b-4d4cb897a81a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9762d7bf-f0de-4027-9026-f09664626df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f894e1-0e6e-4a44-959c-c212f874cba0",
        "cursor": {
          "ref": "89d09939-1dfd-45d0-84ae-1edcb4160cee",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "649e86f2-e761-474a-abb3-18821c120ef9"
        },
        "item": {
          "id": "49f894e1-0e6e-4a44-959c-c212f874cba0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "deeb7c2a-f193-44b3-ad18-82e93e5098e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce28d69-75fe-47bf-b9be-8410748db672",
        "cursor": {
          "ref": "003d175a-2729-4971-8eb1-b361fdc9cfab",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7359ce73-c6d2-4996-a9c9-d2f62cd6b561"
        },
        "item": {
          "id": "7ce28d69-75fe-47bf-b9be-8410748db672",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b7be68b6-12a8-42da-b5f6-0bc25338a3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c28eca5-0f32-4040-b88c-b9c67549639c",
        "cursor": {
          "ref": "bbc0516f-a912-4269-9bdb-3cc1ed426ac2",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "17ffc780-2933-4384-b06a-0d056b7af41b"
        },
        "item": {
          "id": "2c28eca5-0f32-4040-b88c-b9c67549639c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f504f4b1-a8f2-4ed5-9596-e72a04945eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b725b406-2326-41c4-a416-4f30ece4a509",
        "cursor": {
          "ref": "b1ced83d-348f-4c1d-bd5c-deedca0c83ac",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9b934a5e-603f-4ce0-a61f-30ed8e7b552b"
        },
        "item": {
          "id": "b725b406-2326-41c4-a416-4f30ece4a509",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "15ca87aa-4e87-434e-a479-c4ab19485fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa29811-0342-4303-a61b-ed2b8a459205",
        "cursor": {
          "ref": "d9ed0643-9f95-490f-aebf-56a7439cad9c",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1df255f3-1e6c-4661-9008-d6a08a49a8bc"
        },
        "item": {
          "id": "2aa29811-0342-4303-a61b-ed2b8a459205",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b0d24d55-fe54-4337-911f-bf230a34bafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da91710e-0df6-4141-a604-a9fc8f96337c",
        "cursor": {
          "ref": "131cc84e-7f65-4d84-9ba0-7d7c0f5521a6",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "30220445-552e-4be4-8d95-666530f5119d"
        },
        "item": {
          "id": "da91710e-0df6-4141-a604-a9fc8f96337c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "42a3cc40-f64b-4c77-9c5b-841567a3835c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686416e1-d1a1-471a-b6f1-1bc9c2977b73",
        "cursor": {
          "ref": "12afabb4-65a0-4d5c-95e7-fd9f6604ac9e",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e6f1f399-8a68-4bb7-b41e-a186ad7a5f6d"
        },
        "item": {
          "id": "686416e1-d1a1-471a-b6f1-1bc9c2977b73",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f933257f-eb51-4f8a-a382-eecc890424e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e396a2b6-1f9d-4e65-9ce2-8eafd19083ba",
        "cursor": {
          "ref": "74e1486d-3638-4631-b1df-690d25b7c361",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9aee02c3-af56-46af-94f3-3419f209b176"
        },
        "item": {
          "id": "e396a2b6-1f9d-4e65-9ce2-8eafd19083ba",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2eec5b49-f059-4f5f-ab79-52e38da61ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dea89a5-e323-4a40-9a0c-8097eec24ddf",
        "cursor": {
          "ref": "c772cc06-88bc-4733-b599-96f7a7ce18e0",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "38c16414-c3b1-464a-afad-4db4159b49e0"
        },
        "item": {
          "id": "8dea89a5-e323-4a40-9a0c-8097eec24ddf",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7ceffbfb-515e-49d9-8b98-fef6f572cb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37555d5a-8c1a-43cd-9a63-635fabd98b51",
        "cursor": {
          "ref": "fa1eba19-92c4-4b84-a833-d4c7d00fa924",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8e3c9416-f501-4a67-b57e-67bdba47ff85"
        },
        "item": {
          "id": "37555d5a-8c1a-43cd-9a63-635fabd98b51",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "65e3177b-677b-4451-994f-1df4aab7c2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e576cc-d96e-4aab-a858-67adb22397ca",
        "cursor": {
          "ref": "cf3abf51-2e0f-4df7-899c-81b0629066df",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d68106a5-fa70-4c0b-ae5a-f2471933fc6d"
        },
        "item": {
          "id": "c0e576cc-d96e-4aab-a858-67adb22397ca",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "412abd16-9805-4716-901b-bf249c0b8b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b21d6d-6457-49fd-aa10-e136c8b2b92a",
        "cursor": {
          "ref": "6beed254-f826-4c22-832b-74617314d1e5",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "deccb94b-8b00-4566-bd1c-900f78da34d7"
        },
        "item": {
          "id": "71b21d6d-6457-49fd-aa10-e136c8b2b92a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1bd1252e-92f2-4b65-a236-d55a4fb26c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3aadf3-ea3d-4e73-b8b7-a53be1440430",
        "cursor": {
          "ref": "b42fc260-664d-41f9-b296-626dfe4717a8",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "465c0461-2f63-4145-a408-3c609e9775b9"
        },
        "item": {
          "id": "fc3aadf3-ea3d-4e73-b8b7-a53be1440430",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "67f74c56-aa27-4c31-a0a8-c1033b792ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74fbced6-b09d-4eb9-9788-f4241e937a95",
        "cursor": {
          "ref": "0958133f-5126-4d3a-aa6a-421348603d4a",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ca76616c-e980-4620-8f33-fe26ce209bbf"
        },
        "item": {
          "id": "74fbced6-b09d-4eb9-9788-f4241e937a95",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0b750f19-37d8-4fb7-9a38-60350c465f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430f9840-cd42-447f-ba8d-872af96d92a7",
        "cursor": {
          "ref": "6fa26b93-5604-47dd-b26e-c1e057ddf83c",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b4953242-64f0-4091-a43b-082da967a91a"
        },
        "item": {
          "id": "430f9840-cd42-447f-ba8d-872af96d92a7",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "aa6026c1-5456-4bc2-9ee6-595d4cea9f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23bdcac-50d0-482f-a7e6-b3cd9b05f2b2",
        "cursor": {
          "ref": "4ace126d-6956-4551-b072-78612369412e",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "90d96e4f-14ad-4707-99d8-d77bd6e06418"
        },
        "item": {
          "id": "b23bdcac-50d0-482f-a7e6-b3cd9b05f2b2",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "47641671-f43a-4328-80ba-f5b2d9e5d018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc8ff9b-a311-4cbf-9ebf-ba59577521da",
        "cursor": {
          "ref": "fc5a8643-8585-4227-91f3-dfb039b1106d",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1ecc07ae-6493-4876-a812-b1aea4f7e4c2"
        },
        "item": {
          "id": "abc8ff9b-a311-4cbf-9ebf-ba59577521da",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "294ffebc-ba5d-45b4-9564-d10c24acf5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac1d156-0d6c-4660-aad5-6cf152e83a92",
        "cursor": {
          "ref": "c575babe-20f1-45e8-ba3f-59ba22a5b6f7",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "22d6ded1-d55b-4ead-8ed3-0b9be34cdde1"
        },
        "item": {
          "id": "bac1d156-0d6c-4660-aad5-6cf152e83a92",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "18ff3638-4e1f-4286-a1b7-6ae635b13c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5db1b92-e2b1-4701-aff8-a3717e9fcc8d",
        "cursor": {
          "ref": "1b246d8b-b55c-4b40-ae6a-a3eacb876554",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "87228f23-efab-4102-b623-39e8a81ed277"
        },
        "item": {
          "id": "e5db1b92-e2b1-4701-aff8-a3717e9fcc8d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "eb93f156-231c-4914-84ea-4e956ad9dd22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0103ddfa-4771-4568-837d-acf704ea5cf0",
        "cursor": {
          "ref": "5b7998fb-27ac-49fe-8e6c-07cb3dbd0a6e",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7c8a7a1f-cd8d-41ee-9bbf-f0c1f5f36476"
        },
        "item": {
          "id": "0103ddfa-4771-4568-837d-acf704ea5cf0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "80087dea-9d06-43f6-88d8-12c4d0c3d713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4916e5e7-a0d3-440a-b642-f5267031fba4",
        "cursor": {
          "ref": "d53470fb-716c-4288-bd17-944d141e2619",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "baff4f20-0ef1-4582-9c1e-9528c23a6d52"
        },
        "item": {
          "id": "4916e5e7-a0d3-440a-b642-f5267031fba4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c45b976a-c6eb-4c8a-aeb6-9d85b1264ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ef3329-7aaf-4423-ac7a-2b6a8fc920d2",
        "cursor": {
          "ref": "541a2c26-0784-47bb-9f53-f3d29aabb477",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8fc02615-7b61-4764-a957-6eeed01cdbae"
        },
        "item": {
          "id": "58ef3329-7aaf-4423-ac7a-2b6a8fc920d2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "82dec7f4-03dd-4ae1-81d3-53b3a74f9edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0097a94f-bc4c-43b9-8090-ef3106ff3a5c",
        "cursor": {
          "ref": "d1eb708b-3bd2-4840-ae91-2ee8bf59d6bd",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "48dc3fe9-a8aa-48fa-ac67-5f58c2c35287"
        },
        "item": {
          "id": "0097a94f-bc4c-43b9-8090-ef3106ff3a5c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f253f691-75f9-4d36-9468-32053c921581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1eb244-4f1a-47f4-80b0-0bdf5017beea",
        "cursor": {
          "ref": "7a4979d9-3d45-4499-8316-e17a718669d7",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e01d89c4-c0eb-4073-89ce-0d155cc43568"
        },
        "item": {
          "id": "3c1eb244-4f1a-47f4-80b0-0bdf5017beea",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1a1815b5-2cfb-4042-a3be-817fa6c97263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980dd8ff-9a42-4591-8df3-0b0cc1678a73",
        "cursor": {
          "ref": "26dcbba2-e739-450c-a983-ef061792530b",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3ca28f97-f911-46ff-9219-88bf68b51054"
        },
        "item": {
          "id": "980dd8ff-9a42-4591-8df3-0b0cc1678a73",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7ababbdf-3580-4ac7-ac5a-3a08b3140f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4001e2c-94c1-4d34-a1b0-5a65c07cacb1",
        "cursor": {
          "ref": "7bfb1ba1-c4f8-49f8-ab3a-419ecde67ad9",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "59409b74-61fb-454b-935a-b1ab8f4a86ba"
        },
        "item": {
          "id": "c4001e2c-94c1-4d34-a1b0-5a65c07cacb1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f10d0bcf-1a16-4250-8b71-8559278e12d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef12e398-9e78-40a2-a0a4-10d97dc98368",
        "cursor": {
          "ref": "11d88d91-fb3f-4317-b96a-bca8de113f2e",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "93c6e691-0e47-483d-8313-8b6d47ef5eaf"
        },
        "item": {
          "id": "ef12e398-9e78-40a2-a0a4-10d97dc98368",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6308ae68-fa96-40cc-bd0c-f9287cb61f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37760c7f-74e3-4089-b376-d6ad4b843e5e",
        "cursor": {
          "ref": "1dfd6033-dd95-492a-a42c-dba42a0f29b9",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "be93b843-6ee7-4c70-926c-5df30d858af5"
        },
        "item": {
          "id": "37760c7f-74e3-4089-b376-d6ad4b843e5e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b9fea10a-db29-4683-abaa-ce4263adce73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20433357-d7a2-4848-b083-428342016aa1",
        "cursor": {
          "ref": "190b7819-371b-4b27-89e0-591088a00afb",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "de10745b-a464-445b-ad00-c6612e296be8"
        },
        "item": {
          "id": "20433357-d7a2-4848-b083-428342016aa1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d04f9293-d6b8-4d22-884a-dc55554d9da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94afaa2f-4034-407c-975a-97e65994d1d1",
        "cursor": {
          "ref": "884c52ac-f8d3-4593-82bb-178c00c71288",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f798dfda-473c-424d-89e5-c835b8960c58"
        },
        "item": {
          "id": "94afaa2f-4034-407c-975a-97e65994d1d1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7ed756f2-f7c9-4e49-a79f-1e1732b85761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd7d1d3-6823-4eed-a67f-a365e3f20b8c",
        "cursor": {
          "ref": "076949b5-6e49-4a14-8a8e-90edd51e175a",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "78bf31ea-4deb-41c5-989b-6e9a936b6578"
        },
        "item": {
          "id": "0fd7d1d3-6823-4eed-a67f-a365e3f20b8c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cf2a95ad-ac97-4581-a1bb-189b8560803b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8769b344-ee19-4de7-8504-1888713b077f",
        "cursor": {
          "ref": "3ff2504f-a300-4b36-ae44-625a3505f0b7",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fc63ce33-2c2a-4c8c-8e14-582b4af06909"
        },
        "item": {
          "id": "8769b344-ee19-4de7-8504-1888713b077f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e37856f9-255b-4bbe-aa8c-6c96b2756a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c6fd3f-f3bb-48e3-83a2-9047d8c9171b",
        "cursor": {
          "ref": "b17dfda5-7fab-41f5-a504-ac7f327706d3",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "68cc7142-0f90-4370-9f9a-bdd894663907"
        },
        "item": {
          "id": "02c6fd3f-f3bb-48e3-83a2-9047d8c9171b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "55ff0f9e-067f-420d-bc63-e8e831988a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c78e95-5c9b-4678-9924-ecbe2f5208a9",
        "cursor": {
          "ref": "c5c760a9-aa21-46b6-936b-a7a2414fd7a2",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d0a88582-889a-48e4-89a8-31ed9e62c7af"
        },
        "item": {
          "id": "18c78e95-5c9b-4678-9924-ecbe2f5208a9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9eecef60-05b2-4526-a722-e05c3acb3502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e733b3c-6562-437e-ab0e-16ae2385b129",
        "cursor": {
          "ref": "050a70bd-a6fa-4247-9032-4ce27e35d095",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3433f4dd-be13-4c58-a32d-0d1ebf5bb56a"
        },
        "item": {
          "id": "4e733b3c-6562-437e-ab0e-16ae2385b129",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "86ae2d20-97e2-4c6c-93cb-72990089a281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca26eda8-13b4-48c6-a381-10560bfb6c0f",
        "cursor": {
          "ref": "9dd2bca4-4f7b-4327-8923-028cac1f5ac1",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "33cbf4df-84fd-4f9e-ab93-2af8cb7bcbe6"
        },
        "item": {
          "id": "ca26eda8-13b4-48c6-a381-10560bfb6c0f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "fb8c9321-165d-40af-9263-c9da90e6b6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f693fff5-30c6-4911-a15f-f8e549f6010d",
        "cursor": {
          "ref": "24eb0d45-4895-4650-8b6b-2378e28acf19",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e7b85192-61c1-44a1-99dd-005bc379e5a1"
        },
        "item": {
          "id": "f693fff5-30c6-4911-a15f-f8e549f6010d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c8705df9-e5cb-4c26-98f1-bbd488e62201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9063f3f0-d316-4e18-ad1e-e9f73251d1cd",
        "cursor": {
          "ref": "33e0ab51-44fd-4860-a6ac-b3f5adace4c4",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "311f88f4-41c5-4ae2-a310-995e7ac180fb"
        },
        "item": {
          "id": "9063f3f0-d316-4e18-ad1e-e9f73251d1cd",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "415ab493-3233-4d3e-a8d1-812f1f16a700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd167c16-c58c-41cf-870e-89133c455a9c",
        "cursor": {
          "ref": "bcb451cd-69a7-452a-a772-0ba3faa53b52",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9734b09a-b526-4fb1-baea-14197cf403bd"
        },
        "item": {
          "id": "cd167c16-c58c-41cf-870e-89133c455a9c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6eb681e4-1a51-4e99-a3fa-11d7af3b977d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc56284-dfc8-4583-9162-84aae6ce2420",
        "cursor": {
          "ref": "114a9771-5e7c-43c0-a7fd-0d3941fd1d43",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "fe1e6757-e17e-4a93-b244-a1bf1a06def6"
        },
        "item": {
          "id": "2cc56284-dfc8-4583-9162-84aae6ce2420",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2132c584-8b3b-406c-b9a4-7f85cff41364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431fe852-0969-4d17-80a5-bc5b1bfedc2d",
        "cursor": {
          "ref": "5239b99e-abad-44e5-a567-b3ba3847030b",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d8e0742a-5d07-4a18-8594-f927dc0a9f08"
        },
        "item": {
          "id": "431fe852-0969-4d17-80a5-bc5b1bfedc2d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d94fbe22-4037-486c-989c-804226d3d0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb9226c-54d4-415e-a518-9bdaacfb5203",
        "cursor": {
          "ref": "0d530649-0ba5-4580-85bd-20e6ed235aac",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c36765bd-fed9-45c7-8298-461cf52ff1bb"
        },
        "item": {
          "id": "adb9226c-54d4-415e-a518-9bdaacfb5203",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b8fb02a5-a903-4d91-aaf1-0a4d55a5f039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57bc87c-3a82-4d1a-a73a-d5262b2026ad",
        "cursor": {
          "ref": "59fa243c-c2af-4095-ab60-30348816563d",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "77aea93a-0984-4bb2-a2b3-31b0c6febd6c"
        },
        "item": {
          "id": "f57bc87c-3a82-4d1a-a73a-d5262b2026ad",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6bb8b5cc-fc64-4a12-b035-c58778448e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b14830-37db-4b6e-a605-206e263f7e6e",
        "cursor": {
          "ref": "948a2a04-42a1-41e3-af76-5731858040af",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6ad62469-a970-4a6e-89d4-60bc182068d6"
        },
        "item": {
          "id": "30b14830-37db-4b6e-a605-206e263f7e6e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b47fedf7-9076-43d4-b298-3f81ffeff1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a05a871-b843-4f41-b36f-c2c8b3a57e04",
        "cursor": {
          "ref": "f31bc216-a11b-4dbc-889e-e41e5cced9cf",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "739ffcd5-f33a-49ce-9e7c-f4763909a063"
        },
        "item": {
          "id": "6a05a871-b843-4f41-b36f-c2c8b3a57e04",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1e2099d6-6411-45b8-acbb-db9012a6f7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155b2467-0ac9-484b-ace9-893642fb52a6",
        "cursor": {
          "ref": "5bf07e33-770a-44ac-a37e-1932758064e3",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1f1cd4fd-e98c-42e0-aa04-866522cbe6ef"
        },
        "item": {
          "id": "155b2467-0ac9-484b-ace9-893642fb52a6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1fb0efdd-b76b-4c87-9692-4c5aebbec963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec6c290-8852-437f-8aeb-142517f622a3",
        "cursor": {
          "ref": "1a2073e5-20be-472d-b6a4-d59988b565c8",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "760639d6-0494-4f1a-bb6f-09ffbfcd8a1a"
        },
        "item": {
          "id": "2ec6c290-8852-437f-8aeb-142517f622a3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "38a527ce-6fe2-4c38-b1d9-b69ce0773bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435d6e3b-70c2-4af8-9663-b0b637faa8ec",
        "cursor": {
          "ref": "1be96a79-ef8b-474f-9667-3f95cd623b6b",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b325a699-f2ed-4094-8490-3c95cf5dffb1"
        },
        "item": {
          "id": "435d6e3b-70c2-4af8-9663-b0b637faa8ec",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8ccfde73-5171-48bd-a27f-4fcb355f9fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4294ba02-a402-4319-93b4-1b2df2f6b193",
        "cursor": {
          "ref": "e3c8fd04-fe5a-4a31-a4ca-362ef20bd3f9",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "37802132-0f13-4c9f-a2c7-756d6b9a73d1"
        },
        "item": {
          "id": "4294ba02-a402-4319-93b4-1b2df2f6b193",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0509adfd-7db6-4e4b-ab30-f58998dbd12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38734461-696e-4353-9a33-0b8c1db2eb18",
        "cursor": {
          "ref": "abdca332-b091-4d80-9135-cf420a426231",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "32f0bc52-d21b-47c9-a21b-21ddeaa51bbd"
        },
        "item": {
          "id": "38734461-696e-4353-9a33-0b8c1db2eb18",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "911e7f05-ba34-425c-83e0-054eb793c4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a0eb51-2326-42b4-b91f-90eee1fe39ee",
        "cursor": {
          "ref": "e53e416c-0fee-4451-ba9e-23f5d9605dff",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b3c8c102-3678-49aa-9a1f-0fa2b13d699f"
        },
        "item": {
          "id": "28a0eb51-2326-42b4-b91f-90eee1fe39ee",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2336f12b-1db3-41f0-9496-ed7745f0e765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f5e598-a6c7-425b-abed-5e8630a944d5",
        "cursor": {
          "ref": "9e76bfe1-2d12-4cde-9ca7-e28b682f6595",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7132e465-e420-40e7-b14d-4082950fb66e"
        },
        "item": {
          "id": "66f5e598-a6c7-425b-abed-5e8630a944d5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "916ee5e8-ba42-4abc-9e18-990ad2de3d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aef43df-b472-4c53-8678-67d2438a59b7",
        "cursor": {
          "ref": "acf46870-24ac-49a6-b594-114ca0568937",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fecd3418-e79d-4a6c-9e17-1840d5baba43"
        },
        "item": {
          "id": "5aef43df-b472-4c53-8678-67d2438a59b7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d3844928-8fd1-4936-8601-a522e1896467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa007f55-ba0e-4b26-9379-b86f8141270b",
        "cursor": {
          "ref": "d3a15d6a-5243-48cc-ab26-e60960792a89",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6f2d0720-815d-46de-be71-01c556529923"
        },
        "item": {
          "id": "aa007f55-ba0e-4b26-9379-b86f8141270b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c4ab6ebb-cf86-4bc1-bbf9-24be127bc81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce32f4c-ddfa-4e60-ab75-71b06cadb9fd",
        "cursor": {
          "ref": "ccd2541d-c700-4445-9707-54c256f7b2f2",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "80881ef3-ce4f-429e-a309-5b8a74a4f1e0"
        },
        "item": {
          "id": "bce32f4c-ddfa-4e60-ab75-71b06cadb9fd",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "94447521-4bf5-4593-8cee-b2f44c8cf7d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2384d5-72ec-478a-b8bd-01a9ffa94692",
        "cursor": {
          "ref": "e26aee2a-acf5-4212-8520-def8aaa91f71",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "dae92469-9362-4b95-9294-e02da4256224"
        },
        "item": {
          "id": "be2384d5-72ec-478a-b8bd-01a9ffa94692",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "84648863-f78f-4208-b1eb-03b22a27950b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065622c4-f0b3-4595-aeb0-efad387a936b",
        "cursor": {
          "ref": "41fffe6c-6d07-4d03-bb57-7dab9ecc8d92",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5c44ebf3-3aa3-4bdf-8105-003818deb870"
        },
        "item": {
          "id": "065622c4-f0b3-4595-aeb0-efad387a936b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "fcda742c-5906-42ed-b37c-a4652edd924b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa41617-7382-44bf-82f0-ee96f20437a4",
        "cursor": {
          "ref": "0b14f218-8bac-4c1e-bb2f-b28e33e4fbe8",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0941431a-bb86-4ed8-a470-a4a964804a46"
        },
        "item": {
          "id": "faa41617-7382-44bf-82f0-ee96f20437a4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "483baa1c-5a58-4790-87ec-f35db45f1bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b91445-37e5-4afa-803d-e49536302c23",
        "cursor": {
          "ref": "aaef0acd-a149-470d-976c-40348afff022",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "299850c8-f808-4d90-8bf2-01002e6ddf98"
        },
        "item": {
          "id": "b5b91445-37e5-4afa-803d-e49536302c23",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1d0a0a4c-6317-4834-9b6e-6979cecbd49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e2a240-70ce-4623-9e73-c7952b638a3c",
        "cursor": {
          "ref": "8550712b-08a6-4d48-a97c-f59a33c31a9b",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8c042b13-88c9-4969-a48d-e33f9d6c7f6d"
        },
        "item": {
          "id": "97e2a240-70ce-4623-9e73-c7952b638a3c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2ce1d6ee-bc22-4ae9-94b2-a8d06c506327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16665a86-afba-439e-bb68-3be355384f25",
        "cursor": {
          "ref": "670a05a4-1329-4d18-b476-34e02e77e891",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8aaa4216-6016-4cf9-96cb-accbc493b1fb"
        },
        "item": {
          "id": "16665a86-afba-439e-bb68-3be355384f25",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "55f5206a-75bb-4c84-8791-361fd2bfdc59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4b6b77-7ecf-45a1-a34c-99c8d18314bb",
        "cursor": {
          "ref": "ae33da49-89e3-462f-8f5c-7031bb13991e",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7e11133b-452a-4d3d-a5c4-87ca29fa4d12"
        },
        "item": {
          "id": "cf4b6b77-7ecf-45a1-a34c-99c8d18314bb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "946a19de-563d-4dd1-8f47-d790c5fd5406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bf14ef-1103-4d76-bb75-33bfd077f5fc",
        "cursor": {
          "ref": "f62895f2-7b77-489f-ad87-21cbd064a391",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "03da76e1-efaa-4ae3-8ef8-79cef073a2e3"
        },
        "item": {
          "id": "36bf14ef-1103-4d76-bb75-33bfd077f5fc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "62100a35-7d8b-429b-aae3-f4cea90c8a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71de56e0-c00b-435a-be5c-cea2c08d2e22",
        "cursor": {
          "ref": "a2f1a0f3-34e0-4493-afa6-3820e14f1a06",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "21f0f853-b711-4229-9f2d-3db468cf7b66"
        },
        "item": {
          "id": "71de56e0-c00b-435a-be5c-cea2c08d2e22",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1741ba61-ca89-4197-9758-0e123e11abe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cf2cc6-c584-4955-af06-3798ad3e59d3",
        "cursor": {
          "ref": "8cf2f4df-877a-454e-b694-7e72b8842d8b",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a4bfc22e-ca78-412e-b050-559e3d5a082c"
        },
        "item": {
          "id": "22cf2cc6-c584-4955-af06-3798ad3e59d3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "446cc623-a49c-4679-9d94-6cd544e1d0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89129f47-8489-4046-b7c1-db0830f0fee9",
        "cursor": {
          "ref": "54ab160a-1e92-44c0-b0be-7240e9a61b87",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "cc106265-703f-47a2-b434-a5fda46d6ed6"
        },
        "item": {
          "id": "89129f47-8489-4046-b7c1-db0830f0fee9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c90f08fb-38ac-4e4e-a9b9-8c06e1d8106a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ef1183-98f2-48f6-983d-fdd6344218b9",
        "cursor": {
          "ref": "efc1d807-5f12-4ef8-8967-d804081ac849",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "920e2067-f2ff-4a29-b0fa-9eb8bb2d323d"
        },
        "item": {
          "id": "d2ef1183-98f2-48f6-983d-fdd6344218b9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cb30e8d7-dda2-4925-a06f-91176783b0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "e2f951cb-88e9-4e82-8a5a-ba5f2d64e5b3",
        "cursor": {
          "ref": "b03f5f07-6f64-472b-b5c8-3a01bc21109b",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c861fe01-dbb6-46f9-97f2-7d64cbb2b994"
        },
        "item": {
          "id": "e2f951cb-88e9-4e82-8a5a-ba5f2d64e5b3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2be1ca9a-d0f7-4850-86bc-0472a18c719d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "09410a6b-4455-48a1-a7bd-b3e5ad5c4cd6",
        "cursor": {
          "ref": "285bbecf-c81b-4967-99c8-a5f695d59bf6",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e0b0cbbd-5211-436e-ac0d-de027e1409c1"
        },
        "item": {
          "id": "09410a6b-4455-48a1-a7bd-b3e5ad5c4cd6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "21c05c41-2fd3-4f69-97dd-9ff76f85b891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "638c6734-9eb7-4df3-b569-a509a095dfc8",
        "cursor": {
          "ref": "18fcff6e-ffe3-4c7e-aaee-e9d26a2008e3",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f22ae148-c4ff-48ee-bdfb-d62c8f2dfef1"
        },
        "item": {
          "id": "638c6734-9eb7-4df3-b569-a509a095dfc8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4d7e7b9f-0855-4ede-9823-2d9d29c09301",
          "status": "Created",
          "code": 201,
          "responseTime": 4878,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fba0e6-c333-438c-8f3f-88f5b4c6b5f8",
        "cursor": {
          "ref": "fd2ce034-9765-4a70-a804-1dd60e4acbf3",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "61937744-3bf9-449c-8060-6835a3caee1e"
        },
        "item": {
          "id": "51fba0e6-c333-438c-8f3f-88f5b4c6b5f8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "633c14ab-d047-4e77-852c-7a5c50b9eaec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "ce4f5469-bbe5-4db8-ae4d-44125079de62",
        "cursor": {
          "ref": "991f314e-e827-4a74-8667-d0d23e1a0722",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0256b0db-ef4f-4b8b-9ad4-bada6a18b2a6"
        },
        "item": {
          "id": "ce4f5469-bbe5-4db8-ae4d-44125079de62",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bb84de53-38cf-4761-9b06-26f6abde470e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "a34e5c7d-1626-4d12-94b4-c0d70224a74a",
        "cursor": {
          "ref": "883bda1b-0538-427c-a953-c42e0d3512d7",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "943ef47d-76b8-41a4-9fb9-325af1631fed"
        },
        "item": {
          "id": "a34e5c7d-1626-4d12-94b4-c0d70224a74a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "55eb9a39-b3c4-44f5-9ad1-056af6dd9ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c67190-19a5-46d1-b4a9-e9decb026cf9",
        "cursor": {
          "ref": "efb8c4ee-d41a-4330-a072-5a8ee65a8774",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "15b75a27-4172-4088-9efa-29b4c68202b5"
        },
        "item": {
          "id": "35c67190-19a5-46d1-b4a9-e9decb026cf9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f2417090-7841-48d3-a20e-bee2f6a85d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941abe58-e176-4f85-b378-48a91a7ccad4",
        "cursor": {
          "ref": "4cdf652f-7b9b-4c22-98ef-22b31d767421",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f655753d-aa47-43d2-9204-7501f3b7a736"
        },
        "item": {
          "id": "941abe58-e176-4f85-b378-48a91a7ccad4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "550a5b56-f7ad-4538-a803-bd0abe01c92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d015687c-353b-4099-91df-5da6550aa611",
        "cursor": {
          "ref": "2a26d376-9541-4c20-b277-1aaf702b6f1b",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5124bdbb-bdb8-4f82-b2d7-ab323154afc9"
        },
        "item": {
          "id": "d015687c-353b-4099-91df-5da6550aa611",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "810e05b3-4e82-42eb-81e5-82ffd4c00b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7397fe-d5e1-4a0d-b73b-4a1c9aa96ff2",
        "cursor": {
          "ref": "7b1c3149-c28f-4ea3-8715-f57119480195",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "556bd132-9998-44a6-8771-16eafd0a09bf"
        },
        "item": {
          "id": "0f7397fe-d5e1-4a0d-b73b-4a1c9aa96ff2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6912a585-81ad-4b4b-a5b4-d9e7e4ad1945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350489fe-a816-405e-8533-11bd5e3c2d0f",
        "cursor": {
          "ref": "eff62135-c363-47ed-9315-119931ef68f3",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1995fcb4-090b-41d2-a837-d9f4f9efe7c2"
        },
        "item": {
          "id": "350489fe-a816-405e-8533-11bd5e3c2d0f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5418ebcb-af14-4c02-9256-58b44baa2e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96d92f7-aa42-406d-9f4d-bbf967f58d94",
        "cursor": {
          "ref": "0228f731-1cee-4b20-89e5-40035525b830",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e866a617-ee46-4139-9036-a53b50f8e4da"
        },
        "item": {
          "id": "f96d92f7-aa42-406d-9f4d-bbf967f58d94",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4cbe840b-d50e-4de0-8e10-c888910eaf44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0e6156-037c-4548-b744-987a6ffb9893",
        "cursor": {
          "ref": "028b3fd4-13e3-45c7-becc-74d153e2f0a8",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "89380b95-7fce-41a5-bfc6-892f2ad8db25"
        },
        "item": {
          "id": "6c0e6156-037c-4548-b744-987a6ffb9893",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "115c4b02-5145-4ee8-aca2-7cf643309acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02826aec-1117-4a43-807c-3f35db9a5f38",
        "cursor": {
          "ref": "da8354dc-972d-4e91-9e42-2e64fd7f57d0",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ee3acaa0-6814-416d-b9c0-4a80df22007f"
        },
        "item": {
          "id": "02826aec-1117-4a43-807c-3f35db9a5f38",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f7ba1eab-851c-42c3-8640-1fb1ee03fd69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a47402-00f5-42de-83e8-438d00f99057",
        "cursor": {
          "ref": "549230ce-0332-42d6-a3da-fbc99771e1bc",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "cbab81b2-c1c1-477a-aa21-2a32a781e300"
        },
        "item": {
          "id": "16a47402-00f5-42de-83e8-438d00f99057",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "701ab7a4-92e7-45b7-b889-1afd030eb163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9817e5b4-2672-466d-8942-a31ea02f8d51",
        "cursor": {
          "ref": "8feb2ac6-d948-4cf5-bf50-413aee0128a8",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "99e03b6d-4549-4f9e-900e-5e20e4b82a8e"
        },
        "item": {
          "id": "9817e5b4-2672-466d-8942-a31ea02f8d51",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "33ac1dbf-1b36-4176-ab46-5e8276b25305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c033c7e-6542-43f5-847f-14292ced63eb",
        "cursor": {
          "ref": "e1cb3928-3f58-4548-8706-cf5f532c6261",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "06c4b525-c2d6-4f49-b81a-8505e4a8b317"
        },
        "item": {
          "id": "9c033c7e-6542-43f5-847f-14292ced63eb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cd418807-0330-4414-ab9a-c449a0d45292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b3a537-bca3-40d2-a3eb-2323789ec034",
        "cursor": {
          "ref": "8afbe3b1-10c6-4720-8ad2-9b4022e9e624",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "89deac2f-0df5-4149-9509-f86bb46f8a9a"
        },
        "item": {
          "id": "86b3a537-bca3-40d2-a3eb-2323789ec034",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "57183429-69e7-4330-a6d6-1b599244683e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2438e84d-f0d7-44b8-9fa9-bd592b4d0694",
        "cursor": {
          "ref": "041ab3d8-ae1f-49fc-8d42-ef655e59d242",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "abcca32d-8add-4c0e-bf66-0d06ae147afa"
        },
        "item": {
          "id": "2438e84d-f0d7-44b8-9fa9-bd592b4d0694",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e7708791-b05d-4b8a-8abc-0b59329ecae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada535a6-a587-4f8c-af33-71029ca3500d",
        "cursor": {
          "ref": "7f7a0c62-4107-4a58-9edf-645aa3b20f5a",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1450c1ae-7663-45a6-b671-f613d8227d01"
        },
        "item": {
          "id": "ada535a6-a587-4f8c-af33-71029ca3500d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "80ad7de2-2294-4df8-ac67-af99078c3b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39ee241-230f-4e6f-aa85-d6226e18dff2",
        "cursor": {
          "ref": "91b39850-91ed-4576-828f-f894fddcadd6",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "11a65ecc-3aa5-4de3-9bd5-ddc4e95e5aa6"
        },
        "item": {
          "id": "d39ee241-230f-4e6f-aa85-d6226e18dff2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0d121e16-9751-4a0f-b30d-95702eb57a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e3d6da-dc6f-4af0-975d-2d836b43a759",
        "cursor": {
          "ref": "878e083d-00fd-481d-b261-a9ff7fea09ef",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2347bc56-d81a-402f-b674-e9897da24c8a"
        },
        "item": {
          "id": "d2e3d6da-dc6f-4af0-975d-2d836b43a759",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0e210f4d-3517-4b89-a218-f379ac0e4500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcf96f6-6163-4dda-a604-c9aa961b868e",
        "cursor": {
          "ref": "ad343f73-871f-4ef2-95c5-9cf074c9aa02",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2fd2b985-2625-4a8d-81d1-f194b75cc7a0"
        },
        "item": {
          "id": "dbcf96f6-6163-4dda-a604-c9aa961b868e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "194d94e3-c9e7-4ed7-a412-324f44df688b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f19e97e-df17-45ad-928f-b1313b6806f8",
        "cursor": {
          "ref": "202639a2-e530-4d0c-9eb2-efd01faa7197",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e1f9562a-a1b7-4af0-ab19-571b6c093634"
        },
        "item": {
          "id": "3f19e97e-df17-45ad-928f-b1313b6806f8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "08504520-7f54-4d27-a6ca-309191571a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec08430-c405-452b-bab2-b9ba60a298fe",
        "cursor": {
          "ref": "bc1b30a3-f734-4885-8cae-bd266122f0a1",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "54b44e26-c4c0-4480-9064-2dcc06b0cdff"
        },
        "item": {
          "id": "6ec08430-c405-452b-bab2-b9ba60a298fe",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f631b913-c8d5-4b26-86e3-4e84baae4398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a334a48f-2779-4736-b647-faf2b20086e1",
        "cursor": {
          "ref": "59c7912b-b55a-4503-b9e7-7fd58a7ce605",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5a2985f1-9541-4a3c-bfd8-f47a9dc43448"
        },
        "item": {
          "id": "a334a48f-2779-4736-b647-faf2b20086e1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "31ace5e0-6291-44b4-a598-749a989c9db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1151d10-a29f-40b8-91bc-2a7452ce26ca",
        "cursor": {
          "ref": "322b2f6a-47ba-4982-82a2-cb5e7d11638b",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e562b1cf-d026-4f22-949c-bf0a451985e4"
        },
        "item": {
          "id": "f1151d10-a29f-40b8-91bc-2a7452ce26ca",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0ecb0223-9c2d-4ab6-ac25-5d9cfa82900c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0957cf36-8c1a-4e37-a8e4-2840ddb93758",
        "cursor": {
          "ref": "6109db0f-3825-49d5-a895-711e4c93594b",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c8c28ec8-80dc-4fda-acf1-acb005a0ac64"
        },
        "item": {
          "id": "0957cf36-8c1a-4e37-a8e4-2840ddb93758",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9d013cc0-50a8-44b9-a46b-93c94cc8495b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff03fd1c-3e89-4044-ac51-de5c8687e3f0",
        "cursor": {
          "ref": "cbc71906-8e01-4fca-b298-190588ce4194",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "be5d293f-58c2-47e5-a80c-7ac186b4a060"
        },
        "item": {
          "id": "ff03fd1c-3e89-4044-ac51-de5c8687e3f0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d3719d3b-be5f-40f0-9c3e-f9ba6a927cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56012510-733f-437b-b353-67224518ee31",
        "cursor": {
          "ref": "d4c4a806-0ffc-4aa9-bdaa-b2efbf5cdda0",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "18d92fd8-ee90-4814-9af5-73a460ba4923"
        },
        "item": {
          "id": "56012510-733f-437b-b353-67224518ee31",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ebcd10e1-0610-4dfd-add7-c1599278878c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76579bdf-996a-4f4f-9df9-ccaa75ade6c6",
        "cursor": {
          "ref": "f627864f-be11-48a2-8e51-5084d522dcc3",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "229d300c-72e7-426e-97ba-79fe3c397e86"
        },
        "item": {
          "id": "76579bdf-996a-4f4f-9df9-ccaa75ade6c6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1fe128be-a934-41a6-a210-dff2e82568d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a8ede9-aa98-471f-9b7d-75fb58c43476",
        "cursor": {
          "ref": "ba83a1fd-8e4c-4873-b472-8f4cdd222d7e",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a45cda21-472a-414b-af8b-62bca7bf2c70"
        },
        "item": {
          "id": "b6a8ede9-aa98-471f-9b7d-75fb58c43476",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "29736344-11db-4f4f-ad1a-8c76c7faa7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fdb4c37-6f8c-48e8-b777-e80ac65f8b29",
        "cursor": {
          "ref": "6af7560a-55c8-4b3c-8e61-f891c72e939c",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a63b303f-a879-49b1-a063-bd10c030e925"
        },
        "item": {
          "id": "6fdb4c37-6f8c-48e8-b777-e80ac65f8b29",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ea343e4b-7a40-4ceb-b915-a5f0680be7b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0fa33d-b7e0-4c97-aba3-fbb6d843e984",
        "cursor": {
          "ref": "718f6751-3139-4510-aa37-38bf496b6473",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "315b783d-427a-4f9a-a93b-d862a15d7179"
        },
        "item": {
          "id": "3c0fa33d-b7e0-4c97-aba3-fbb6d843e984",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9f245c5d-4c3a-41c1-b741-51c63cacd038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013005b2-7cd1-4cdf-8734-00ff9e274771",
        "cursor": {
          "ref": "0ab906c2-b86c-4870-86d3-2047cefad363",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b21a7e54-e555-4935-8cbc-1af20b97e88e"
        },
        "item": {
          "id": "013005b2-7cd1-4cdf-8734-00ff9e274771",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5f730d7b-04b1-467d-9cb7-fd5eaafb45f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bedeea8-dc0f-44a2-ba30-c6e9a38bc784",
        "cursor": {
          "ref": "78a0fae7-3fd8-485d-ac4d-4df27ddce046",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "506f5d7c-e983-4edb-8dc9-c65a80614754"
        },
        "item": {
          "id": "5bedeea8-dc0f-44a2-ba30-c6e9a38bc784",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2b22b8a4-37ed-4208-be35-e99ead24db8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2997c0ea-fe4e-4fa9-b9ad-47113816b98e",
        "cursor": {
          "ref": "2f63cd48-5f12-4b47-81d9-56596f040df8",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b279f309-fcaf-494f-8b8b-fb058943677e"
        },
        "item": {
          "id": "2997c0ea-fe4e-4fa9-b9ad-47113816b98e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "eb45513d-560e-4a1b-b291-5dcf20d2ca87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5ede56-fc53-4c93-b837-46ee24ade0f9",
        "cursor": {
          "ref": "f989d448-d241-4115-9421-1b4629f16db6",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "36d7fb97-2ced-47c5-a222-9db29158fc86"
        },
        "item": {
          "id": "1b5ede56-fc53-4c93-b837-46ee24ade0f9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "184bb0b2-a842-4e80-b11a-b37124dbdfe4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bca5375-acf7-46f2-ac0c-c46514ca5641",
        "cursor": {
          "ref": "19e90e50-170c-4a2a-8f0e-803141b0e773",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7fb63775-6457-4ece-9e25-d6787082d5fc"
        },
        "item": {
          "id": "1bca5375-acf7-46f2-ac0c-c46514ca5641",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5c236a78-5dcf-49a2-a91b-f089c9a2a786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c26056e-cdd5-48b5-880b-0ec220ee1305",
        "cursor": {
          "ref": "bf936004-772a-4dcf-b7d4-b8464ab87309",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9e74494f-5425-40d1-8479-a1093d2b0b9e"
        },
        "item": {
          "id": "1c26056e-cdd5-48b5-880b-0ec220ee1305",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "aba287ed-01a8-4cb7-be20-c05bce627ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158aa9ca-e84d-45b4-a49e-cbded07ed8bd",
        "cursor": {
          "ref": "9e7a57c0-c644-4320-8ecc-1ef23b6b2ca5",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a24307d0-4f50-4c64-8362-01a04c253771"
        },
        "item": {
          "id": "158aa9ca-e84d-45b4-a49e-cbded07ed8bd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b228f04b-dfe8-4264-9a72-080fe7638466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c1c6e4-6d0e-4e7b-b610-ca90f1c8d1b3",
        "cursor": {
          "ref": "6237ee41-741b-47a6-acc1-59f4356a04fd",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8aa6d5c4-a59c-4b7b-84f3-fb95c35b0f41"
        },
        "item": {
          "id": "34c1c6e4-6d0e-4e7b-b610-ca90f1c8d1b3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4d24b543-71c7-487e-b82e-2f9d200be31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deffa2a1-c1f4-49e5-930f-23821a0c4dfd",
        "cursor": {
          "ref": "54684a06-3c21-4572-8236-0d002987272c",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "23e35791-71e3-411d-bd66-aabb50c1af07"
        },
        "item": {
          "id": "deffa2a1-c1f4-49e5-930f-23821a0c4dfd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9eddc369-347b-4f6e-b7e2-5d3dabc916eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a194ee-c956-4dbe-9b1e-a41dd714e6e7",
        "cursor": {
          "ref": "7a67a902-0ef1-48e6-a6a8-7020f5f7112b",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fc0816da-f7fe-45fd-b766-fc5c1da97628"
        },
        "item": {
          "id": "00a194ee-c956-4dbe-9b1e-a41dd714e6e7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b9fb4b9e-d72d-4c03-9a10-cd5324126260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f8a91e-7b24-4f9d-bc16-49c0ab0af87b",
        "cursor": {
          "ref": "f9d69a73-ca67-4985-a0ee-890a63259860",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a62a976a-c83d-4c5b-a3a1-53be5fda81fe"
        },
        "item": {
          "id": "60f8a91e-7b24-4f9d-bc16-49c0ab0af87b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "866caeef-50f9-4777-8de0-08b0b0d9a503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f18580-f768-4cd1-9a15-f9f32dd16f7a",
        "cursor": {
          "ref": "12571f2a-5aa1-4714-bf0e-3ca18b00d9a6",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4e98bbae-7b08-4300-8f41-0108aeeb131c"
        },
        "item": {
          "id": "56f18580-f768-4cd1-9a15-f9f32dd16f7a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ea8e8e03-53f9-4f18-a28e-b05c6b3a781f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ea9733-f6eb-4bb7-bbb1-9b5ce43ffdf1",
        "cursor": {
          "ref": "24931b63-99a3-4707-a755-2ed496c999ad",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5ca6ae75-53b0-48d5-a76c-4f43ebc0e07a"
        },
        "item": {
          "id": "25ea9733-f6eb-4bb7-bbb1-9b5ce43ffdf1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3ddd0415-d4c2-49cd-91b2-5f20e589f2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee4a0af-68de-4a83-9a36-cda306eef538",
        "cursor": {
          "ref": "5067d37b-81b9-4c9e-8697-754bc0cee6ae",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b3714c64-e4e7-4be8-ad6e-05b88ee2c87a"
        },
        "item": {
          "id": "8ee4a0af-68de-4a83-9a36-cda306eef538",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e971d59d-0166-454a-b934-95de042d8308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732820f4-bb3c-4a9a-bb8b-3a94787df409",
        "cursor": {
          "ref": "0b236484-68bd-4154-9066-9de8baac1a0f",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8ace46fb-81e3-480f-89db-a58c8db953ea"
        },
        "item": {
          "id": "732820f4-bb3c-4a9a-bb8b-3a94787df409",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "af10e94e-4c32-4ab0-ab38-e76dd8324d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5dd817e-d2d9-4d3f-9a4c-173db26fb0cb",
        "cursor": {
          "ref": "a6cfaf49-cae3-4ccf-924f-b50f93953ed8",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4c4d9bb6-01f6-4a5c-aca0-d45770735a10"
        },
        "item": {
          "id": "d5dd817e-d2d9-4d3f-9a4c-173db26fb0cb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "36e90f71-689e-4df3-8527-d004afaa1033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80771123-8def-4d7b-b9ce-bf9dd06f9e0b",
        "cursor": {
          "ref": "308fc982-86b0-43d1-85b6-8e4d307ce4c0",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5e9da10b-57ed-4963-8e2d-ebd605fae1f9"
        },
        "item": {
          "id": "80771123-8def-4d7b-b9ce-bf9dd06f9e0b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1e39c53f-656c-4fdb-96cd-32725056bf33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2975c72-1da9-4e57-bfeb-a2ac921b0b9a",
        "cursor": {
          "ref": "b4c3291c-f165-4071-9246-a821021c84c4",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7b06e09d-7ff5-4d17-ac18-c629ebe49a47"
        },
        "item": {
          "id": "c2975c72-1da9-4e57-bfeb-a2ac921b0b9a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a14c39a7-5124-45f2-aa17-379b6c40f768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a56138-3e31-4b79-9321-8f1310687876",
        "cursor": {
          "ref": "6156d2f1-23e5-4cd7-87ce-c3266266a902",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d9dcda7c-92f1-48d2-8623-09973ab85324"
        },
        "item": {
          "id": "51a56138-3e31-4b79-9321-8f1310687876",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "20453ea8-fe09-4f61-80f7-437e1c70b158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c674e51-0dfe-4360-b93c-0def58b25e68",
        "cursor": {
          "ref": "068e7699-aa8f-4155-a214-548600c31c55",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5f025091-27d3-458e-8bd6-f4637532319c"
        },
        "item": {
          "id": "5c674e51-0dfe-4360-b93c-0def58b25e68",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "10cb57a6-f384-4045-9185-893521dec4e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba41f6a4-23d1-4915-b96d-37bcb15d971c",
        "cursor": {
          "ref": "a0890485-28f1-4c6c-93d5-bd1de4da8c12",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a2eede93-75a8-4293-bfa5-8e86f51a83d0"
        },
        "item": {
          "id": "ba41f6a4-23d1-4915-b96d-37bcb15d971c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c82d05de-6c3c-4f49-99eb-b56a7cc39ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a97b00-977e-4507-be66-37124e1b2930",
        "cursor": {
          "ref": "97a78b74-e1eb-4b2e-bb19-cbc4f2fbd548",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "db4c3bfe-387f-49e0-8aa2-755b5dfa8eab"
        },
        "item": {
          "id": "a6a97b00-977e-4507-be66-37124e1b2930",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6d804bb6-a58c-4c4e-b7ad-46692ae0a9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378014d5-82a9-47f3-89b7-144e52eb2d53",
        "cursor": {
          "ref": "e180de11-0048-4b16-b89c-9fa8f3804254",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "060fc84a-21e1-4bca-ad46-09ecfbdc4bf7"
        },
        "item": {
          "id": "378014d5-82a9-47f3-89b7-144e52eb2d53",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "435b328f-f851-481b-824c-99c652dd8e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4672810d-0df3-4c7d-a25f-6aa6d1e54188",
        "cursor": {
          "ref": "ef80f699-a3a9-4a84-9eda-00adcf7c1eda",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e19b45c6-1465-446c-af69-6224c94f8c85"
        },
        "item": {
          "id": "4672810d-0df3-4c7d-a25f-6aa6d1e54188",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9c5863f7-9889-4e55-b00a-ce7560e16634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3e260a-b5d3-4b89-b354-eb741e0dab03",
        "cursor": {
          "ref": "16523cb2-14ec-4fd5-b820-ef04e35d6c56",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0291acbd-95c7-4a67-8dd2-535871fba4d3"
        },
        "item": {
          "id": "fb3e260a-b5d3-4b89-b354-eb741e0dab03",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "34b94190-4573-44a2-b3a3-78d860cfc602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c345ab2e-5b6d-4170-ba2b-6b6fb9fde25f",
        "cursor": {
          "ref": "cd746eac-c604-4eb1-8651-5b9407f9dacd",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "73edeefa-88a8-484d-bfa2-00a0d42cc3bd"
        },
        "item": {
          "id": "c345ab2e-5b6d-4170-ba2b-6b6fb9fde25f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "28c16e8a-2020-4c24-ad35-41fd99730a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b34896-d81a-4226-825a-a623c0072415",
        "cursor": {
          "ref": "0bdaee31-2a11-457d-b468-8a1298f5a0f5",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d1c51aa3-1ef7-4bc1-910f-9aee312de454"
        },
        "item": {
          "id": "80b34896-d81a-4226-825a-a623c0072415",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "38b2d22f-98a6-4d72-a670-9a93b644455c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330ad04e-19ac-4be6-bead-11c7e146957e",
        "cursor": {
          "ref": "f6456232-48a2-4adc-9f0f-13a4e431b700",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d9d8aa33-6b90-41a1-b797-a13e65d2b66f"
        },
        "item": {
          "id": "330ad04e-19ac-4be6-bead-11c7e146957e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b91472f5-38a9-45b5-8aa4-3087eb0528a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01651fd5-ab69-49ab-9dd5-35331aca22b1",
        "cursor": {
          "ref": "c378f1bd-b337-4bd5-9471-73f8f777a50a",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9d1b9584-0d68-4fa5-86f0-03d1a4b9e923"
        },
        "item": {
          "id": "01651fd5-ab69-49ab-9dd5-35331aca22b1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9807f2d2-a3f8-4f54-a108-8cbde979d7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85398e1e-8548-4a43-8b03-eb71341fa716",
        "cursor": {
          "ref": "2bee3f9c-9986-4535-bef5-5fb7d6b9a626",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6bba5641-8c0b-40e7-b48c-717a799c7503"
        },
        "item": {
          "id": "85398e1e-8548-4a43-8b03-eb71341fa716",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f0b0d670-f1de-492c-aa1b-8cd6bd2af3d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9c5086-b316-481b-afc1-9d4e208722d4",
        "cursor": {
          "ref": "8e566cee-9bd1-4e9c-a774-f3d1a1cd0d8f",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a8826b89-8f6b-4471-9448-c6532eda1d24"
        },
        "item": {
          "id": "2a9c5086-b316-481b-afc1-9d4e208722d4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a6bf2212-4618-42f8-81d4-7d3585e926c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0bb1f2-5532-4e04-a053-e0d74f608e2d",
        "cursor": {
          "ref": "3e31e229-788c-4727-a78b-9e5fc1f90ae5",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a7ae0cc2-7d2c-4dfb-a605-3e3dd2db37de"
        },
        "item": {
          "id": "1a0bb1f2-5532-4e04-a053-e0d74f608e2d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5ad28457-dd50-42da-9d55-6ed2f84678d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbaff63-ef40-4f5f-8cd4-ba2ee73f36b9",
        "cursor": {
          "ref": "1db99678-a153-4dc7-8dd7-dff4294dea0f",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1c9cb273-86c9-4cc5-a6ba-749d2d558c87"
        },
        "item": {
          "id": "ebbaff63-ef40-4f5f-8cd4-ba2ee73f36b9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0b3a8830-53d1-4327-96e1-0986ae5a8a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee5d44b-9de2-45f9-84f5-8d67ed5c59fb",
        "cursor": {
          "ref": "092140b0-f27e-476d-8746-5fa4a6db14fd",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2c925088-be6c-4fb4-9256-0abc9773e918"
        },
        "item": {
          "id": "7ee5d44b-9de2-45f9-84f5-8d67ed5c59fb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "959a65fd-3e2e-4423-aeb6-3e8647599b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ed1464-5fcd-4658-a279-4e87f639d0c2",
        "cursor": {
          "ref": "6b76c6de-a0b3-44c6-81db-c78575773b00",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "227e3bb6-7227-44a3-accb-b593be4df5bf"
        },
        "item": {
          "id": "c7ed1464-5fcd-4658-a279-4e87f639d0c2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "724baae9-ed75-46da-b684-6307a9434dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aecf05ef-13c8-49bf-a310-84756f0c415c",
        "cursor": {
          "ref": "3d5146b8-e334-42ed-9c40-2b0372e9f525",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6e151135-c659-4276-9d9a-dd6b67f6edf0"
        },
        "item": {
          "id": "aecf05ef-13c8-49bf-a310-84756f0c415c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f35a16b8-bac3-4547-8085-9a5faf6a44c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04da61cc-ba4e-41de-aa4c-201a5aab3147",
        "cursor": {
          "ref": "581961d6-7c2b-4112-8614-ed2dec5a325e",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "82d5db19-3673-4123-b59f-b1c72cc40b58"
        },
        "item": {
          "id": "04da61cc-ba4e-41de-aa4c-201a5aab3147",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c7e7cfca-cf73-496e-ac76-ef7e97055c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878de591-482e-4956-8781-944ab0c177b7",
        "cursor": {
          "ref": "440014d4-3614-4715-bf3c-2984ace50dc4",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c84b4b73-5656-490e-834f-017a1accca95"
        },
        "item": {
          "id": "878de591-482e-4956-8781-944ab0c177b7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "dcf14154-767f-4668-9b9b-692ce35563d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47bb5fb-9f97-458c-80ec-f1788d1b91fd",
        "cursor": {
          "ref": "2a89ad5c-1ad2-4eda-95f2-75a8b388ddbe",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "51b243bb-e4d4-4fce-ae42-b5da7d672fac"
        },
        "item": {
          "id": "e47bb5fb-9f97-458c-80ec-f1788d1b91fd",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "55c14a1d-b294-48ba-a53e-e3631793dd72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b96e8d2-1af1-4dd0-a6fc-2b0f32d5540f",
        "cursor": {
          "ref": "dc636dbe-1b0e-4c34-b19f-e2e14398d283",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "78ca3e76-c4a6-464f-856a-22981b05e5dc"
        },
        "item": {
          "id": "8b96e8d2-1af1-4dd0-a6fc-2b0f32d5540f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2c5735b2-93a1-4210-8823-2fa0f7f07ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a1e3aa-c72f-4d21-865f-69e68a64be8c",
        "cursor": {
          "ref": "b30447fd-36b3-4960-9811-7f9f63fcd27e",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9dcaadbe-bcdf-49c1-a9a2-16503408c3e8"
        },
        "item": {
          "id": "f9a1e3aa-c72f-4d21-865f-69e68a64be8c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d886c7fc-c26c-4ec6-b8a2-6bbe47071362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3deb54b0-7ce7-464f-ac8c-7f1f13265ce0",
        "cursor": {
          "ref": "e615c326-2156-4a9d-a61d-86b288b8ecd8",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4e8b5263-d02c-4c0d-bd31-ac3384877967"
        },
        "item": {
          "id": "3deb54b0-7ce7-464f-ac8c-7f1f13265ce0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "03d642c0-9437-4e73-b00f-7cee29ed5495",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e64154c-3fd2-4acd-b13c-f0759efb6a86",
        "cursor": {
          "ref": "c5ff4747-22bf-4b61-a0d3-1b00b0e8f3e9",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "77bcaf8e-3097-4f87-8d61-2b647f037727"
        },
        "item": {
          "id": "3e64154c-3fd2-4acd-b13c-f0759efb6a86",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cf17fb1c-55d4-4f75-8ad2-f167018716eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2506d670-ad16-490e-b2fb-7da359d1cbf1",
        "cursor": {
          "ref": "b2ea8de5-601a-46d3-8de4-254efa1e14c0",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "298887ed-e826-4648-adc2-fb189663948e"
        },
        "item": {
          "id": "2506d670-ad16-490e-b2fb-7da359d1cbf1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "dddb43ea-7b56-46e8-b864-4ba0ed1a05f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7253f8ad-391f-451f-a7bc-203304c3be9d",
        "cursor": {
          "ref": "81056bb8-a00d-4bb3-bdd5-686bb07384ac",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "02bc4d4a-3e05-4648-a993-7b28c20b8b2e"
        },
        "item": {
          "id": "7253f8ad-391f-451f-a7bc-203304c3be9d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "812d1751-8923-4812-a3ba-af41f2496294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d90df44-38f6-4e8e-a6b9-0ac00c6e7e2f",
        "cursor": {
          "ref": "618d81ef-6fa6-4fe9-8868-2b70caa6e6d5",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5ec3030c-d7dd-47aa-b3a7-b68a010ef17f"
        },
        "item": {
          "id": "8d90df44-38f6-4e8e-a6b9-0ac00c6e7e2f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "724eaf6c-f3e4-4a53-bfe3-2d089de417d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412943b4-beb1-4cd1-bdb9-3db8f24dabd8",
        "cursor": {
          "ref": "28d78a28-dd0d-465c-aceb-a38e799c213b",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "22138032-2f1a-466b-9c1e-986a04233fef"
        },
        "item": {
          "id": "412943b4-beb1-4cd1-bdb9-3db8f24dabd8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5fe7db1d-d5ed-409a-86ef-71ad79db24ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85e6f84-8227-4940-9c58-1c872ec14571",
        "cursor": {
          "ref": "75d598c8-dcb8-4da7-bc85-7d02d2be0ced",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "724dbd62-0c1f-405e-80cc-521b7ee51d63"
        },
        "item": {
          "id": "e85e6f84-8227-4940-9c58-1c872ec14571",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6690c7e7-df84-4294-a3d2-8d5e13844408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72aa22c-ae69-4c6a-9a52-fcee74a62ee2",
        "cursor": {
          "ref": "994e4d11-5d28-45d0-9ee1-3456acd047b8",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "bdf76863-ed50-41a6-9d69-41234d36041d"
        },
        "item": {
          "id": "a72aa22c-ae69-4c6a-9a52-fcee74a62ee2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7d876c4d-bfeb-475c-ace9-8a109b0658ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c87b4b7-da96-48f8-899c-2ba69f1df0c0",
        "cursor": {
          "ref": "88d7ea01-ca6a-4368-b1de-ba01021a83c1",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c1e03860-0384-485b-b5a1-fdf827b5984f"
        },
        "item": {
          "id": "3c87b4b7-da96-48f8-899c-2ba69f1df0c0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "01668543-64aa-4ee1-b9d3-8b96b3694ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478fb1fd-67d3-4ccb-8327-470506051cbf",
        "cursor": {
          "ref": "87fa67a6-411f-4903-be0e-e3603e70f048",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "565c19f0-262e-40bf-be3c-b48ece5b748c"
        },
        "item": {
          "id": "478fb1fd-67d3-4ccb-8327-470506051cbf",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4af3c9b1-13e0-404a-aba4-8b8000cb48ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42da90bc-5684-428b-882a-af8c0b705bae",
        "cursor": {
          "ref": "12eae517-0b4a-4321-a241-c921514b206b",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "660851f2-4379-4a41-902f-33cc65053151"
        },
        "item": {
          "id": "42da90bc-5684-428b-882a-af8c0b705bae",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a1c41d2e-c6e4-4cac-8b9b-cf04255e1173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa738c00-559c-4075-9cea-62e4ff9a004c",
        "cursor": {
          "ref": "99460a01-2415-4da8-a9bd-2034e1092946",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2c9048e5-b8ab-4080-9fd8-98699eeb8bf1"
        },
        "item": {
          "id": "fa738c00-559c-4075-9cea-62e4ff9a004c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "bffdf769-36de-4f8e-8570-9568a9660bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15b18d4-20e5-4c63-a358-d1a87c33b173",
        "cursor": {
          "ref": "d3c14057-282b-4009-bfd5-73f50d5850da",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "21b5be60-e715-4068-839f-e170f4b67b5e"
        },
        "item": {
          "id": "d15b18d4-20e5-4c63-a358-d1a87c33b173",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "403fce28-2b8a-499a-b961-857ac5a0abbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c26c4a-217c-4ace-89bf-15d0bd3e0040",
        "cursor": {
          "ref": "41e1cb61-1af8-4f14-b629-ce2ed1f092b7",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "da8621ef-1bcc-4b42-88a3-a974936e5889"
        },
        "item": {
          "id": "35c26c4a-217c-4ace-89bf-15d0bd3e0040",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e1e00fe6-ae0d-44de-be48-e6643fa24c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9123bb8b-6f12-45c3-b293-8d96bc17c25e",
        "cursor": {
          "ref": "95d4e1c3-30fc-46c0-9ab1-88d77a061ba1",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9e2f78d2-f05f-4e28-a513-364197ef77c8"
        },
        "item": {
          "id": "9123bb8b-6f12-45c3-b293-8d96bc17c25e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e00fe480-5408-478f-ad36-9defc38f6654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ae97b1-2d0c-424b-a6c6-849764c94495",
        "cursor": {
          "ref": "de4e2da9-1c59-4509-8f83-cf27053b8eb5",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e722e86b-70cb-47d2-9f8c-22b3c6da794e"
        },
        "item": {
          "id": "26ae97b1-2d0c-424b-a6c6-849764c94495",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2ae32108-60dd-4ac6-a16d-7e179ef3f142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00459768-cfb0-4279-9661-fd60962d978e",
        "cursor": {
          "ref": "d599523b-68ba-4587-8f40-538ee41ed14c",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a61991e3-4a6c-4325-ab41-5d8f673331b7"
        },
        "item": {
          "id": "00459768-cfb0-4279-9661-fd60962d978e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "01fe5bf5-c48d-4030-8cd8-67d5e33774ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2170566b-9198-4398-9292-91ada0c61873",
        "cursor": {
          "ref": "9d663824-b48d-4c8a-bda7-6805b01b7512",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "41ef42e7-203d-4320-a06d-f859367acfa8"
        },
        "item": {
          "id": "2170566b-9198-4398-9292-91ada0c61873",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ca56655a-4525-4b1c-9cae-38fe567103e8",
          "status": "OK",
          "code": 200,
          "responseTime": 114,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "8418ae08-17ee-450e-aa64-76edcbc0eb9c",
        "cursor": {
          "ref": "d796dd59-fa10-480b-94a8-ed7677f8f2ee",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "dcfe3acc-8437-4ce9-9370-e696dfaa1462"
        },
        "item": {
          "id": "8418ae08-17ee-450e-aa64-76edcbc0eb9c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f5317947-eeda-4283-aa3f-53d8399bd475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5306dcd5-fa69-4c9c-8cf7-bb7d2bbed261",
        "cursor": {
          "ref": "85fba67f-6e95-495e-990d-aca1148da2a0",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "96a4e8ba-602d-43fb-919c-349b3f89f617"
        },
        "item": {
          "id": "5306dcd5-fa69-4c9c-8cf7-bb7d2bbed261",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d72c5547-b084-4c9e-9968-0245f747c045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad0bc9f-b401-4d5f-bbf6-c135e290ad21",
        "cursor": {
          "ref": "2547db0b-6e50-40f4-9279-2452ae1056c9",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e94ae41c-e58d-4e51-b8f8-482a19c33624"
        },
        "item": {
          "id": "7ad0bc9f-b401-4d5f-bbf6-c135e290ad21",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "248310a3-ba57-48f4-86c1-dffe0aca14e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34894dae-f15b-422c-83b8-a39fe6b1283f",
        "cursor": {
          "ref": "eaab71f7-ae98-47b0-b71b-c0f3e80cee58",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "06d3ae9f-0cec-4f30-a26b-b0c0e8606b06"
        },
        "item": {
          "id": "34894dae-f15b-422c-83b8-a39fe6b1283f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "90b6d0b2-0c3e-413a-acc7-0ffada23ab20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9551f31-71c3-4f30-8f7b-e0b19a909218",
        "cursor": {
          "ref": "85cfadec-af49-46a2-81e3-5b31800c40bf",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c4c08acf-c1fe-43a0-a778-b44300c9999e"
        },
        "item": {
          "id": "c9551f31-71c3-4f30-8f7b-e0b19a909218",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3cc36268-f625-4180-a2aa-c0107b3da842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77befd61-f03c-4f35-8e23-67ce3fbec355",
        "cursor": {
          "ref": "cf721125-110f-4e89-90e4-84e7050b87fe",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "91d0bfac-e4cf-40e7-9f56-1644395761bb"
        },
        "item": {
          "id": "77befd61-f03c-4f35-8e23-67ce3fbec355",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d00fcdc8-f6a5-4dd7-92d9-75aac9355e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3246bf-70a6-411e-9b4b-cc1f8666cb2c",
        "cursor": {
          "ref": "49c80d24-e139-4aa0-b7a7-6cd9c71d6ac0",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "daf8afa1-d043-4150-a21c-f2dbc2f6d7b5"
        },
        "item": {
          "id": "9c3246bf-70a6-411e-9b4b-cc1f8666cb2c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "78e1a664-5de1-426b-8563-ef51c0b8cdeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f9102f-0f96-451c-bd3e-99c43dc8a6eb",
        "cursor": {
          "ref": "9305d26d-25a1-4e8f-b509-c5c4f757442c",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "39748e17-c206-4ae5-b13d-d04d2f03605e"
        },
        "item": {
          "id": "92f9102f-0f96-451c-bd3e-99c43dc8a6eb",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "705b8ef1-269e-4ee8-847a-e17f2846f06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0281a18-cb58-46a9-840b-ccc5eef79150",
        "cursor": {
          "ref": "93595e6c-3add-48d5-aa46-6a2812cf24c8",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e7fa2710-9ae4-46ae-acc2-38ee13c9c660"
        },
        "item": {
          "id": "f0281a18-cb58-46a9-840b-ccc5eef79150",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c3a319c7-173b-4718-a443-60392e17afc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbdec012-e16f-49f2-8134-41d0f220e94c",
        "cursor": {
          "ref": "68c71fa2-7ba7-478f-9af8-def9f4c76e3a",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2839a2a5-9c77-41ad-a4f9-f1b9e0aa99a2"
        },
        "item": {
          "id": "cbdec012-e16f-49f2-8134-41d0f220e94c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ba44ac8a-6dde-46d0-b909-2a5156fc9d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5470b28c-78e0-4fa1-95fa-d9d75941b7aa",
        "cursor": {
          "ref": "d36da284-88a8-4248-b7c7-acb509869099",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "90ec19ea-da35-4529-a074-bc0b75f86766"
        },
        "item": {
          "id": "5470b28c-78e0-4fa1-95fa-d9d75941b7aa",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8e595dfe-fb1f-4dd6-9902-a80a48400849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a3d12b-1730-46ec-9a9e-130637f30521",
        "cursor": {
          "ref": "707bdc0a-d13c-4970-9576-db5f50dfd548",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3377f383-8c3c-4382-83fd-56560710b267"
        },
        "item": {
          "id": "90a3d12b-1730-46ec-9a9e-130637f30521",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ca15596e-cb34-48b7-9f51-df1a2264d9a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e35f03-4783-442d-8408-d1821ea8fbb4",
        "cursor": {
          "ref": "8de5b936-a721-4e80-997c-47d0d6beaefe",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2748e176-492e-484f-b787-02ee1eb1f93a"
        },
        "item": {
          "id": "d1e35f03-4783-442d-8408-d1821ea8fbb4",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bee4ef2f-0b19-483b-b3f0-b988c4611b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb08d48-44d3-4a3f-b139-5658de05e7c2",
        "cursor": {
          "ref": "2041f106-aa8f-4506-8c51-f3f9b7757f27",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d8933f98-0458-4703-964c-655ed5b6d745"
        },
        "item": {
          "id": "5fb08d48-44d3-4a3f-b139-5658de05e7c2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2c2723a6-2ddf-4f9a-bc17-cbb8c75c0ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d70c6be-0056-49ce-9638-bd005f7f8644",
        "cursor": {
          "ref": "a38c8e99-783b-4a35-951f-614ce6ca5f78",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "986e723f-0f42-4ffc-b38e-ebca1e298ba6"
        },
        "item": {
          "id": "0d70c6be-0056-49ce-9638-bd005f7f8644",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "cf0cc620-f747-463a-9182-aa366c734c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4841c4b2-a41f-46d1-84b6-75d0355c4aa7",
        "cursor": {
          "ref": "1d09fe2c-bbd4-4e57-ab82-10c881eb1da6",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8af07a92-6fdc-40d4-bc92-26e1804feb19"
        },
        "item": {
          "id": "4841c4b2-a41f-46d1-84b6-75d0355c4aa7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f056c048-8fad-47fa-861c-59bdec0288fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4310df-9f4f-420c-9e18-4c77973d09c9",
        "cursor": {
          "ref": "d04343c5-4cf0-4064-8201-71e73222338b",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2396b3b4-d132-475f-8f30-93fcb712a3b3"
        },
        "item": {
          "id": "1d4310df-9f4f-420c-9e18-4c77973d09c9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "da48321f-ac12-43ee-ae41-8751756a14dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5519ef2c-b9ea-4559-bae7-70d062d5b429",
        "cursor": {
          "ref": "0506378e-c0d0-4141-83b4-9ce348a0a850",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d01e37c5-1582-41c4-9592-e6caa7c00c9b"
        },
        "item": {
          "id": "5519ef2c-b9ea-4559-bae7-70d062d5b429",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "72f0bad9-3bda-4826-8f39-66673b661b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25eb8165-3d97-4749-87ac-42b77b3b4b1c",
        "cursor": {
          "ref": "bb089927-eb44-4916-8487-3a09295d60c8",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "98fb0718-2f2c-42e8-bf07-5234111e79ed"
        },
        "item": {
          "id": "25eb8165-3d97-4749-87ac-42b77b3b4b1c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5c6646bf-5e29-4508-b9ac-2e3725481916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043b862f-28de-4d13-9c75-a374295dfdf5",
        "cursor": {
          "ref": "dfe026ee-2aac-4b8d-8b62-30c49c266518",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "aef160f5-2fd0-4111-8f6d-5c5a539774b8"
        },
        "item": {
          "id": "043b862f-28de-4d13-9c75-a374295dfdf5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fa2f2819-0081-465f-bbe8-176846ffe1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f131ea-85a5-4edc-b548-d1357f0a773c",
        "cursor": {
          "ref": "3d3e765e-a73f-4d92-a5b1-c16d8cda9d60",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5ca3fbae-b1d8-42fc-a256-951cd55fb130"
        },
        "item": {
          "id": "d3f131ea-85a5-4edc-b548-d1357f0a773c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0db2eb77-b9d8-436d-b7e9-e143cbce7e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f4932c-b38c-4416-af6e-9134a6e629a2",
        "cursor": {
          "ref": "d5568466-fb90-45a4-89e3-1c74e4c0bb1c",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "45c67edd-e600-4873-8e43-ae1ce696f7d7"
        },
        "item": {
          "id": "51f4932c-b38c-4416-af6e-9134a6e629a2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d6b09633-e5e1-4f31-9039-eabc6cb8c4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189ef92f-9de1-42ca-9e9c-ddeff6ed5134",
        "cursor": {
          "ref": "7ca705cc-26ea-4c29-8b63-f129ef8f5842",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8429dddd-1fbd-47c2-a6b1-b0fcdeea4bb5"
        },
        "item": {
          "id": "189ef92f-9de1-42ca-9e9c-ddeff6ed5134",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ba2f0d18-3513-4b4d-bb42-240fef12880e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a62d533-a6fa-43aa-986e-9757832110ea",
        "cursor": {
          "ref": "7745472d-7a9f-419d-88d1-4cb8e2a38831",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "21878cf6-50d6-40c3-b01d-3998b5667acf"
        },
        "item": {
          "id": "7a62d533-a6fa-43aa-986e-9757832110ea",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9a861649-77d8-4fe6-b9b3-7c7cf333a320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470ac54c-9562-4df4-8bf2-7d6fdea078a7",
        "cursor": {
          "ref": "de657c7d-fb77-4eb2-9b72-cfb2f0d17808",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ba01c647-cd49-4d4d-baa3-6475fb23cef5"
        },
        "item": {
          "id": "470ac54c-9562-4df4-8bf2-7d6fdea078a7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6066d19c-072e-4fa6-9613-8444fcd9767b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e326a15-87c9-4a1c-bc66-6a25ebe6fd5d",
        "cursor": {
          "ref": "9b8016e1-a494-47bf-ba99-1a5d109e79f1",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e0af4faa-dc53-4ef0-b2ab-aea3b66890f5"
        },
        "item": {
          "id": "8e326a15-87c9-4a1c-bc66-6a25ebe6fd5d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "21df855e-822d-4318-99ef-9edb75c2933b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36866c9e-ed16-4009-9bc4-21e91404d89d",
        "cursor": {
          "ref": "cfc94d37-626f-4353-b2f1-a9a3182c4fc2",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "502a2eea-93d0-49da-a67a-b1dea0dc0a2d"
        },
        "item": {
          "id": "36866c9e-ed16-4009-9bc4-21e91404d89d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "52d2385a-6dea-4cfa-96bf-ea27d1988d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9101370b-46a2-42db-9e14-75fe79d42b46",
        "cursor": {
          "ref": "c2e518d7-b7e7-4d31-98ae-4f7c173f9a8e",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8a81b148-ae1c-4482-a3a2-340b586ceeae"
        },
        "item": {
          "id": "9101370b-46a2-42db-9e14-75fe79d42b46",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "eb1e1eb6-863d-4623-b36e-d4da2f04ab11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9edf81c-1ab6-4eb8-8a71-017cdd367c5b",
        "cursor": {
          "ref": "f95f6c1c-668e-47a2-982c-07b7faee81e5",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "57b086cf-09bf-44e5-ac50-4c76ba7c6bab"
        },
        "item": {
          "id": "d9edf81c-1ab6-4eb8-8a71-017cdd367c5b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b6280a8d-a16b-47c3-b28f-b850d6f83c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5291b2c-324b-45a8-acba-edd1ed220b9e",
        "cursor": {
          "ref": "602f93d0-d043-4e1e-a0de-f6e9a240982e",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "eb2ef627-b82b-4697-b9e8-9bab71435f1f"
        },
        "item": {
          "id": "c5291b2c-324b-45a8-acba-edd1ed220b9e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "12c79d9e-c2d1-4069-a3b2-a9fdf24a5eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fa7aad-63c5-46aa-af59-f08753ead3a7",
        "cursor": {
          "ref": "b2c365da-ca5d-4ab4-a4fa-d523539af1ee",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d4cbdeda-704d-428e-ba3e-a27e71c8309a"
        },
        "item": {
          "id": "75fa7aad-63c5-46aa-af59-f08753ead3a7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c19c1f7c-0204-4b84-93ec-7d66d343888b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8004d496-a4a9-4139-9fb7-05ea37fb36a3",
        "cursor": {
          "ref": "4c22c521-6bbd-43b9-a44a-892c88b27304",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8d3cb317-9032-48a9-bb20-3eb6d3fe0715"
        },
        "item": {
          "id": "8004d496-a4a9-4139-9fb7-05ea37fb36a3",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f30435ee-d310-41c5-a662-ce1c08d56f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32045cc3-c5de-452b-884b-08d4b5007ce3",
        "cursor": {
          "ref": "63534449-ac38-4b40-8997-1f2ca2a2c3d1",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "75460bf5-0aae-42ad-911d-50bbf572c5d2"
        },
        "item": {
          "id": "32045cc3-c5de-452b-884b-08d4b5007ce3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b4f51715-7e66-44dc-b020-26d13dea801a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93163b8-6f9d-4242-9b2e-a6e2a86d3402",
        "cursor": {
          "ref": "b12363f4-b0a8-4393-80b4-81c79e8fc4f6",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4f974e7c-f502-41b6-a91e-970fb7921ffb"
        },
        "item": {
          "id": "f93163b8-6f9d-4242-9b2e-a6e2a86d3402",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "46557c9c-e8d8-445e-9ad9-a659b92fb8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c337ed-9b47-4118-a692-33df1ae72209",
        "cursor": {
          "ref": "f04e8789-be1a-4cb3-94a3-cd2c1c900137",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bfa7153a-0ec7-446c-a0d5-8f9a4a0eb955"
        },
        "item": {
          "id": "e6c337ed-9b47-4118-a692-33df1ae72209",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5ec6b966-cd4a-439d-b492-b0be55f2f718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9976689-87ea-4edc-b50e-7927e062f4e1",
        "cursor": {
          "ref": "cb3b3e83-5200-4e7d-acbe-d90d53a3d75e",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0540390b-ab20-4dc0-a51c-4883f6b6412d"
        },
        "item": {
          "id": "d9976689-87ea-4edc-b50e-7927e062f4e1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "33ae8f43-c864-44bc-808f-3f6707d90fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265971a2-f64d-46ca-a375-0592f49b87c0",
        "cursor": {
          "ref": "dacc6931-c573-424f-bd08-741f298fe8f3",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6f49bdd8-cf6d-4f4c-b125-485292e9f95a"
        },
        "item": {
          "id": "265971a2-f64d-46ca-a375-0592f49b87c0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "098bd2d8-8dbf-430d-ab03-7e59e21d0d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fda66f-3da4-4637-bb77-13c7d06fd9cf",
        "cursor": {
          "ref": "d6e11bda-4875-465e-b21f-ce1921dd9fd6",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "aca765b8-2f99-474f-a0c1-4c41e470dec7"
        },
        "item": {
          "id": "79fda66f-3da4-4637-bb77-13c7d06fd9cf",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "41657d42-0b93-488a-9c54-a5cdcbdfd393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c9c690-2b51-4424-aaf7-10bd46bced64",
        "cursor": {
          "ref": "40b87692-51c0-4190-a025-c8f2b8d0e961",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d0bf7bd0-cb40-4bab-8867-c8864ea633dd"
        },
        "item": {
          "id": "01c9c690-2b51-4424-aaf7-10bd46bced64",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a3e42dac-4fda-4afa-a554-b219f6334cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94390e8-781d-4403-bf91-b7912b730a6c",
        "cursor": {
          "ref": "1834f613-bae9-4251-8da1-0ae8c3aad552",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e5d071a1-afd7-420c-b996-79c18ed29a73"
        },
        "item": {
          "id": "c94390e8-781d-4403-bf91-b7912b730a6c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "40088e1c-0ab1-4710-869a-b239f88152d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a60d1a-23eb-4ea5-85d1-5946e1805ea6",
        "cursor": {
          "ref": "407bd581-462e-4771-89d8-c16ca420f3b8",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ee7d1bb3-584a-4d02-8743-36b34df98292"
        },
        "item": {
          "id": "71a60d1a-23eb-4ea5-85d1-5946e1805ea6",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c704f65a-4cd9-42bf-9c6b-b14dbc442fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158e761a-8d57-46ae-9e49-cdfd29b2184d",
        "cursor": {
          "ref": "9538241b-44f8-4d8c-8ca6-3aad0c2e3e4d",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "82dbd219-e30b-43ba-ad2f-de6784c77b2f"
        },
        "item": {
          "id": "158e761a-8d57-46ae-9e49-cdfd29b2184d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2cf1ad52-3172-4a1e-b40e-d155ac520db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fffbc91-45f4-4d82-9e47-77765fcc15eb",
        "cursor": {
          "ref": "9662d8a8-1750-46ae-85eb-51befe8a529b",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "39d82268-1012-46a1-aaa0-90bc3c4a1549"
        },
        "item": {
          "id": "6fffbc91-45f4-4d82-9e47-77765fcc15eb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "13f6a800-6710-493b-af10-74093b93d8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c46fc9-083d-49e4-9935-c0fc93fdea12",
        "cursor": {
          "ref": "17f7219f-aa6a-4751-a0bd-12daa46f29a6",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ab81349a-94d1-4e22-a68a-3348bb9a4ce7"
        },
        "item": {
          "id": "b6c46fc9-083d-49e4-9935-c0fc93fdea12",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "59a13c1e-43ef-4237-af39-1e8b1acf4750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b065e8d-726e-4909-9f1a-02f6077a27bb",
        "cursor": {
          "ref": "48ab5d5c-9de5-4c8f-b4a5-3b505b7dbee7",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8eac2182-1542-4066-83d8-fa8e01bdd69a"
        },
        "item": {
          "id": "3b065e8d-726e-4909-9f1a-02f6077a27bb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4ec43e85-6c14-4834-90b1-2caab66a586d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d593b7c7-fcef-444d-be1d-93bd32be8bf0",
        "cursor": {
          "ref": "5d7e7019-e6f7-4ae6-9a9d-515aeba950dc",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "aa3f73da-69fc-4899-b7fa-c96cbec7338d"
        },
        "item": {
          "id": "d593b7c7-fcef-444d-be1d-93bd32be8bf0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a0285008-4947-4ed3-8a1b-83c6e18de872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395cffb3-6c8c-4520-bbda-6c072505b2a1",
        "cursor": {
          "ref": "18fc1ef5-e543-4bb5-b52a-dbda136a5a4b",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0fbcec37-466f-4c2a-9438-8b1f27d9478a"
        },
        "item": {
          "id": "395cffb3-6c8c-4520-bbda-6c072505b2a1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "20826d1e-b3b9-418a-943e-2a3c5eec3df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a024449-fb93-408f-9e2b-56d023154b3a",
        "cursor": {
          "ref": "242d5bfc-1cbc-4a20-bfb8-6679b4f4cb1a",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e1ca6d28-9d9d-43b9-a263-4d439ba87e84"
        },
        "item": {
          "id": "1a024449-fb93-408f-9e2b-56d023154b3a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b307c9d2-88d8-44eb-8636-5bb9279f2776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862eb975-4aae-4bbf-8d84-9e5aa63da38b",
        "cursor": {
          "ref": "2dda20f4-b4e1-45c3-b11c-82a892ba3f27",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3bba7a4c-9ffe-4429-90f5-6a947a54d2af"
        },
        "item": {
          "id": "862eb975-4aae-4bbf-8d84-9e5aa63da38b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "752569c7-0f87-4155-ad6c-a2c80ab3b5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f89bc3a-8e73-4cd1-b52e-b3eeadd07e77",
        "cursor": {
          "ref": "0e673c30-2fb4-43b3-83a8-ed5cf5fe8ce2",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6062ad2a-8227-4ea3-92ee-20631b1f1b25"
        },
        "item": {
          "id": "7f89bc3a-8e73-4cd1-b52e-b3eeadd07e77",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "32a2e463-a976-4928-a5e5-c922a76ed143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1f4583-489b-457c-af17-7a0c69a89a0a",
        "cursor": {
          "ref": "3ce1584b-3f45-425f-b946-8b32e50b327b",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8501f72c-cb00-47ff-97d7-a93491e6b0f5"
        },
        "item": {
          "id": "ca1f4583-489b-457c-af17-7a0c69a89a0a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b53c13d2-51dd-4aea-9c7a-ff284b129d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282c4dd7-d5a4-4d85-80ef-66cb17500837",
        "cursor": {
          "ref": "9be3f3ef-76e9-4af9-83a8-b9ae4dd555bb",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9e30164e-1eee-4d37-bd93-f869a4adf885"
        },
        "item": {
          "id": "282c4dd7-d5a4-4d85-80ef-66cb17500837",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3baadbbd-773f-47c0-8efc-69cd5e207b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48752240-f789-42dd-a285-b81a4c57fb5b",
        "cursor": {
          "ref": "c5669351-5f1a-4b51-8f9f-43d8ba644911",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "16aef5be-8163-4d12-94cc-83030e780a00"
        },
        "item": {
          "id": "48752240-f789-42dd-a285-b81a4c57fb5b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e3334e96-bdc4-4ea0-b0c2-5d2d93dcfdf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7a5660-1a2b-4e9a-9a33-03a6981883f6",
        "cursor": {
          "ref": "964a285b-9bea-4273-958a-ce3b0b7407b7",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e9d9e1c6-4e44-438c-bc41-2f76cf28b714"
        },
        "item": {
          "id": "ca7a5660-1a2b-4e9a-9a33-03a6981883f6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0613ab29-2669-4032-a101-b45943c3f77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e86136c-1c49-40d2-be85-19a6cae19593",
        "cursor": {
          "ref": "152b242c-26b1-4877-9e2a-5c56afaf9a01",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2bcd754f-0d86-4723-99a8-f83029d41d30"
        },
        "item": {
          "id": "2e86136c-1c49-40d2-be85-19a6cae19593",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "91156b09-658e-4288-85fa-7f5f2377590b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2431a345-5e3a-4d36-9685-fdeba3d1786b",
        "cursor": {
          "ref": "0d970270-b856-4fe0-9fbd-121c55e62c1e",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ee238b91-294e-413c-94ec-2429d11dd3c9"
        },
        "item": {
          "id": "2431a345-5e3a-4d36-9685-fdeba3d1786b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0747b935-e8b7-4022-bea2-9e3469ccc8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c61d13-d2a3-472e-bf18-d7497f441c13",
        "cursor": {
          "ref": "2c27acd6-bd8b-4ef5-8e20-9e7253709382",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6a413bd2-82c1-4fd5-94f2-08b9d8b29be6"
        },
        "item": {
          "id": "90c61d13-d2a3-472e-bf18-d7497f441c13",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "da73503f-652b-42b4-920c-585635f3ce0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652b1a36-7744-4428-a142-348d843e2cc3",
        "cursor": {
          "ref": "12248cf9-8df6-42db-bfc5-0b999ee84c51",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a8ce16fd-1358-46e8-b7d0-385c391168aa"
        },
        "item": {
          "id": "652b1a36-7744-4428-a142-348d843e2cc3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f6b7f9f0-3a27-44d6-9f41-070583a024c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6f34c5-da90-4f72-9163-9f64a5fca120",
        "cursor": {
          "ref": "35ea663b-257f-4db7-967c-e86888712878",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "0f06a96b-8831-434d-812b-52e7a90e2bfe"
        },
        "item": {
          "id": "6a6f34c5-da90-4f72-9163-9f64a5fca120",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "db3d3b9c-22b6-451a-9d72-001e22e47560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e520421b-acf5-4d65-aae9-fc864dd7712c",
        "cursor": {
          "ref": "bbed8143-b67d-477d-9fb8-034fc7051b5a",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "a1144adc-988b-430d-8003-656ed4b5bbff"
        },
        "item": {
          "id": "e520421b-acf5-4d65-aae9-fc864dd7712c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e5e0aa1a-736b-4c0d-af8b-346e9bf64200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4879dfe6-ed5a-499f-a0cb-f472f480183a",
        "cursor": {
          "ref": "e3f6f260-7eff-4d35-a918-988a3656e1e4",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "475e3af1-1367-44b3-96f5-ef3400dfaf0d"
        },
        "item": {
          "id": "4879dfe6-ed5a-499f-a0cb-f472f480183a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bf0ccfaa-6c8c-4e99-867c-d9a101883d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b51219a-507b-42ae-8c1a-7eb1f42b35e9",
        "cursor": {
          "ref": "c9bf6bba-6232-4f22-8b7d-a71f3d6ebd84",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "0369f9e8-3e13-4548-b1a2-6ffc03d3fa7b"
        },
        "item": {
          "id": "9b51219a-507b-42ae-8c1a-7eb1f42b35e9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e5c6f675-052e-4ef6-af56-253060bd5278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711deeee-2854-4514-a16f-491dd0ae5f74",
        "cursor": {
          "ref": "569de087-18ce-496f-9b0a-433d18f738cb",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "ef85ef91-d2a7-4cd2-81ac-5f05fd72393e"
        },
        "item": {
          "id": "711deeee-2854-4514-a16f-491dd0ae5f74",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "86bb6432-c972-48c2-a8a2-5d2b907734ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef4beb3-2f25-4126-95af-c7929a05b848",
        "cursor": {
          "ref": "b033c29a-b005-4cd7-a32b-0d5d7f2b86b9",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "5613e4cd-f07c-4548-960f-d0f4daf06df4"
        },
        "item": {
          "id": "bef4beb3-2f25-4126-95af-c7929a05b848",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e6b92e79-767b-46f5-a9f6-a3e74a3b3ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7662d4a-4657-4a8d-99d7-8c9f4bd033b7",
        "cursor": {
          "ref": "735e8fe4-09d6-4da0-bfb4-47a19c1ed43e",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "69afe52f-9b80-4e56-b8e0-2d67cf622d2c"
        },
        "item": {
          "id": "b7662d4a-4657-4a8d-99d7-8c9f4bd033b7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "064c7299-f811-4188-b281-4da9b236530c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30e488b-7b9f-41b0-ba37-04c60705b745",
        "cursor": {
          "ref": "1c30707f-9c46-4f1f-a1b9-abbbdfb11bb3",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "1a3c9a51-7a6d-4909-8235-f17447224f71"
        },
        "item": {
          "id": "a30e488b-7b9f-41b0-ba37-04c60705b745",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "207186eb-ee1c-43a0-a0ce-b4b048af161f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9382b042-0bab-497a-8140-14a3bd1577dc",
        "cursor": {
          "ref": "b054d2bb-461f-4958-a3c1-64ae32080f81",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "7dad8dc4-a25d-48a3-aaab-a9b2c0abe9c9"
        },
        "item": {
          "id": "9382b042-0bab-497a-8140-14a3bd1577dc",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "18281902-ff23-4cb7-9799-4b5907ff5229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac6531c-31dd-480c-8418-d9457f873c6d",
        "cursor": {
          "ref": "f2cc33a0-9399-43f5-85ff-a4ffcbee3fa9",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "424c7cc1-3c3c-4d90-a331-bf9e984df97d"
        },
        "item": {
          "id": "4ac6531c-31dd-480c-8418-d9457f873c6d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "77115883-008c-46de-9b8c-4f3a4755b3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2080e2-1a98-4925-94df-8b71ec45b2f3",
        "cursor": {
          "ref": "99032ed9-8078-4c88-9807-043770ce975e",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "055e0162-3d15-45e9-b9e9-99d2da8ba981"
        },
        "item": {
          "id": "1a2080e2-1a98-4925-94df-8b71ec45b2f3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "04ee4545-ab7f-40cc-b6b3-61796a8f671e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70fded28-142e-458e-a49a-bd97fa4e7ef8",
        "cursor": {
          "ref": "635da3e3-40ac-4f0d-8346-c901766ee9a9",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "6adee309-8981-4d85-aa08-6cadb5a84cb9"
        },
        "item": {
          "id": "70fded28-142e-458e-a49a-bd97fa4e7ef8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2dfb3938-300a-41f4-8dcc-6bc103b03653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4119fa6a-1a3b-4f9a-9685-f701a5785c0d",
        "cursor": {
          "ref": "cc552427-8589-4721-9f85-7adaa99c7d69",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "eedc11a3-6f15-445b-b5f4-f636342befe3"
        },
        "item": {
          "id": "4119fa6a-1a3b-4f9a-9685-f701a5785c0d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e914220a-14a0-4115-b56b-a5bcdf49a3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4560d6-31c5-4494-a760-556df2f057b9",
        "cursor": {
          "ref": "3626af69-6b9d-4003-b075-ced55a1b8492",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f0a619f6-fe92-413f-966a-df03e1d844b3"
        },
        "item": {
          "id": "5c4560d6-31c5-4494-a760-556df2f057b9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "bd4cc6fc-fcd7-40d9-8b1a-c138204de43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d371c6a-6375-4a17-8989-16df71af8203",
        "cursor": {
          "ref": "4ad7139d-89cf-4be7-9529-89178e659a9c",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "1ad20537-48b0-469b-9650-86e2364c94bf"
        },
        "item": {
          "id": "0d371c6a-6375-4a17-8989-16df71af8203",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f2c94f66-38b2-42ce-aae2-2c0fa7fe9107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5598e1e3-b034-43e0-b033-b76d10118ee0",
        "cursor": {
          "ref": "44213672-3f3a-4f4f-83f8-2d668e44d0da",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "fbd6ff4c-2bbb-421b-bf3f-5ee057ab3936"
        },
        "item": {
          "id": "5598e1e3-b034-43e0-b033-b76d10118ee0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "403ced05-ec18-41ef-98c0-a52f0b7842da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab447a23-2f1f-40ca-830d-44754a0c8eb8",
        "cursor": {
          "ref": "f8fb9bbd-34f7-495b-b821-7e0d83a078b8",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "de83e4b7-5520-48b6-8b35-9f85bfa2b8bb"
        },
        "item": {
          "id": "ab447a23-2f1f-40ca-830d-44754a0c8eb8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a9cb4bb8-5aa3-49d0-b56e-b0207bc13eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd34f79-0c8d-478c-a10e-1bdf38c49c32",
        "cursor": {
          "ref": "d69cd5fc-2fd0-4228-b8bf-013f427654d1",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "531b1e18-2d46-4f49-9482-9c906b77879f"
        },
        "item": {
          "id": "8bd34f79-0c8d-478c-a10e-1bdf38c49c32",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "dc3457db-25cb-4c59-b6f1-1fa298c96ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78a2726-5d80-49dd-a0c6-6457dc6a46b8",
        "cursor": {
          "ref": "2d93d75c-ce1e-46e7-98ae-eb5551ee3c34",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "6bdb5c9a-67a7-4d9a-b2dc-39dd2092258e"
        },
        "item": {
          "id": "f78a2726-5d80-49dd-a0c6-6457dc6a46b8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2f14ce38-11e2-4367-a491-a4e27a7de5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3fd430-2ed5-4857-b7ac-7f012053e061",
        "cursor": {
          "ref": "5db638c3-61ca-4f46-82da-76b7f44392ab",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c16b150c-2fcf-490d-9287-cc15e32ccaaa"
        },
        "item": {
          "id": "5f3fd430-2ed5-4857-b7ac-7f012053e061",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6f3fd877-49fd-41e0-a4ab-a753753f1e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892dd05f-d21f-43e3-be2b-bd9099a562ba",
        "cursor": {
          "ref": "2288728c-9b26-4bd4-b269-c8f5de4a65ea",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0e93a857-d8bb-4cd8-bc08-40e38a6f65ce"
        },
        "item": {
          "id": "892dd05f-d21f-43e3-be2b-bd9099a562ba",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7b00efd3-f062-4141-aa4b-90945c43f799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167c6a05-3dfb-4f8f-abac-b4777f90947f",
        "cursor": {
          "ref": "375a696a-c2b9-4933-9be1-15da971d122c",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "3e6c2fb4-74ff-46e5-a2ac-9e3057a2057e"
        },
        "item": {
          "id": "167c6a05-3dfb-4f8f-abac-b4777f90947f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "37200146-6eab-4f84-8894-c2132e4d1214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e4877c-ca39-4522-a44d-f5c89034fb65",
        "cursor": {
          "ref": "9dbefa2e-4bcc-49ae-8664-d70cbb10b425",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "68106655-0a53-4a5b-8b49-cbcb309ccdc1"
        },
        "item": {
          "id": "a1e4877c-ca39-4522-a44d-f5c89034fb65",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7a600992-d5f3-48f8-8b96-0af9c823a9d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb1faa9-1621-41f1-8006-0be1f588815b",
        "cursor": {
          "ref": "f67778c1-2554-4bc0-bfaf-4944f4868a6d",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "1d3e34f7-a76e-4749-a9b1-78f3e3f81b90"
        },
        "item": {
          "id": "ecb1faa9-1621-41f1-8006-0be1f588815b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8e1619d1-ddf4-45a4-b17b-4a8e2735eb9c",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce506394-b01b-4704-a9a3-ddc422b9bbb1",
        "cursor": {
          "ref": "5e82432f-1c60-4b20-8965-055dd683e20c",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "51fc17b0-7f07-4981-a18e-e0283cdaff4e"
        },
        "item": {
          "id": "ce506394-b01b-4704-a9a3-ddc422b9bbb1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "fe2e7f25-26c3-4b62-88e3-0e1114379319",
          "status": "OK",
          "code": 200,
          "responseTime": 2983,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "67592034-28cb-4f60-a284-823db89218ec",
        "cursor": {
          "ref": "f0fca8a4-1e53-48ab-a59b-680b893bbb76",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ea030b30-27e8-473c-b3a8-9c4e6b0df047"
        },
        "item": {
          "id": "67592034-28cb-4f60-a284-823db89218ec",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f086f997-315d-409c-b6a6-1043e7e1d7b6",
          "status": "OK",
          "code": 200,
          "responseTime": 3122,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7ac4cb-b1d9-4970-8f0c-0e3d63dd45f1",
        "cursor": {
          "ref": "3069827b-9945-445c-bc87-693a0bee6fc4",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7b541c2a-6da1-4c99-9e97-e72f0c454ecd"
        },
        "item": {
          "id": "6d7ac4cb-b1d9-4970-8f0c-0e3d63dd45f1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d20adee2-24ce-43cd-8a52-bd9c1bde2d43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7ac4cb-b1d9-4970-8f0c-0e3d63dd45f1",
        "cursor": {
          "ref": "3069827b-9945-445c-bc87-693a0bee6fc4",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7b541c2a-6da1-4c99-9e97-e72f0c454ecd"
        },
        "item": {
          "id": "6d7ac4cb-b1d9-4970-8f0c-0e3d63dd45f1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d20adee2-24ce-43cd-8a52-bd9c1bde2d43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad66d40-4a6b-4372-be6d-44b41eaf09e3",
        "cursor": {
          "ref": "a396242f-b4d0-4163-b93e-ffd49cd100a6",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a88d78a8-5c0d-4661-8414-1809b5567d7c"
        },
        "item": {
          "id": "8ad66d40-4a6b-4372-be6d-44b41eaf09e3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8fbb5a65-8ea5-4589-bb59-b52a2ec1aee9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c70660-4b45-43df-a456-944944fe98cb",
        "cursor": {
          "ref": "8ada019b-e891-4cc1-85e4-d3ca1aa661aa",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "fa1c8722-f8d6-42cd-8bb2-b647fad08ba5"
        },
        "item": {
          "id": "a5c70660-4b45-43df-a456-944944fe98cb",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cb3fb48d-c295-4a58-afa3-e756ac6c07cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}