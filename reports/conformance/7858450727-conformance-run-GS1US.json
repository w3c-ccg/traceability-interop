{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c90c00df-09a1-4a45-90a2-601a5f20a488",
        "name": "Clear Cache",
        "item": [
          {
            "id": "eba76372-d2ca-46fa-955e-4c2491975b61",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cc084d80-49f5-4d5b-8d60-f202ad3697ca",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "623cab54-1e38-47c5-b692-a6f4ff09505f"
                }
              }
            ]
          },
          {
            "id": "b0231669-d3f4-42b9-9ab9-0d2acee89d90",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "031c5eef-ccda-46da-b84c-fa709c72f8fa",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5e1c3e4b-9714-4c91-9507-fddc7123b6d2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7dbe6c5d-76bb-4606-882f-7064faaf4b9e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e9a7eef9-86a6-4790-8d6f-b588d6601188",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d5fb0000-85a8-4d4b-ae45-727afd50fd73",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "abfc6b6b-892e-4644-9cdd-728699ba2174",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cb29c4fa-50cb-4526-8d48-1eeb23eae12e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4a950d29-6bfb-4cb1-981d-9116250ed85a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d9dfec18-e8a1-4a3b-b93c-ff8bb06590c3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "23502dc8-9c76-42f0-ae04-f5bb5ed649bb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5b49cee3-ff5d-46de-967d-396e2f640291"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d5c0680-b492-4357-beec-a0dc3b2ac557",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "394b18cc-fa83-4270-9991-ff4bf6f344c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "edbcc7ec-f44a-4508-865c-bafd0515b0e1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "543020cf-6c61-4fd1-b66a-fcfa1fbc3394"
            }
          }
        ]
      },
      {
        "id": "59562a88-da4f-4fff-beb5-48c77e965312",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "dfe5f408-a086-4c7e-ab13-3a7852a8c8cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1d045cb1-6333-41e9-a4e5-18bb2a527c87",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5008e73e-5722-419f-9a8d-5693480a51fd",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3b90c6-869d-47d3-9759-222b9a4ce470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e490c6a-141f-4cc0-8748-e0e622829c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578b5c58-2be7-4999-9eef-42abc31966e6",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22f4c11-638b-4699-a85c-80f546ca4812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30dffaee-c67d-4252-a175-4af6505665f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5f674f-4d32-48f0-80c6-ca1ee26f4c9b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c225f4-7abb-451c-9e33-7355ab610704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9aec6181-a649-450e-a992-fc7eb28480a2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5ee96e11-f240-458b-b7e5-7b28a98411e4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "861985d9-0947-47f2-94db-a3bd321cbb17",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "394cb4ea-933d-4676-8c08-4de61a2e5a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33053084-5706-44b7-b57f-76563a1fb023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcde8b8a-0686-4e90-aa4b-40d26a398f6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76fb8f1c-203b-4cdb-9218-20aa5c5df170"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a1210e66-f373-49e1-b98f-14c5324cf388",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dbfbf4f7-24af-45e9-bc43-92628ec543c4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65515af9-55fa-426d-9350-b65ec10158a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5ffda7cd-035a-4db5-9b65-589c951f2e4c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93855e01-1c80-42b3-8c95-004b064e1b15",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ca5a0ec6-81e6-42ce-8b5f-11c288562ecd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1918be49-e25a-4169-9aae-0807ad1031c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9346c1bb-833d-4f1b-9b6c-4932576004c5"
            }
          }
        ]
      },
      {
        "id": "8e6a43bb-71c3-4b65-81d4-06af59d030ff",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "064c67b4-3b89-4093-a011-47b48abaf056",
            "name": "Negative Testing",
            "item": [
              {
                "id": "910ca4cf-5887-4da6-89cc-551552d2a74f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "67178a50-e3ab-44c9-a2b2-bb2d00cee8d1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c09b333-4497-4af9-a8d9-1d8b13315eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26a1c72-b7fc-4f38-b740-bfb8c1d8df04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7609e2-6186-49aa-918d-3403e1ca952a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0409fcb9-272e-4ee5-b6f9-ebf9f1d643ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52feacf2-f156-4e1e-bf29-472777f1e282",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bdf6a48-af8b-4d3d-99dd-2bcda8b9f704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d049fa-de7b-419e-8af9-8465a5ef8b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d460536-507a-4621-bc3e-bb93c0fa5d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d1498ef-3b59-4465-8c38-182b9acdf0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ab37fe-ce23-4162-a187-96ef58def971",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2231b96-fb52-4b6f-acf2-a78058e79189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae8b0c9-c8c3-4dec-b7b6-54ed5ecaf66a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41552153-15b3-4f98-ae6a-d19f8b3e2207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "757d8e70-b00f-45b6-b00b-7c86fd5d554b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f25fb6-a626-4d22-b48c-7c20eb7054bd",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a9c00a-333b-408f-9ce4-3084cf84918d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd08775-d9f4-4eff-b373-520cee3a5d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191773ba-5411-435e-9e6f-e76b3f420587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8ca9e26-e06b-403f-b6ef-3a39e14de6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6854812c-fc44-4f5c-873f-26855d6e7ce6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc39d0f5-57b6-4940-bb9e-cd40994971f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f24b529-8eef-4232-8d71-77595bb251f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c37c826-067a-48ef-b006-0116ae4b8f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7b68832-1652-4f3e-b05c-96e4013b9414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5fa6c7-b152-43fc-9c57-fbabb06c3db6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb5b54f-b6b3-4109-9609-9c9c7a1ded3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "268e67a8-0f20-4b32-b0fc-3cd19b618b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065c9c4a-f5fb-4568-97e3-2026e1c85e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2f57b4d-2a20-47eb-995a-034f39f25dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4901a802-9665-44e9-b536-80b7b8e82441",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "818b70dc-1afd-4fbb-b10c-676a3d10ecef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e46bdf1c-f894-4d9a-a4d9-7fe5afeb5c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132a7276-d762-4903-af84-c1a87094cd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb6dc6ec-4a81-4d71-841b-c63f1f56edd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02a29e7-91ce-4ff7-916e-c3e8c32eb3a1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9be8a4-2465-4b38-a310-ed4a44a9a20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f8cc34-c8fa-45b3-8919-274d32ec2de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20027cd9-6fc3-4a51-a353-89c1324ed142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e41bfe5-e096-490b-a40a-4afcc4e3fb3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5829fff0-9b01-4ebc-9d26-39577d36fb16",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94379d1-5440-4b9b-be07-aebf8627890e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a951b96e-9c03-4dc1-85e3-249f8dcc23f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2d1993-20f3-49bd-afea-f9f51a7ce64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54697fe3-01cd-4fe0-95a3-48518a2e4707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c045bd9f-ff4d-47cb-92e4-e05afc9db4ea",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9026b17a-37e7-419d-8dae-4097abb340e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67202994-a0bc-4180-b49d-c16eefc79f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aded78ac-a358-4548-9b34-f62de9fb0993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82ca1084-1a91-4f4d-bfb1-d1c0a00434ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89806342-3bdb-4308-9c02-bd3da4fa9f52",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db9ab0a-ce3a-48b5-b07e-a5be65bdc4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5c8c637-3a47-4b92-9c4b-c48bb3503f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b48874-86a0-47f0-aaef-2f446866ade7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9bf6014-32c6-441a-8028-8123952ce5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45be8d16-5558-415d-92cd-2ac856c7e0b0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ae5843-7582-4b1a-b421-341b35c7318b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dc92ef1-560a-4858-b75c-5e847f7cfff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659ce15e-c3b7-4514-acc1-4aab70d16854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f819181c-70bd-45b9-9fb7-ffdd42278c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da63d7e-53a0-472b-879a-175b97f11c65",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dcdb8b4-fbee-4a69-9a47-f0431ef5d4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9fbead-11b7-49c3-ad1f-15c1b31865fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38074e2-bdb3-4e23-ad02-0b3bd485972b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e10dc98-6c44-4b4e-a576-396dec1a5f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ecda24-bed7-4313-88e1-c5b025de26f6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f382b8-616b-48ab-b2b0-aa8c64072407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68137b21-369c-4b37-a18e-68587b27c621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11821c2e-8923-4bb2-9d86-d58bcf55c940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d9856c5-6a61-4be0-b7a5-36b708655ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfe940e-06c2-4b81-9587-b2a499f10758",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c207a8f-07d0-4016-b6d8-5a47f7975e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a98ca50-2b6a-47ff-a564-5797db35b5cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4910e7-76e8-47ae-acf0-1c884e19913f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c04668db-b9ac-4881-8bbd-1a09dee2d846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7da100-54b0-49f7-a57d-48c6945d2971",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b1dda9-a095-4c94-9f36-84f4308da2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b198a9b5-fd33-42d2-bebc-3cc661d6d68b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355354da-622b-4f4a-b073-f4d101fb08ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72715f8f-76ae-4785-8a0b-eb7047845d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0607a6-e801-4056-8213-804320317909",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10564541-1be3-46cb-a7b6-cc26df753838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02bc83f1-07ce-4522-9233-477f467f6149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb170b19-8e37-412d-9de3-0e4503ab3adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b0cd730-03a8-4bb1-b3c4-95b10656efc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a2ccd2-968e-4687-a3ca-2c1aa2efe615",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ccae9d5-b62a-46f3-a742-9aebd0a7d82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73fcb20c-dde1-419c-abd4-3a73cd88b1c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b5295f-29ab-455b-b393-399995e4cf46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c52e576c-f42a-414d-8d2b-253fe867af4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972c053f-c5ff-4969-acd5-8bb401027974",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "935f2bc8-c40d-4512-9805-dd9829de8905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "361a6241-d249-4f8f-bfb5-ed8e8e6aac5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69910552-b44b-4cb4-a731-64ce02f99881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed09c2c3-7b5a-4430-8778-64a652c5e272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995bfa7a-b888-4874-97ee-59f97bf070ed",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc2bb42-428d-4799-a393-b20c770eef75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677051fe-c5a7-443d-844c-97ec1822f47f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0a5952-b23d-48e3-bdee-70d526d6b5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eae9c49d-20d4-43fb-9461-ce3846d3c33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2446fcee-80c4-47be-99fb-e091ecdc2b27",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56ec254-d6cd-4aca-b696-3f918e0d0f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5b4e415-d80d-48ba-8fba-4025101ec12e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252d5d73-2649-477d-bee3-8c45bfd14cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6255784-1086-48c9-bf4a-65162d9627cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19bb99f8-f0f3-4497-8e50-156148c384ae",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4611a2ea-ce4c-4cc7-94ea-d7ff047908eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be7f6678-5586-4049-8e2a-9fa951313162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1106348-e55a-42d2-8146-924e7cabee66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d2b3ad0-ba28-44ad-8545-fd263eeea2e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e454d2b0-9044-4853-b6e0-884b3b148573",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c3b2b4-88ed-4aac-b9e1-7a1f57a68baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a981c98d-25ff-4373-8f7d-6f9e3ad6a452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6423ff81-c642-4d0d-ad9d-2c8dd13f27d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f336b2dd-7bfd-4a98-a123-edfea1ce6387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff52768c-5a13-4b9c-b5e7-16add3e0da80",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e665dc5-4c06-4054-83c8-9c440e590173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3451660-e4d4-407d-a8cc-8b38abb08765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8975d47d-97c1-4203-a7f3-d1e3d9379011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9297d05b-feef-4ee7-96ef-6f90b03560b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c8c3d3-24aa-49b7-b7ba-6391c1720260",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2eda145-68ff-4d30-a9b4-bb00c05d100e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c405d77-8101-42e0-9bfa-da9bacae6dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395d0a3b-410e-4ff0-9658-aae816ead3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b0db294-62dd-4473-8f88-e4de3eea32b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb15880a-f101-41dc-8d11-061f38a44247",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f0b438-6344-4e05-8ad5-86cc01bd82dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d7caaa-b7f9-4721-ae33-9206da309b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4319235d-52ca-4246-ab05-85263f4e3321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "36b63595-b113-4d2f-9d48-10ae704d6655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ea8db3-dd79-4699-a534-8d2a8d35eb2d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72676e9e-fcb4-4a2f-b35e-4ade9acc83e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c4c2605-f8df-4ded-9d64-2d1e764b0fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e8fde9-d067-4bd3-8339-22d8130d593b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c45c5294-b64e-44b5-85b6-ef02f0ddacb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0851f4-b9ee-48c8-bcf0-5e9a86028117",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f5fee7-fe19-4f97-91eb-d79dd14976b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e35a0c-defa-417e-921a-9a34553c98a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1b3d4a-33b1-453b-ad56-a91912e5b039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f6ecb61-b49b-4cb5-b04e-09a637755e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce7bd5f-d43d-4aa9-96ee-e77e9314899b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "037f29ee-3305-4aa9-9d2c-173bc3e29c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "939b7a81-44c3-44cb-abf5-a8e42a13d8ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48363fe6-f0b6-49b5-b716-098903665e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea001e4-ba20-4f3d-8d4b-3bb002c5c441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ecc908-f1b7-4cf6-9ed9-febfc04ef069",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "063586b4-5020-4e57-8073-eb15cba4d14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca98d96-077e-40d5-bc6c-a488dbc84dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c088941-e408-408d-9fc4-b59a2f637d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f522396-8146-4392-9c1d-292b114f7991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97eb6885-3ad9-4d25-85cb-dc4da8fe2454",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca68d66b-62d6-4704-96d1-da9e678d4867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ecdf71a-f952-4c80-9df8-d50ed8814fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47066a3a-dc37-44de-8419-643e4216e529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "45b8c707-33dc-47b8-ab8f-dfbfe29d7cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05adc94-a2b1-4b06-a9f1-136dfb75caac",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb52c4e-ecb4-444a-a089-53e1a7fed440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b19c86d7-cb91-4645-b1df-2e55c2d3e64b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f604b53-cc1f-49c6-b342-447d430419da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "72b61bcc-8067-4e83-a6fe-aa9b413eea1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd871586-b259-4358-b49b-06e8805a9bff",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24112f7b-6a76-4a08-b103-cf0032156619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e30f4531-50c1-4de0-bc4f-4ce984773025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d1cd19-e138-4ced-8e99-aa841d77e51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "894231a7-9c8f-439e-b46b-2b5a9d107b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2dec84-39eb-4405-9206-5b13536f4132",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b717aaaf-ad8b-4ac5-aca4-44f5e74cb5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "280e9915-411e-4695-a876-027bc1e9d0b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071833e2-b796-4170-8d1f-ba78d8996dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4655f5cd-8cdc-437e-9e79-05527c7fbdea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131cc8e8-5a28-4668-a409-1120f60e1546",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe44bc8-4d9c-4923-950d-cf9677739b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b03f0e-21da-4956-962e-cc8ea7b26685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9e4940-21aa-40b1-9f46-7e674cf3b583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "76092cae-79ae-4b83-9dc2-d9efeb8ddfb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3154caa-e706-4cd1-a8a9-5501430728bc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de39362-b96d-4fa0-9b24-2418899940c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23e35d37-0a2a-49a4-96b2-97b820adea20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5848773b-0765-4f6e-b77b-6496782ce48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e6d5543-e9a2-46ae-8485-f2d9e991e798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9645cff1-01b9-4a89-bd04-dcab701b2042",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff75951-946e-4219-8286-f6ace171e368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da1744f-0d25-442e-a9dc-d85b0cfd6b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46dedb5f-eb68-49f4-bfe7-4f5a96ea5409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "74bf3fae-5772-429d-b98c-5ada112178ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b65e94b-5499-4ec6-8eca-1d0309a93219",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5d06bd-efac-4eb6-9fb4-3cc443d08eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a1d06b4-3f96-4917-8b4b-a8c2cbadc210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3ba922-697a-4a54-84b3-2b4abb066e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5edc2af3-3de7-4b86-a573-36b735aaf24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f386016e-1b13-4237-b4e0-55200954e240",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fcfd09-d67a-4015-a9d4-fa2ab573633a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8548445-efdd-447e-85aa-2824c8dde593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9b1ca0-7326-4e85-ab11-340f255bd101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "50bd10d8-cf6d-4b0c-a803-63a85d3770f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ca60db-4738-4d62-a774-d0f83d470eea",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3741468-892d-4236-ab7a-dd2a66e3ff82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c680fa33-a6d5-4cf3-83e3-eabfd960f811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7600e9ef-f7ab-4c3b-ab5d-c73010cf49a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1057b0f-6546-47fb-b73d-6adc79985151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0650975-7f68-4ec5-bd48-a65de58f1729",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af59528d-9c2b-4ef7-b9ec-a6df1a12ec0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e3f600-009d-4c31-867f-de72ecbed0ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1572e8ea-db58-48ef-b014-839509dd98ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3125ee13-1f9f-4b24-b575-73661e14da1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fac5589-1ac5-43e3-af13-4a393dcaad5d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4022dc6-fa68-4ffb-94af-15823dd3bd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57cc9eb5-475b-4f49-afba-c2c89857b03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131e4be9-4902-474b-8a4c-909c4f9f81aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "57bf7d21-1985-444d-9268-b1e021f70cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8865ba18-0206-46ed-9692-39fc93e701dd",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5874a95d-9b9a-44a1-92f8-73a76f79e0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "560ddabe-8a02-4070-b335-daff5d4a0bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0743f4-ce8b-4a23-a683-66ef5804a345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd6c1ced-e567-48ac-abad-67638be23865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd9d059-3d21-4ec9-a873-457bdd4d070c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87882c24-7282-4a19-8da1-76d2491400ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d24d9148-1f81-4e01-b051-1128cd636b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde55d9a-6466-4c5b-b807-022c5831127f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7803c27f-1fef-441c-9106-9814bd80acc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9ed403-c767-4ef2-887d-47fb0775a635",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c650bad-6b78-4f9f-b5aa-cf4586e09503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c28daf0-2340-4aa7-a63c-36c673fccb1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63079e6-c56b-40d7-96bb-6d417c8100da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "532dedd4-2b73-41b9-b6cb-dafff1c3d573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fc80a1-2793-4ce7-8f22-e1131c09465c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9cf76a-93a4-43c5-89f9-c3ecc369982f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a40d3ae1-f4a2-434e-874a-57bf38513de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e526a5f2-f945-4dbb-9a7d-99f65d7c5405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83986f20-ef15-48d0-bd6d-b5949b73b7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ea511b-6c7d-40d5-b596-563197c7b2a1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e8db54-2e34-4e88-abfd-91224f4929aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6752b069-eecf-4a31-91f4-cda92442cf33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9a97b6-e66f-4e04-84db-4786e25ac705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b95980db-fa8a-4943-9da6-2a6f3de184ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2faed219-1119-4993-9308-c3932199640b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa15c92-f784-4c94-93d4-d9bf6f946202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e04b4d-41b4-441b-8d84-14b5677f9a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7838e1b1-c6ca-45c4-ab92-f0f546bae9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dca0299e-16a4-4852-8cc5-f50ef1ce864f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5067b4-2929-4b24-b81d-b35e0b23f913",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b36a710-768c-432b-a649-4240ddb69399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0918fcac-67aa-4572-8df6-acad651aba54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5931aa-0460-41e8-9a7c-56b28560aacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b25524-7c40-435d-9a03-9fb596c717d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0005f1-04c2-44d0-a93d-2d98ad2978b2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8284e450-3ed1-483a-bc70-99febc756924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c15a8a-460c-4d6d-b7df-2d67dbfcbf1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88b98ff-26f7-4798-b4a3-bae14767fc90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "65a6d568-2b42-4c74-9ced-1490d2ee8e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8235d3ef-6f59-46df-b417-f31f6a31f38b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f80db8-f77f-4b16-a2bd-4895ff4d3f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4249f69-2d12-4b0c-a0fc-400bc10d54ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7fcc2a-f24a-41dd-973f-0d86943ceb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7eef35ca-69e9-487a-9522-8722a6561024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f835f140-4a04-497c-979e-9272b66f6d76",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c687ee31-5db4-4bef-a873-4cf4ae448f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b213bb18-cc1c-4c61-897a-05d857358140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f99a48-abb9-4dbd-bde2-857a960d8567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "63d88a6a-6337-4a3d-a54b-2a0e67dcf47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7435ee8-f901-4c4f-a74e-41b506453188",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df8038d-ff3e-4b99-928b-542db0c65fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efd95bc2-6762-4a6d-90f9-22aca0dfaeb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ac3243-fc56-4190-9dd2-cbe07871278b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fc3cb4e-5565-4043-9806-4b1558a5eb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7439e5-7272-45b3-a4cc-a06d67ce4fa5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a24593-9079-48c0-840a-56558d8e6b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eec5d293-e3be-4409-9418-9e7a41e795bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6735de57-7aa7-4b37-a2dd-b28d6f98b3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4243b755-6e05-4dcd-b305-16cb040c34a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927af905-faea-4bbd-8bda-d5eb8b0b4792",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705bd0e1-fea9-4a5f-b137-4703bc0461e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b089ea-4046-458d-b241-66b3c027f00e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e013c879-5a9f-4cb1-9b54-cc2f3dc319b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba2bf24-302f-4048-9e7e-2bd709ccd819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d79e81-1844-43ee-98d8-61de255b7c6b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77bd7bd-8525-4a57-a0d5-d159b5b41d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47335cdf-666c-4750-a452-1f8011346c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1982a4-b741-4494-9aea-fce367433aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "921e0e84-6bde-4f91-9d63-33c39d88e374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f24c470-56ac-469a-83b6-d923e99b00fe",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4857ed8-4070-472f-8798-a43988cb22e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add48a44-ead9-474c-a2e5-00cf795878e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43358615-84b1-471d-8f54-a22a7ab0705c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd6c0cb0-574c-4e38-ae68-8e9c6d938664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687b1982-c839-4c45-be2a-bfd367b88eea",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb1a71f-b7f7-4c28-a319-7b26b33bf493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf91328-fc0b-47f5-8ae7-cb41c69534ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b656f1d7-d0f4-4152-aa13-2b89c7ffc888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f38ba7d-192b-4414-8dea-2fd0601f6fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e05532-6e3a-45d0-afaf-896ec93a8729",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f440f560-f87f-4260-a612-23e0e2ec2e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d277bb-f2f1-4c5b-a3de-52905ddf114a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c9c710-3663-4093-91e8-7e95fe2d6a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "80e3935d-3e7f-459f-a474-21c70918bb44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f44c54-9ba4-4c5e-8298-043a4c3a1820",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95355633-af38-41ae-906e-63ee6643aac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c0b8fe-11c6-48d7-8974-0a7a4909c99a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8933ac4d-81db-4b76-a837-2cb6a237047a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6799594-a1a5-4716-b394-d4ff1b51d6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7178588b-cd4f-4ed4-afa2-bcd3baac9594",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ba0415-6899-49de-ac9e-5f49176425c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f8634a5-fd13-43a1-9d1b-3231db22c614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa69744-2362-41f2-83c2-df49ff0104ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "83596e0a-0bfc-4e97-9c1f-d7a51f1c094a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27f9df7-fd57-4eb2-8f1b-2cf768fe743b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3679f4cc-23bf-4102-bdf9-3cf84e3e9926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c509c4-f8cd-421a-b5fd-7ab1b99c9e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2227f1d6-7b55-4b8d-831a-6ef3ed49512f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "06b8af2a-fabe-47af-a30c-8180f63e30f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d73062c-14fd-44ff-97f0-c93f3d3ddd87",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97513de9-b1b4-4778-9611-75f333bafb64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0819f0-6940-4161-b5a3-79264c22b5b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb78254-f863-4f88-9816-4e8f3ccfa406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b641d56-7bf4-45b7-90b9-0a73b550eea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca15316-2677-4abe-bfaf-57d2b84047be",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c347c21-9926-438c-bac5-35a3625ac979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c404440-55fe-4240-b7ce-343f7e382a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c8c329-a1ec-4441-a2e0-399ee4aba28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c30408-8e56-4768-af58-1b3be6d0d241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cdaf700-8f36-4ac7-abd3-2ba1796b8ede",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9946f697-6b69-49fb-9921-bc5e86632baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05210fbc-6d60-4e1c-982f-e1f3eef3a64e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ffb096-5a6c-46a4-b952-0245d314def0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3708354-c141-406b-91bc-df49b43b14d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e819563-15e5-441d-8c52-c62faea71cb7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0785c54a-7cfa-4870-8a7f-a622d1e20748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df7166f3-5cf9-44ff-99b1-732f6b59439d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7c7449-6626-4158-b6bc-1c8840768fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b030e9cd-bbd0-4664-bda6-4ce86a4a74bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb5d56e-f11c-4cd3-96b2-29d22e4b3b1e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9fd5ac-d54c-497e-be95-54b8247ee554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e81a7dbf-e7d6-478c-a7ea-6c5dfc3643c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5be655-334b-4210-85b3-ea12884dd5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5b1e391a-bc26-41c9-916c-b43c4f1b93b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9b0d85-0aaa-40c2-99ba-668415ea5508",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfea69e-c290-4de7-8654-11d5db82e1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "478e86c3-9da0-465f-b7ec-750fa388594b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c912d7f9-e647-4d10-8109-f53cb824c661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a111b08-bed0-4b4d-bb22-9977c24776fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5209c8b4-7d8e-476b-8477-f2847aa13b57",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e05246-8339-4a72-97e4-4b0ac262d9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b6a678-7fb0-49ef-a2ac-0dceba8a03ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8158392b-5976-43c3-842c-89934b820b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6c9b679-82c6-43bf-883b-11f5cc2037c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69fd73ee-173c-4d61-b1f5-8a59572dbedc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11fad4fa-061f-4de9-adb4-07897d5a31ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a1716b-de6c-46b3-8615-11e5d5925257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d5e587-1ee6-4046-bde2-aa9b18281dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d88e57bb-446d-4347-b1fb-48d977d45d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad22af5-52e9-4b74-a945-c329d64e37ee",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72adab49-2636-4379-b252-30b3c9cf0a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf47669-de01-4410-b2d1-9f0e77714a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a8dc6f-fe70-486b-9a74-942315825bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f23340a2-e24f-466e-82bb-881e5e7b5ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca66a5a-0102-4dd1-90b7-3c42edac0c02",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "688c380e-8c1a-4ad3-9fb0-ae921bce10eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e904611-29d8-4b3f-954a-e3fddc2cdaa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209a13bf-d83c-4f84-a8d2-2506e30c045a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4a8f8a0-cf22-427a-a2f9-f513fa861d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57218555-523f-492f-8b13-f6fa1559bd72",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ef7931-c849-4a56-ad60-9baad29d6a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ecbab4-e48c-437f-976d-6ce4949d250d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7758bb71-f1bd-4e3d-b2e4-6ca62d96c2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f860c66-fd79-47cd-8016-54cd335c43f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada49c26-5904-42a5-ac74-14c075b50942",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d981e5-0d40-48a3-9788-82c16b8b4c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27373c19-be6d-4144-bab9-a4d3c9c81d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b156bb42-a8e8-40fb-96bb-8c73e9608344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad60695-8a34-4fa8-9e41-88aa5d8754d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ebeffa-c228-4fdc-b3cf-8e52cfb81f9d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "127ceed4-7ef2-487a-8f24-75ae6c9947de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d83f3c-8ac6-444d-b387-0e528ec90b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730b236f-96cf-441f-ad46-4677c4de0832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd39e329-bdaf-4c58-9552-4005585200bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66db6f98-1a66-47bf-8e00-f28cc2c4c7d0",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd54bba-4483-4130-af1d-2c1c82348fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17218e71-2207-4e36-9113-6abc4adda217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb3cfdd-f35c-4875-b8ff-97815badc267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ade649-b95f-402b-ad18-bab3716056e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7cad281-763a-4885-a6e3-5809a145233e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c707e2d-c2e9-43fa-ad9b-f2f9f7e69c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094906a0-a615-4c49-86f5-466824cdfd98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d694285-66c0-4cf6-bb96-29f1d740c565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b115c1c-d37f-4854-a1cb-72fe7a02da34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e00357-c9d1-4290-b0b9-c70b453ed12b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d5a595-417a-4a3a-9da9-950dfe18ffae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50cc2160-0b1f-40f9-b238-729f3e350956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b9a188-d273-41bc-b28b-cd1d05d36549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7964e42e-0fde-4bc8-8b87-045ae137df2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e03ec90-3397-4ea1-85ea-ee59ec780a1a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca7a777-0418-4c51-97ea-7459abd2669d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b3a5f6-bfb3-417b-ba21-8c86179d9cee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501a023c-3491-4269-be00-3314eed2c5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d228c2d4-a40d-43ff-8f93-96fff6b71f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa65c5e4-e980-46ee-ad95-70824e5bc771",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e2daf5-3268-416f-8daf-729df15994d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b5c614c-8a96-4b8c-8fc9-ee4b6d3a3c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d321c1c-7f9f-485a-bdd7-fc30807cc740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e6e926-e6e7-4f90-b7fc-a8be46e10fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc79a982-2f49-41af-8b64-4d0954717b70",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fc3a49-2c82-47f8-89c6-6958c1b05f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf1722a-3190-4a0b-9532-0838a5fdbfaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c40c789-72ae-47c2-9894-c6b320db8837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3da2d9-a784-47d5-bd5c-b3885c41a407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4349eaf6-55be-4896-ae35-942c7b6254f2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd2c1e9-3cb7-4ea3-a6a2-a912f829b80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff6671d-68cb-44b7-9447-575b48f05509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a9da2c-ec6c-4d6e-ac22-9d61cdf299f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "408950c2-dca0-4cc8-abb6-ce2b4f596bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a06ce8b-97a4-4de6-bee7-ced258f17474",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "816ada7f-355f-427e-8719-9731a0d4301f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54da633d-134b-44ba-ab98-20ce4de06a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c35ef0-988a-4876-a025-6ce746f31cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c8dfd4b-9734-4bb3-aafa-8afb55fa42bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761a97e7-21d2-40a1-b79c-23f37773da3a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfa1444-741f-4f0b-8417-7dee90ead926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aec8f78-5e40-469c-a7a4-ea10f2bcc60c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7fbbe5-fb95-43c8-8402-874c6127e637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43c0ca0c-9543-4743-befb-c2c9fc41b6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22828250-3d15-4e08-8769-dea9ba376889",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61b9ae8-70bd-4ad6-8d43-49ea2fd3cbc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5fd8825-b69b-4d2f-b113-9b34f2f29929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412f581a-5323-4b8f-921d-4d4bea827a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1028a6f4-82ee-4c4b-b179-d74625666be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72612c85-a096-4e22-aef4-0c366abf11b5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4bcdf9-9199-42fd-a31c-da61fd1d33f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e6a205-7d84-4119-ae52-12e6252ca06a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e81d3e-5c80-49ae-a8e2-2ca9bb70afe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6882c6ac-8b50-45ed-85df-129e2ec30ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100c60ef-0e8b-4e89-a4bb-ab7e75a5c045",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ab3708-47a9-4c64-a22a-d2b5e3068c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9153234-6c84-49ff-8c4e-d24dbd7267ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d952de63-3a0a-40f2-8edc-951ff32431af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dad6b648-c54e-4259-b9d6-e0e9465f0355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e4d006-8423-472f-b75f-e9181ed978ac",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19838b88-39be-4845-a108-d5530f726fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c1f056-bcee-413b-9983-23d51213e317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7414240-b98f-476c-8735-5ed26b1660d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8c6af27-5bae-4eb7-9d4e-1058619a6b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6441d8-1b69-4c37-8c7c-6f0c193d2908",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae37c3d-b601-4025-833d-6e005b92c2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eeae9fc-c138-408a-949b-01f98351a4ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8bdc5a-715d-4a10-8857-d0d67f4fe3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "35039370-fdfd-415d-8553-6798f6f123bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75696cf-4969-49c9-9901-408f917517dd",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31238d1e-039a-4f5d-974c-cf03081e99d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f95bfbea-d2fa-4b2a-a304-0faae24cd85a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf421be6-82eb-43e5-a3d7-b4e036856c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b82afa3b-3e0b-4684-abaa-dc5ffe41fa37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5427a5d-efec-4a0a-b9f7-8de927921e29",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706ceb73-0d5d-44be-ab38-678a270c55eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9edf34-13c4-4464-a5f3-fbcfe44ff59b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ecd922a-b149-4f83-a45f-811870a2f0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4aea73d-bb62-4619-ab79-32266b3803a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7a50c3-c7a6-4046-9155-0146314b13f9",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "700e07d1-00fa-417f-b922-54ac49ba0130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "06b5479e-fef2-4e92-8b4c-c871fc324563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e7162c-bc9f-449f-aa4b-e9ca1bf2dbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d443cd7-3422-4bc1-9d32-87dd9692ad6e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6fd9be4c-28b0-4390-a404-8ecce5973b79",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5d81059-59eb-4bbb-b465-ad8ecaf8bcc5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36737db9-2495-4e34-a2fd-e4130797aeb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ee01eff-851a-4577-a21e-13a5131acc41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ead2ae7-c07c-4119-bbb8-4d372b0ac102",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29b6a471-2fb3-43b2-a263-d2673a8ae07e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "857bea49-caeb-4d1e-9695-803fc0c95411",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b279002b-7840-4564-aaa3-c3791d9a168b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "53e2179d-41b4-4ad9-8343-321b941dde63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21aa4773-9565-485e-85c0-23e81bac69ba"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "17243998-1fcd-40ee-953f-12969d73afaf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6de580db-59df-4668-8418-8f67233e2cc4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "81787fbb-28f5-428b-87ad-1da3977ff778",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6a777ac4-b4f1-4515-9eac-3e4ffee5899b"
                }
              }
            ]
          },
          {
            "id": "41dca5c3-6881-4208-b73e-168e5a7ca45e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cbdd7b42-85db-4717-975d-f911ae657dec",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a141e862-8b35-4ec6-97a8-bc216c30256c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2acd25-2474-47a9-b9e4-3d642322d757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a3873ada-7571-440b-91ba-64fb6d9ef320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271997af-696a-4574-9c8a-b2174decc096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c9aad1e-a8f5-495d-83e9-2b17affa6105"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ec732f9b-041b-4969-8342-6b5cd1f9e6a9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bd56e59-b13e-4227-9096-555191933b0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c222570-006c-4714-9ad7-6528307d25ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb329c7d-7c34-42a7-864c-076f7b1c7df7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5e035a0d-85bc-4f84-86c6-00d7ca5f8f83"
                    }
                  }
                ]
              },
              {
                "id": "d41ef864-3ade-44b8-a2d5-c2bc4e18f151",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61649331-8615-43db-b7d1-8c46711a2738",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df4002e7-6855-45b1-a10f-18b4e13f89fc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b7b6306-fef2-4e94-936e-e19a9a3a1f97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bedc5d6d-15f3-40de-ba3e-d755f177736e"
                    }
                  }
                ]
              },
              {
                "id": "838ef038-064b-4531-a91f-4c53ebaa32f4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3228fe5e-1ed8-45ca-9f79-a400612c4738",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa089f10-3ce8-49f9-b163-f54baf851fbf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "951cad38-9093-4e51-9361-b67d0197edfd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "20815a76-10d1-44b2-8384-bc044e007c06"
                    }
                  }
                ]
              },
              {
                "id": "d6e8461d-278c-456d-9d79-f36fb4d994a7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60132bac-8b51-4658-9224-d5e50298f0ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6586b6fb-8e54-4a37-8dfa-b491d71f84d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e794df0a-34ea-4ec4-a9ee-e369530c277a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "db14d8ac-1c24-41ba-a3b2-83df67c05e76"
                    }
                  }
                ]
              },
              {
                "id": "001ffd1e-93d4-48a3-9749-ea45eb08e10a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87dcf711-e3e8-490a-b161-ddcafa0bf2f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d0b6618-8975-434c-a357-6ac38174e11f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17448aaa-7ff0-4a6c-b2cc-fea5ae4096ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "34bc4f4c-ef3e-4573-a457-96a7b93c930e"
                    }
                  }
                ]
              },
              {
                "id": "fcbc0f97-8cf6-4fb2-b8b5-a14ebb59c837",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ea434fd-a9a2-4eef-9679-eaa5ac5982cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5fd07209-bfec-48c5-a428-5aa44dfdcec9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71466776-0bac-49ff-b61d-1b336f059637",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cf4c7d6d-038d-49f0-a666-6cac1ec9f624"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5bc18c61-aafc-4d37-8bfa-a015b25f89c4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "81ffa72b-496c-4069-88b7-79332bd22d47"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7188ca53-db52-4997-9496-097292fa65b2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8e8e0acb-c2d5-4fe9-845c-dc788fe38b75"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "948492ac-7b38-4ef4-9e05-8c06abce860d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "edcaf256-1235-4bb1-9c0a-af7ccc1842b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "733aa8d2-cd44-47ea-b8f7-37867b63c00f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b95574ce-69f9-4558-8103-d8b11b56ad87"
            }
          }
        ]
      },
      {
        "id": "61d0d080-cdb9-409a-99d7-c1ed5711d681",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7bcda548-7b53-42bb-b1d4-fb6fc55fdaf0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9eb8a731-6a4a-4397-b28a-8d6377561dbf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d09ba731-248a-43a7-9cdb-65b4d6816472",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7316690b-ebe6-4dd2-96fa-e68cb7a7405d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df03eafc-1646-453d-bedd-f0b69c8f0c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d3c600-7c43-455b-a0b6-e2068b180960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c5b48ff-25ed-44d5-b942-53352238c2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b92c725-73cb-405b-b9d6-99e505c7f62f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57983343-101e-406c-b08c-1cbafdd27ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c949e74-a25f-49ee-9a48-6cef8604b557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e9a174-9745-4df1-b926-37d094d63e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf77f67-10ca-4b9e-9d6d-b7c1cf6d1971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbdf553-2f3f-4f3b-9677-68663a6281d6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abef235e-ebec-4c27-a2e8-551a7c08c8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1327c7f0-38c4-47bf-a16f-8737074debb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5def055f-0647-4a36-9b0d-eb7dec3e031c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c46fcea-075f-4bd5-b817-821aab89ca8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44db53c1-770e-4708-916c-55b5fbee78d3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f1946b-289d-433c-acaa-06602dd4d922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "147c71a3-734d-401f-943f-fb0b875339ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b500342-7996-4ec4-b170-07120bde4502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95f277ec-fbdb-44b2-ae9d-08ad5e756003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844ef896-0814-482f-a6f2-494e24c53709",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca66f62-51d8-4752-852f-6a81c0e3e7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0359bcb2-1f03-41c2-98a5-12cb710680e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed83cc83-5150-4d21-850d-6a161013c7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab713d82-9d11-45b0-a2b5-48ba8ca99246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2f8d53-afa1-4dbd-a7bb-83de1740c8d8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64018b0-7744-412e-ac9a-468eed3ba121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7e13689-bc71-4239-a302-f62fcfcfc21c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e49c762-0dbd-4777-a357-e7a87db7f44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "34fb212c-eeab-48ee-903a-83910819b91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8753cadf-aa11-4c57-997f-f3b1b1a72b41",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13799777-276c-4307-be69-32dafe577520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1b2abf0-b8e2-47b7-a465-b5b085cf6657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17ecceb-b026-4d52-a56b-2f1b347f5f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "59c26e9e-8488-4995-86e0-b7d9186366d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93d30f9-26b5-4c78-bfc8-f44176f3919e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8b76e9-2336-4a2f-b30f-91e4b2be97cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b092042-0295-43a9-a471-d17200fcbe8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc6ad91-3155-4c12-a327-3244880d21b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efe9b834-6bea-4e69-94f3-eb6cf0671549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf942dc-d307-4382-b5bc-787d78c5c785",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3b6d15-c966-421b-9af0-902f73e87f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e896742c-1492-457e-a449-e6c4cd91e8ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc39e6b9-439f-4020-9c7b-9ee14c8316b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8949111-1a92-407a-b552-0e2c3053f983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab43e245-7d08-4531-a196-25fd82cde641",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e18df7-4766-4ff6-9b21-6ce5719ed283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ed9933-ae6c-4b80-a62e-5b513233b04b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d69669-1039-4989-823a-d2975edbfe2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21968c8f-c475-4b55-92f7-a3b41089df69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17646758-a56e-48a1-9644-9018429a1216",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58808d2-c602-44f0-8cd4-61ebe3cb05d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f5a50aa-6f53-4b4d-81a4-0a397e3b48d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47de8b07-8592-4eb0-a677-38c2f30c7bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7a57aae3-d8f2-4fac-92a3-c1825992d10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd8ec96-e2ae-47b2-9847-b376023cebe8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6727d6-084e-4ef9-ae1f-78e0ff4bd919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de9f789-f055-4867-915a-15faebcd05a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88196f9f-8053-4215-ae5b-d41a1194b7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3a091750-5832-4c25-b36f-100abe9b40f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31546b5a-4976-4da2-95a0-2aaf14e48b2a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ddb9ee-7ead-41e2-80d0-1e1b720a241f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582a1c4a-ecd9-432b-8a77-259c5c23fc77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3892546-2a28-4ddc-b21f-7971f6cfa971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91da028e-e894-4913-bb9f-1a7dd7a5ecde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a176f30f-406f-4dc9-9311-f547e58fff2d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3711e4ef-18a1-4ab3-924b-1d6afc93739e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb95d8da-2443-4532-af19-0e4f57925321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925ebc87-ba0d-4479-afac-a434c6094f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9434e626-6741-4a75-ac4e-324fc220a42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d7b527-bec6-4b88-8a96-7d49c73327e5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf79292-d02c-495a-8826-57afdfdd3d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5681f148-7d30-4727-a76c-a41bb8eaae0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f7d5c1-2aa0-42b9-ab43-f13bdcb78c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "edeb43c8-2b19-4173-8752-4802355270cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b3d398-52db-4c7a-89d5-47b8dc6609b5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28108366-b97a-4d1c-bf54-95c7dd33b414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4128b636-0e79-460f-9fed-f2d9e289f95c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6752500-4bf9-4e7d-aab4-5adba5980c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "72b92c49-6829-4cb9-8cea-a13a2f45cd2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a80048-24af-4c0e-a837-49e15b523cc0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d31743-3688-49dd-a39b-b83423d56642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd21eed-18dc-44d9-b67e-3ce113a361f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298db8d8-6e71-4414-ae9a-ab861451d273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ffd2c30-932e-4d35-b53e-8ddab4351b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d8a804-bccc-4d50-8b2e-8d3043c8c35f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbc2bf6-deca-4734-b4cb-435824ce93af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bb6aaec-74e1-4557-97c7-c3c4431f5a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e5de70-bd32-4ef3-a831-fd01cf898361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "df374ce2-7571-451e-847b-43b5bbe70f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5384da4-555d-4a78-9c97-47aa1b6fa908",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd0c1fc-4eeb-4c4a-ad6a-b90439fcc7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e35f433-9e45-485b-a41b-b0d54372b65c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456a66af-f98f-41d2-9b8b-2e24dfaf2a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "beaacc17-fcc3-4188-b4af-507a16c17ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941d5fef-26f0-4954-9ec2-c30403f3ecf8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f832ce-5847-40cc-954b-5859af4d4539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f240674e-1f83-4451-9c72-bf1dc6202300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921b4e97-bca6-4f60-919e-ab934a9fcf87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f62ddfa-233b-498f-af6b-d30a04304d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ccecb2-072f-41e2-993f-40c699e36c81",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b29e76-2a5d-4768-8e1f-f41707ca7ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffcc2ab4-d6a9-44ef-9e47-eb717e931f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2105661-1258-47ff-82e9-ac59851b5efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac656a2-597c-4551-9f8f-ebd057733ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c036ef7-4060-48ba-8c42-840d0665756f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79cd843e-d5ae-4076-8fba-e5040d987485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e9d6d4d-c1e9-40b5-9732-e895188be93d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6177aa7d-4772-4cef-93af-686ec70e5815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6c87fb3-d5db-4438-8335-20b404107d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c855e90-7611-43b3-bb54-cae212417940",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4e1024-378f-4845-9820-9640537793e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3bab7d0-51ef-4a4c-92ba-a86be9b263b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07ba420-df00-434b-be14-09a2d1733f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70adeea6-f7da-4df1-97de-23857e56a72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef440b0b-931c-47c1-a9c3-d8dd12253440",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b2df8e-a486-4838-9a54-e938a0166e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c85a456a-afb6-4d6e-b3e1-ac9d90f3c7f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3ee5a0-29d4-4fa5-a131-53e2f248fb78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac0993a8-ccd7-478f-8579-0418b4b25ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a8462f-6897-4a44-9811-9bdb71ad12a2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64be7485-ed73-4615-8739-40e80424e5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f63ce2b8-ea76-4c48-b61c-6976eb1a7320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4681043a-18b1-42b9-9ab5-a280111e5634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ab256a2-dd33-4667-b345-e64d7e12c178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346d0724-7975-495f-9adc-70b98e951e39",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6b77e4-01b8-4209-89c9-4e247ed96b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3242a0dd-0d2f-4b2b-916b-a8caf28fca0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c82dee-a61f-4ae0-a604-a30c02fcdf6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b12a1893-3b48-4fbb-b297-c4f2da6f4251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb789964-91c6-440a-976b-b9410b10c5be",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2fee21-b064-4b3d-a92e-d2d3486b068b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abd06a58-fc3a-47ea-817b-4e610473e8f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2b230e-3788-4416-9bca-c2f9e7f8a14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89465018-11b8-4c9f-87c5-8756781ba1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d47969-a1ff-4fcb-81d9-ce179af9bfcc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffd8d06-497d-45e2-8bd5-7332700f8188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "627d786f-3622-41ba-8765-6efa3aec5ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee9e565-5617-4270-8df7-b3037bbdf673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "462c4911-5797-4a5b-8b9e-19f1101f1094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b6a308-c5e2-493a-9859-1947a67d57f2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9182f4-7927-4cf0-97b5-4f2741ba6e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6dbe760-6e58-4fa7-9328-2aa364bcd922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506f8494-32b2-40c3-adcb-30a9e49ad2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cced042-cce1-4ee6-a2f0-b92deec578b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756029b2-4d5d-4309-8c67-9383b4ae6837",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5b598c-c3ad-4032-9eb4-93ad947002aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e740f982-f2c9-455a-9956-47823f332053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5fcff0-4c96-4c75-9ec0-714a62dcec3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee853be6-65ea-457c-b85b-d05a18925917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281f035f-a6c1-4580-99cb-3468fbfda2c4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e03a0df-6d9c-4987-bcb0-471b4f0b0984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fcd1118-b326-4cf8-ab7c-cbe7ab037269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688855de-c0a2-430b-9822-c0b5032611f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "080d8543-dc5a-4807-88a3-4a97de411856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9147d63b-fbb1-4b09-b58d-e26b47894916",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae80a54-75ca-43a3-a73b-4132e3dce976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b317f6be-a67b-4c44-91fa-dad4f2b07647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4e11d1-f403-4b3f-8e58-0950275fc509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dde2853-0e20-44b9-8d47-e8364ce2e68d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "202692c4-979a-417c-91f1-dbd707ccedb2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "52b914cf-eb24-4c89-a582-46eaa2ef3489",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48531a4-afd9-4fa5-a86c-3628445daf38",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "375c4d33-db17-4310-b3d1-34827ad678ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a0b199-78a1-431d-8a40-137b0a985c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3216277c-2432-4f6a-aa46-8a8b2f28098c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c427d12e-2f16-45eb-8da5-c291985f7ec4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd20e811-5ad3-4c55-8bb7-ad749e40f0b0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d08228d1-2ed5-4e7c-8af8-a811e5de85b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aec11d6a-6053-4d15-b126-7fcc85311d0a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea5f50f8-c1d8-4b39-ab9a-d871d7657aa0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "92a9ae34-9cb9-45be-a870-afdf84f01716"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dfeb503e-6af7-4d73-8326-9be00a0ea638",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "17a7a368-87dd-44ce-9a12-1b10eae38456"
            }
          }
        ]
      },
      {
        "id": "88eb8f7b-ab7f-44e7-a786-39a1cb24848b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d6e450c5-5cb0-43eb-8b8b-c88f9240f894",
            "name": "Negative Testing",
            "item": [
              {
                "id": "608be0ca-ba9a-4260-a8ba-25169a0d19e5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b8612310-138b-4ac7-b9ce-d71070c18c1e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c7f99a-14eb-4cc0-8030-c1f37e5d50ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "898e7ff5-9a69-476d-80af-04ddf8398d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2925a867-d300-47aa-aa70-210942713f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "722b80d7-0dd7-4007-807e-464d654e2135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6630434e-c27d-4dd6-a9fb-9cf011772dcf",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c124d6c0-7def-4187-a725-c1e085a63114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26643fd6-69c6-4543-8f34-df32218dda9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb80751-471e-46ff-abff-4a55a2009ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f04cbc2-6c31-47e1-9ca8-f668bcb87d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56704a81-4b63-4ef9-b5c1-b0be6b5582e0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69293e03-3f3a-4727-b763-f2de39b9e75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ca7b2c-128f-412c-a9d6-7211c89d4cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ae6351-26b0-44fd-a4bd-3056ec0c81cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7a8d426-939b-4758-b4ea-b9602a16aae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5b460c-2754-4058-9be6-c02aba7318a1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c060ab3-e487-4e1f-ad22-4e529831f641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d467fd0-9a31-43ba-b891-9c96bbacf5cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3a3083-54db-4940-8741-ea200dcc696f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1df2bbe1-df3f-4c9d-8fd4-3e28fc13b3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce681d18-7681-4e19-a008-edce75e89e48",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbccd5d-ff94-4c88-85f7-4e6ba22137a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08b7b534-49b3-4a3e-bf62-78d4176fcb52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b46dced-39bd-498d-9a11-c1776e2da8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6f07cfd-0db0-4c69-aee4-93091b90867a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa29ad9-73a9-4409-9814-49dd1d94fcdc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72ad6dc-c870-42e4-9cee-b694e6a77ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f3aeee-20a3-4683-b745-d404ef839856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea25421-69e1-473b-8c66-b8d28479ad03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "53aed8cf-4d65-48ef-a651-7856b421c774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7d800c-8c9b-4249-b2cc-aa8f7af769c8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "484a6a35-575e-41a8-9925-7b82777af70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983dc292-e50b-4eef-96bd-074821e0e098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdafe38-1bd2-465d-9cc1-6ab708e35cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0caeb2e-9a31-4cb8-88c1-ebf2239f3f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41aa3164-bb40-4317-b2d3-2ba172612821",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5989a04b-30be-4c9d-a501-5c89d1108a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be8c59e7-2fcb-4b10-af91-14755b62b5f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc5383d-ac91-424a-8238-c78bd60f4f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7824817d-289e-486c-b1cc-a7d2da67d228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4a2121-39f6-4088-b4b0-8419fe4e231d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4aecf97-e0ad-4d66-8639-5f0c8f2a0e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ffc6d2-682b-4d49-9264-7423c1641def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829f786e-9453-441c-9207-35a4e777e884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8b5492d-fd48-4e2a-96f1-6351a099bd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae70cf2-16be-4239-b680-f33ffcf173bd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b28f45-88ad-44fa-b191-1edcc74ef346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f86be687-3af7-4e66-8cf2-ae526d60128e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1131c45-b1a7-427c-8d1d-62ca7184f2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14b97147-704b-4eb0-b20c-311f57b918a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc70d2c-2093-42e3-8f1f-f29d76fed722",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0331b731-d6df-4504-ac08-10abf0049681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35876948-dd51-4dc0-92a0-3c4adb765917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a494839b-5ba1-40ba-83c4-8bc58c60c42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2fdfafbe-8155-4921-8556-b12ed1c738a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a1b191-5f08-46dc-812a-e2fe59bd51a4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86afd164-c302-4340-8eb8-8d8c3fe840f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a25a64-01f5-41ae-b564-a502e3845f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8cc4d13-ee5d-401c-9a79-071eb14875f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c82e8ed4-2eab-45e5-a364-b50567f18a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6acae3-0e3f-4086-b925-b6298ac64ded",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad034e3-eb0e-45a4-82b6-b253af960fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2439832b-c0cb-4f90-b247-53533b91a93c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06555afa-8b0e-4e6a-945b-d956cd53f8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bca658fc-0ab1-47ba-8b8e-c59f3e40b0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8b05bd-35ec-4d56-90e6-1926c06071a1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b5de03-5964-420b-af96-2ed08eedcd05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2da165ad-ffc1-4354-a481-2b79d2aa03f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc44117-6c84-42a6-b0ff-1c586aafaa86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "eefa0e5e-056a-4c31-9038-303cdd8d7cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfde52fa-0ac1-45a1-bcce-d175de146fab",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec25da4-249b-44f3-ad7a-f6924e8b1088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13382bde-537c-478a-a8c4-d8758ba2ae51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce48dc6-e22c-4865-a274-b421139916d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a337b53c-649a-43f5-8ef1-7f116bfd23f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447d2a3e-4a17-482e-8538-930a129a5686",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "591a3bc9-c394-417b-aa63-d5c9b478bc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a1c777a-6d52-4b31-98b5-4301157fad36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f5b684-a559-4d7f-bcb7-5b355d3e106b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a83faf-84d9-42b1-b3eb-5d97ed02990d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee92e6d9-d066-45fd-9595-82a46db62afc",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7baab39-c1c5-4cf8-9bfe-8f5c1a29eaa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d2679ee-f458-4c99-b0e4-2937043a084e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3933a06-151c-4719-98eb-6ef2f8a6362b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "be4335a5-dba5-4db7-a437-fb4f4af957ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df99b36a-1cfa-406d-83f2-420ea60290a3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ce6d59-1a44-40f2-a83d-0242ea6916e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a37c7e-67cd-4d37-a5da-c44ba2ae25cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c47047-7701-4c0e-b91e-8e7b7ed05f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7691c45a-0344-4ad0-9eaf-bc4615aa842b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7edc6341-04be-4dc1-bd04-010bc6248202",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a22e90-dd4d-4d15-8159-dd5f12a5cc2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c22e86-f763-43c1-ab69-9cfb76c58103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6076e870-5033-4b15-8bf2-ab2f72f2d7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ae5073-2677-49bb-8432-cb6996cf18c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5ad3ec-ab98-433f-9a30-6358d923e672",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c546ff-4095-43d9-a578-e7627b3c7fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53751ce9-7237-446f-8132-118d8f06ca86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc28ad6-e296-4f23-aec2-fbca2e6e75ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21797887-aa13-4ea4-a260-89fe5fc2248c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da5238d-0cc2-4d23-b827-caae9cc33b5f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db991c03-05ec-4c06-90b7-692daec34a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dae07c8-1e11-4000-84ad-dc669ab0631d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e439ae4e-5f79-40dc-8f25-cecaac5b76f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10ebbe15-9942-4ff1-9ace-f0a0960a4f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd0031b-06e5-42a5-882e-2739fd91a33f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb6553e-4841-4a29-beb8-7168e3ec5558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9341232e-bcef-4be0-bfaf-d10a15b07676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3e8ddc-4a9c-4cc1-b6fb-a279fbe33c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c83f828-b74b-468c-8750-80ad0627589d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5950a6-21f9-49f0-b1ba-ff9506d7041f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81fa67b-0b54-48cf-bc42-8e1c44611bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c96f9fe-7736-4a74-a310-0d47a340b008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965969e0-273b-438d-889d-d7db2107a2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a99186ef-13f1-41c3-97b7-c88bb334959d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0cccbdb-2407-4fde-b049-ff5dcea1f520",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f299c975-67eb-45cd-bb37-6d7971b02d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82fa880d-52e5-4514-8e77-2d9c694addad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927b3d2b-3d3e-4f2e-b870-a0e79d884b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3859a50-b722-4e3c-9664-b3a7926a0ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea2a8c3-daa4-4b67-8615-997edac15a84",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0ffdac-26f6-4f43-a506-5fd65c4a31b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e31e0ccc-e7b3-4a50-81c4-c2a7484c6df2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffdb1c50-32c2-4df9-9ad9-ebf1e91b960d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f42446fc-775a-4f55-96b2-b2813ad52413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc397390-e412-4453-86a7-cca4d5338984",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd99c1d6-bcd5-4957-864b-353d75c10924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4ec539-644e-4815-a7dd-326558226f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6733de60-2165-4bbc-9893-f3b47e77cc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ead149b4-5be7-445f-9cbc-1bc25fa904f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc97f3b-6f12-4338-a33f-b98915a31131",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d33f5b7-400d-4673-a606-48bef8547f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb35fe2-64ac-4606-b280-0566536e4978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d430d7-5083-4e0a-a503-8f6444200b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad02df41-a145-45b8-ad0c-86b205ce6ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139488f2-1d01-4cef-9904-c57d3444d67e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02201c7e-3f50-4dff-ac3f-a739001a4462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4743b65a-4ebb-407a-b09a-3086c5001a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de95299-bc8c-4f08-b9bc-a2bbb7633d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "860b388a-cb30-4b8b-9c66-a612c38efce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6efcba4-23d3-4f42-841b-07c2268fe2bd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edae4d33-4a3a-4d36-ab11-8cf38c04cd32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e4cf07b-5a77-4390-8ab0-51f2465dd052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7d420a-0281-4b43-b680-a621c6ffd5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "faefe039-0453-40b4-bc2b-d2fee976874d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a50b19-5b08-4968-a499-ba2130c121fc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6d7fcd-7129-4523-8cba-228757890a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9120f0fb-e31e-4ae9-b111-2858128292fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c868fe-2e83-4ba1-b789-334a8bf9aaf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12d7577f-acef-4656-aa72-03e800e9ec0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d2610b-6682-4fd0-bd5b-970ab072c277",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84eeb68d-3aa9-4c40-8387-305213350d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8cf780a-dc9d-400f-8c7e-4aa10a5afeaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716a26c4-048a-4f4c-a297-f215b787b583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d6a843-0e5d-4cea-abd3-2e4c08c38fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a04858f-f91f-4109-a1ce-49c474544b6d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2da2160-827f-4b45-8520-f8807b61cafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28b1d52c-7381-4474-bca4-07163f318da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44907cf3-30bf-4440-bcfd-53cf15c64033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d9eb43-b8dd-4a22-8848-357e3ac80d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83857717-b3c7-431f-b7ef-d9c9a26820f9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9124047-3860-4fef-8c18-03c7a14a8eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85dd34c6-70d8-47ad-96a2-62e3c1e3baf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18c8f1b-7e20-4226-8c48-77d7470ac918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b162b015-2355-44e5-b507-f9e79929e983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219ed5e6-4884-445f-9a6d-de0b5780ec41",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07651b80-fae9-45f1-924a-834bce763fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f089dd-27c9-4a58-8d3c-0b956598c705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b410fd9-43b8-4bfc-9b0d-f4dec288bad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e369832-dedf-404d-8a90-a6de970027a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0aa4080-fa45-4427-98ab-a7f8afbb5eed",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03e91a7-3e07-4a48-b2d7-43204e655685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f795e78a-c6fb-47cd-9d3e-08222b635d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d956b457-4b29-452f-8e2a-4befb85613e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "371ab266-5724-4c34-9157-9f2ce19a579f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685352dd-92cc-445b-84c2-aed91684bd4a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ff0d10-7649-4b14-8018-4674bafc049f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7504408-2764-44a8-98b9-836c6c75645a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52780038-51ab-4f10-aa01-f3440087e401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7898b0e-c609-4709-abb1-9fc581a700c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4cbf38-d494-46e0-a8f4-6030cf083add",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c15e971-2c71-4f82-9403-3bbe1a4d788f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "896100c0-83e4-419c-8982-6ad2ce099474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c3a0c6-320f-435d-a249-8a89ac983c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ffe3214-9bac-48d3-9dc0-cc73dbe85d8f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "689ac392-4238-4d3f-afee-ddf870f26c5d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fced7313-9b37-44b8-8c00-5fab5f3d411f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e58f270-d224-4d45-a00d-92a74d9c05ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f38a12-6c95-4e7f-b34b-cd4952355730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffee42ec-e8bd-4582-aca2-e7548eeea321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7a62d30-2674-4b1c-9407-d093e5486072"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c84fa61-25f2-4bc6-99c8-d8f318a4db50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "302b3b6a-3e7b-4835-a9d0-20139cc4832a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b0b1c02-05e4-4d82-a216-8af6a7f9debe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "affc4eb6-1082-4de0-8070-792ae49a7043"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd74e5d5-4938-4cef-b75f-a50200fb45bc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f92fa5a3-576a-4664-ab97-5e5e8fbd13af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd293160-35cf-4389-a736-46369ef640ff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a4bbd017-4cbd-426c-a321-20180c5fa0b2"
            }
          }
        ]
      },
      {
        "id": "56f9245d-dcb1-4081-ba80-137f27811acb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c0c7a2b4-deff-4e07-b7d3-73d636cce589",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fc987414-b2a4-46a2-9274-f89b558e98c4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "19a0b8b6-4c16-427f-ba8c-7f37bcbb2352",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ef5b16-81c2-4ba1-a573-2fa37eaa0170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d062222-023b-410e-aa1a-99323c63b076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b212dfb5-4bf1-4518-bc09-62c2f489408c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb58b7f3-d285-4189-9cc5-7adc0c6ff52b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "940f7f9b-d65a-4498-bb75-d332de9d32be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d061a9df-9f3b-499f-9e8a-aa9e809506b6",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ddfcde8-1d98-491f-94d4-13f849652f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c963bd-1cb4-41fb-82f7-70990245d146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eea2a70-576a-459b-86b7-67ea7d9e506e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8031985-f2ec-498e-9fe4-ab0951040e6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09cafb35-a837-4be7-896a-52fac03d2a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaaad260-25fe-41d8-b387-9e05a8a31670",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec16368f-cc90-48b0-a159-60b902bed5ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bf305f1-c877-4804-94d2-af5e76646dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcee4167-8ebe-4223-b4e8-f5e343739f14",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d7acc5-d64e-47ee-ba33-d108b5bf40a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c35ada-6011-4810-b578-5bc80e5a7424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5cbf0b-7fc3-4eba-a7e9-3abe513cbf83",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e77863b-608a-4256-bcff-3b427f6b7ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c09da8-b7a3-4057-ba90-67918acf4522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba016a1-41a5-4729-bad4-35a702304e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed29e2d-8c60-4dd9-99a9-3553a176f801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e434cf1-60ba-4c16-88e8-070e9494ffa6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3e2bd5-cee4-46d8-ad12-fe86eed1f946",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75cc8c1e-9107-4b20-a5c3-833cc18c1e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c187ae-11ec-4fa0-8228-01dbed42988a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d6421f5-d413-4eba-b12d-820458271494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67797ee9-37bb-444c-b544-39e90d7541b1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c920ae60-6ae5-4748-96cb-6a40d6e3c567",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8115f3c7-3464-413f-a5ca-8ccc5023d306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87db74eb-2977-480b-a5f2-21c73c45de55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c710ee0-04eb-4420-9efc-e62e4c829ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc5f513-7cb0-4f7f-8afb-a213a3c41959",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84543a7b-8056-4c4f-91f8-70c4d6b89de1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0553c19-7538-41df-886c-64056d828ef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56465d8d-4066-4c56-aabc-5e2b309f8760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ceadbd-5ebd-43be-86b6-c2fab02c35b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029200c1-9a3a-468b-b75b-35cb663eb793",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da193b35-c085-437d-a55b-757d3ab5a58e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5c1c6ca-d86f-4169-9f8e-49b2c4f616ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07dbc50d-4eef-4a64-915c-4e6645d7a0fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b472de47-5165-419e-ae26-b2af732441c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f38b4cb-7218-4306-b52b-6945de87f90b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59931938-f83a-4880-8bd9-b869f47c4cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "963bbd43-216c-45be-91b2-43694d891345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10a4d73-1ee8-4d0f-a8e6-516f00dedc93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd79541-22de-489e-8508-36edaf67bdbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe604e3-d0c1-478b-b36c-121951d18be4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10038782-752d-40ae-947c-2c69523e005b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6370fcc-5d09-44e7-808d-472fe99aa3a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0f62e4-57aa-4753-9057-91927eab86f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d507d1d7-43a9-4791-aeb9-fa948a560b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955db94f-c38f-4e97-ba3b-b1c86d96ca3f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88293d90-8d8e-46d6-8f92-76b9cd20bded",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14a9ff2c-f2ef-4af6-9e27-b3091eedfa85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71933444-3558-4a07-95ac-c89dfec1c33c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "307fa6cb-fbfe-44d2-9be0-6ea368e58320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5072b1c6-9f67-4db1-b5a2-55fd928438a4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d3e0bd-8ecd-4fa5-8d88-edbcd3bd4cce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6d48a39-fe20-4c66-97ba-d9a081b5c670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78274237-aceb-4429-9317-8a3c542e31ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c15f109f-335b-42d1-855f-fac1dd4432e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5afc3133-1b88-4717-a71d-755922ed5052",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe426d9-e18e-4a04-a94e-f86de77b317d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60d68df3-8000-4b0d-8e5f-c56a47fa9ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c88427-12ae-4c69-a450-80f747df5eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da94106e-91ed-428c-901f-8760c7c388a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5180f2-74fa-4bdc-bf48-9e81fa0d1aa0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5426073-a59f-4b88-ae3a-710a8c854732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48524d82-481f-4b56-a79c-fc7bd56bfd29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a008a1-56a5-43d2-adeb-66e645711662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c3f5a33-4171-4f2e-b99d-3d8d1ef44fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8e16ac-aff0-40a3-b4be-bbc2032f63ad",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8921e2e2-e243-414a-a910-a7043bd50038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef9e7cfb-8a2c-4bd3-b9f3-88c7119a3150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51cbc0d2-b9fc-4afd-be36-68cf49a1da90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bed6aacf-eb6d-440f-bf26-0209eaa49f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023e9f37-6c2e-45d1-91ed-5e27ac6bf8fd",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d38b2c94-3ab5-4698-8f1e-38647d23b9f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c03cbe-cdb8-4460-a1d9-6d0532ffda3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1787309-c20d-4dd7-a623-faaabb31701a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52377f6f-1fa0-4a6f-96a9-867582c24948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53ca321-e115-4e5b-bcf7-da64c4fff09b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81261e33-39bd-48fb-b9fd-79e1e19987be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3012e8d7-1a63-40ad-83d2-2f6bc8f0d4f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd42877-f331-4669-8f7a-8caf63c36029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f06462cb-328f-4995-9819-842e5ff4db11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423e7d41-6445-4314-bf02-cba9fd175508",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d158cae-e495-4e2a-b04d-4072f8c9ceba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9efb276c-d9a5-4d25-9901-bfdbcf26ebe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf92451-24eb-4d97-b146-82a4163d75c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dae87ed-2294-4608-8416-e4c91aad7b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9aae593-f867-4d8a-8b47-a7be24185e21",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11c303f-2bdf-4609-aeb4-3fbc5cea352b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8abe1b9-d15f-4774-a1bf-e57e848a0032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c70b050-7761-4983-bdd0-3d9e41c09e7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aadd418d-2889-498e-8411-75be342dbf7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eefc6cd-c4f7-4657-aa75-75a0b20d378b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6488d34c-7294-4956-bddc-37fd1cd7b5ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a1d825-084c-4aa8-b1b4-b45e25f4c9a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d56d69-1c2e-4480-893a-727528b55815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8907ca1b-806e-4ded-b174-122bc2587490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f465c5-7804-4fd8-934e-37f3de141675",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f135b965-f5c0-4ee9-8feb-4688a6958fa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d66b2ca-4ed7-4dd4-b745-189cc644bb56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ae1490-cf97-416c-acd2-0b84ddcef941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "964651ac-2214-4743-bc6e-9ff34ca52957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8d817b-272b-48fc-9519-2dc896e075df",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729b5d19-916f-47fa-8afd-5484c119fe7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25225786-aadc-4c6c-ae68-69cf10b68f1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee935f8-08a2-4909-8c47-3398c013b195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c1eb4d-969f-430e-b9bd-3197075ca0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0204560-7379-4d9a-b204-b20d591560cc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1af1c64-a74f-46c9-902b-219c4d22f8b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf4f1b85-eb2e-42dc-abbe-f3dc2ee8bd2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a02db6f-18e1-467d-92ab-ad0b591115c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3143e783-034c-48fc-8510-a65231ec3ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3f1890-31dd-440b-a0e5-bf5f69bf4054",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f817f4df-3665-4d64-ab95-ab8645deb18b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40656e60-3ab7-40d2-a3eb-1a599e53adf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d805c930-1404-464f-af4c-c157f489765a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd1b056-7558-40a5-9bec-4d79dca29f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee8c788-5018-4b67-a9a2-5cf500a24618",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1b7257-7144-4c6a-9c16-4350176abf9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b20a19e-2ef1-4774-a11c-f7b5d508c261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d96ba03-e4b5-4810-9daf-fbdaadbcc7ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "affa9f7a-ce06-44de-9d30-29b9488f07a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa524ec-e412-4ff2-8ad5-865568bebb56",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4730de69-15dd-4550-9630-f270bed02663",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04039104-4fdc-43ef-9a57-89b171134d5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caff4dfb-4104-4fcd-bed0-9994119f83a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e47b76-d2fa-4628-a5da-556c59a3692a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4598a2-1fac-47ad-926b-4dfc791fa38c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd6cc03-172e-493a-b1cd-d801a78b95f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1c31805-eeb3-4d24-a11f-033052aad1b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d672ae62-2f8a-4e88-adb5-361fdaa671a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2255de76-d4aa-49e1-a3c7-1674a9296908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52459041-de26-461d-936e-5e3548fa480f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7022a761-2b3c-41f1-8c65-d47ed2d80323",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a01dcafc-c955-431e-8dc0-2d466620016d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4db7d5-5f05-4103-bc9e-26e1affd208c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f521de76-1924-46d4-8712-fe12f35c4f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234e7883-3df1-4b9d-afc2-a27d04aa92ce",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cdc83c-dccc-46df-a26f-dab2cc25fd78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d605d23b-bb77-44ad-be7c-414e5c6ac76e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5e8e5e-0e89-4735-b7cd-d8c161700f70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c92ea992-7a85-427d-83c8-61a89d5e9c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c183619-9272-4d6c-afa4-52df7e25e739",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f6c986-b63d-4eb8-9ad5-3787bb5d8467",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13314f1b-ff4c-452f-bbe1-f2275c7dd77c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d14b2e5-5687-4744-8923-edb7a29a748b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ece0a06-5e55-422a-b4fa-f3f21dc305f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a338abc-58b6-4f0c-a41d-dd21c8928dca",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a689fbf0-ceaf-482e-bb7a-ed5e1a73e895",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cd73b70-8307-4f72-94e9-465854371e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abffc026-e3f2-4a98-8394-bd22174bb218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53cce190-66f9-4f86-a8e0-bb9f7866c7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f43c76-b11a-4b95-818f-a972e80411e9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b6c6b4-1d56-4169-98c5-bb7a13d6d78f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a50498ec-4c02-4ba4-b1da-cfbdbffbacc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55622e5-0cc3-4c86-adab-8456d4ee04aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "119012d8-e149-48b5-8f89-44c9117b7d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a305c8e-ca9a-41d9-bb90-fea168bb8a73",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488d8347-7e5b-4858-a12a-b05a91e24230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29b5f1c8-4c39-4653-a57a-92116564984c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea38bb6c-b64b-4dff-8bd3-3db4d9d80e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a2fd46-265c-47ee-934b-1d1091b4ffd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a279e6c6-b36c-4aab-85ef-7b2c93882055",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc79420-eccc-4598-ace1-6585bcbe2530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4309011f-1a47-4d8d-9b79-866d81edd9a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1422d43f-5c1a-46a3-a8be-d77966fd7d12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af7c17c8-5463-4612-b1c2-d1a3ead42d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116342a9-50a0-4992-a36f-ba47347be040",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959fd4ba-6174-4b94-974e-bfcd9c37fd9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92f9aad-e04e-4b46-823e-8443c761a14e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a653792-0a36-403a-a507-f6d05890734e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "630399ee-88ca-45d1-bdc5-6ac556026332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2611b2bb-6bea-4303-8a76-ccc354438740",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd46637f-968d-46cf-8a50-d06acdb38ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1583c127-b6fd-4155-a23a-30c8d7f0e5d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "322afa8c-fb42-409a-8ae0-c51ab5fec306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7ecaa4-1768-4531-94da-973359dc74f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3ece5c-f5f2-43ef-a756-81ac412a0762",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3759a7dd-9e8c-45ac-b552-94692ac0ea0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42685050-3dbd-4bab-ba71-ac19753b2f5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85805046-215b-434c-89ee-712308d32966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "756d3a06-38fa-42e5-9a65-8025fba398a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57108745-e948-4db2-974d-4ed7dcd7eab4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21abe076-fcd2-4156-a59d-5003c656ee65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c855169-f161-40d4-bc56-58fd72ac215c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "989e0a13-e2f0-4f12-981f-992d3db5b324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e1d056e-0917-48d2-89c4-b74f2142c81d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328a1968-3bf5-4bc9-97a8-f1db28305d85",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd3f9e9-5a44-41be-b483-c7fc0ce1a67d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a531bf82-11eb-443d-b0bb-297b5e7b17ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ccea09-a6ce-4971-a7a1-58de028a9dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b2dd5b-14fd-43cf-a834-b58d3f038a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df400113-7386-42ec-a971-f0076db28b26",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89579feb-1b75-42c0-a98f-07cb9aff1ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d7c0ac-2fa0-4814-bbc0-40b68e51a395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36ac1a7-7434-47af-a91e-9af9fcb88cb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "102a0dda-edbd-482c-ad3c-0bed1b6a6422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773e4773-bd8a-4edf-b1df-dd0bbe3c2288",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bae0066-3445-4dfc-a96a-56092e6cacab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dad8aa5-5b24-4e3a-a3fc-f442d2856144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e96246-ea61-4d85-8906-f4dc43a8ac13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d37416-6d8a-411b-b609-c0d850412cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4003e389-2938-4230-aad1-3554e6a2eb33",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d5cbec-8b60-4954-a698-ac856d33df35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19d939e-6602-4fc2-b085-6b62ee83c7fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6358e8e1-610b-417b-9eb0-d37fb03fddf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d2dd57-635b-4ec1-ac77-1eec1d309e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b42e52-615b-4661-8707-c015fa2b1b3d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4c663d-d3eb-4637-b28a-9b087b4681aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "679c6313-a16b-47e5-8c0a-74b05ea2560a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e424b8-c501-4e97-9572-c13ac19161fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1347b88-f289-4ce9-9707-e95077dac90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72044b68-4da0-4a3a-a35e-26f4deb921ae",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8538d720-1247-4eb7-9794-4cbb61ece3c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08be5052-2bd1-4d4d-b72d-ee674dd13702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce69a58-2b80-4b0b-86a0-411b832d6a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a23b7b7-155b-486f-a076-f3d6f3f32832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f6f9ff-596d-41b1-aaf5-83c781ebf78f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8f822f-1250-45b3-b67d-b8a49252c4ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c058b5-1bd9-4ed6-a3aa-ee56bdfde95c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f2b059-29ce-4733-8b35-dbe79dd6c0d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "790c80c1-a330-40b9-ad4e-6558b232b034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6e2ec6-366d-4931-9d66-2988606f77e5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b27c30-fb5c-4541-89cc-848354fb4d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd7c931f-68eb-4a9b-a718-3ce05cad32f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "136bd4f9-1806-49de-9f5b-8f3a0f217905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65a78ba3-1937-426c-ac2c-36a69532f004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0075dc-3e74-415d-b2ab-06964d3da99b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c3f245-dcab-4ac2-abce-333d59580490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "017f8397-bfcb-49c2-a542-27f6d968ba59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15c645c-095e-4379-9f76-cf1f9fd4d121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97827e6a-d5c9-4a97-9064-10e366935747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22f0768-0d92-4471-b0b8-7042805f6bb0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb183e6-bcbc-4efc-b29b-11f0950550f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f34e0e5-e597-42e9-a47a-d5d1f4f43dd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c1e915-4576-4ea9-a31d-92d2bd2a1c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd8cf4bc-8fc1-4d65-858c-27e046f20c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e36c8ca-3708-447b-a1e5-d0d02a5b664e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2485a0c-2423-4904-8500-a637e10d1533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a65cef8-b6d9-467c-aa94-101bf8d1d2fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ba3562-94e1-4f85-bc59-95687ff895ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7972f11d-f601-43a7-b257-406f1b778f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfeddc4b-69c0-40dd-82f3-24e628161a81",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94124579-008d-46e5-9e27-cd528e0516d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b1611de-2fb5-4291-9add-2f4f71f99fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7863a45e-c8d0-4bce-85fc-2f134dae748a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e8b03cc-0eb1-446c-82d7-a02d8adcfa99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2fc0d14-eacf-437e-8c36-0f5f3381a6aa",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85acdd19-d5ad-40c4-8f74-dffb5521a087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16307b45-f8d3-4efd-a8f3-c183c7fe9a19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "255fe9ae-4bfe-4009-810d-3cf391a51845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52fa21f-e63e-4710-b470-e7b8a1cc9b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62a06e2-d368-449d-9428-38bad6c1e76a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077e600f-9275-49e8-b054-7169c91aa273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31758e67-602b-498b-89ae-9d7f24415d7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2efb8b1a-de51-4898-8cfd-a772310d00d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a90d01a-3f5a-4818-b63a-4b3fb6bed49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1215dc-04f0-4b55-a498-9a8617d83c64",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c9f370-38f4-46b3-ba32-d8cdb3c62056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8828d413-18e3-43f6-bb5f-1f2d000ae2bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef62851f-2c33-4977-a7af-ab18d2b0a226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "192f7662-f2d9-49fd-8e55-8d07fd3efaf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f18cac-aa36-479d-b750-7ae230f6dba3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0695e22-8915-4180-b972-dcaa1c15daaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c1c075-e4bc-46f4-b049-e6ccb74c0785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ffb1202-5138-4dad-b488-877c6ff2a82b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7853db4-46c8-4159-b7db-e61ba807236a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b22278c-32bd-44db-9343-585376aeea11",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33cb565f-ef93-4bf7-abcf-493f56cc3c53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "993c52ce-88e7-49f7-956b-74116d823f4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "832e7add-b2c0-4b7a-9d35-a25c9e2722de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "434bb2ea-9e68-4b15-96b3-4c50d03ffd6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e2b2d3-8f57-44e0-84ff-719354b21ace",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01ef8ac-d23f-4ccb-ab43-23184dd301ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b34abb8b-f75c-4278-8528-cf5a2088760f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e80f7a-4a8d-4e33-ba1a-cefadbd8d33f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37bdf8d9-2fbb-4d6e-a044-a1f0c17a5996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e99cd6-43f0-4947-9b1d-06aad3542f98",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600f842f-47a8-4f5a-b22f-c6243b36b3f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e39202a-81ef-4bfe-9464-b212b40c2608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82cbed30-3b09-4fa2-8e04-6ec617f8bf2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c0eac9d-9031-416b-8356-b1bb40ac685c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e919ff-0c74-4fff-98bc-270dcd1a18d8",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1efe7384-c7ef-4312-876c-3236796e0b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "884a289f-fa8d-4f8e-bdd4-cf3f082515ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61b5fdb-d96d-45cf-8443-c9d78f46b71e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce5e8475-d679-4736-adcd-8d922ad44f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513623e1-bec5-4580-b7f1-b14e74dda686",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d087cb-fcba-48af-a820-adc277e6fb35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f75e9c87-2952-414e-859c-144f2cf99467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d9ec52-544e-4213-9216-54e16f546c2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b9a7ae2-3a16-4bec-a2b0-37b7150e23a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac7a863-0bd9-4275-9946-007259cc04d7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcebc79d-e684-4b2e-af03-f600587fe1fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef158230-d56a-46d0-b2e6-19d9dc6b9136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc478e6-6b82-4a74-b3f8-be4e9920a7b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc988c7-86ec-4e40-bc53-402459a09e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35158930-fe72-4eef-bf80-327636e5d222",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697ddf8d-6fac-4a2f-a683-5219bf0b4f8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dd2a535-c53a-4477-8e8b-884d2b00a61b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa38927-7162-4c26-aea8-28bcb8bbb2db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb43109e-26c8-43db-8d43-b1e14e02ee28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ac832f-5e25-4373-9bdf-fac529e8f595",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f872b65d-53ac-4208-add7-c9c4183feb06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07bc6997-0a15-4933-830f-99faa1d7f1f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f40d0d-19d5-4d1d-8b3b-dcda3b923f9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e7e63c8-b750-46f4-8fa7-8007f2bae394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344d68f8-6213-4d51-8d63-e5863746cd7f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a754d09-2c90-4242-829d-5b57f788ab01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c98f73a5-1132-4f28-a75a-1f6f1c1326a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b56b0e-cfdf-4711-94df-9f67cb9432da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95b96d0-d4ad-4858-8ebd-e91170e6d319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048bd5b4-bda2-44de-a780-4d0db7a14318",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6cdbad-a82d-4648-8523-cfc5c1a969f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dacb11ce-6ee0-4cc8-8e89-80b823bed411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d46cc3-80f9-46d8-9834-478b276829cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a264124-d1e7-4ec7-a70e-fddc1cac5028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0902948d-b368-4514-84e8-6d03ad847c65",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c654255-b9b4-486d-8cd6-302c684fd8cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72da75c5-d9e4-4a7b-a06b-ef05bd0e2643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8fd2a1-60d8-4fe5-a5fd-7f8dd7707d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5520380a-2e20-4a45-899f-de865bd98f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e08afb6-d2ee-42e5-8caf-391771462570",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44fae81-86cd-41b9-985d-c1805da600b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1abf536-dc47-47a1-966d-cccb5535fcbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5633fc-3190-42e6-9cc7-2cc725179d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d6d6fb6-127b-4bce-b736-70fa3170e039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd50744-3874-4ab6-ab92-65a4974566f3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb85c7c-0150-458c-bfda-d45a2264e6bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "976fa31b-e097-4d7f-b88f-bec84e50780b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af4e1de-7f02-4ba4-accb-b0d4999ac7f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d0b3680-b2f8-4506-a019-a08a93b770f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1a0445-3702-45ab-a80f-1f9f7d4e86b8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f068a98-894e-465c-bd63-79276ba6d022",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8d80609-98f6-494b-bff0-9b47fc5f13c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02ed3eb-2bec-405d-9982-7bafe95ae211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9230dbf-c7d0-4b58-8bd8-9ad153228784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd620e1f-f479-450a-8bbd-b5231ab61096",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5af65a-a561-4874-98c6-88593814c73e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e8e5457-6e16-45bc-a8b1-caa9450d84ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fe91dc-9b1a-45d9-a591-fb512ab905ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "830c034b-926f-4357-8d6e-bdbc34f3d569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4304d892-d6e7-40c8-a50a-876364614d8e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3350ff-43a3-47b8-a658-27053b130129",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00ebc41e-e925-4e0a-9fa0-25cefcba6666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdecd005-4100-474f-8ff4-a8ef10d7e67f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d368eb2f-7d56-4c97-9ce7-b1ddec878564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ae7058-aa80-42c0-b982-4482ca9135ea",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa598ef-3ab0-4403-b73a-c97954fae03f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b14f4d0a-5dcc-404f-897a-f101fa0bca0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76533358-03b3-4bda-a4dc-a79e6dbcfdea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ec9830-4ccf-411d-92af-1909d9d7ad17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e263dbc5-1a04-482c-949a-aedfd78446aa",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a454b7f1-2bd2-440b-a30f-60b8ad372d71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81bd6e5a-f9bf-47dc-a02a-d942b8ed37ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7da58ab-7e4b-4592-8a98-baf558ee0faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bdd9c92-be21-4a5d-9e3c-ba209007300e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2440aa-d58b-49f2-98c8-963437562529",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e4c9b6-0e9f-4bd2-95b3-db1412ab0eae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "355d3d04-0912-4efd-9688-47e5ffdeb778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ddfa8a-c6af-4f2b-9d53-5a7ddc53e1ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e092ae6f-c0f5-43bc-ab1e-faba6ba57ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25a14be-e852-4785-accd-1c4b7646b776",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c77744-0150-490a-b69b-ac2cca2ed20c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b38168c3-1ef8-4444-a073-6291ed10f6df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f90349-4eb3-4abc-ad39-3694f1e41e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b1d30bf-6d55-44a9-8b7b-81da8ce7a137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec1e867-e398-4339-bdbc-31998693fc35",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a420c6c-5c37-46c4-a6e7-a3c93b4e5d38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61bc7572-5e7c-4835-b478-6639a373cfd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd108463-e4d5-4ab2-a08e-09fbd1c4683f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1042c65d-8848-4b2e-bfa1-c2b837e446f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc01faed-a804-48e2-9279-de95c4b925f6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce06368b-8fb0-4410-9e15-93a142a15531",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf981c0a-26ff-4409-af8b-0c4a8b1ff519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "129eb788-d0ba-45e0-b3b0-4e25f8eeb90a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c6eef6-3baf-4145-bd4a-bc1042d7b923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3ebfcb-cd2c-4a91-8780-2ddc296850e4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e539fbd0-6dca-4557-b403-0fa787e51ab2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6228b784-35c9-4f79-ac2d-2c3df42cbb08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5f85ce-e016-4632-8ff8-5edca2f5a41f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2003e9a-46e1-4919-a2f9-99cc2f30acaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3035c7-c645-4757-803a-dc8f9e0c7026",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad505a9-3b98-4903-a6df-bf21cef41628",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9ec6601-25d6-40a3-a927-1ba671589564"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd5216a-da28-452f-894e-aa9f877d0106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c7c592-4cac-406b-9a99-395b4b01ae04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e74aa11-aafd-48c8-8292-bfe94de45479",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5d4730-0269-4b2e-b300-8432eec774d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf56972a-83fc-4380-a5a2-6643e116958e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fac41f-45b7-42e2-9848-5bb0d6d39348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f7356b-4b64-4e91-adef-bb991e273dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab6331e-5bec-4d31-8e90-df1d383818dc",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ce1c0c-a32b-4532-9a19-0e55eb446cea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2950255f-920c-4b55-9557-38c5594aa70e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4466e3dc-8fd6-46d1-afe1-a4b626832d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ca2bc0-3082-43ce-8379-40fbdd50f5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1135bd9-de9c-4c51-94b6-de706b96b37b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f78c3a9-0ddd-4f81-9393-d642855a7eee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79af4b6c-6dbc-4ea4-abec-c9730a9a5862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb761d35-d0ae-4b52-928b-aa3db495662e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c6f4241-f6bb-4078-a2ba-830d842b17f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9ab702-3181-40d0-a0b8-5f552a7f1605",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897ef677-a79a-4a16-8ee5-edf645a2da4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dafe6c88-1cc8-4829-a955-35f3c2152fba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "716db439-a4de-46c5-b310-f3078fc88686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71625d6-febc-4ce0-b419-47909a7128fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033dda29-ed1f-4e7d-bbf9-066f679ac803",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe163099-2333-49dc-a667-e98bde7e2d25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a1f92af-c1a7-443b-829b-823819646891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "731c474d-61fe-460a-b474-4ba35e0af932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf27fb3-ae5e-4a9b-a5b4-706b62d844bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e523f77a-db1a-446c-9462-63cd60a22c2a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe25c71-7e6a-4b4c-a742-7f962f023875",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16bb03af-50ff-46e5-a652-147cae3a0b2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e497e7e9-66b5-4e4e-bea5-738c6366fe94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ed5a286-93f2-4f8f-8a8e-0f8d902d74c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6434a6c-995f-4974-b2fd-d2ba16aaf097",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6b691e-f486-44e3-8f96-51e9da2d5155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5453251-62dc-4062-9562-432a912525f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "609898ac-ad41-4ec7-860a-b486712bec70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e4c20a-cfa4-45b8-bbf4-448daacde055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a54f72-9fb6-4efe-b4ac-492b1407a41a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac976b4b-5a43-4e28-85f6-3a37a3f27c2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b5bc12a-feea-4b20-9b4a-8b3594d5e597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52366a0b-7678-4ec8-aa58-79b2b53ac184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e0b187-93cb-4b1f-94e3-d5f3fc9aa84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c33daa9-79be-4f49-9b48-1e3d8e6d6171",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d6dd95-5d5c-4e44-a267-fdc2e9be1f1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d8c1e4b-ef42-4e1e-b362-531b934b8792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1019de4c-3ab7-4a6c-90f9-89d87582eb4c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea6450d-2997-4a93-8ad5-716449257d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85f92fb-fad0-43f7-a1ea-4d59b5266c41",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbfacb8f-ca00-42f3-80c0-0d9b068f637a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3008d373-ec58-4bd9-907b-dff1e34117c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc79ff9-3a36-42f1-9353-1fdf8bbe2aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a098dc83-da95-40e8-8c19-4d2fa82225b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acaf11c4-f944-4009-b884-c33d8e0b318d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28415b73-357c-4aea-b9cd-497b26250a43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34567ee9-185e-4203-99ae-3b7a863ebc58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "571fae75-8aef-4289-be71-69a32f26742f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe01c8fd-b53a-4fd0-9777-d085a3328868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d126c3-e789-41ff-828e-01d1407e04e7",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82250ec-2222-4840-9e08-d245daf128d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80014420-6297-4c47-951d-a9804216a0bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "676c5428-5ec0-4e6f-8ef2-7cc57c14b812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e29dd0d-b633-44a8-a3b7-74881c29c58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb1c147-fd21-45a4-a6b5-c7f0cded820d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6572c2ae-775d-4349-892a-be2c495aaf89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60743d24-c1c3-451d-afd9-461c471a66bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a92c95-6555-4110-a12c-1fac3ddb2197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdef1823-6d91-411b-8e9b-0ac39a8dff92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c83c69-89aa-4090-9154-418995b5c3da",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4885a1d-3d0d-4411-b3f9-582a9f489d7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a500274-a625-44d1-a499-2d3bc2810175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cea6e0e-7f10-4284-99d9-4427492117bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e8e246-7cb7-4663-8a44-0377962e7823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2f112e-f121-4bd1-886c-8112f26a8163",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a5ce11-db16-4f56-95ad-8f48d1de65c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f13c22c6-66f8-421a-a895-72a1ad55a6f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbb985e-d7ec-47ec-9fe1-a8adfeb196d1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97399e90-224d-4876-8260-a0b126da8a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7465f4e-2130-49c6-abf1-fc573a634004",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9899b53-a12b-4d4b-a7d9-d243fbfdd314",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "128609ce-f23a-4ace-b703-923e5c1cfb90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8db255f-c570-4c4c-b3c4-2be55b822733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa077f9-a9fe-4210-8745-1617e228dc86"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5daa181-8a23-4f95-8c87-1dbb3ed113dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "230ae7da-9268-49ba-9a75-3d678930f949"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc07c288-9a02-4139-92e1-1d879c1e9da2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a061c872-c275-4bbd-ae19-ea86414bb4b8"
                    }
                  }
                ]
              },
              {
                "id": "4ea21a04-40ee-4d35-a0ae-a448ac867054",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "42a5c284-8d63-43de-b4d0-651e1d8f9b41",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293e84a3-2ca5-4d6b-a4c3-b10e14e4a0fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "168106b1-db7b-4fb0-b5d7-1272b31c5006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27e1c15-0f49-4558-80e3-9f48dbf398ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "812c1dc9-a3ed-40e4-9142-efd8acdd7cb3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86cab8c4-7d3e-4520-b69f-e0d9eed044b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff233bbe-23f2-4053-b90c-c47df09d77b6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7643f101-740a-443d-9fe2-08875ca98ae9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "694b8d3f-a231-4c4e-9ebc-a4a928b01397"
                    }
                  }
                ]
              },
              {
                "id": "b871aa3d-14cc-414e-8f9d-812cde310e68",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "18097790-95ea-4f79-9eea-9dac0c44013f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "037147c6-9089-4cc6-bc3a-e5c00e4cd26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e6aa8c8d-e4e1-4b7d-a68a-6fe999d50565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a97688e-7da2-4427-97ec-f2ee32d00cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ef16cd-1165-4e0d-8a9e-6ee589538c2a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "46dc7ddc-a3e8-4ede-8eec-f5d066750e9a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d3919e46-0606-481b-9ca6-fe1cabcda59a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9b86f59-895b-4fa9-8d4f-109b251ba0da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d95a91d6-4ca7-4ad7-b70b-1d87f9e1cba9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fda2f91a-97ac-40c6-8b5e-aacb072e8ae9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98747d82-7522-4501-a737-326aac903727"
                    }
                  }
                ]
              },
              {
                "id": "19cadf9a-6897-49fa-8101-fc13a3cbad74",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48292adc-3667-4c18-9046-97d4dfa7d55c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d2a159b8-19de-4ea7-adc2-aeebb0acfef7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea194b13-d3e1-4a04-9182-0b12912745c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7925ba76-8f7d-47fb-93a7-f434c31fb4ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3754d1b-f412-4bfa-9e17-33f552238b14",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4781161b-9460-4371-8eb2-4f7e3e44c91e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c33fbf7-78ea-4331-9777-2d98da2612dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "70d229c6-21a0-427c-9ae9-f75ea2c097dd"
            }
          }
        ]
      },
      {
        "id": "16218a88-5572-4353-91f0-0941e1bce0f9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "388d27f9-e86f-44bc-99cf-918e55618425",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2dde59a5-979c-4c71-b7b3-8980736fbcbf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cae53add-1480-4904-aa18-06cfd18f33c0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804adcbd-525a-4bef-b170-b1099316df44",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1fab089b-f968-4a7c-bd78-4495d6efc53a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47255c37-f7b9-4b74-9afe-badc981912af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17e1fa16-b649-46d3-b507-0b2ed36f899f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3234a57f-4792-4832-960d-888e16c4f04f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0891821-f6cf-4c77-89cf-8dae98eebe67"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d614b56e-b07e-4f2b-b6e5-bf57b5488e29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24a2fe86-9c39-4f1e-98b5-6cab9aaee54e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31c16a78-51e2-49ac-9a57-5ae79970787e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a7a73fa1-f941-4c1c-879d-9a795aea812e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee645c54-7e06-40ee-b8f0-2034549f2112",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42e9f747-625a-4a72-b58b-5ebd5e141114"
            }
          }
        ]
      },
      {
        "id": "19b42bb9-1ef7-490e-95b6-652675ad3c19",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6e40cf99-b947-4b12-9b45-8cb7afca1590",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f6e725b9-b52c-454c-a7ab-bd5c37ce67bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "326f6dca-2c65-46bc-b4f0-2cd669181892",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52db03be-635e-4eef-ba67-c3230c8b819a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95794eee-3e07-41f9-8622-84b850de81a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce32e95a-1d65-4331-9249-71a410983541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "051f0191-d4ca-4a16-99bd-0e43bf62a86d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14655bd4-d68e-489f-a621-c6f2c623c48d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8406a1a3-85fd-487e-b90e-88c22ba114b6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "30f5488a-2d42-465d-a44a-31fd8ae06b98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73b1a434-05ec-4307-b5f3-65c312d7b985"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35356db2-cec5-47e3-80c8-d2855c18d43e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "92abd963-ea29-4d49-8225-63bd85ecc8c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5a5463b-d4fa-4556-acc4-83043a66606f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21038ebe-43b7-415b-a7a3-23109cfed0bc"
            }
          }
        ]
      },
      {
        "id": "a191cabc-cb6e-4b67-ba80-cb2b3818de36",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "af41c9da-1fa7-44df-a08b-9da7a346392a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "134c944c-c5ea-4358-98bc-7dc92efb568b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "edb61330-c7df-4e95-911e-a1fce2aef96c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db38385a-aa9d-4d2b-bd4c-fd6c2df613cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b0de711-85bf-4976-a42a-597ebf14a2ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03c546c-84f3-4ec1-b788-2b4fb7a7707c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec8ea817-1146-4c56-b1bf-12ea344fb5e9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b6e2aeb-3f0e-4073-b049-ee017ad1e117",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5812a6b-fa44-4a55-8e90-454d44be9ccc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aac2e757-928f-4360-883f-78b1d3c579ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d434672f-343f-413d-b179-8d184625f6c5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7e907e2-8d9a-4543-a93c-8d810faafaae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bb96301c-f1f8-4a1c-b510-8b2a281aedd1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a2ab2e9-5e6e-4433-86fe-bddbf6e74496",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8871153c-bfce-4b5e-81bf-6f8e568d7cf2"
            }
          }
        ]
      },
      {
        "id": "8dc2dd30-6cdc-4bb6-a9e2-00d8e648b769",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e46ccde-3141-4fd4-a70d-1ad85383bae6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "619a0989-2f84-4f93-abef-9e1e5e63ae60",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a89f8c04-2bba-4573-a0aa-f264cbb7e2f3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4dca38ee-50d1-4d73-bd29-68524c59b22a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb78ff92-ae41-4dc5-935f-4e8b7c2dc140",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 105.97192982456139,
      "responseMin": 5,
      "responseMax": 8222,
      "responseSd": 550.6687792813598,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1707611825711,
      "completed": 1707611865054
    },
    "executions": [
      {
        "id": "eba76372-d2ca-46fa-955e-4c2491975b61",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ec9cfedb-9728-4a28-a565-4974af171a57",
          "httpRequestId": "92ae6081-df61-4488-954f-0986ac921101"
        },
        "item": {
          "id": "eba76372-d2ca-46fa-955e-4c2491975b61",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "37f10b06-7559-4737-a5d4-c74f2b1450bd",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 0
        }
      },
      {
        "id": "b0231669-d3f4-42b9-9ab9-0d2acee89d90",
        "cursor": {
          "ref": "c80627cd-b85b-4079-8d30-3c921752ab68",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b1be9128-fcb1-44d7-b5e2-78f0bf143b4f"
        },
        "item": {
          "id": "b0231669-d3f4-42b9-9ab9-0d2acee89d90",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4a5c1c14-b675-4a0b-9e13-2686fc321969",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "d5fb0000-85a8-4d4b-ae45-727afd50fd73",
        "cursor": {
          "ref": "2bbc4756-229c-4b76-9bdf-db8d5ac4c0cf",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9e339853-dd4b-4681-9439-58a42f464dd3"
        },
        "item": {
          "id": "d5fb0000-85a8-4d4b-ae45-727afd50fd73",
          "name": "did_json"
        },
        "response": {
          "id": "30edccc6-abc0-45af-90ef-05c452df6f67",
          "status": "OK",
          "code": 200,
          "responseTime": 413,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5008e73e-5722-419f-9a8d-5693480a51fd",
        "cursor": {
          "ref": "2df4bbc9-889a-42a6-ab23-93d688d20355",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bfbf5196-de37-4de0-bdae-bb0d84676bc3"
        },
        "item": {
          "id": "5008e73e-5722-419f-9a8d-5693480a51fd",
          "name": "did:invalid"
        },
        "response": {
          "id": "3e51f19d-b875-40e0-8e50-666b1803e4d4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 825,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5008e73e-5722-419f-9a8d-5693480a51fd",
        "cursor": {
          "ref": "2df4bbc9-889a-42a6-ab23-93d688d20355",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bfbf5196-de37-4de0-bdae-bb0d84676bc3"
        },
        "item": {
          "id": "5008e73e-5722-419f-9a8d-5693480a51fd",
          "name": "did:invalid"
        },
        "response": {
          "id": "3e51f19d-b875-40e0-8e50-666b1803e4d4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 825,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578b5c58-2be7-4999-9eef-42abc31966e6",
        "cursor": {
          "ref": "bedac536-a0c6-4913-b69b-151bee0efe69",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "af6cd111-41e4-45c0-80b2-56e538240b2b"
        },
        "item": {
          "id": "578b5c58-2be7-4999-9eef-42abc31966e6",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "51540692-ed53-4b5d-9a51-099db3195d16",
          "status": "Not Found",
          "code": 404,
          "responseTime": 43,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5f674f-4d32-48f0-80c6-ca1ee26f4c9b",
        "cursor": {
          "ref": "8ef54534-45db-4e37-859f-e1d9bcfa17b0",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "eb25460d-e935-420f-ae2b-88b79bcf2fd7"
        },
        "item": {
          "id": "cf5f674f-4d32-48f0-80c6-ca1ee26f4c9b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "469b9062-7662-441a-91d2-7b3ce6fa9d5d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 53,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861985d9-0947-47f2-94db-a3bd321cbb17",
        "cursor": {
          "ref": "298e50e6-0033-48bb-a4e7-5d1cb433a75a",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f4cb1a85-c71a-40bb-8aa1-dec5dc7b3c61"
        },
        "item": {
          "id": "861985d9-0947-47f2-94db-a3bd321cbb17",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "da7369bb-45ce-4643-8256-aa5d0bffb59d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbfbf4f7-24af-45e9-bc43-92628ec543c4",
        "cursor": {
          "ref": "ba5d8fb9-27ca-4f08-bb0d-9ea2c1f4e84a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2b9269ab-3410-4fd4-ba7d-718d9abca24b"
        },
        "item": {
          "id": "dbfbf4f7-24af-45e9-bc43-92628ec543c4",
          "name": "identifiers"
        },
        "response": {
          "id": "3f8c51ab-645d-4b01-b0b6-263aa16cdd33",
          "status": "OK",
          "code": 200,
          "responseTime": 112,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67178a50-e3ab-44c9-a2b2-bb2d00cee8d1",
        "cursor": {
          "ref": "741243c7-5ffb-456c-8198-8b88cd7e7c9b",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8b254b6d-11cb-4ea0-8e78-24f13032a1d9"
        },
        "item": {
          "id": "67178a50-e3ab-44c9-a2b2-bb2d00cee8d1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "27abe2de-246f-48c8-814d-51ca4dca37de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52feacf2-f156-4e1e-bf29-472777f1e282",
        "cursor": {
          "ref": "1f1bba9b-75ae-4087-a3b7-e2424077d956",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9cc080aa-1592-49a4-9599-aff69d7e2c96"
        },
        "item": {
          "id": "52feacf2-f156-4e1e-bf29-472777f1e282",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ed7ad8e9-bcad-4796-83e8-a7a61d355b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ab37fe-ce23-4162-a187-96ef58def971",
        "cursor": {
          "ref": "4deb3178-ff29-451d-aa2e-c95aa58375e1",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e6151dc6-e27c-4a8c-8d0e-6026183d675c"
        },
        "item": {
          "id": "28ab37fe-ce23-4162-a187-96ef58def971",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "00566574-6d0f-46c4-890b-a1ede1dc9e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f25fb6-a626-4d22-b48c-7c20eb7054bd",
        "cursor": {
          "ref": "6e88c458-d9f5-4a35-83a9-b351b5bbb811",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "69998cc8-0ec4-4139-ab16-b810d92ae0b3"
        },
        "item": {
          "id": "76f25fb6-a626-4d22-b48c-7c20eb7054bd",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6ecd637f-6594-48e7-be51-0164d682e30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6854812c-fc44-4f5c-873f-26855d6e7ce6",
        "cursor": {
          "ref": "263fb18a-2289-4cf8-bf9b-cc17746cc4d4",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e90d236f-cc06-49a4-8f01-296dc18d6590"
        },
        "item": {
          "id": "6854812c-fc44-4f5c-873f-26855d6e7ce6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0450691e-3de5-4c2d-ad1c-897c0551e519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5fa6c7-b152-43fc-9c57-fbabb06c3db6",
        "cursor": {
          "ref": "ec0711cb-56c0-4cb8-ab64-df607a776215",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a9a8be27-733d-4a2a-afaf-f1195ba91691"
        },
        "item": {
          "id": "6e5fa6c7-b152-43fc-9c57-fbabb06c3db6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1cba3e01-c2ce-4fb0-b972-fc259f15f8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4901a802-9665-44e9-b536-80b7b8e82441",
        "cursor": {
          "ref": "d3ed0990-7fa1-48bb-b762-da796b9769bd",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8cb984c2-7cc2-41a6-a142-848869ce772f"
        },
        "item": {
          "id": "4901a802-9665-44e9-b536-80b7b8e82441",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ae35cb31-17f8-4ada-acb5-2038fcce69b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02a29e7-91ce-4ff7-916e-c3e8c32eb3a1",
        "cursor": {
          "ref": "f5ca4168-d5ea-4142-a492-8e2f1ad46025",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c915338a-977a-47cc-b71c-6c5a1c434acd"
        },
        "item": {
          "id": "a02a29e7-91ce-4ff7-916e-c3e8c32eb3a1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4073d115-85ef-4b9f-be48-4a332520d820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5829fff0-9b01-4ebc-9d26-39577d36fb16",
        "cursor": {
          "ref": "b3585206-bf50-4367-a94f-ac96eaa07cb4",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "412328bd-2e6d-425d-bc3c-3f482260bb51"
        },
        "item": {
          "id": "5829fff0-9b01-4ebc-9d26-39577d36fb16",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "bb3a786d-fd7f-4983-811a-bca465a2383d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c045bd9f-ff4d-47cb-92e4-e05afc9db4ea",
        "cursor": {
          "ref": "cc9337be-9b25-4152-b012-fc77922383e0",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "24c9ec86-7f00-4e5a-bcde-1527c29b7441"
        },
        "item": {
          "id": "c045bd9f-ff4d-47cb-92e4-e05afc9db4ea",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "06e0763b-dd2c-4fe8-9944-6e91a5d169c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89806342-3bdb-4308-9c02-bd3da4fa9f52",
        "cursor": {
          "ref": "412e17ec-8925-4adb-a26f-39e6d7e92949",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "09cbad34-af67-47ed-8ad1-93c10620dd7e"
        },
        "item": {
          "id": "89806342-3bdb-4308-9c02-bd3da4fa9f52",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "971b5281-62de-40c0-be09-7d572d1fd442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45be8d16-5558-415d-92cd-2ac856c7e0b0",
        "cursor": {
          "ref": "a657178b-e8af-4b99-ac70-3947a4afffee",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "427cf1b0-3091-4b17-bfd8-714f3bebd2e9"
        },
        "item": {
          "id": "45be8d16-5558-415d-92cd-2ac856c7e0b0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "532c68bc-8c6c-4513-b888-3b2e9c49074c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da63d7e-53a0-472b-879a-175b97f11c65",
        "cursor": {
          "ref": "c052b7c4-1236-4cd1-8054-4c1a35da378b",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3b6d244a-1308-49c2-aafc-5f823b45e66a"
        },
        "item": {
          "id": "5da63d7e-53a0-472b-879a-175b97f11c65",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ed8f6891-3384-405c-a981-2d9c249572af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ecda24-bed7-4313-88e1-c5b025de26f6",
        "cursor": {
          "ref": "8fe6bb63-1a10-4e1a-bb17-1f96cad579cd",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3cffb27e-b874-4c33-a0a5-7c1550c44b23"
        },
        "item": {
          "id": "b9ecda24-bed7-4313-88e1-c5b025de26f6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c2e67be7-0c95-46ea-b141-d6aaf8556105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfe940e-06c2-4b81-9587-b2a499f10758",
        "cursor": {
          "ref": "eff09910-b2b1-4ac4-a73d-84f41ff70bfc",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f84c1c02-84d8-45fc-b662-f4924c3386ba"
        },
        "item": {
          "id": "2bfe940e-06c2-4b81-9587-b2a499f10758",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "eee72b58-5544-4d91-af6f-489acdb55d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7da100-54b0-49f7-a57d-48c6945d2971",
        "cursor": {
          "ref": "2703e1a6-d06a-4060-b104-e5c2f8b35874",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e4fe85ba-fadd-48c6-bbf9-30214123b6fd"
        },
        "item": {
          "id": "0b7da100-54b0-49f7-a57d-48c6945d2971",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1cd94866-369a-4e3e-854a-f1c05e32f4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0607a6-e801-4056-8213-804320317909",
        "cursor": {
          "ref": "d4fdbab9-8dd5-4901-b93e-ebd671296884",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b58b81e4-2b92-4a2a-b62b-27ace37b4d0a"
        },
        "item": {
          "id": "cc0607a6-e801-4056-8213-804320317909",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "69828d7d-69ea-4eef-97ad-e31732417c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a2ccd2-968e-4687-a3ca-2c1aa2efe615",
        "cursor": {
          "ref": "f9fcea4e-25e9-47e0-ac3b-028e68c8c221",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1179a813-a9f1-4420-9efe-7e00ea39e0e0"
        },
        "item": {
          "id": "55a2ccd2-968e-4687-a3ca-2c1aa2efe615",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "af24a91c-4ac8-4362-bd62-5a443ae26114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972c053f-c5ff-4969-acd5-8bb401027974",
        "cursor": {
          "ref": "79ab328c-4001-48db-9a6f-1b4041d701a9",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ce15bcbe-3fe2-4403-83cc-acee1dfc5315"
        },
        "item": {
          "id": "972c053f-c5ff-4969-acd5-8bb401027974",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2dc886a7-0b21-4f81-9ece-34f54dcee1a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995bfa7a-b888-4874-97ee-59f97bf070ed",
        "cursor": {
          "ref": "2aed416d-6884-448b-8e0e-d42dfc3b571c",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c328519a-0878-417f-8dd6-d5227b1bb7df"
        },
        "item": {
          "id": "995bfa7a-b888-4874-97ee-59f97bf070ed",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "23083ba2-9d6f-4875-9b0f-646fb5173964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2446fcee-80c4-47be-99fb-e091ecdc2b27",
        "cursor": {
          "ref": "7366b3b9-f0f5-4727-80aa-c9b9a09f17c1",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ecca6f3b-2da4-475a-b0d0-70477e36eec4"
        },
        "item": {
          "id": "2446fcee-80c4-47be-99fb-e091ecdc2b27",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "608b8c6a-1478-4ffe-8696-2df042fc104e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19bb99f8-f0f3-4497-8e50-156148c384ae",
        "cursor": {
          "ref": "63c4d85c-8ed0-498c-aa28-6453698d5e48",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f5d081a3-7628-4149-a6de-3e87f6372e0b"
        },
        "item": {
          "id": "19bb99f8-f0f3-4497-8e50-156148c384ae",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "98cfe5a3-bfdd-4c7d-84e6-6bfc9a7fe611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e454d2b0-9044-4853-b6e0-884b3b148573",
        "cursor": {
          "ref": "f2d5f8a7-3b85-4cad-918d-4350f61e0396",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "35b1f90a-7ff2-4683-9688-9ef9f5249e3b"
        },
        "item": {
          "id": "e454d2b0-9044-4853-b6e0-884b3b148573",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e32aaae0-5926-4d56-bb79-ac596e94f72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff52768c-5a13-4b9c-b5e7-16add3e0da80",
        "cursor": {
          "ref": "677e6f94-43a4-4e23-a910-70122ec5327c",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "918ff1e5-81ed-4194-9681-582a56d8e37d"
        },
        "item": {
          "id": "ff52768c-5a13-4b9c-b5e7-16add3e0da80",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "165b3286-1cac-4daa-a75c-3f67f2e23abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c8c3d3-24aa-49b7-b7ba-6391c1720260",
        "cursor": {
          "ref": "1c151d26-1f1c-47c7-b1b3-185c4203ced0",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0c8b5b88-3a22-4c00-bf35-227978aee3fc"
        },
        "item": {
          "id": "04c8c3d3-24aa-49b7-b7ba-6391c1720260",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d4239869-86e3-42de-8dbf-4d9d3bda64bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb15880a-f101-41dc-8d11-061f38a44247",
        "cursor": {
          "ref": "4f42b28f-3f3d-46b3-8285-4bddde876dd8",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5e99038c-751a-457f-802f-e68e87b5691e"
        },
        "item": {
          "id": "cb15880a-f101-41dc-8d11-061f38a44247",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a4c57474-6b77-476e-9cf6-049bafe5400b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ea8db3-dd79-4699-a534-8d2a8d35eb2d",
        "cursor": {
          "ref": "a10f118e-0853-4bb2-b097-cda170a212fe",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ef245ecd-5d6b-4f41-b894-7e4e08f2da06"
        },
        "item": {
          "id": "e2ea8db3-dd79-4699-a534-8d2a8d35eb2d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6dc5e98f-3cb0-47f9-a02b-16f939a4a3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0851f4-b9ee-48c8-bcf0-5e9a86028117",
        "cursor": {
          "ref": "154e4756-14f6-4396-90dd-59a6420237c4",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1cba5925-62ae-4d82-99ec-93220ea39073"
        },
        "item": {
          "id": "db0851f4-b9ee-48c8-bcf0-5e9a86028117",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "567bf8ab-cb93-4bf0-a8bb-bc4c31a55a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce7bd5f-d43d-4aa9-96ee-e77e9314899b",
        "cursor": {
          "ref": "0992e8de-7ccb-4ddb-b681-3bef37552cd9",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "eea2113b-4f4f-45a3-b0e3-eefd105b3d86"
        },
        "item": {
          "id": "4ce7bd5f-d43d-4aa9-96ee-e77e9314899b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "fee1354e-a10e-44aa-8e06-8f6b4a987d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ecc908-f1b7-4cf6-9ed9-febfc04ef069",
        "cursor": {
          "ref": "745386c0-3ddf-4d65-aa75-64fed1c300d4",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5c94c471-9f97-41bc-b46b-9f54fe889980"
        },
        "item": {
          "id": "51ecc908-f1b7-4cf6-9ed9-febfc04ef069",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "54bdc535-f12e-49b7-a4c2-43f06d2738d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97eb6885-3ad9-4d25-85cb-dc4da8fe2454",
        "cursor": {
          "ref": "a7a10051-04d7-4b82-92c4-8be69077887e",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "28ab5f8e-9d36-478a-ab58-7fa44006edf9"
        },
        "item": {
          "id": "97eb6885-3ad9-4d25-85cb-dc4da8fe2454",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "00bc5f5f-1a12-4583-b30a-e67e012883b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05adc94-a2b1-4b06-a9f1-136dfb75caac",
        "cursor": {
          "ref": "12a33bd6-94d1-4052-ab61-7a66c468bfd4",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fff5cbe1-3264-46ea-9792-97bdfe7fc7b2"
        },
        "item": {
          "id": "e05adc94-a2b1-4b06-a9f1-136dfb75caac",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3971cd0a-8a19-4317-868f-349ebdae34e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd871586-b259-4358-b49b-06e8805a9bff",
        "cursor": {
          "ref": "0b5c9912-ffba-4a61-b6d7-8621b431b3cd",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e1c4ee20-7c40-4a8f-83d4-57b56cea3db4"
        },
        "item": {
          "id": "dd871586-b259-4358-b49b-06e8805a9bff",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1a8305f6-35fe-4f1e-8219-50502783e0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2dec84-39eb-4405-9206-5b13536f4132",
        "cursor": {
          "ref": "064d9fa8-3211-479e-9d0f-00f1100e2fe0",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ef2c7142-6d83-4b13-9eb6-3e137fd747f5"
        },
        "item": {
          "id": "6e2dec84-39eb-4405-9206-5b13536f4132",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "437dd0f8-4cef-4300-a4db-1984b3c1f490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131cc8e8-5a28-4668-a409-1120f60e1546",
        "cursor": {
          "ref": "3474260c-1bbd-4cbc-bbb4-68cbf1c28a44",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f93023c9-e835-4362-902e-3e8befe2c329"
        },
        "item": {
          "id": "131cc8e8-5a28-4668-a409-1120f60e1546",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "44351a24-e5a8-4754-9850-3b78e4e1e108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3154caa-e706-4cd1-a8a9-5501430728bc",
        "cursor": {
          "ref": "7b05cf24-e9ba-4713-a1d9-ee6426a154e1",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e6328cbb-72ed-42b0-99bf-3d9951e1989e"
        },
        "item": {
          "id": "a3154caa-e706-4cd1-a8a9-5501430728bc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "57fc4752-d026-415b-b7e4-b7f299f3ce59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9645cff1-01b9-4a89-bd04-dcab701b2042",
        "cursor": {
          "ref": "59d07aa0-bef7-4f1d-b6d7-2cac42dc8238",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "cd24f855-f89a-4bd1-9528-4315775637a7"
        },
        "item": {
          "id": "9645cff1-01b9-4a89-bd04-dcab701b2042",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0aad1e53-29d0-421a-a3e9-0412cef554e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b65e94b-5499-4ec6-8eca-1d0309a93219",
        "cursor": {
          "ref": "e5cb1c65-17c2-4424-b695-24a25f065593",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e268f1ac-b0cb-4e24-9e22-6558656c4604"
        },
        "item": {
          "id": "7b65e94b-5499-4ec6-8eca-1d0309a93219",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "00382531-7196-4ccb-b642-76d55f17cbdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f386016e-1b13-4237-b4e0-55200954e240",
        "cursor": {
          "ref": "80f844e8-47a9-4581-a4e1-7ccf00c597b9",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "326e3466-afcf-4802-8bcd-0fe558c6b97c"
        },
        "item": {
          "id": "f386016e-1b13-4237-b4e0-55200954e240",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7b19ae9a-d1fc-449f-b0ae-ebf880453737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ca60db-4738-4d62-a774-d0f83d470eea",
        "cursor": {
          "ref": "29b20af1-8592-41df-8364-7002e8104051",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ca404599-37db-4fcf-bbc2-7d561b2046e1"
        },
        "item": {
          "id": "e2ca60db-4738-4d62-a774-d0f83d470eea",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6635fca1-af19-4ad5-ae08-b19195026f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0650975-7f68-4ec5-bd48-a65de58f1729",
        "cursor": {
          "ref": "ab598478-0c18-4d26-ad48-70012fa79865",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0c18938e-ac40-4dca-887c-a56ae1917b43"
        },
        "item": {
          "id": "e0650975-7f68-4ec5-bd48-a65de58f1729",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ead72603-f4cb-4f1d-a227-98d58766741a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fac5589-1ac5-43e3-af13-4a393dcaad5d",
        "cursor": {
          "ref": "842ae8b4-44ec-4994-a0fd-824a85af1600",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "14c8cbfa-bc9d-4fad-a1f0-25896a497e84"
        },
        "item": {
          "id": "7fac5589-1ac5-43e3-af13-4a393dcaad5d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1d07c628-bdcd-4055-ba6f-f2b4ab57585c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8865ba18-0206-46ed-9692-39fc93e701dd",
        "cursor": {
          "ref": "745145a8-9e86-48a1-93bf-994bbc51b2db",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1df48277-9de6-4141-8e42-8985e9962e03"
        },
        "item": {
          "id": "8865ba18-0206-46ed-9692-39fc93e701dd",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "86b3796d-52ed-4622-b41b-f19bd0bf6668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd9d059-3d21-4ec9-a873-457bdd4d070c",
        "cursor": {
          "ref": "3e054792-54c7-4847-b8e3-3a92c5421708",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c6efaa52-e19e-4ff7-88bd-99f7b11cdab6"
        },
        "item": {
          "id": "cdd9d059-3d21-4ec9-a873-457bdd4d070c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5fe369db-a155-459a-9b4b-8b1069252522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9ed403-c767-4ef2-887d-47fb0775a635",
        "cursor": {
          "ref": "996fcc9a-4e33-4b02-bb70-f81d93f53348",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f6babb91-a769-4c5b-a096-c1e7d537eb03"
        },
        "item": {
          "id": "bf9ed403-c767-4ef2-887d-47fb0775a635",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "cedf1bfb-9f7c-4b8c-b7fb-4190ea23f67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fc80a1-2793-4ce7-8f22-e1131c09465c",
        "cursor": {
          "ref": "0519d549-11fe-47b8-81bf-cd290be55699",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7a0f22cf-a2ef-4088-afa5-7855506e9424"
        },
        "item": {
          "id": "31fc80a1-2793-4ce7-8f22-e1131c09465c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c8d9fc8b-172f-4dd6-9a78-2e2ac0098103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ea511b-6c7d-40d5-b596-563197c7b2a1",
        "cursor": {
          "ref": "b123bb19-a811-45bf-88a9-8b528d17e663",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ad29f17e-aac1-4e1a-8a3c-e2cd09833c82"
        },
        "item": {
          "id": "c9ea511b-6c7d-40d5-b596-563197c7b2a1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0ea92bb6-c6be-4557-b9a8-28a2633ba36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2faed219-1119-4993-9308-c3932199640b",
        "cursor": {
          "ref": "e05d56de-a164-4e4f-bf9f-220f69905ae6",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0d89fc29-40f9-4c61-af53-6265c1f82176"
        },
        "item": {
          "id": "2faed219-1119-4993-9308-c3932199640b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "823282f9-efa9-4d60-bc2e-ed5395288421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5067b4-2929-4b24-b81d-b35e0b23f913",
        "cursor": {
          "ref": "651db1a3-66be-4d80-a0a3-0f91dfe34e09",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5c9584b6-aab3-4fa9-bb27-86078f910f3c"
        },
        "item": {
          "id": "6e5067b4-2929-4b24-b81d-b35e0b23f913",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9160f158-faf0-4c2e-ae52-03bb334c852d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0005f1-04c2-44d0-a93d-2d98ad2978b2",
        "cursor": {
          "ref": "105351dd-bfc8-4117-a81d-025a8102e792",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4258ec17-31c2-41ed-a183-02d49a8ada73"
        },
        "item": {
          "id": "9e0005f1-04c2-44d0-a93d-2d98ad2978b2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b69d13f9-4b70-4b80-907b-3e4c41b20992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8235d3ef-6f59-46df-b417-f31f6a31f38b",
        "cursor": {
          "ref": "e7a4b474-df65-4091-8d9f-298da89330ad",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b510953e-f5e5-4ef0-ae27-76eca108b452"
        },
        "item": {
          "id": "8235d3ef-6f59-46df-b417-f31f6a31f38b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7e521b3c-f2b7-4117-b428-34c37716f67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 877,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f835f140-4a04-497c-979e-9272b66f6d76",
        "cursor": {
          "ref": "6b29a5c1-ed02-40bf-9446-5937ec2894e5",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b32a9475-6dd7-4646-af5a-7891c8a5ca4b"
        },
        "item": {
          "id": "f835f140-4a04-497c-979e-9272b66f6d76",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3d2c0304-6a8f-44c6-a0dd-e4f2efa64f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7435ee8-f901-4c4f-a74e-41b506453188",
        "cursor": {
          "ref": "fd254c2b-5898-4334-9396-8fa73e57e854",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2af9c4ae-477d-43cb-8b18-7c2c23d94b8e"
        },
        "item": {
          "id": "d7435ee8-f901-4c4f-a74e-41b506453188",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "99e8afc5-a9bb-42e4-b09e-027219c6278d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7439e5-7272-45b3-a4cc-a06d67ce4fa5",
        "cursor": {
          "ref": "871d8ca1-763f-4e35-8484-c04dee65c868",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3f72953d-cb66-4db0-8ada-6143c6780435"
        },
        "item": {
          "id": "ec7439e5-7272-45b3-a4cc-a06d67ce4fa5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "904818ba-9220-463d-acd4-ffc0ada86cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927af905-faea-4bbd-8bda-d5eb8b0b4792",
        "cursor": {
          "ref": "4133272a-3bab-45aa-8521-e48b82c656d3",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ab03432f-1b7f-4c2c-8e2e-2f1e84db7bee"
        },
        "item": {
          "id": "927af905-faea-4bbd-8bda-d5eb8b0b4792",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2ce465e1-bb00-4249-a52c-92bbef0dabc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d79e81-1844-43ee-98d8-61de255b7c6b",
        "cursor": {
          "ref": "44fb0af2-182d-4b4c-afc8-269d132f9335",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "813a2e6b-c941-47bd-9ce7-dbf946b42fee"
        },
        "item": {
          "id": "90d79e81-1844-43ee-98d8-61de255b7c6b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ce5d5c53-f8e5-4d7e-81d0-2ab68b2c275d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f24c470-56ac-469a-83b6-d923e99b00fe",
        "cursor": {
          "ref": "69283b99-70cb-4b52-a795-700eef662e1f",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b4a03e02-ab4f-437b-9de8-b7048d7edfd6"
        },
        "item": {
          "id": "0f24c470-56ac-469a-83b6-d923e99b00fe",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "36aa0dd6-18ae-4707-b87f-bc8460a9add7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687b1982-c839-4c45-be2a-bfd367b88eea",
        "cursor": {
          "ref": "1852fb1e-998e-4db5-8f50-15d6e9f1675d",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c19cb01b-e322-46d5-b660-20438298c485"
        },
        "item": {
          "id": "687b1982-c839-4c45-be2a-bfd367b88eea",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5d0f2b33-a3c7-4964-b8c6-aa5cd21f9ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e05532-6e3a-45d0-afaf-896ec93a8729",
        "cursor": {
          "ref": "b01810eb-3a09-41f6-9511-6280413207a2",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a8621459-8259-455c-94a7-d6dd6c4eaa24"
        },
        "item": {
          "id": "b8e05532-6e3a-45d0-afaf-896ec93a8729",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "397d7ce5-e448-4938-8da0-1a3e2b7e4e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f44c54-9ba4-4c5e-8298-043a4c3a1820",
        "cursor": {
          "ref": "0f2efe0d-7738-4370-8a89-e3e058d61f06",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "24e67b31-332a-445d-8b9c-4c92c6e2707e"
        },
        "item": {
          "id": "64f44c54-9ba4-4c5e-8298-043a4c3a1820",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "123734cc-476a-4cbb-b7b0-0d2ffcedb304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7178588b-cd4f-4ed4-afa2-bcd3baac9594",
        "cursor": {
          "ref": "33eb08c9-5f53-45aa-adb2-9dcd2e852fb5",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2cb125f7-5699-4ac3-b77d-614b0162e6d7"
        },
        "item": {
          "id": "7178588b-cd4f-4ed4-afa2-bcd3baac9594",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "abf6ce36-8dd8-43d8-a07f-a8c38504ccc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27f9df7-fd57-4eb2-8f1b-2cf768fe743b",
        "cursor": {
          "ref": "c8b936d4-e40d-476c-96d5-aaec303ebf9f",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "99f2ab38-22c3-4f3f-abac-85362a01e3b1"
        },
        "item": {
          "id": "d27f9df7-fd57-4eb2-8f1b-2cf768fe743b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "163bb410-f19a-442e-bb6e-cc5cf431dd93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d73062c-14fd-44ff-97f0-c93f3d3ddd87",
        "cursor": {
          "ref": "82da85b1-5184-417a-8657-0855c783b346",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1023cbf0-c379-489b-9b58-e00048b35e67"
        },
        "item": {
          "id": "7d73062c-14fd-44ff-97f0-c93f3d3ddd87",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "320c3f73-590f-4e2a-9bef-d6f2b2c130ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca15316-2677-4abe-bfaf-57d2b84047be",
        "cursor": {
          "ref": "7c3a35f5-1681-42f4-9833-3e1f782463bc",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "81ba3177-0145-495d-9cc1-803b04c71d56"
        },
        "item": {
          "id": "1ca15316-2677-4abe-bfaf-57d2b84047be",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b8e8991f-6920-44d7-acec-26589b9e5a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdaf700-8f36-4ac7-abd3-2ba1796b8ede",
        "cursor": {
          "ref": "11e7005a-ef47-4f66-b314-047aab62cac6",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "59d6b4cb-8265-4a2b-94c0-469522fa04d6"
        },
        "item": {
          "id": "2cdaf700-8f36-4ac7-abd3-2ba1796b8ede",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a70af048-eaf2-4691-bdc8-dafb91d91d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e819563-15e5-441d-8c52-c62faea71cb7",
        "cursor": {
          "ref": "68c7c1af-fb78-4394-b38d-83caf0934655",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "52e4ef5b-6d14-4542-bf19-7074f5f84e09"
        },
        "item": {
          "id": "0e819563-15e5-441d-8c52-c62faea71cb7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3a517d21-786d-40ab-b2d4-1b779d5698f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb5d56e-f11c-4cd3-96b2-29d22e4b3b1e",
        "cursor": {
          "ref": "c32b9910-3f07-4df0-ab7e-adaedee9f2bf",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7a09f217-84e8-47e6-a36c-38e5a42bd92f"
        },
        "item": {
          "id": "edb5d56e-f11c-4cd3-96b2-29d22e4b3b1e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "fc934f5f-f73d-4987-84ab-c4c9f099220d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9b0d85-0aaa-40c2-99ba-668415ea5508",
        "cursor": {
          "ref": "74cbaa0b-ab07-4321-b7a6-b866110db36c",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "95a68102-54a3-46f2-bcf6-0ec4f0716dda"
        },
        "item": {
          "id": "0c9b0d85-0aaa-40c2-99ba-668415ea5508",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b38ebc45-ddef-4c3f-a988-5557612a6bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5209c8b4-7d8e-476b-8477-f2847aa13b57",
        "cursor": {
          "ref": "ef3de2fb-2d7a-4f4b-b21f-1eaaf087e219",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7a8985bc-769f-4c2e-90b4-269cfe085e5c"
        },
        "item": {
          "id": "5209c8b4-7d8e-476b-8477-f2847aa13b57",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ce6f6dda-1f68-4690-a552-251686fb347c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69fd73ee-173c-4d61-b1f5-8a59572dbedc",
        "cursor": {
          "ref": "5b653aea-f6e7-4cf9-9e42-64bb59e18956",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0f732dc5-e73e-495b-a7b2-8753715e7204"
        },
        "item": {
          "id": "69fd73ee-173c-4d61-b1f5-8a59572dbedc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "026d404f-d442-4fc9-8c02-ee008ec86886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad22af5-52e9-4b74-a945-c329d64e37ee",
        "cursor": {
          "ref": "19a240c3-df58-49cc-b78b-ddffb5144607",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "683fc044-ac93-4395-935e-3663c16cd86e"
        },
        "item": {
          "id": "0ad22af5-52e9-4b74-a945-c329d64e37ee",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4d95788f-66d1-43c5-9851-5765fe27f4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca66a5a-0102-4dd1-90b7-3c42edac0c02",
        "cursor": {
          "ref": "6f2e91aa-0c4c-4355-9124-3c2a334ef884",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "31e8de35-aafe-4511-be7e-68bdbf3e62b7"
        },
        "item": {
          "id": "1ca66a5a-0102-4dd1-90b7-3c42edac0c02",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "afbde6fe-3df4-44e9-a72a-6e2f9acf9b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57218555-523f-492f-8b13-f6fa1559bd72",
        "cursor": {
          "ref": "508dcc41-62ed-43fd-bbc3-ca7a9da071bc",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d4849dd8-b916-420d-b63f-d7f8b5b56663"
        },
        "item": {
          "id": "57218555-523f-492f-8b13-f6fa1559bd72",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fa7cdd34-eba8-4cae-9dba-812bf4f87ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada49c26-5904-42a5-ac74-14c075b50942",
        "cursor": {
          "ref": "fae96738-df05-41c7-a7e5-fee675448332",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6137a55b-8c1e-4f15-9a64-fc39a60eef28"
        },
        "item": {
          "id": "ada49c26-5904-42a5-ac74-14c075b50942",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "45bbf874-a0b3-49ff-86a4-272d2d861978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ebeffa-c228-4fdc-b3cf-8e52cfb81f9d",
        "cursor": {
          "ref": "f590ff6d-8f17-4c87-8c73-bf072fee7606",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2f1129d2-870f-42d1-8ff8-ea01f1d91bfa"
        },
        "item": {
          "id": "16ebeffa-c228-4fdc-b3cf-8e52cfb81f9d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c1a6e686-8d42-429b-b90c-2fd92533f740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66db6f98-1a66-47bf-8e00-f28cc2c4c7d0",
        "cursor": {
          "ref": "c0d7fc2d-431b-4dfa-9487-cab25d46db8f",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5c922f53-d6ea-4b4a-a04b-e2033c11c1ae"
        },
        "item": {
          "id": "66db6f98-1a66-47bf-8e00-f28cc2c4c7d0",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5d952472-47d1-44e6-87be-decfd931b8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7cad281-763a-4885-a6e3-5809a145233e",
        "cursor": {
          "ref": "83a605f3-726d-4415-b58e-82e683d0eb22",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1a3aa491-95cc-4e10-83ea-f9115b7fee75"
        },
        "item": {
          "id": "b7cad281-763a-4885-a6e3-5809a145233e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f76b304f-e0ee-42d0-88a2-80fbb6aa3c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e00357-c9d1-4290-b0b9-c70b453ed12b",
        "cursor": {
          "ref": "cd3cad49-34a7-405a-a052-b242fb5bc41f",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "592b1efc-1a55-426c-8a0e-fef3e3afade4"
        },
        "item": {
          "id": "30e00357-c9d1-4290-b0b9-c70b453ed12b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2a94c0ab-68e5-4abf-bfb4-a1e0129a9615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e03ec90-3397-4ea1-85ea-ee59ec780a1a",
        "cursor": {
          "ref": "526eded9-5052-4e89-84ca-0fe38c7f33c7",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "250533ae-70c1-446e-876e-5a37b5b2b6c8"
        },
        "item": {
          "id": "0e03ec90-3397-4ea1-85ea-ee59ec780a1a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b8f61e6b-3edb-4acd-93df-abfaaae44ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa65c5e4-e980-46ee-ad95-70824e5bc771",
        "cursor": {
          "ref": "7aa1b38c-dad1-47e9-9952-2819028c308e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9de92a6c-77e6-4468-ad0a-becce6f0f2bf"
        },
        "item": {
          "id": "fa65c5e4-e980-46ee-ad95-70824e5bc771",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a33dd979-e07c-4246-be1e-cbd2f5a682d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc79a982-2f49-41af-8b64-4d0954717b70",
        "cursor": {
          "ref": "a6c444c8-646a-4b35-8bfe-007f329f008c",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1fde2270-ce06-4964-bf12-55b36de9e80d"
        },
        "item": {
          "id": "dc79a982-2f49-41af-8b64-4d0954717b70",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "933d2b89-0c1e-41ca-9473-4e64fa937875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4349eaf6-55be-4896-ae35-942c7b6254f2",
        "cursor": {
          "ref": "351777b7-c170-4013-9b75-f18bb11186e7",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "87719497-e098-4e49-bd99-99089ae30e2a"
        },
        "item": {
          "id": "4349eaf6-55be-4896-ae35-942c7b6254f2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a91639e2-8d09-4df6-94a4-2e607cc8c508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a06ce8b-97a4-4de6-bee7-ced258f17474",
        "cursor": {
          "ref": "87d21feb-df38-4e5d-ad78-69c06426c7c9",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "eb358d84-eed1-406a-a1d4-4d2b5a8e0acd"
        },
        "item": {
          "id": "4a06ce8b-97a4-4de6-bee7-ced258f17474",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "23d3d20e-ec0f-4db0-ac46-b192a867a1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761a97e7-21d2-40a1-b79c-23f37773da3a",
        "cursor": {
          "ref": "fa105b51-4b35-4496-944f-70b0a8f606c6",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "20f7d3e0-da4f-46ef-956c-9635775e348b"
        },
        "item": {
          "id": "761a97e7-21d2-40a1-b79c-23f37773da3a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4a0bf0d8-b74a-4224-904f-5142fd64e0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22828250-3d15-4e08-8769-dea9ba376889",
        "cursor": {
          "ref": "169287a7-3063-46b4-8138-55d09c9eb60b",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b9fa5dc8-56e8-4a5a-b7ec-e901f8002ed9"
        },
        "item": {
          "id": "22828250-3d15-4e08-8769-dea9ba376889",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b51e152c-b4f3-4243-bbb6-f5b8517ba2c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72612c85-a096-4e22-aef4-0c366abf11b5",
        "cursor": {
          "ref": "541a653e-6c73-4abd-b3d5-1d4033444fdb",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ac7bf0d2-13a3-4410-82aa-77c2eac8a30b"
        },
        "item": {
          "id": "72612c85-a096-4e22-aef4-0c366abf11b5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f239f10d-a769-45a2-9fdd-ec285e636559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100c60ef-0e8b-4e89-a4bb-ab7e75a5c045",
        "cursor": {
          "ref": "da2b4a3d-b09b-4732-aabe-249bb5c339c4",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ab687c4a-0af6-4fc6-9256-20fecde2d3ba"
        },
        "item": {
          "id": "100c60ef-0e8b-4e89-a4bb-ab7e75a5c045",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "824940ff-99b0-4513-ace4-eb41ab1cac10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e4d006-8423-472f-b75f-e9181ed978ac",
        "cursor": {
          "ref": "b7eee4d0-4495-42ba-9f1d-55dcb82283a0",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fdee005e-c2bc-4721-8211-49578b674b48"
        },
        "item": {
          "id": "c0e4d006-8423-472f-b75f-e9181ed978ac",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c78e9d85-4116-4774-9e06-18b791630cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6441d8-1b69-4c37-8c7c-6f0c193d2908",
        "cursor": {
          "ref": "c8d6804a-5cdc-4c0c-a5d2-ce527677bf1e",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "11d424b1-c0d6-4ed0-bd3f-35f05bd6d44c"
        },
        "item": {
          "id": "9f6441d8-1b69-4c37-8c7c-6f0c193d2908",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "111643b3-929e-4cef-85f5-7ae1a9415cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75696cf-4969-49c9-9901-408f917517dd",
        "cursor": {
          "ref": "42f3d1fa-a748-4a3c-b357-c53d35cc649c",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ec3bb80a-bd85-4c58-ae15-29cdf0c3d208"
        },
        "item": {
          "id": "d75696cf-4969-49c9-9901-408f917517dd",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a7e09f6f-8450-43a5-9ed7-eed4d78aed12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5427a5d-efec-4a0a-b9f7-8de927921e29",
        "cursor": {
          "ref": "c208cec4-35fc-4f7c-b589-b5ebf440dbfa",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "cd4358ac-cc2a-45b7-bd21-66ddebb50eed"
        },
        "item": {
          "id": "c5427a5d-efec-4a0a-b9f7-8de927921e29",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f6711ef5-03ce-47e6-84d3-ca12f2c9accb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7a50c3-c7a6-4046-9155-0146314b13f9",
        "cursor": {
          "ref": "f1de62cf-9abf-4797-96ab-3bfca854d65e",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7068eb5c-f27e-43bc-af3c-e943f6dabd19"
        },
        "item": {
          "id": "0a7a50c3-c7a6-4046-9155-0146314b13f9",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5361a8b5-f2d3-489b-a767-0e5c5cb2d003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d81059-59eb-4bbb-b465-ad8ecaf8bcc5",
        "cursor": {
          "ref": "6b307b57-9716-442d-b2ba-3bb8536971cb",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1c34bf5b-f3cf-4e35-a4bd-fb03101b2093"
        },
        "item": {
          "id": "c5d81059-59eb-4bbb-b465-ad8ecaf8bcc5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b9abe0df-f9e7-4c08-ad57-656ac261436a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a141e862-8b35-4ec6-97a8-bc216c30256c",
        "cursor": {
          "ref": "9c066592-d489-441b-b651-675a388a4c67",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d832a061-60f0-4a30-866e-b2470691fe8f"
        },
        "item": {
          "id": "a141e862-8b35-4ec6-97a8-bc216c30256c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "fc2e62f4-46e0-40c9-bf90-754098ac1021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ec732f9b-041b-4969-8342-6b5cd1f9e6a9",
        "cursor": {
          "ref": "75f1b9fc-814b-49dc-84f9-cb6b2af3b043",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "34ba8639-05b0-4983-801e-7c547073a271"
        },
        "item": {
          "id": "ec732f9b-041b-4969-8342-6b5cd1f9e6a9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "eb3198fa-3c0b-466c-9f25-070dad22f81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d41ef864-3ade-44b8-a2d5-c2bc4e18f151",
        "cursor": {
          "ref": "835399c6-a666-40fe-9155-eb915ece6383",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "035e74bb-9139-46ab-82ec-3722418b40bb"
        },
        "item": {
          "id": "d41ef864-3ade-44b8-a2d5-c2bc4e18f151",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "85a1dad7-34f7-4e28-8404-c4bf7ad918a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "838ef038-064b-4531-a91f-4c53ebaa32f4",
        "cursor": {
          "ref": "08c4ad86-671d-4f2e-a7ed-b92d2e232785",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3a4be6f6-819d-45ba-9313-8cf2b28e3cf5"
        },
        "item": {
          "id": "838ef038-064b-4531-a91f-4c53ebaa32f4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "56d792bf-a1a6-4cc2-8b04-ee4798a8e38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "d6e8461d-278c-456d-9d79-f36fb4d994a7",
        "cursor": {
          "ref": "761ab22c-db6b-4dcf-b34f-2b5a5904dc83",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ff0789d9-42d1-4024-94ea-813e9b7a1496"
        },
        "item": {
          "id": "d6e8461d-278c-456d-9d79-f36fb4d994a7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ce36fd9e-876f-4dbb-8934-f4ed34d87d1f",
          "status": "Created",
          "code": 201,
          "responseTime": 8222,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "001ffd1e-93d4-48a3-9749-ea45eb08e10a",
        "cursor": {
          "ref": "16dd8019-5f1d-4a1a-b682-3e2623fc1d39",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "452fbaa9-6f50-4e9d-bacb-2f0646fd9da1"
        },
        "item": {
          "id": "001ffd1e-93d4-48a3-9749-ea45eb08e10a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1a8c0797-e880-4b0f-8f90-b955ce166eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "fcbc0f97-8cf6-4fb2-b8b5-a14ebb59c837",
        "cursor": {
          "ref": "38dbfe42-0577-4db7-abe8-2fc5ebdc6a75",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4cda2751-252f-4b35-98d2-646cc12d25d8"
        },
        "item": {
          "id": "fcbc0f97-8cf6-4fb2-b8b5-a14ebb59c837",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "eabd0d7b-80ea-4b2a-9dc2-9ac6c48ebc6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d09ba731-248a-43a7-9cdb-65b4d6816472",
        "cursor": {
          "ref": "4064c10a-4f3f-40ea-9529-65ffcb1d5aeb",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7ec8b8d8-3d09-445c-8020-183b17ae2f28"
        },
        "item": {
          "id": "d09ba731-248a-43a7-9cdb-65b4d6816472",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c70c821b-4f74-4669-a24e-1280a69e8247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b92c725-73cb-405b-b9d6-99e505c7f62f",
        "cursor": {
          "ref": "84cb8a4c-3542-4ab3-a547-9fb8267f8991",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bb2d9b3e-db80-46bd-bd79-29d624a41979"
        },
        "item": {
          "id": "4b92c725-73cb-405b-b9d6-99e505c7f62f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cbeabf9d-1f87-407f-a436-15c463256176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbdf553-2f3f-4f3b-9677-68663a6281d6",
        "cursor": {
          "ref": "3cb9d008-b270-477f-acd4-ed84bdba2a91",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0b403c20-7857-42e8-b255-86acfd60805b"
        },
        "item": {
          "id": "cfbdf553-2f3f-4f3b-9677-68663a6281d6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7dfc71ff-3981-41d9-aa7b-51897d3141f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44db53c1-770e-4708-916c-55b5fbee78d3",
        "cursor": {
          "ref": "3eb823ff-6917-4bc7-af1e-ac4fffc769fc",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "607b172d-83e0-420f-9af3-fc599603f37c"
        },
        "item": {
          "id": "44db53c1-770e-4708-916c-55b5fbee78d3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "780c5ea4-abb1-4367-b6f8-3503fed10931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844ef896-0814-482f-a6f2-494e24c53709",
        "cursor": {
          "ref": "dc287835-e969-4e84-b408-7aebd46d4d69",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "993ec4af-c8fc-46d2-ad7c-153ce797544b"
        },
        "item": {
          "id": "844ef896-0814-482f-a6f2-494e24c53709",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9ed1c4ff-0f8e-4798-a769-985373119aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2f8d53-afa1-4dbd-a7bb-83de1740c8d8",
        "cursor": {
          "ref": "eddcb396-6151-418d-b745-b8c0a361ba07",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fa8f2192-b92e-4fb0-b237-71b92b2fbf98"
        },
        "item": {
          "id": "ba2f8d53-afa1-4dbd-a7bb-83de1740c8d8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "243823bd-81eb-4a96-accf-a85fa816f73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8753cadf-aa11-4c57-997f-f3b1b1a72b41",
        "cursor": {
          "ref": "b371b4a0-e084-4311-ae0a-91ecceac4d7a",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2b648357-3037-4158-b1b0-ac21aa3c1b3f"
        },
        "item": {
          "id": "8753cadf-aa11-4c57-997f-f3b1b1a72b41",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0c7c4d4b-1d29-4223-a806-9fc98e4d4278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93d30f9-26b5-4c78-bfc8-f44176f3919e",
        "cursor": {
          "ref": "201f4fb2-30f7-49ef-ac31-61c695bb4700",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9d34890f-aab4-435a-ae2b-c5603075ea67"
        },
        "item": {
          "id": "a93d30f9-26b5-4c78-bfc8-f44176f3919e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9924126d-de0a-45a0-85b2-988346a7c954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf942dc-d307-4382-b5bc-787d78c5c785",
        "cursor": {
          "ref": "bef5639c-9c20-42e6-8a8e-2f3ea86b5922",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "24c93f9c-ea60-4884-9e7c-1fbddc73d872"
        },
        "item": {
          "id": "fcf942dc-d307-4382-b5bc-787d78c5c785",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "440bc6d6-fbeb-46c2-9fda-ed0896d9a897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab43e245-7d08-4531-a196-25fd82cde641",
        "cursor": {
          "ref": "e89cd3cb-892a-4bd4-b724-fc0f0f2f5b44",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d1e8dcae-a5d2-48ec-a0a6-aa5cdd764ed1"
        },
        "item": {
          "id": "ab43e245-7d08-4531-a196-25fd82cde641",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a1293690-f67b-4112-b7a8-f5e0fbb7267a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17646758-a56e-48a1-9644-9018429a1216",
        "cursor": {
          "ref": "eeaee374-60bc-44fa-9e5a-18f44ca2f224",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "63dc9a42-bb28-40cd-976b-dedbf892001f"
        },
        "item": {
          "id": "17646758-a56e-48a1-9644-9018429a1216",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1a1aa31d-36a5-4996-b762-6c1c0004f6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd8ec96-e2ae-47b2-9847-b376023cebe8",
        "cursor": {
          "ref": "fb9a4fd8-b0d5-4afb-9abd-2d05e13d7dee",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f73da252-d87e-426f-9170-22b48e3467c4"
        },
        "item": {
          "id": "ccd8ec96-e2ae-47b2-9847-b376023cebe8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "807aaa1f-4b57-4769-88c7-446766f603b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31546b5a-4976-4da2-95a0-2aaf14e48b2a",
        "cursor": {
          "ref": "85b4d557-d445-4b0e-96f1-8bce6ae93a77",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9e3cb547-5aa5-40af-ba94-09a596a8a24f"
        },
        "item": {
          "id": "31546b5a-4976-4da2-95a0-2aaf14e48b2a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bcdfa26b-5145-4c05-a89a-6332534fb045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a176f30f-406f-4dc9-9311-f547e58fff2d",
        "cursor": {
          "ref": "46ef861f-f98a-47ec-b1ec-84b3d7b0aa29",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "29dc2e8d-520a-4a68-aff5-d6135d27b727"
        },
        "item": {
          "id": "a176f30f-406f-4dc9-9311-f547e58fff2d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "28d7351f-5b7c-456c-9f1f-4328b33c229f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d7b527-bec6-4b88-8a96-7d49c73327e5",
        "cursor": {
          "ref": "031e08cb-f31b-4a71-af11-2793bb5d678f",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "28c8e3d3-6884-4735-819f-67f30d6fbb31"
        },
        "item": {
          "id": "47d7b527-bec6-4b88-8a96-7d49c73327e5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "860d5332-a0d3-4355-a662-1cee1f4c8e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b3d398-52db-4c7a-89d5-47b8dc6609b5",
        "cursor": {
          "ref": "a48ba831-6866-4050-b7af-ac3a9e356f52",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3d7188e4-902a-4218-ae86-6468b41238a0"
        },
        "item": {
          "id": "f9b3d398-52db-4c7a-89d5-47b8dc6609b5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0cc697eb-eed6-40e7-8536-86be4c002782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a80048-24af-4c0e-a837-49e15b523cc0",
        "cursor": {
          "ref": "c58ee854-c234-4820-881f-a344d213b79f",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "34c0a383-08e7-4241-9c55-250023228c86"
        },
        "item": {
          "id": "b8a80048-24af-4c0e-a837-49e15b523cc0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "de7bfea7-a7c2-4c9f-9ba0-f8cc87f0dbe1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "77d8a804-bccc-4d50-8b2e-8d3043c8c35f",
        "cursor": {
          "ref": "c5747fba-3e69-45a8-9512-cd1dbac8c4bb",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0a9f7289-197b-40a2-a06b-c4c6fc03e2df"
        },
        "item": {
          "id": "77d8a804-bccc-4d50-8b2e-8d3043c8c35f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "392f33ad-5be9-4b1d-b0c6-b7224a392d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5384da4-555d-4a78-9c97-47aa1b6fa908",
        "cursor": {
          "ref": "89b98248-37ec-4325-b5f0-89b2f7ea843b",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7f420333-088c-4e5d-8817-1706eb4c6751"
        },
        "item": {
          "id": "c5384da4-555d-4a78-9c97-47aa1b6fa908",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a694112e-9fce-4dfe-9d5b-427aa99b4ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941d5fef-26f0-4954-9ec2-c30403f3ecf8",
        "cursor": {
          "ref": "a09ea82a-c059-49fd-b0f1-0742664ae8e3",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0b7be7fe-e51a-49d4-83c0-c41270445ec7"
        },
        "item": {
          "id": "941d5fef-26f0-4954-9ec2-c30403f3ecf8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b76b783d-4688-48fe-b4f7-b1e272658a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ccecb2-072f-41e2-993f-40c699e36c81",
        "cursor": {
          "ref": "95abff2c-451b-4db9-8e7f-b90c9c23d8cf",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b0ac22d3-e892-4164-b0b6-6912b9865513"
        },
        "item": {
          "id": "d5ccecb2-072f-41e2-993f-40c699e36c81",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dadea06a-b1d8-4aad-ba77-1c704ec6b11e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c036ef7-4060-48ba-8c42-840d0665756f",
        "cursor": {
          "ref": "cf74bd0f-f461-4130-b940-173fa015b7c5",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a8932407-9964-45d5-a8c0-59f6d1134e49"
        },
        "item": {
          "id": "2c036ef7-4060-48ba-8c42-840d0665756f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0e05e013-96e7-4107-bdb6-bf244342f7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c855e90-7611-43b3-bb54-cae212417940",
        "cursor": {
          "ref": "2e255c68-b633-4fb6-ac01-232e31cb77f2",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9f206d18-9585-4854-af44-a11b0c2d02ee"
        },
        "item": {
          "id": "4c855e90-7611-43b3-bb54-cae212417940",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0ac2c496-6caa-44fb-b82e-c479eac6850e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef440b0b-931c-47c1-a9c3-d8dd12253440",
        "cursor": {
          "ref": "5622389c-b595-4bea-a894-095cf35cbc82",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5a96f584-1d3d-4f6b-b470-480088f5cf24"
        },
        "item": {
          "id": "ef440b0b-931c-47c1-a9c3-d8dd12253440",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8f810411-9575-419e-900e-60c965e87710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a8462f-6897-4a44-9811-9bdb71ad12a2",
        "cursor": {
          "ref": "7087e845-4546-43ff-ad5e-785901eb3a8b",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "57cbee5f-8b2d-4203-8ea8-a490ac54c60c"
        },
        "item": {
          "id": "75a8462f-6897-4a44-9811-9bdb71ad12a2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3a2ed15e-6a7c-475c-b308-0aae589587fb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "346d0724-7975-495f-9adc-70b98e951e39",
        "cursor": {
          "ref": "78b3cb13-9667-49e3-bd66-cfbe3e74240d",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "004018b8-868d-47d5-8ebf-e6ba772dae34"
        },
        "item": {
          "id": "346d0724-7975-495f-9adc-70b98e951e39",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5ff26015-7fa8-45fe-a235-6b7937d7a0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb789964-91c6-440a-976b-b9410b10c5be",
        "cursor": {
          "ref": "9426d303-5395-4ef3-879b-a1c99ef332a5",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a5013909-a48f-4678-8efb-ef0e4b687106"
        },
        "item": {
          "id": "cb789964-91c6-440a-976b-b9410b10c5be",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ef811baa-7364-4877-a8aa-b5724a8cdbe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d47969-a1ff-4fcb-81d9-ce179af9bfcc",
        "cursor": {
          "ref": "252a4349-e25a-4f49-8120-d49887ae61f0",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ebb0d6d5-7658-4240-a846-6414a35f96df"
        },
        "item": {
          "id": "e7d47969-a1ff-4fcb-81d9-ce179af9bfcc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "99efac3c-fed0-439e-ae9c-a9a088186868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b6a308-c5e2-493a-9859-1947a67d57f2",
        "cursor": {
          "ref": "f73a20bf-c575-4f42-8c9a-b20e8684870f",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "58c02e9e-0640-46f8-afd4-882e3d4bbdd6"
        },
        "item": {
          "id": "f8b6a308-c5e2-493a-9859-1947a67d57f2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e8644acd-6643-441c-9243-557ae69ac3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756029b2-4d5d-4309-8c67-9383b4ae6837",
        "cursor": {
          "ref": "0c855bb3-0ffa-4c08-bdc8-f0463afdf513",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d0b866b6-969e-4a18-b8f6-c65cf7a13bc9"
        },
        "item": {
          "id": "756029b2-4d5d-4309-8c67-9383b4ae6837",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4a0ba5f7-bc53-4bde-9d47-8bf020a2502a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281f035f-a6c1-4580-99cb-3468fbfda2c4",
        "cursor": {
          "ref": "03d0e405-9d0b-41d8-ac94-34e9b0b3dfca",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0ba6341f-d0ad-4001-95a1-975a33c2e48e"
        },
        "item": {
          "id": "281f035f-a6c1-4580-99cb-3468fbfda2c4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "65e9c055-75c8-4dac-909a-2a4fc9e7e0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9147d63b-fbb1-4b09-b58d-e26b47894916",
        "cursor": {
          "ref": "e3b039ef-8e7f-45dd-9a04-e55d2f4baa8d",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "af13b226-a9ac-480a-a846-170733cc8927"
        },
        "item": {
          "id": "9147d63b-fbb1-4b09-b58d-e26b47894916",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a12ca1d6-8738-4c37-bd61-e8e7c077c506",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 106,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "52b914cf-eb24-4c89-a582-46eaa2ef3489",
        "cursor": {
          "ref": "de3de636-2d36-4687-9cd1-98f528b714f0",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "754fdb64-a022-4994-879f-365f3e4a5b5a"
        },
        "item": {
          "id": "52b914cf-eb24-4c89-a582-46eaa2ef3489",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d5fe4a11-1542-40e5-9f97-7fe7aac0b7e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8612310-138b-4ac7-b9ce-d71070c18c1e",
        "cursor": {
          "ref": "f7cfcdba-fb54-4d2f-af68-91e002fa75a9",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "87469d41-9c71-4a35-9814-6d8dced23cba"
        },
        "item": {
          "id": "b8612310-138b-4ac7-b9ce-d71070c18c1e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a5cfe6d1-05ac-4a7a-951a-fee1fd9691c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6630434e-c27d-4dd6-a9fb-9cf011772dcf",
        "cursor": {
          "ref": "75938439-d47d-47b0-9de6-c5da19e13516",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "de390e10-a8a8-42c6-9a3c-e1e3c6b81fcf"
        },
        "item": {
          "id": "6630434e-c27d-4dd6-a9fb-9cf011772dcf",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "27bd6e62-7022-45ca-965c-e68b4a5a627f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56704a81-4b63-4ef9-b5c1-b0be6b5582e0",
        "cursor": {
          "ref": "fc6f2941-4616-4597-9b76-fb9bcd0e7bb5",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "188f7e2d-aa50-4e81-a027-b279183e0e64"
        },
        "item": {
          "id": "56704a81-4b63-4ef9-b5c1-b0be6b5582e0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "15ea9ace-8aba-4da8-9f33-0eae4391ac10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5b460c-2754-4058-9be6-c02aba7318a1",
        "cursor": {
          "ref": "2613bc71-70de-438f-9a7c-973697ea16a3",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d0a4bf94-81c6-42b1-98b2-c8aa69e4769c"
        },
        "item": {
          "id": "2a5b460c-2754-4058-9be6-c02aba7318a1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e3cf393d-d58f-4961-a9dc-1e5ea92c932e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce681d18-7681-4e19-a008-edce75e89e48",
        "cursor": {
          "ref": "b471735a-fe2e-487c-933d-eeac66a63a5a",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6550e1ef-df4f-459c-8429-85b275a796c6"
        },
        "item": {
          "id": "ce681d18-7681-4e19-a008-edce75e89e48",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f3db8778-6510-47d3-a0b9-5358963abc9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa29ad9-73a9-4409-9814-49dd1d94fcdc",
        "cursor": {
          "ref": "15553712-1806-4279-a9de-575b0270424b",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4b282222-e1e5-4d80-82bf-62914574a4a7"
        },
        "item": {
          "id": "0aa29ad9-73a9-4409-9814-49dd1d94fcdc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5d330677-b91a-455b-9e7f-ce4a52eef288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7d800c-8c9b-4249-b2cc-aa8f7af769c8",
        "cursor": {
          "ref": "9f34dad0-d7c5-4105-a7dd-d823c14d233c",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6d2efa4e-c58a-4f14-a68e-87cc0dcbccb0"
        },
        "item": {
          "id": "9c7d800c-8c9b-4249-b2cc-aa8f7af769c8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b952239a-b0c5-4c77-ac2f-29586e7f8c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41aa3164-bb40-4317-b2d3-2ba172612821",
        "cursor": {
          "ref": "aebf6967-bac2-44c8-af8f-2838719c6157",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1406b818-3bfa-42ff-897a-726ea6221213"
        },
        "item": {
          "id": "41aa3164-bb40-4317-b2d3-2ba172612821",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "52c0b0f8-c62a-407a-b1bf-cebfad84691f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4a2121-39f6-4088-b4b0-8419fe4e231d",
        "cursor": {
          "ref": "9acc801c-265e-47e5-b340-b8d59bef7d6b",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b616af6d-98b8-4729-a17a-a03bc3576acb"
        },
        "item": {
          "id": "3c4a2121-39f6-4088-b4b0-8419fe4e231d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3c265f3f-df3e-4935-a45a-c5183b7ff9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae70cf2-16be-4239-b680-f33ffcf173bd",
        "cursor": {
          "ref": "a8ab3008-3c35-4f24-8c3b-2f761cef1a97",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d635fa5d-1b1e-4202-ad1b-1425ed4e66a5"
        },
        "item": {
          "id": "aae70cf2-16be-4239-b680-f33ffcf173bd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "cb1bb267-24e6-4edb-9133-b611af7e3ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc70d2c-2093-42e3-8f1f-f29d76fed722",
        "cursor": {
          "ref": "3cb02a13-0ba4-48ae-ae24-2203f2fe9910",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9befebd8-f49b-4c4b-8ff5-30957abdaf22"
        },
        "item": {
          "id": "fdc70d2c-2093-42e3-8f1f-f29d76fed722",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8d2b533e-e12d-4a96-9398-3f133d0eb638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a1b191-5f08-46dc-812a-e2fe59bd51a4",
        "cursor": {
          "ref": "e19c8ae5-1c7a-436b-b2d9-07126e07610c",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a83078ff-6553-4715-a38b-28757b462f24"
        },
        "item": {
          "id": "20a1b191-5f08-46dc-812a-e2fe59bd51a4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5071328d-bce0-4451-a363-3f33063b602b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6acae3-0e3f-4086-b925-b6298ac64ded",
        "cursor": {
          "ref": "cab039cf-2fd3-451f-9e1d-18928686394b",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3bd3917b-5477-4b73-b844-e69e58873828"
        },
        "item": {
          "id": "1a6acae3-0e3f-4086-b925-b6298ac64ded",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1a3ab571-f808-4064-af14-6f67b0a5d9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8b05bd-35ec-4d56-90e6-1926c06071a1",
        "cursor": {
          "ref": "a86c6617-9d56-452c-908c-5a91f5863c6c",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "89499306-2c45-4ada-8e7d-a64b67cc82f0"
        },
        "item": {
          "id": "0a8b05bd-35ec-4d56-90e6-1926c06071a1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6e2b8dd2-4e59-4d32-b94e-32437f02ede4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfde52fa-0ac1-45a1-bcce-d175de146fab",
        "cursor": {
          "ref": "67dfdbd6-55aa-4dab-bcff-b848e15848cf",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0be5138b-b650-42c2-8dd2-6b661b148aee"
        },
        "item": {
          "id": "bfde52fa-0ac1-45a1-bcce-d175de146fab",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "028a271e-5c88-4f44-93fb-2f3bd014d90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447d2a3e-4a17-482e-8538-930a129a5686",
        "cursor": {
          "ref": "42284a67-5b2d-4f94-b174-56ad42867c32",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6ce70c77-fc53-436c-8636-b8cc51aa4733"
        },
        "item": {
          "id": "447d2a3e-4a17-482e-8538-930a129a5686",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2a75f067-ee42-46c6-b72f-45f102a9a7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee92e6d9-d066-45fd-9595-82a46db62afc",
        "cursor": {
          "ref": "f35b2de8-33ae-427b-86f7-bf7d6cd7b16c",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2b3dfa52-0f88-4dd3-86c6-5cbc8a1cd616"
        },
        "item": {
          "id": "ee92e6d9-d066-45fd-9595-82a46db62afc",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "22e8c8f0-be29-4a8e-bf9a-a68d1ac0fd26",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 28,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "df99b36a-1cfa-406d-83f2-420ea60290a3",
        "cursor": {
          "ref": "49f509a3-18c2-4b23-9c4c-2114e32354c4",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "604f7ca8-5d89-4d3b-9d45-3c6b17688f75"
        },
        "item": {
          "id": "df99b36a-1cfa-406d-83f2-420ea60290a3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9d744335-eacb-4293-9644-6e423242dbf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7edc6341-04be-4dc1-bd04-010bc6248202",
        "cursor": {
          "ref": "2f033719-04b7-42f0-ba26-77837374e6d4",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "72a6198c-6291-4874-9d0c-a272fe043508"
        },
        "item": {
          "id": "7edc6341-04be-4dc1-bd04-010bc6248202",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6f0f18d0-5ac6-4493-9e77-4c564476c2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5ad3ec-ab98-433f-9a30-6358d923e672",
        "cursor": {
          "ref": "3a38fd3c-8e1a-4364-9244-fcba470fdab5",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "beabed0b-85e9-41fc-9ebb-4e3dadd1db1d"
        },
        "item": {
          "id": "ef5ad3ec-ab98-433f-9a30-6358d923e672",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6e55c3f0-a581-475f-9ab5-f4126a1e8801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da5238d-0cc2-4d23-b827-caae9cc33b5f",
        "cursor": {
          "ref": "13bc5455-a9c9-48ad-9233-1f618e837b1a",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "662adec9-90d1-406c-8fc1-8028bd1431eb"
        },
        "item": {
          "id": "0da5238d-0cc2-4d23-b827-caae9cc33b5f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "06c37ecb-bff1-4f7d-8288-3fa12149cb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd0031b-06e5-42a5-882e-2739fd91a33f",
        "cursor": {
          "ref": "c74710ba-6f59-43a8-949d-3c77c7e89e6b",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "38b8808d-d875-4aac-a798-0d70ef3080c9"
        },
        "item": {
          "id": "dcd0031b-06e5-42a5-882e-2739fd91a33f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "dbe922a2-6301-4d95-adbe-62f2b3e76f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5950a6-21f9-49f0-b1ba-ff9506d7041f",
        "cursor": {
          "ref": "0b65deab-7272-41ba-8bf0-fdbfbd96a3d7",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f6c03d93-fe7b-4009-be52-e6448b8fb2b2"
        },
        "item": {
          "id": "8e5950a6-21f9-49f0-b1ba-ff9506d7041f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c5f65a6d-556a-4b07-8487-295922396939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0cccbdb-2407-4fde-b049-ff5dcea1f520",
        "cursor": {
          "ref": "3b9a19b8-a308-4478-8822-ae961a9c7756",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5d2112c4-63c1-47e4-9cbb-aa0413d7f322"
        },
        "item": {
          "id": "e0cccbdb-2407-4fde-b049-ff5dcea1f520",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e5950793-6a46-4367-b91b-69625279c206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea2a8c3-daa4-4b67-8615-997edac15a84",
        "cursor": {
          "ref": "4f535c3d-011e-4a4b-87cd-10576675fd9c",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e5886bc9-9829-47b3-9d29-e196ebf65953"
        },
        "item": {
          "id": "dea2a8c3-daa4-4b67-8615-997edac15a84",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "566f9c0b-e27f-4d21-aeaf-75115318d0f5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 29,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "bc397390-e412-4453-86a7-cca4d5338984",
        "cursor": {
          "ref": "aaed53aa-e9f1-4694-9656-c66a3a4d6a32",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "479f36e8-cf17-4f79-9b58-70411b4a95e6"
        },
        "item": {
          "id": "bc397390-e412-4453-86a7-cca4d5338984",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0e5f6798-3245-4750-b760-51e596d08706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc97f3b-6f12-4338-a33f-b98915a31131",
        "cursor": {
          "ref": "478f3ce8-094d-416a-9405-7b8cffaba4e2",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1ef0b0ad-de8d-40d7-ad50-8418ea95dbf6"
        },
        "item": {
          "id": "bfc97f3b-6f12-4338-a33f-b98915a31131",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "06aaa2f3-05cc-4307-a4d0-679064f744e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139488f2-1d01-4cef-9904-c57d3444d67e",
        "cursor": {
          "ref": "b64fd16d-6d35-485c-93b5-875d9ad4449c",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "26097064-56c9-48f8-802d-c81be3b2b979"
        },
        "item": {
          "id": "139488f2-1d01-4cef-9904-c57d3444d67e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c6601e0e-3f3b-4035-a884-03f2b1a7d117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6efcba4-23d3-4f42-841b-07c2268fe2bd",
        "cursor": {
          "ref": "1bb60a84-a3dc-40ae-ac36-b149dec0464f",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "dc4de456-d569-49ca-a017-290766d04744"
        },
        "item": {
          "id": "e6efcba4-23d3-4f42-841b-07c2268fe2bd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7369e316-7353-48cb-8223-d56443783547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a50b19-5b08-4968-a499-ba2130c121fc",
        "cursor": {
          "ref": "a80c16e0-f19b-4590-a6cb-5a82aa499efb",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8997a925-39f4-46a1-b006-73061b90c0c6"
        },
        "item": {
          "id": "68a50b19-5b08-4968-a499-ba2130c121fc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1c104c5c-f2d1-4862-a98c-a052b6505d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d2610b-6682-4fd0-bd5b-970ab072c277",
        "cursor": {
          "ref": "ee3820e1-1b35-4973-9df2-e08f3bfeb393",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "076fe516-192d-45c2-aa91-aaa85994b814"
        },
        "item": {
          "id": "d5d2610b-6682-4fd0-bd5b-970ab072c277",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "81a0f6de-c660-4cdf-ac57-5c20d7a1d5da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a04858f-f91f-4109-a1ce-49c474544b6d",
        "cursor": {
          "ref": "b99bdccd-0fe2-40a2-ae3e-8b12cdd7be19",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3a35f47b-b799-45bc-990c-f517fafc93e4"
        },
        "item": {
          "id": "9a04858f-f91f-4109-a1ce-49c474544b6d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9a4a1774-1022-441a-b952-4890ab8fb775",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "83857717-b3c7-431f-b7ef-d9c9a26820f9",
        "cursor": {
          "ref": "1184edab-55c0-4161-8f40-733d9c9ab515",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "63a94713-39c4-4860-b343-45387ef4ff33"
        },
        "item": {
          "id": "83857717-b3c7-431f-b7ef-d9c9a26820f9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "128a152e-f969-4263-8661-3bd77999e16e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "219ed5e6-4884-445f-9a6d-de0b5780ec41",
        "cursor": {
          "ref": "2eba1842-b1a1-47ae-8a81-87b912fecf21",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1a8fbe3d-99a2-4920-b5c8-4daae00d70c9"
        },
        "item": {
          "id": "219ed5e6-4884-445f-9a6d-de0b5780ec41",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cfacdd8b-79a4-42dd-9631-4696656fbd18",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "c0aa4080-fa45-4427-98ab-a7f8afbb5eed",
        "cursor": {
          "ref": "ca373d84-7a96-4406-be8e-f8a0c59be791",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a53f549d-3829-4f52-8b0e-c378824cbe03"
        },
        "item": {
          "id": "c0aa4080-fa45-4427-98ab-a7f8afbb5eed",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c56d268e-9012-402c-bbf1-f793f9c9059d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 28,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "685352dd-92cc-445b-84c2-aed91684bd4a",
        "cursor": {
          "ref": "e5bb7a23-dbed-43ba-b798-e3efb067ff71",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e81a53e3-4ee4-441c-a840-b742a3460dcb"
        },
        "item": {
          "id": "685352dd-92cc-445b-84c2-aed91684bd4a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ab99c4cd-ccd7-4e9c-84e0-752775e95a5e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 28,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "dc4cbf38-d494-46e0-a8f4-6030cf083add",
        "cursor": {
          "ref": "c7f5687b-75e8-4324-88e2-4fee2b08d7c3",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "69bed90f-cfae-4321-8db7-c628346f4326"
        },
        "item": {
          "id": "dc4cbf38-d494-46e0-a8f4-6030cf083add",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "52104163-5c50-42d0-82c5-385ecf22b88e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "fced7313-9b37-44b8-8c00-5fab5f3d411f",
        "cursor": {
          "ref": "7bd878ac-0775-4048-a106-29bd5e7ce3a2",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e2d3109a-b247-4260-a55c-caf67c248ffe"
        },
        "item": {
          "id": "fced7313-9b37-44b8-8c00-5fab5f3d411f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c7f6778a-86c3-43e7-b4f6-d972c5eb7985",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a0b8b6-4c16-427f-ba8c-7f37bcbb2352",
        "cursor": {
          "ref": "34ac7474-f2cb-4669-b2a3-71986d9cccfd",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8e472d89-81ca-4f4c-aecd-1c8b9ca36ea7"
        },
        "item": {
          "id": "19a0b8b6-4c16-427f-ba8c-7f37bcbb2352",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d8501347-5388-4790-84b5-a72e27aa1b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b212dfb5-4bf1-4518-bc09-62c2f489408c",
        "cursor": {
          "ref": "b962b7d6-385f-484d-b95f-fe438564eed7",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "099866a7-de96-45be-8826-2c91b23afac1"
        },
        "item": {
          "id": "b212dfb5-4bf1-4518-bc09-62c2f489408c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3687a87a-f5f6-4548-8579-7f5f09367c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d061a9df-9f3b-499f-9e8a-aa9e809506b6",
        "cursor": {
          "ref": "6401fb1f-1206-409f-9e7b-228fdc072959",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5dce9c26-a7b9-457a-8eae-0899b24cf341"
        },
        "item": {
          "id": "d061a9df-9f3b-499f-9e8a-aa9e809506b6",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8fbdf5a1-8447-4307-bf31-7ea762c68899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eea2a70-576a-459b-86b7-67ea7d9e506e",
        "cursor": {
          "ref": "091116aa-ecb7-4644-bfaf-961b6de14d2e",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9c14c538-adbc-4da7-ad87-feac40c5996c"
        },
        "item": {
          "id": "0eea2a70-576a-459b-86b7-67ea7d9e506e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "21e80a7d-4491-44e2-ab3d-f1ab84681f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaaad260-25fe-41d8-b387-9e05a8a31670",
        "cursor": {
          "ref": "4f413f34-62c3-44b4-888c-2d7f45ea8127",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8dfbaf09-f6a6-4c42-a584-e5009622fb28"
        },
        "item": {
          "id": "eaaad260-25fe-41d8-b387-9e05a8a31670",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f887410e-34a3-44bf-a362-0178ff414bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcee4167-8ebe-4223-b4e8-f5e343739f14",
        "cursor": {
          "ref": "3cb726e4-e30b-487b-9977-a09843a35f00",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "faec5258-a901-4e5e-aaaf-3eb01e2e3546"
        },
        "item": {
          "id": "fcee4167-8ebe-4223-b4e8-f5e343739f14",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "31d8e4bf-4c6a-4bf7-97c8-a1dccc37e1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5cbf0b-7fc3-4eba-a7e9-3abe513cbf83",
        "cursor": {
          "ref": "284a057d-943d-486c-83cb-31b608188aee",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "aae03ef7-70c4-4018-9b1c-797693182ee0"
        },
        "item": {
          "id": "7b5cbf0b-7fc3-4eba-a7e9-3abe513cbf83",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9ce920c1-8091-4fc8-91d2-2cbf47b6db78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e434cf1-60ba-4c16-88e8-070e9494ffa6",
        "cursor": {
          "ref": "84d1be4d-1efa-4a26-8914-a45917329e52",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "449e1502-2c18-413c-9e99-d4ec3e3ee6ba"
        },
        "item": {
          "id": "3e434cf1-60ba-4c16-88e8-070e9494ffa6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d2692615-e6ad-4a65-9941-25d19dae401d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67797ee9-37bb-444c-b544-39e90d7541b1",
        "cursor": {
          "ref": "4ca3fd51-ed13-4253-b893-15193f84c087",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "39dce3f6-efa2-4ae3-ac88-5c5f675ba1e1"
        },
        "item": {
          "id": "67797ee9-37bb-444c-b544-39e90d7541b1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5d7a19f3-e802-48de-a79f-990f691ca822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc5f513-7cb0-4f7f-8afb-a213a3c41959",
        "cursor": {
          "ref": "f8412439-3ff3-4b41-8fcb-61eca6a4f77f",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f1f29482-3fc3-45ca-952a-869b9c0f2d29"
        },
        "item": {
          "id": "bbc5f513-7cb0-4f7f-8afb-a213a3c41959",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a6b17da2-9de2-4481-a817-d6d27aa1e920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029200c1-9a3a-468b-b75b-35cb663eb793",
        "cursor": {
          "ref": "14612911-744b-4cc3-a908-39062654b8fd",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "04b6c120-6291-40c0-919e-3ea4f55603b6"
        },
        "item": {
          "id": "029200c1-9a3a-468b-b75b-35cb663eb793",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "49992804-cb1b-4f84-8dbd-ef1b157fc105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f38b4cb-7218-4306-b52b-6945de87f90b",
        "cursor": {
          "ref": "0d766bde-e52c-4269-93ae-944c8df6550a",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5827f276-f98b-4a51-9bdb-ea078cad2df8"
        },
        "item": {
          "id": "9f38b4cb-7218-4306-b52b-6945de87f90b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c3d0bcc2-e373-4deb-989f-113474b08bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe604e3-d0c1-478b-b36c-121951d18be4",
        "cursor": {
          "ref": "45303594-2c14-417d-acdd-200b47250ea5",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f888aec0-7bbb-42f1-9145-a944ed532a1b"
        },
        "item": {
          "id": "6fe604e3-d0c1-478b-b36c-121951d18be4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "17919e1a-ae88-49d7-87b7-b1aa26f2508b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955db94f-c38f-4e97-ba3b-b1c86d96ca3f",
        "cursor": {
          "ref": "a6c4d4f4-a5e1-43e5-afdd-708737f0b21e",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9b33a5ee-bc2d-485b-842a-9cbf5c617b19"
        },
        "item": {
          "id": "955db94f-c38f-4e97-ba3b-b1c86d96ca3f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b86bde78-732e-4b13-b829-5ce897fb63d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5072b1c6-9f67-4db1-b5a2-55fd928438a4",
        "cursor": {
          "ref": "14693f5c-98d7-49fd-81c8-8c97ace7697b",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ec2b9a4c-35be-4091-980d-e471a08ba362"
        },
        "item": {
          "id": "5072b1c6-9f67-4db1-b5a2-55fd928438a4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "301d7d0a-12a8-4eb0-9eaa-797e24d4ac64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5afc3133-1b88-4717-a71d-755922ed5052",
        "cursor": {
          "ref": "d40bda40-b3d4-492b-a26a-8031c5f64d8c",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "106c53f5-401c-47d4-b853-3602b21ae734"
        },
        "item": {
          "id": "5afc3133-1b88-4717-a71d-755922ed5052",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4653d980-fe7c-4338-98a3-8d4c63b5e778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5180f2-74fa-4bdc-bf48-9e81fa0d1aa0",
        "cursor": {
          "ref": "65d56259-3499-4ec3-b8e3-91a55880b095",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "00f4dc6a-d898-4f86-9034-0bfdf481cf16"
        },
        "item": {
          "id": "7e5180f2-74fa-4bdc-bf48-9e81fa0d1aa0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "71c99be1-a85b-49d6-80c6-58767a6d4aba",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "5a8e16ac-aff0-40a3-b4be-bbc2032f63ad",
        "cursor": {
          "ref": "58bfd791-4700-4004-960b-f5cac3ce22ea",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "cb719f2e-f597-4526-a130-476f01c5dc70"
        },
        "item": {
          "id": "5a8e16ac-aff0-40a3-b4be-bbc2032f63ad",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cef9d86d-aa68-4ba9-b49f-7964db8192f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023e9f37-6c2e-45d1-91ed-5e27ac6bf8fd",
        "cursor": {
          "ref": "d8f8de77-30f4-44a4-aa95-2992179ce67c",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1bf74c77-e57f-4bf6-b5d7-62401ebd5f6f"
        },
        "item": {
          "id": "023e9f37-6c2e-45d1-91ed-5e27ac6bf8fd",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b17357f6-9653-48e3-8fbc-68441030bece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53ca321-e115-4e5b-bcf7-da64c4fff09b",
        "cursor": {
          "ref": "23bc86a1-6d1c-4656-b033-5f0761e3faac",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "505725f4-0cfb-47cd-b74b-a9579ce32f5c"
        },
        "item": {
          "id": "a53ca321-e115-4e5b-bcf7-da64c4fff09b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b923404a-e831-4676-b0f5-f1b875a95a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423e7d41-6445-4314-bf02-cba9fd175508",
        "cursor": {
          "ref": "a7cb82a9-aced-4b54-952f-f1da14c6a699",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c58d72db-4f6d-4923-9376-256f9580351a"
        },
        "item": {
          "id": "423e7d41-6445-4314-bf02-cba9fd175508",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6060e423-81a6-439d-a014-9f9b6897bf68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9aae593-f867-4d8a-8b47-a7be24185e21",
        "cursor": {
          "ref": "97ff8d2e-e125-4b39-89da-f490f5f18126",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "91107a1e-b5bb-4262-be1f-eec0e8bad532"
        },
        "item": {
          "id": "a9aae593-f867-4d8a-8b47-a7be24185e21",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "de30a724-a49d-4cfb-9792-6feaaef4fb25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eefc6cd-c4f7-4657-aa75-75a0b20d378b",
        "cursor": {
          "ref": "e62a77e8-3f86-4a93-8d57-013d8c9d195e",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b1488285-fb50-4492-aef4-5a1c06395af1"
        },
        "item": {
          "id": "3eefc6cd-c4f7-4657-aa75-75a0b20d378b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "93148c8b-543e-4dac-be2e-51b94e598e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f465c5-7804-4fd8-934e-37f3de141675",
        "cursor": {
          "ref": "ba83ebe6-19c7-433e-962c-f91feabc7fa3",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4ba44153-085b-4b51-90c8-83cddee855de"
        },
        "item": {
          "id": "68f465c5-7804-4fd8-934e-37f3de141675",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "85b15930-7f8d-4f78-8802-e0f03d8ec556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8d817b-272b-48fc-9519-2dc896e075df",
        "cursor": {
          "ref": "31ad6cf9-804b-4fa3-991f-37642a614c3b",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0c9b93a3-081d-47f3-93c3-dc82ec5c6542"
        },
        "item": {
          "id": "bf8d817b-272b-48fc-9519-2dc896e075df",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "07ed8455-f771-470b-939f-dafe528166e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0204560-7379-4d9a-b204-b20d591560cc",
        "cursor": {
          "ref": "fad27080-a934-44e4-8374-f96128b069e8",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "919f7c0f-c87c-43cc-8cd0-c53344ae4deb"
        },
        "item": {
          "id": "c0204560-7379-4d9a-b204-b20d591560cc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4940eb8f-259a-483e-b135-e24f30001448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3f1890-31dd-440b-a0e5-bf5f69bf4054",
        "cursor": {
          "ref": "c4c1d34b-3682-440f-91b1-4c5e04994b20",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8ed4482e-4005-4f15-bc07-febb789e6dfb"
        },
        "item": {
          "id": "da3f1890-31dd-440b-a0e5-bf5f69bf4054",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "cd06918d-1157-4e60-981d-7099e7b52a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee8c788-5018-4b67-a9a2-5cf500a24618",
        "cursor": {
          "ref": "270ea2cc-32d6-44e9-999b-9a5dc20a320e",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ce631f17-bb85-493f-b3c9-138a330dea00"
        },
        "item": {
          "id": "1ee8c788-5018-4b67-a9a2-5cf500a24618",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "25955778-a8b2-484e-a76a-70574fc67039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa524ec-e412-4ff2-8ad5-865568bebb56",
        "cursor": {
          "ref": "2540f2be-2233-4b64-9d64-8d7361ed9c2e",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "87f3984a-89e0-4505-ab58-e9a885bc1a03"
        },
        "item": {
          "id": "5aa524ec-e412-4ff2-8ad5-865568bebb56",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2cf44b9d-e1e8-4829-8d07-acfe50960633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4598a2-1fac-47ad-926b-4dfc791fa38c",
        "cursor": {
          "ref": "33d5ae68-8221-4b65-8934-0cb992fbb4a2",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c7cad06a-e134-4045-836b-2f60b23503a7"
        },
        "item": {
          "id": "8a4598a2-1fac-47ad-926b-4dfc791fa38c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "14bf86d3-bb7f-482c-a3b7-7f122c203764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52459041-de26-461d-936e-5e3548fa480f",
        "cursor": {
          "ref": "3bfc5ece-923e-4266-9259-d582936b07a5",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "abc36e15-76ee-4ce6-ae51-249c2dc3eb50"
        },
        "item": {
          "id": "52459041-de26-461d-936e-5e3548fa480f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2f9cbc4e-01eb-4783-9bf9-b74237bb6dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234e7883-3df1-4b9d-afc2-a27d04aa92ce",
        "cursor": {
          "ref": "715a6ec6-0345-4c3c-b608-0a7f617f3071",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "af1969f9-07d4-499b-87d8-62ed8612a230"
        },
        "item": {
          "id": "234e7883-3df1-4b9d-afc2-a27d04aa92ce",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8e067a3f-20cc-42ad-b4ed-7f0b3e72a3b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c183619-9272-4d6c-afa4-52df7e25e739",
        "cursor": {
          "ref": "04264072-e911-4c6b-b8fc-612a756485b9",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ae939923-bb70-4f76-b63e-48fe0989b045"
        },
        "item": {
          "id": "7c183619-9272-4d6c-afa4-52df7e25e739",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9ce0acc1-2798-4a36-b3dc-9957c0e5be94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a338abc-58b6-4f0c-a41d-dd21c8928dca",
        "cursor": {
          "ref": "79f79cfd-5b23-4ae7-bd79-2e38ebbbe15e",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "cfbf8216-9d36-4816-a95e-fd779aff0ced"
        },
        "item": {
          "id": "4a338abc-58b6-4f0c-a41d-dd21c8928dca",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9063b4ac-3a70-44da-97ba-982b11d0b6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f43c76-b11a-4b95-818f-a972e80411e9",
        "cursor": {
          "ref": "3846f09a-da8f-49f1-a882-82540efd539b",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "df953438-0c33-4fad-be76-02faa69fa9af"
        },
        "item": {
          "id": "36f43c76-b11a-4b95-818f-a972e80411e9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "dd4d60b4-226c-492f-baf6-b56643a2187c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a305c8e-ca9a-41d9-bb90-fea168bb8a73",
        "cursor": {
          "ref": "136ca531-92c1-4663-bb2c-703228bcc14c",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "984852c4-9c1d-4b33-bb93-a2da60640f8d"
        },
        "item": {
          "id": "4a305c8e-ca9a-41d9-bb90-fea168bb8a73",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1143ea34-5f12-481b-b353-e798d8f26b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a279e6c6-b36c-4aab-85ef-7b2c93882055",
        "cursor": {
          "ref": "5d73a76c-3d59-4ab6-93a1-b941827bd84b",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d4493296-97b8-4bc3-96bf-ae6a9db19e5d"
        },
        "item": {
          "id": "a279e6c6-b36c-4aab-85ef-7b2c93882055",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ea477a6a-3eb2-4677-8220-7c4f5fa4d14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116342a9-50a0-4992-a36f-ba47347be040",
        "cursor": {
          "ref": "2f608ff3-870e-4328-8129-a89ffec49319",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5b0fc404-01b7-41e4-8093-9cc767b3e3e1"
        },
        "item": {
          "id": "116342a9-50a0-4992-a36f-ba47347be040",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1507d04b-5454-43fa-81c9-4df73f3f3e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2611b2bb-6bea-4303-8a76-ccc354438740",
        "cursor": {
          "ref": "1f4b0cc3-0fd8-4459-bd6d-e79ee4c6f489",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "79e0f713-1c3a-4f0a-8ffc-228d2517364e"
        },
        "item": {
          "id": "2611b2bb-6bea-4303-8a76-ccc354438740",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b287750d-65dc-4efc-9e16-eae4725686fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3ece5c-f5f2-43ef-a756-81ac412a0762",
        "cursor": {
          "ref": "abf61e33-72d8-470f-8fcc-d747e5d6fa1b",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1608cff5-a207-402c-9ae9-51169fef14be"
        },
        "item": {
          "id": "5a3ece5c-f5f2-43ef-a756-81ac412a0762",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "68981212-dfad-4f5c-9996-922f0e512520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57108745-e948-4db2-974d-4ed7dcd7eab4",
        "cursor": {
          "ref": "5e242010-9d69-4368-84eb-0ccb7d4a359c",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fe8b4b45-e44b-46f9-b7e5-7240fd342479"
        },
        "item": {
          "id": "57108745-e948-4db2-974d-4ed7dcd7eab4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9a10b3c0-d084-478e-a926-6601a22daf39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328a1968-3bf5-4bc9-97a8-f1db28305d85",
        "cursor": {
          "ref": "81548cc9-94f3-4275-a387-1ce00c8046ce",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f94becde-0f93-4ef0-bfb5-c9c61d3d5c2b"
        },
        "item": {
          "id": "328a1968-3bf5-4bc9-97a8-f1db28305d85",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c372834b-2f48-4b78-abe3-deb6b9bdc9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df400113-7386-42ec-a971-f0076db28b26",
        "cursor": {
          "ref": "339c3c22-1c16-4643-ab61-762015e773aa",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a983969a-b0db-40ae-a71f-b949cd546661"
        },
        "item": {
          "id": "df400113-7386-42ec-a971-f0076db28b26",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6e06eeab-d5c0-4cfb-af78-897a853a2a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773e4773-bd8a-4edf-b1df-dd0bbe3c2288",
        "cursor": {
          "ref": "117de3b3-68ab-48ea-9dae-63fa04325ce4",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "41a5aed6-1b8c-4025-a472-3ae6d4e56337"
        },
        "item": {
          "id": "773e4773-bd8a-4edf-b1df-dd0bbe3c2288",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "610002cf-e82b-4d4b-8098-7d7028884a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4003e389-2938-4230-aad1-3554e6a2eb33",
        "cursor": {
          "ref": "91346970-d0c1-459d-af32-917006d145ce",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fc21f7d6-1a2d-4f6f-8ae4-16d32a9f252f"
        },
        "item": {
          "id": "4003e389-2938-4230-aad1-3554e6a2eb33",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "413f80e9-1bc5-4d32-8c45-5a0ac8ee2c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b42e52-615b-4661-8707-c015fa2b1b3d",
        "cursor": {
          "ref": "5d2675ed-2fb1-4cfd-9fe1-84d44e578079",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "cb2d8a57-c593-4e9f-ba9d-c8bc8dade24b"
        },
        "item": {
          "id": "09b42e52-615b-4661-8707-c015fa2b1b3d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "de435e34-c395-4f49-8cde-730bc3340b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72044b68-4da0-4a3a-a35e-26f4deb921ae",
        "cursor": {
          "ref": "8cef7bc6-d09c-4141-8594-1b89731a0832",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b8eaaf6a-523a-486f-9887-8b72879d2ec9"
        },
        "item": {
          "id": "72044b68-4da0-4a3a-a35e-26f4deb921ae",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d1b91d95-0eb8-4cc5-9098-2e2973af9e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f6f9ff-596d-41b1-aaf5-83c781ebf78f",
        "cursor": {
          "ref": "ee472d0b-fe43-4841-be88-c3dd064e94a1",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "69ce9fc5-257c-4392-817c-4aaac36718e5"
        },
        "item": {
          "id": "32f6f9ff-596d-41b1-aaf5-83c781ebf78f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e58e1f56-9c80-4892-8f42-e67ff3a7b4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6e2ec6-366d-4931-9d66-2988606f77e5",
        "cursor": {
          "ref": "10dc8e9c-34ec-4b94-a0fa-7e2f18d250c7",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e0899b5d-5201-4183-8bfe-60d89f2eb1ee"
        },
        "item": {
          "id": "2e6e2ec6-366d-4931-9d66-2988606f77e5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b5c6fafd-7997-4016-b6b8-5e801bcac98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0075dc-3e74-415d-b2ab-06964d3da99b",
        "cursor": {
          "ref": "708f3500-f4b4-4a89-beca-222f11e578ef",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "435f4fd1-b43b-42a3-b30d-5df6a0688cb3"
        },
        "item": {
          "id": "ad0075dc-3e74-415d-b2ab-06964d3da99b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f0cc1916-7849-4217-9243-98fa9f7f1c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22f0768-0d92-4471-b0b8-7042805f6bb0",
        "cursor": {
          "ref": "3ccad95d-4a25-4f95-ad6c-084278bad658",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "88abf34e-366b-4ac6-af8e-87350f126c62"
        },
        "item": {
          "id": "c22f0768-0d92-4471-b0b8-7042805f6bb0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b2808d4f-c0b5-4478-86fc-9dd645eceaa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e36c8ca-3708-447b-a1e5-d0d02a5b664e",
        "cursor": {
          "ref": "5130a255-7ac4-4cb1-b8da-5686b3d6048e",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "887bd9ef-d784-4ad7-a919-f4e2c2915a9b"
        },
        "item": {
          "id": "0e36c8ca-3708-447b-a1e5-d0d02a5b664e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7dcadb61-1f44-49be-8c76-61b2ddb91142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfeddc4b-69c0-40dd-82f3-24e628161a81",
        "cursor": {
          "ref": "7bf064f3-6726-49ba-98c1-0407c55393eb",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "dac51b65-8d2a-4e99-bb45-6748f9d53d42"
        },
        "item": {
          "id": "bfeddc4b-69c0-40dd-82f3-24e628161a81",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "eb884444-5d51-46bf-a34e-de41923547ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2fc0d14-eacf-437e-8c36-0f5f3381a6aa",
        "cursor": {
          "ref": "543ef2e2-79a5-48a6-aecb-c03c607f8032",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "12a0d20d-ab17-4d4f-985b-42b5e5682e74"
        },
        "item": {
          "id": "c2fc0d14-eacf-437e-8c36-0f5f3381a6aa",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6391279e-919d-4d02-8380-3dbf02add10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62a06e2-d368-449d-9428-38bad6c1e76a",
        "cursor": {
          "ref": "8ffb5933-6053-4a52-844d-8a29738ee335",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "930da8cd-1305-4672-8eec-83359e9e100f"
        },
        "item": {
          "id": "f62a06e2-d368-449d-9428-38bad6c1e76a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a2223a70-91a1-4b1c-b614-771deebf6418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1215dc-04f0-4b55-a498-9a8617d83c64",
        "cursor": {
          "ref": "4cbd13e4-43c8-450d-be4d-f32e220930da",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a12ac162-4532-4043-9a8c-85a3a3bc3be5"
        },
        "item": {
          "id": "cb1215dc-04f0-4b55-a498-9a8617d83c64",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "acad5991-2b65-4da5-9c86-d4988a570f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f18cac-aa36-479d-b750-7ae230f6dba3",
        "cursor": {
          "ref": "9e982205-92da-4a13-979f-352e5cd4b578",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f00d42da-f17a-4ab5-978b-99b49186c2e8"
        },
        "item": {
          "id": "52f18cac-aa36-479d-b750-7ae230f6dba3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ea623a23-79b4-407f-89a5-f4773c60d69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b22278c-32bd-44db-9343-585376aeea11",
        "cursor": {
          "ref": "dac431ca-62a3-4ecf-9b29-590eeb489bb3",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9e9fe8e8-102a-450d-a223-e83839923e35"
        },
        "item": {
          "id": "6b22278c-32bd-44db-9343-585376aeea11",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "70dc2b51-8eef-4280-ad59-187cfa14797a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 202,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e2b2d3-8f57-44e0-84ff-719354b21ace",
        "cursor": {
          "ref": "d63a7415-8d7f-47d0-98f9-65adb368eca7",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a56e5b3f-8c66-465f-8910-beedf31070b5"
        },
        "item": {
          "id": "37e2b2d3-8f57-44e0-84ff-719354b21ace",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "138476c5-e8b9-4d97-9d76-ad18539ee386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e99cd6-43f0-4947-9b1d-06aad3542f98",
        "cursor": {
          "ref": "9a17b285-d33c-47dc-bd3e-3978f7b140ed",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "bcda155b-08cb-46dd-9c13-c22a2f1ebcbb"
        },
        "item": {
          "id": "f2e99cd6-43f0-4947-9b1d-06aad3542f98",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "987952aa-12e8-4d1e-bab6-0d2845836d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e919ff-0c74-4fff-98bc-270dcd1a18d8",
        "cursor": {
          "ref": "85786c42-b3d4-4258-a460-29612f4adee7",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d4dd5737-bf9f-4eca-b6c8-8f03ded12092"
        },
        "item": {
          "id": "59e919ff-0c74-4fff-98bc-270dcd1a18d8",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "58a3dc42-3188-4e0d-9826-70b850ad2771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513623e1-bec5-4580-b7f1-b14e74dda686",
        "cursor": {
          "ref": "dddd5903-5ff7-4f85-a604-e04f9fa82c4b",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "021c72c6-b061-41d3-ba2a-30ac38f466cd"
        },
        "item": {
          "id": "513623e1-bec5-4580-b7f1-b14e74dda686",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bafea63c-0934-4f8b-b1be-fd428cb570ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac7a863-0bd9-4275-9946-007259cc04d7",
        "cursor": {
          "ref": "e7db8714-6b11-49c9-91be-b33cd2bc9dc6",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "031378f8-752f-46c7-86f5-b115f8d38aca"
        },
        "item": {
          "id": "4ac7a863-0bd9-4275-9946-007259cc04d7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9c68b2e3-c6ed-4ed5-8a48-390ca6b93bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35158930-fe72-4eef-bf80-327636e5d222",
        "cursor": {
          "ref": "4c279515-8aa9-4ef9-bd78-986f796dea74",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "dd8e35d5-23e0-4d9c-a836-cb6e87fb19ff"
        },
        "item": {
          "id": "35158930-fe72-4eef-bf80-327636e5d222",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "20f0fb16-53e2-4e38-92f3-b7b743fba702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ac832f-5e25-4373-9bdf-fac529e8f595",
        "cursor": {
          "ref": "5711323a-3b2f-488d-99d6-3d7a0beb3beb",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c7790d08-4bf0-4c42-8962-c6ddb823d04f"
        },
        "item": {
          "id": "e2ac832f-5e25-4373-9bdf-fac529e8f595",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f08300b9-6564-4421-856d-da37c9057c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344d68f8-6213-4d51-8d63-e5863746cd7f",
        "cursor": {
          "ref": "e77955dc-3949-4c4e-97ee-d2bee1bc3cb8",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6e38dad2-1190-4038-a114-77fbde8355c0"
        },
        "item": {
          "id": "344d68f8-6213-4d51-8d63-e5863746cd7f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d2714717-63e6-4fc8-987d-080a84530ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048bd5b4-bda2-44de-a780-4d0db7a14318",
        "cursor": {
          "ref": "d31bcd76-347e-4edd-9fab-2a9d6a6b00eb",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b422af4a-e9d1-4a9e-a909-9a83eae22f1a"
        },
        "item": {
          "id": "048bd5b4-bda2-44de-a780-4d0db7a14318",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b8a1f494-91cb-452c-b451-f161fbdadf20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0902948d-b368-4514-84e8-6d03ad847c65",
        "cursor": {
          "ref": "2435b44d-67a6-4176-8995-90272677aa21",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "99b9007a-656f-4ace-9c31-ff042c8f05a1"
        },
        "item": {
          "id": "0902948d-b368-4514-84e8-6d03ad847c65",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "58c58b17-33a1-43a3-afac-3baaa45218be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e08afb6-d2ee-42e5-8caf-391771462570",
        "cursor": {
          "ref": "7a426112-cc91-43db-b4b1-b7edfe73ac18",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a5766a84-32cc-43a9-ba14-1b14be7f91e2"
        },
        "item": {
          "id": "8e08afb6-d2ee-42e5-8caf-391771462570",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "77b4cbb3-6c7b-4289-8474-0c3dc821207e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd50744-3874-4ab6-ab92-65a4974566f3",
        "cursor": {
          "ref": "43995ac3-304b-4a8b-897e-c3800b50657a",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "049dabf1-9fa7-4ddf-b7db-b51fe5546ebc"
        },
        "item": {
          "id": "2dd50744-3874-4ab6-ab92-65a4974566f3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5fd803b0-0d20-4207-a8eb-3e4d1d1ded07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1a0445-3702-45ab-a80f-1f9f7d4e86b8",
        "cursor": {
          "ref": "8ed96467-9120-4536-bdb6-5d6b952169ce",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "71073570-8020-4666-bf8a-5f6c1152eecd"
        },
        "item": {
          "id": "ad1a0445-3702-45ab-a80f-1f9f7d4e86b8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "231663d2-a6bb-4ab3-99c3-178dad0d6837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd620e1f-f479-450a-8bbd-b5231ab61096",
        "cursor": {
          "ref": "f20e7ae7-cfa4-42ba-8796-d0975aebd9bf",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9d1485b5-7801-4bc6-8178-03237c48ae4a"
        },
        "item": {
          "id": "dd620e1f-f479-450a-8bbd-b5231ab61096",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2176a239-30b8-402c-9b09-b8b8c558eb57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4304d892-d6e7-40c8-a50a-876364614d8e",
        "cursor": {
          "ref": "968136bb-babe-4a84-bfe4-666ca05cb74d",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c0962029-2c9c-447f-8116-9dda068ad8e2"
        },
        "item": {
          "id": "4304d892-d6e7-40c8-a50a-876364614d8e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1092d375-a200-44ca-8f25-ad697b741b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ae7058-aa80-42c0-b982-4482ca9135ea",
        "cursor": {
          "ref": "ba6e133c-76b6-4563-9e13-badc66718d62",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1bdf8fae-0f0f-472c-8ea5-d4b53b627ad3"
        },
        "item": {
          "id": "45ae7058-aa80-42c0-b982-4482ca9135ea",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d8aeb917-4f9f-434f-a5a9-b36ad3b711a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e263dbc5-1a04-482c-949a-aedfd78446aa",
        "cursor": {
          "ref": "70d2ce1e-df41-41f2-ae09-7c332af543ef",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "657b9929-69aa-4152-8c57-16dffbc03e7a"
        },
        "item": {
          "id": "e263dbc5-1a04-482c-949a-aedfd78446aa",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "565c30ec-dadc-4aff-b14b-007e67ba785c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2440aa-d58b-49f2-98c8-963437562529",
        "cursor": {
          "ref": "ac8fafc4-13b8-493a-8b9c-9f0b6dd8b6d9",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "c7272d69-0be4-4df4-9676-2b67cc98f832"
        },
        "item": {
          "id": "5f2440aa-d58b-49f2-98c8-963437562529",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "de0329e4-7021-47c9-b0a3-3b8ee088016b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25a14be-e852-4785-accd-1c4b7646b776",
        "cursor": {
          "ref": "990daa39-d691-4257-8c5e-3e42f099e530",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "4a65126d-10e0-4d4c-9226-c12f05cec727"
        },
        "item": {
          "id": "c25a14be-e852-4785-accd-1c4b7646b776",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "34005e20-5b85-428a-9893-f289f272fb2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec1e867-e398-4339-bdbc-31998693fc35",
        "cursor": {
          "ref": "53653772-a3f8-405d-96cf-256d8efc58e6",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "df12758f-eaa7-4112-83ca-258e6d054377"
        },
        "item": {
          "id": "5ec1e867-e398-4339-bdbc-31998693fc35",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "85ba3f4f-90af-4c0b-a74e-85238082a905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc01faed-a804-48e2-9279-de95c4b925f6",
        "cursor": {
          "ref": "3a68373f-5b1a-45cf-bce3-df530c991da2",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "01864b7b-0476-4827-8514-8d2c152a2f32"
        },
        "item": {
          "id": "fc01faed-a804-48e2-9279-de95c4b925f6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2067a1bc-41d5-4cc3-b1a8-942913f18e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3ebfcb-cd2c-4a91-8780-2ddc296850e4",
        "cursor": {
          "ref": "695f65d5-93c6-4387-9a9b-08ca53ace44b",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "bf650b93-687b-4f14-9c85-8c3b599ddbe5"
        },
        "item": {
          "id": "8b3ebfcb-cd2c-4a91-8780-2ddc296850e4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0f90aef1-c12a-4f47-bc80-456d4a7c65cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3035c7-c645-4757-803a-dc8f9e0c7026",
        "cursor": {
          "ref": "974d6c41-c68c-47aa-8047-b56047a12b01",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "2cd13037-14dd-4fa1-8c2c-b229653ff569"
        },
        "item": {
          "id": "4b3035c7-c645-4757-803a-dc8f9e0c7026",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "726214ff-c5ab-4002-98a6-503c68bc9463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e74aa11-aafd-48c8-8292-bfe94de45479",
        "cursor": {
          "ref": "13aca325-887e-4577-9fce-9ea91db57db5",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "135dd5cf-b0c1-4eda-b14a-3cffeae01ef6"
        },
        "item": {
          "id": "4e74aa11-aafd-48c8-8292-bfe94de45479",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c11a5cd4-3c39-4ae9-88d3-797679918099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab6331e-5bec-4d31-8e90-df1d383818dc",
        "cursor": {
          "ref": "0651bc46-fca1-4bf1-8211-2fec2d1a5a09",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "cdd736f4-39b0-4a77-92d8-ab2e7ed21f24"
        },
        "item": {
          "id": "cab6331e-5bec-4d31-8e90-df1d383818dc",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "06f564d0-7e26-4a00-8410-fc23435782c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1135bd9-de9c-4c51-94b6-de706b96b37b",
        "cursor": {
          "ref": "6fb67726-8633-4bbb-954d-d4ce29a2ef7e",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "9ebb4512-4dad-4f8e-b10d-0233fe65ac22"
        },
        "item": {
          "id": "a1135bd9-de9c-4c51-94b6-de706b96b37b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cd609786-8d37-4e0c-9178-a355bfcc1b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9ab702-3181-40d0-a0b8-5f552a7f1605",
        "cursor": {
          "ref": "26c9f948-1c13-4a47-90b6-7cc24b3a176d",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c161564e-4617-47b3-9400-60549b25c6ea"
        },
        "item": {
          "id": "bb9ab702-3181-40d0-a0b8-5f552a7f1605",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8abf78c8-a20c-4261-b538-172280f75c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033dda29-ed1f-4e7d-bbf9-066f679ac803",
        "cursor": {
          "ref": "d6e70c57-9012-45f9-ba38-911709e3011d",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a1151c30-bd61-4f5d-97ee-534f4bda044d"
        },
        "item": {
          "id": "033dda29-ed1f-4e7d-bbf9-066f679ac803",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2456dbb5-7a3c-416d-966b-0dcccb18b20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e523f77a-db1a-446c-9462-63cd60a22c2a",
        "cursor": {
          "ref": "c89b262e-e619-4463-ade2-1ffc337ad832",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ea591825-e5c6-41dc-a0ab-965a13ffb1f1"
        },
        "item": {
          "id": "e523f77a-db1a-446c-9462-63cd60a22c2a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bc99052d-eb2b-410e-83e2-4bdc60543e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6434a6c-995f-4974-b2fd-d2ba16aaf097",
        "cursor": {
          "ref": "da1f3089-1519-4c5c-9ab8-47a1f2c2d542",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6807272e-bdc8-496c-a3f8-267f5e414d42"
        },
        "item": {
          "id": "a6434a6c-995f-4974-b2fd-d2ba16aaf097",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2e9ad46c-8698-48f4-9c3f-ea6ee5b50357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a54f72-9fb6-4efe-b4ac-492b1407a41a",
        "cursor": {
          "ref": "ba540885-2fe3-42ef-add5-02a23106ca22",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "456bebfe-ae2e-46e4-aaf6-cee1d8a6bddf"
        },
        "item": {
          "id": "32a54f72-9fb6-4efe-b4ac-492b1407a41a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "22b91c3f-86da-446a-9cb6-7a7e3b8903ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c33daa9-79be-4f49-9b48-1e3d8e6d6171",
        "cursor": {
          "ref": "91e0a112-9208-4783-a0d5-4057fdebe14d",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "b5fe943d-a72f-4bea-8610-ace19ddfc8a7"
        },
        "item": {
          "id": "2c33daa9-79be-4f49-9b48-1e3d8e6d6171",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1268c92e-f225-4dea-b5fa-398cd20c8b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85f92fb-fad0-43f7-a1ea-4d59b5266c41",
        "cursor": {
          "ref": "55fe7054-872e-4194-8de8-a6fd0725aff8",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "cc05b2c1-8760-4711-8124-baa8d4b21e3b"
        },
        "item": {
          "id": "b85f92fb-fad0-43f7-a1ea-4d59b5266c41",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0d08d6f0-325a-4af3-97a0-b48ba37caad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acaf11c4-f944-4009-b884-c33d8e0b318d",
        "cursor": {
          "ref": "40db021d-cd59-4f0e-b89c-02168ead9d8a",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ef402542-1d0f-476e-aaca-23df381ef573"
        },
        "item": {
          "id": "acaf11c4-f944-4009-b884-c33d8e0b318d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "235c1d38-d071-487b-a0e5-ea61eeaf59ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d126c3-e789-41ff-828e-01d1407e04e7",
        "cursor": {
          "ref": "0c53d2df-d16d-4c63-8bb0-1c10a436f027",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a609257d-31c5-450a-af0f-5a2039a3d46a"
        },
        "item": {
          "id": "e6d126c3-e789-41ff-828e-01d1407e04e7",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a703c707-2768-411d-8d0d-5042ed57eb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb1c147-fd21-45a4-a6b5-c7f0cded820d",
        "cursor": {
          "ref": "346086af-e80b-47c4-9bb2-b93f1ffffc1f",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "f94af443-9d28-4020-a897-462fe5c9e2e0"
        },
        "item": {
          "id": "3cb1c147-fd21-45a4-a6b5-c7f0cded820d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "38d03029-1717-4bac-bb63-e67df9ffadf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c83c69-89aa-4090-9154-418995b5c3da",
        "cursor": {
          "ref": "fb41eb51-a00a-4c90-b65c-f83da9b654ff",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d261e05d-3cff-48bc-a95d-146b82e0a19f"
        },
        "item": {
          "id": "16c83c69-89aa-4090-9154-418995b5c3da",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1994124c-b084-436b-b635-36ea303a2aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2f112e-f121-4bd1-886c-8112f26a8163",
        "cursor": {
          "ref": "bbc56d56-c213-46b4-81c9-38ed87b03e0a",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "976c9659-3572-4299-8bd2-cc1cf553f0e3"
        },
        "item": {
          "id": "2c2f112e-f121-4bd1-886c-8112f26a8163",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "83f83975-588d-4240-9ef9-5003eaa9cb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7465f4e-2130-49c6-abf1-fc573a634004",
        "cursor": {
          "ref": "081363d5-3306-4575-9195-34bad12ad237",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "02a4fbcc-fa5d-47a6-b501-a512a69466d9"
        },
        "item": {
          "id": "f7465f4e-2130-49c6-abf1-fc573a634004",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c930fd51-89da-41a8-8ec4-d59aca440ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a5c284-8d63-43de-b4d0-651e1d8f9b41",
        "cursor": {
          "ref": "04173b9f-3163-4742-b52e-6be2cc4d0503",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ebedb613-326b-48ca-b58c-4e7bd6b28abb"
        },
        "item": {
          "id": "42a5c284-8d63-43de-b4d0-651e1d8f9b41",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9c326e88-9bfb-4991-a220-9ba6a169638e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18097790-95ea-4f79-9eea-9dac0c44013f",
        "cursor": {
          "ref": "e46bba54-d7b9-41ae-a458-87df831778ce",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "0d12e3e9-03ed-4e67-bcaf-649a30d0792f"
        },
        "item": {
          "id": "18097790-95ea-4f79-9eea-9dac0c44013f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "743fdacc-d26c-4d78-a16e-95f73e0a0483",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3919e46-0606-481b-9ca6-fe1cabcda59a",
        "cursor": {
          "ref": "22f9609f-03d8-42bb-844b-72f847134c53",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "f6c1897f-1ed0-4e24-9502-d171f5e0ad4f"
        },
        "item": {
          "id": "d3919e46-0606-481b-9ca6-fe1cabcda59a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3080a6dc-8ffe-434e-9919-451586455a57",
          "status": "OK",
          "code": 200,
          "responseTime": 2618,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "19cadf9a-6897-49fa-8101-fc13a3cbad74",
        "cursor": {
          "ref": "402bf3f3-1864-4a90-aadc-280bff586b9b",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a09edfd5-2e22-4bc9-aa9f-ec79ae0ab749"
        },
        "item": {
          "id": "19cadf9a-6897-49fa-8101-fc13a3cbad74",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f1ad70d5-c941-48c8-94a0-466819a2683a",
          "status": "OK",
          "code": 200,
          "responseTime": 2775,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae53add-1480-4904-aa18-06cfd18f33c0",
        "cursor": {
          "ref": "52c17bb1-389b-4a42-b7b9-449b88887e95",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a3af0d41-c6b1-455c-abc7-bbde17a38bd6"
        },
        "item": {
          "id": "cae53add-1480-4904-aa18-06cfd18f33c0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "95fdd344-9b05-4564-8ba3-1bb9f27920ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae53add-1480-4904-aa18-06cfd18f33c0",
        "cursor": {
          "ref": "52c17bb1-389b-4a42-b7b9-449b88887e95",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a3af0d41-c6b1-455c-abc7-bbde17a38bd6"
        },
        "item": {
          "id": "cae53add-1480-4904-aa18-06cfd18f33c0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "95fdd344-9b05-4564-8ba3-1bb9f27920ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326f6dca-2c65-46bc-b4f0-2cd669181892",
        "cursor": {
          "ref": "ec641377-5799-4c24-b604-966ac4a1db7e",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "8ab23d33-b5ae-4f27-8093-7c9e3bb51a78"
        },
        "item": {
          "id": "326f6dca-2c65-46bc-b4f0-2cd669181892",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6069782a-4dac-4bc2-abec-5e451f6c36b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb61330-c7df-4e95-911e-a1fce2aef96c",
        "cursor": {
          "ref": "c9642330-5f4b-43c3-a7f0-d7c7acaf408d",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "e1fd7546-7e53-4aaf-89ee-934615769454"
        },
        "item": {
          "id": "edb61330-c7df-4e95-911e-a1fce2aef96c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "24f0f821-c577-440a-85d0-72d6191cde16",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}