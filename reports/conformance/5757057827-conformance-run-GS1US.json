{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "af79d507-d1f2-44bb-9ee3-bef980230015",
        "name": "Clear Cache",
        "item": [
          {
            "id": "02d5f70e-1f8b-442f-87cf-939e71ccf410",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "487d682f-5dc3-42a9-9a78-42e9f2ce6815",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b0e9f320-eea1-4b6a-895a-eef68a00fb90"
                }
              }
            ]
          },
          {
            "id": "14546a5a-f62f-4b64-851f-55880425c151",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ce8dfcff-750f-4f21-901c-770419a86f9b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "199725f0-9d41-4651-93b6-24d318738a01"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9ea67b58-acfc-41e9-bd86-47620e80e589",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "82b22be6-530b-4598-bbb9-b9a138d64774",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4f3997c7-b5bb-4f4b-b706-059989d73f44",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8733ed4d-72eb-4deb-a568-52f378a051e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b69b8e49-ec24-4c2e-aa36-83a75cd6f772"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fa694621-6750-4322-8362-86e7e7e009b9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "296c1511-fa4d-49af-bcc5-ad344f8dc0af"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2dc95554-f766-4d0d-898e-f7003c1e4746",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "117789ec-cf48-48f7-a3a4-334ffbfcb5d5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e26a89c5-dfa8-4aa9-8ae0-3aa2e1784eac",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d1eaead8-16ea-49cb-a601-ede7b0e4d0f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57f9ab75-cfde-4aa5-bc54-26b97c0ca472",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "244441c0-30a1-4807-bd48-5d867a1596ec"
            }
          }
        ]
      },
      {
        "id": "b3d23e19-cf65-439a-b4f0-a0cdf13c0651",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ece62944-95ba-4b75-a9b7-33548cacfde3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea3ad18f-301b-4edb-9a48-808c3988a927",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fbd4acaf-8245-4995-bb39-b5931c686aba",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf458ce-c4f6-4278-8dd0-639269b28632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89e56e54-821d-4d86-87ae-85570adff269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7ddee4-6e71-4e2f-8099-e50c537df11e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38fa963-2f51-4659-9ab8-71e46cba2a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4dcc1eee-200e-4940-afeb-4d8424ce039f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfff26e8-7e34-48b5-b65a-29f497c2d207",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4d4a71-371d-4af7-a414-33dc8b2731d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "661111ec-8db9-4364-a055-f05645a7b852"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "89a0538a-358c-44e1-ba9e-54843f086434",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "701fb08a-3b5f-4815-b3ea-105cd69c5cda",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981a1769-4663-4d05-b11f-60391eec39f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a8f1385-0a56-4311-b9f9-1695f034a6ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9d3db4-7088-467c-ad54-aeb1cd117d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b68784e6-c293-418b-be46-c4a456241b9f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a824e030-5c18-43b8-95e5-ce8fcdf0c7e4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "41a64515-88a9-4787-9737-49a9cc1366ba",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5b58a53-e900-4354-85a3-43d7cb033a35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a851e7c3-45ef-4dc0-a16a-dd9c0e6092b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "02d8ac9e-0c46-4691-8b0d-01badb04b2b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "cc8e9463-f923-4d59-9f9d-1a743b82eb73"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a51b6206-8ccb-4940-b2a1-83512f5a5bf6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8223468b-8c88-4bd9-a167-4718ded61b16"
            }
          }
        ]
      },
      {
        "id": "7fb59963-bb8d-41af-8f2b-b0a5e61bebb3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "37e520c5-122b-4896-a297-06f4083d94d6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca5af103-0afd-4b54-8ce1-6cba20ba9597",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "705dad8f-6a3c-4add-a828-8a2b445d6642",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a1ee20-0c6c-41c3-b84f-a149956d0a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c357baf-24fd-4797-b8f9-761b52623e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d653ea1-1e3b-4f12-9330-cd45e919b294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9f0e686-2204-4e35-b3af-fb904608bc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb61d83-b6d8-4603-bc4f-dd863c49f816",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220b57d8-1394-42a3-a0c7-21dfc5daaddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95dbaea0-cb41-428a-b0d5-e15be48c452b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444bf013-a8dd-4215-a91e-b19f4c10a56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2eb3e973-8096-4176-abc5-758bbee711c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcb6c50-00cd-41de-903a-a956d5d10df1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d763bb9c-13cb-4704-be1b-0b068b2453aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1718681-756f-4d9d-89fa-70703467ecf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778e3d23-a390-4f60-a13f-cb616e674cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f364adda-946e-46cf-9c90-c06b54738df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465d7f1f-713b-40e2-a0ed-d7793976d8db",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a14a7d1-39fb-4d27-8d7d-9a8732c964df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c09702-92a9-4106-828a-2d812fefcbfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6691429d-b885-4bb4-b20c-86c3fb7200e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16fe4a29-dea0-414f-aa0d-ceb55958a78f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18a3512-e1a3-4144-bf3c-f68a61f914ec",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91dd66b-4d52-4ee6-88fb-741179ffd628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713d8968-5398-49bf-90a9-d6d2e0a52edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa53cc2-7bed-4060-88b8-7dc005008a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc9cceb8-2867-4922-85f2-6d6e04409ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcae7877-b362-46d6-8ef7-07862fe30b11",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "393c91ee-aef0-4584-acff-67b7dfb5d11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "764d37e8-87e5-4fab-9d8c-37afdae8b8ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f3f4bd-f19b-49da-89d3-ec366ed81309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1946e04-5042-4231-bbe5-ad245f72db73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1d0e90-02b6-496e-b9e5-5f5801b6e029",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e8f3de-dd3c-4242-92c1-3523a52c5046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ebe26f-ba0d-49bb-896c-015539689781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a55801-664d-4ee2-ae3e-c3235bc9ad75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f37209a5-fd20-4b23-abf7-a2594b9422b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207b049d-61b9-450e-ae91-7364c00bb3c7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a23291-902c-4214-9107-ef4160f71159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac173f0-6a8d-46f4-9ff2-3a1ebfbf175b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d32acc5-6ee2-4e8c-8800-e13f10a69371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1338d7c6-81df-450b-aab8-c36b40b7bc45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80214b84-65ca-4b25-bee2-0f4ba353a6c9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a11a44-3d6f-4d36-81e0-2991a0c6d8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b8135df-6121-487c-af1d-5e19ce648169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1cd1a9c-d00b-45af-8f8f-279c32dd9152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9de8de9-5005-4112-83d0-68e813611b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e64acd-7800-4a44-997b-9ca015e1f78e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7efd277a-9473-4271-a744-5e7af83475ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6e94db-df66-4d82-aa75-769fc37e7f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b401719-df40-49a3-aeef-7c7abc4c6029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a5db4e5-e87b-46be-ae67-b68ff1e1a1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a053a83d-d310-4eb6-b9cc-3246c03ff352",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efef65ac-519a-4788-acf6-e38d6c647efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a878c407-5d11-455f-943d-755e51820893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bfd865-c07d-45b7-a0c0-61485e54f22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2f57b5a-f917-4b2c-9b62-f71f4c789d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e224e8af-f456-47a1-914e-b6ed38b66c7b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5312f04c-4153-4c41-8e1c-1f0c24d87208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a259c7b2-90e8-4121-985f-0d78aea2dd65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3580b9ef-5d22-4b33-8ab6-b6565620766e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe646a70-abc5-4f28-a68f-7bebc4117ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1fcc85-d635-4425-8868-b5db1e2aa3e2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13fc738b-023e-4575-8f8b-0d08fb94e0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a63940bb-142f-493c-9d59-bf17780f905f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbb29bf-5f2f-4cac-aebe-42735323aee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfc597b2-8b50-465a-8b59-f8f1306fdd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22837e2-84b4-4a32-8d0d-96b155affd6b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6f9e4c-b9e5-47b0-8670-a12fa1cc7da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b38d62-eb09-4c50-a8a2-78b7e58e652c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367b4329-b0e5-4c15-ac63-9e784bf0139f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "445d96f0-5eb6-4547-9995-b58df242a54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab543b4-1d21-484d-b632-2ba28e4e6363",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99278fe6-09e8-401f-b8f9-8e5036774ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9034e8a4-4acf-49f5-ba68-d3b3c6394030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953b9a4a-d07f-4505-8d24-32b8cd1a90ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c2634ce-d976-4bf8-8f7f-71b7cbc6d197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d257e6d-6e62-4817-bd54-4de314726b0e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d12c80c-e7d2-43cb-916e-cb839b96da7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73411e4-c68a-4e3d-a480-f2ec5e151372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd78cf6c-d37d-4f99-8e62-2a0d6dc50c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20accf11-c712-4ca7-b639-250aea059cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e233edb-60eb-438b-8b2f-ca45bcc87307",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1cc6d02-de89-41f1-9f60-c4c05cbe82d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c5a138-31e4-434c-86cb-c6c5435296c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd23383f-ccd8-4bd8-af3b-805c23117917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f12b77b4-633c-4b74-bc79-ff380a227023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b661f15-03c2-4c81-bc91-a98d12923717",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83af4983-2811-47cf-9cf9-5d9139ab1ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054311d4-1938-4ea9-9be7-8182b25e73d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79ceb7f-1663-4a39-97e9-9bd11bc4976b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5265099c-23ff-4afb-8f5c-157e567d38c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2bc94b-3d39-47b5-8a1e-88fde95152a9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c7c0a2-4e8d-4b54-92b2-a6207514f016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85e9f08-4fbd-4acc-85b4-5f5d2ef03237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8667e8-5e08-4872-9321-64c9e5ee421c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc0b1f2-4023-42b8-9cfe-d2980a260512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9bbfb93-4cd5-4a15-8041-fdd6448c60b2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82609304-3d63-435e-878a-e76b50bb016e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aca3310-3ce1-48ec-8e8e-4c1a0e2b0e62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188bea92-0dc4-405e-ae9d-490a350cafc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b22a24b-2444-4bc8-8c36-a7ce39b22109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669db718-4a59-482f-b808-0705140c5599",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d5dc9e-e82b-4e19-a475-7fdbec08f67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b289d42a-b4b4-4c1a-88aa-e8001a799b15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0827ee9b-c614-4de3-9c68-8c94e4f3b254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "274ae47e-3512-405f-9f01-a04c8f7c6eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67879c16-7f85-4fc3-833b-d88387235da1",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa6259e-2c5c-4bb2-b71a-5a991d36fbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ce14f7-e810-40f5-bec7-1475982cbeb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb402d5c-c591-4de9-ac73-96c8bf3af8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f7b0cd7-5ef3-4eec-a1dd-cd6de8ea8dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2dc7811-80ef-45a5-8e8e-e0d74aad7aa8",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a3a110-1449-476b-8b8b-f8f94dc68024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d437902-e59d-433f-92bf-9046d317f913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a982c653-f043-4466-ad96-056b60469e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1611a16-c805-4d76-af34-a0787610022f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7067e968-7641-4b5c-a370-0d17aec06a48",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda021dd-42db-4e57-87f1-8a26dd9f2bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08a85d9-4ffb-441b-a77b-15ddd1672e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf958d9-c1e3-4c50-8568-97839aa8bf92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb81f66c-6833-4c69-a968-7e280e4bd6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5327f160-9950-43f8-840f-8f64a8f3eeb1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d7ceb8-db94-4bc0-a8dd-9e7936f0c313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19ab2c6-15cb-4dab-be93-1d1e8c5f46a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c70570f-97a7-4ad4-a13e-7f2dde9441ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b2520bd-6e83-410c-ace3-39a37de20755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b773c9-6136-4a70-bf94-394c47a745be",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbfbda9-bf33-4dfe-bcb7-3b96963122d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08472b2-0ac2-4cf2-bdf2-cce57b7c8402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ed6e82-bf1e-4114-842f-ad6fba93b74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7df86bfa-64f4-4add-a809-d06085066c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ad22c3-46f0-4c8a-9406-86f0f60ad5af",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73be5e75-31f2-40b0-ab5b-dfacdc4a4dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28de4588-a079-4dce-a1cd-3522dbaeaab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ab070d-c0f7-4be7-8fbb-b1b44fdf5aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "946e07d7-0001-440a-8934-6d39143531b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132c89dc-84ff-4be7-9edc-5da163360867",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5858b7b7-1edb-41e7-bc3c-0ce057f6ebff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b5cbdbc-aa7a-4b35-b2b6-1609a7d696d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cf0849-1ff0-4b4b-8d3d-0bf257eb1eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7070223b-73ce-429f-a01a-06278d5f89b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3d9e10-c925-4c28-8ea6-6323e1063aaf",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716da8a5-b248-4c5a-8721-cff9fa9e8488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efcbe6da-928e-42ed-895f-18748e48230d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23879c05-67fa-4022-8bad-ddc6ae5d8bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "06894646-5a9b-4b66-861a-da4cf252830d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e134458c-a545-4bc9-a053-47f0c1669cc2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e402e77-b1c1-4590-887a-10a66b3a0532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5cfdc0-e3ea-4aff-b4cf-0a46bcef1a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0c97c5-f8da-444a-89b5-42e832c14f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8f84262-bc18-4ddd-be0e-baec43b66964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85029f4-69f3-49cf-928b-93f4b1320ef3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95200b3-dfa2-4549-bdc5-78d269d0c4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1af8d63f-a4a6-4f36-a6af-30aa1de891d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78fb2cc8-6dff-4c50-a85b-1c8e0c2d8395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a09b2769-9b79-4382-8f9a-b72ae90687c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1cefc54-d467-452e-8352-b1267fa6b537",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8a2ddd-48d8-4615-a023-c1f8184c88d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1653187-2b49-4901-9518-9264ffaa94af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d5fffc-f49c-4b42-91ba-d5c0338d1179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b02bcf03-14a4-467d-bbe2-f834fee5e275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2172964-8206-4b86-a7f2-a213fcfc86d7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc761e5-4aaa-4880-9708-306ba3ca5c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f152f40b-ee76-4539-8376-d840e56ec11c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d1045a-f5b5-4528-9157-aa9b12476995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f0947ce-b90e-4056-8619-b2813951fe00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8cfd54-f079-41a4-bd50-ddda9b9c5c6f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ca876a-7a88-415b-9184-8887f473ca36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62bf8d13-484c-4420-8554-2513a0bc825e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7bf4b57-a8e2-4674-b38f-01f29e918ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c1b85f3-90f0-4a7b-a002-3fc525cd91b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86a66af-166e-448d-9209-e5eb22dd3ba0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7071d069-07b6-41c9-b4d1-7c14202d3188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2cac948-7132-43c6-b2c4-c63aa430beaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa897e4-9526-4497-8e20-5ba9b9cc6e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b8cfc71f-52a5-4324-9c5b-416770ca553f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fb399a-b037-4db7-9911-ec80bac1287a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc50c30-2833-4eee-910f-d78b6934ff27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa4486b8-ea4c-43f9-97eb-b7c3258674be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ca1a78-4fb9-486d-a25a-eb886f36987e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bffdf9eb-e65c-4cde-96d4-e4d4f2536aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae461a0e-8c65-4044-b139-5334cbe1327c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc9c8ff-0b51-491c-bf1f-85b90fa9806f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2c484b8-6052-4466-b12a-cf8da0ef6224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42aa9d2-838c-4b98-a5b3-706e69b5c5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3fa557f-e38f-4b65-81fc-e63aed7696e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8331ab5c-08af-41f1-9e55-9fa5125eb176",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51a5e24-459a-4f2c-a346-32a6c52b3718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df9604b-4de7-4d72-a88f-5e4ac45f2110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6f2155-2d0e-4239-872e-5b4ae4466ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb3ada2-2ce3-4a36-b7be-1b53a066908f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88f4cd2-e739-45b6-ad44-45f63137f671",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7848a34-d7ce-453a-a154-d67b40a21b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e306d50-c034-458c-a140-457ea63bf601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c89fa0-6cc7-4084-831e-36c7a4dd6dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d68ebc6c-a780-494f-bca0-65eda8a69078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a100ea7-e801-4f1d-8310-6c3acb4453ea",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df26993c-5532-4827-b711-23d34af90ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b5a414-39d9-4629-8ab1-42514b90cac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bca48b-2e43-467a-b69e-40dada6c63d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a6a065d-a68c-4cbc-be7b-b1f9c9750215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f21a8d9-e1de-45cf-a721-3a748196385c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c83d8a-ad41-4bff-b3ec-af5958edb6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cbfc815-0b5e-4130-b438-47ba8fdea54e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad5a8e2-293d-431e-86bd-cd8ef1c2cd9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "31953d06-c6c4-4a78-bb00-2d79aa658931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39bc2df6-81cb-4784-902b-d149a739e002",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9c263b-074c-40d6-80ca-e60349ccc28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af51081b-3d8e-4375-83aa-189a5a8fad2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1cf99be-26cb-44d9-ac4c-cf63123425a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b3293180-fabe-4877-942c-837f69174320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba09861c-ebe5-4040-97e6-6f23dcc041ad",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5caa0570-f0af-4c10-9de7-84fc45376c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2772355-4945-40b0-be62-47f6a3bf4012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5e930d-f9b8-416b-a5e4-a9c32cb1cf86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "44b3200c-2a9d-4c24-ab8e-27ab84299f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07304c07-e89b-4639-989e-d911599a2683",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa9ff0c-47dd-42e5-861d-d50f39845fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d5ce8af-796b-4612-bc82-ee5858d2d4b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b08dcdf-eb66-4eba-ba73-3a95c0865506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b000e06-50f1-4fae-a485-4af12c4ee0b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8754ad-42e8-42fe-a895-31621f66e8a5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29223cfe-fa02-4d44-b054-479e926fa49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26713fb3-99cb-4981-bccb-c7e7e972f9a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cded229d-5873-4cf3-b035-9726a7727d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e215619f-6c04-44fe-a7d1-95902ed3778c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9460f9bb-ea69-44e5-b009-9ce9c3692715",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1e275e-ca61-42b9-8d8a-65cf432876ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f87b5d-c6b9-48dd-b085-f103e4060c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe4d84a-0fe9-4141-ae0d-28d855df3bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19e75c55-b4d4-4d79-b1a9-08a1dd5d39b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b816299-2315-4b2f-bd01-6e4b5fefcfd6",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8d2c4a-2189-4254-9de1-d18049c9af78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca437e1c-cb21-4f9b-8e01-6a472c7d931f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad5d161-2fb5-47ad-a883-3b3cc063dcf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad9f9995-cdab-4e6e-b41b-895b825820a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5879a093-48b5-47cd-96a0-d3676d57e604",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d67401-f3f8-4784-a7cb-ba7964473476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4773678-b870-4240-ae20-54d2db636c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833a5539-9d60-4cde-b1a2-727adfd047ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "196554e9-5434-4e77-932a-5e2bf45d358a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de647e01-021f-4092-8292-5ce6458a7cb4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2de0dc-0915-4673-804c-34befcac0433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38bc1b4-9942-4807-94cc-22e631d114f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f133b0-1e1e-48a3-8178-f2eaf62baa29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "377ab45c-f97c-408f-b78a-26e45919b29f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d326e6-63bf-428b-b73a-9a71f1a57002",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0105a63-c55e-4b8d-8e8a-a9626714b32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9fb84c-a171-429f-ab38-a3b5e089b8b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3d5a05-18e5-4664-a659-17ba64e5650a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0acfb0c1-7cf5-4d3f-b4ee-e2ae4e64a88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a4733b-4b54-489f-a58e-1010b4899067",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdfe924-608b-4677-bd02-4ade0821c5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbbc1abf-d420-4156-8e23-601a91ebf358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ead4e9-1b1b-4056-b15f-9c3b1ea28be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6af174b8-886e-4547-abaa-9bdd06f67123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a652e3-c3e3-473e-bf84-4c6e233205ba",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8579d5c2-2824-4748-bf2a-7730b2372c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c153ef90-9e80-4b41-8fc2-2bd0a9426d3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73dafa4-b011-4410-bd32-b4b910bfdc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9f630cc-2a49-41c7-ba43-b22d58c712e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9368c224-950a-4645-b771-85805b0a3f9c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63996ed-83f7-4211-b9f4-dc323afe98ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8c8b557-3797-4412-9d27-950057331cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d439d41-26a9-4386-9219-b43153d58685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "545de88b-2b68-4e8b-a707-f2cb936ecdf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40350820-5197-44d3-9167-6338c899cb7c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b1f03b-7474-4f33-a9d4-0f812e7ec640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c46c28a7-d05c-49e2-bdb2-cb85a41e413f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77effb3-9d2f-4a31-b7e3-2e4930a4c966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "552ba1ef-2629-4056-aa6d-ca26f0ab634f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46a263d-82d7-4c55-a8dc-792d287fd92e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69ef6cb-70e1-4432-80ea-02631424afcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26080edc-73c4-4df4-b795-3422aa16759d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c42661-7561-48b9-9362-59d24747b5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5febabd-0437-4d75-91b3-887e00e4749d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04685f81-af5e-45de-b024-78014527ddac",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183977c4-3953-4df2-b97e-b99e568b4445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1b96d5-b9d9-4a5f-9af8-27515a8f5299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244e1a38-72fd-4635-a5dc-f1e0410fc9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a20fdf23-670f-41fe-900b-cb0e6f02dc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6348cba-2bac-4668-b703-ab63a49bed75",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3787629-8331-4c03-993e-04f94872b7eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4a8eceb-7c15-480d-8bce-426b68dc5713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb95e6e-18b4-40dc-bf4b-a5c69de4f8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa241067-734c-4903-921e-0f8a5fba353c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c301277a-bab5-4b6a-b369-07e6e99b10aa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675ef5b3-ba4b-4200-8327-08dca5663026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebfd3a68-2241-413e-9f82-3cf10b7ab3f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9c4ab9-4435-4122-8725-6f46a59db8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb7aeefc-b086-4b03-899d-c177e4a0907d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5121839-db0f-47e0-a6bf-ee6e2699f46f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f83c67-9b2c-491f-990c-b07aefc82f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82dbdc29-0cef-4ca1-b406-f22c6a0af993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82df6d4c-33aa-4cb7-8109-3781677fb94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f37bec-4ed3-4a4f-82a1-a8b6a5b8953f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9e6bac-59f3-4858-bdb3-111f3bc1a8f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824d9663-3244-4378-8568-68c68d4bbf4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a55fb80a-daa4-411b-ae3a-8fee03578754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876d15f6-075b-43a9-936a-fcccadf16f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9fb39ef-a676-4dc6-a0b2-cd0aa628eed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce6a5ee-d3f3-450d-bd7b-e712a824b326",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b347fd1d-4926-4330-840d-22e65455d8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "540e59dd-ab82-4b31-8fbf-b54d21ab5308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f4bccb-5b6e-4ca6-9834-f299454314fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a41439b-aa04-4214-919b-66215b8f70ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479686f4-ba43-45a8-8a19-e59d1da92a02",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e50c4da-8885-4d7f-b89e-77f8f6f84fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7651639-dbd3-4c2c-af83-116832becab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266c0171-1be9-4754-968d-db79b6d6eaf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c1af41-3ffd-46eb-9782-5196fa745dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd059c6-27de-4cdb-a2cd-ee133c4a1862",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c197da5-2252-46c4-b536-320f8b25ca36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc0ff4c7-62f5-4664-a50b-2b1eea3b7021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba407ff-e77b-4369-a9c8-7e47fa1fde0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6813908-1ebe-4c5f-acb9-7ef070217879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e1617e-8227-4c1b-a02f-882d10ac3ff0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "661e90d3-4b54-4076-bb6e-c0a436388aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5210eeb-2aaf-4693-a772-8deb02c509fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc4affb-7cfb-4e2c-8b4b-ab462aceeb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60885641-135d-4621-beb5-ce45365fd6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7922b3e-2370-4dde-879d-d44ab6724e3b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba6a67c-93bc-4f86-a1bb-f2101b5fffd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6628d92c-6749-45c7-8d2d-35d4c59c5f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5bf8316-0674-46ff-9b7f-2338002cfdea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2a5256b-68e6-4990-b0a1-65bc4bfdbd35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3d0706-5c01-4bbf-85ab-2adae551425c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c8cc35-0bb9-4aa9-adbc-0581f0fa73cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "694c0e02-26ff-4ba0-80cc-3e960b707653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e6b031-e8b7-4c79-987b-2d47833153b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb6d5ba-8fbb-4824-90e6-b1e9edfd78e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc04b9ce-8b83-4501-9f2a-6a027bacf56b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f57c9a-e378-43fe-be7f-d0ea919d8906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58e9b5f-d7c4-4e4a-9396-2908bd69851a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0569c07-7f3c-4f37-9403-3d4d41af8733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a96910cf-bca5-43cd-a8c1-9a790e7c15a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062cddd3-edca-455e-8e39-fa5cd06b022d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa56629-7b8a-4792-991a-8c4b5c74257f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e0599e-42c1-49c8-ad64-be5372e2d4ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01cf25f-27f6-428c-8faa-98752add7ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a2c0f2c-e7cf-4a25-bacf-55effe61b350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd658e57-ddad-423d-b2ec-a68e614573cc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5380a736-2300-489d-aacc-ea154d640a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f6fd9c5-47fa-4fac-8e07-452e76854dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "844e8eb1-a19a-4447-8120-11eabed92ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "10cabf8d-a4ed-455b-9f06-65410d534a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf30b24-1a64-46f9-9345-1d3dcd77fba5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87589c57-42fa-4255-8ded-59c87f94a90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9597af3-c5ef-4649-8497-20c20fc4e96d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd4a73b-f87f-46a5-be64-79e000c2d685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46de1dbb-d8e5-432f-b687-95df2448bbd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aceaa08e-7388-484b-a2f6-7c7d2e5c7a16",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b590ab95-3db9-4938-ba31-61623d365336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da5c13b-c9dd-4220-b3aa-fa86aa90483c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047a0e09-15e5-4d8e-83c3-bd53b36a8590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7b8f3d7-8091-4d54-892c-3ba60bc7415e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05011ff-3da8-4e21-a918-512c087eee96",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0c38e9-dd48-4563-b64e-411eefeec0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c213a8-f741-41eb-8162-0016599b633d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87a6cd1-283b-48ae-abcb-63e8ebc80c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a44eca1-19cb-467b-a055-59e035265712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d6803b-8dd0-4b3d-9c16-c60e8c9238dd",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b11d9c-e1f8-4a42-bace-6634a5d71bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c7747c-ce57-4366-a966-e00330b7b5d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0ccee4-9a1c-4e3c-8686-d694c3559f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e415085f-748a-4aeb-a955-e296dd1a8f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41982b9a-8be4-4d35-96ae-82b2c6c4d582",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dafbf48-7deb-4c3e-acd5-70f09ffecf2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "375efac3-5b61-476d-a8a5-f8518df66cfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82aeb5f3-7299-42c9-9bf2-25b70bcf1d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dba9e886-8887-4576-845e-ed0f2e7a5513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6eeb42-84ab-4406-bdf7-7a15354195e7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6137b3c2-e94b-4632-83d1-c353540fae9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51ef7ab-5c49-4d21-88c2-34dc9495cd25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f6ba59-d326-4f11-8726-04065205886d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "041bb677-fcfd-4e95-a778-d7462f3fbd94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d29e023-9f9b-4af8-8c0d-1785b374c48b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f4d25a-de2b-494c-b3b7-ca6653bae718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abddefc4-2935-4f89-b47a-603bb330f152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f296b4-1c5b-454b-93ed-8f1bd2498ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cd4c1a6-90b2-4320-86df-d5a0e0daa7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26186bf-1de8-4855-9226-93892fd0bf1d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1143b745-4b68-4024-b382-1ab1d1c20a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f061cb-6a58-4257-9212-3c87b47373b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d027786-09b1-41bf-84e4-8e169479d51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "353e1d52-34ee-423d-ac0f-14177db32a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b9c772-62ed-4c88-a715-17f93d9ef57c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a387b8-a593-46d9-b8cf-e9a2f8cbefde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b97a882-b559-4c32-9d2d-0933f889c882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8855f38-aa3a-41f5-abc3-48ab3918eec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e23ff26-82ef-47ae-ad13-aae4a2f86472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0e4d70-06ad-4710-b216-dae73a9aadca",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58e0890-78e8-4a11-9b87-c288656f1795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33fb95b1-f8f4-437d-b142-35db9750c003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72324555-a095-4ee0-b67a-50bd11c4e477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8644874-5e5e-41f2-a80a-4d830d612713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816c425b-907a-4f43-b75a-d2dd8c561050",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7275522-e6ac-4442-ba3e-97b1c9196055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12140464-ae93-4400-a547-b2ce02c949e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2db6138-aa64-428d-a3c7-1f6df37d468c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "abedc920-0d82-4d0e-aad5-3753cebe3bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f1978c-b3b0-4e71-b730-a4767864cc25",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1a7c74-81c8-4b9e-a853-ffd8a77f3d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec610fe-1bf1-40cb-b0f5-9b0ce8693417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8dc5d6-a031-4818-bfcf-fc5e4abbac5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "38c658d5-9695-413b-9930-b22bd118c5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f0911c-57ac-4c38-ba92-3fe1338258c1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e990167-71e2-4a7d-b94e-71d55e294fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f124a5-ff3c-4dce-85a8-611aa03a43a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4cc0b8c-c557-4051-ae5d-051dbb5e2017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c20beb81-9bfe-4a25-9cfc-32062015ef98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7747d940-eb7e-4069-a3ce-fc8c5a596d27",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55b57fb-6e8c-4aa4-a3a6-fd658ecf971d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c16fd805-5577-4b14-a5e9-183380b6b80e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0660e31a-3f4f-436d-a670-048b6f4c40bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0221a827-9729-447b-9b97-0bbf2220040a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b51919-b27f-42f9-a0b1-57feb3cfb14e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9117f47-a0e5-4e24-902d-873cbe883dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c001477-eea2-41e9-93d7-2432d9a9aaf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd1d1d6-7b6e-42f4-980f-f1865e59e45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "afa1d16b-d996-4ded-9593-70f576f03345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84069482-4a7e-4afb-9bbb-c3d69a93d15a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f25c03-af0d-40cf-bad7-1762c814d6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b9c1115-3183-4a93-8c00-c6a09918aba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554fe20c-d222-40e1-9d42-d9c69928aebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b2607d3f-0dfd-4bfc-ba4b-89d87039c42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0a0a7d-7099-4c5a-9959-678439e7307a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e300aff4-f26b-4142-bfbe-0e865eb78c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b1877ca-1bb0-4b0a-a3cc-48f30693e629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c507a0d7-1571-4f93-8223-e69697c152f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "82139826-9eed-4790-b717-cdca677918f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6bb6a8-7d30-42f3-943f-00d21f905515",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523bf209-7360-486e-a89a-084954e999bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90814c41-e212-4a40-970b-8b69933d2b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf75690-d0e4-4fc8-9bdb-ab4c989b460a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e39a57aa-1000-4273-a0ab-8f831d77ff9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e737437-6337-49a7-9c8d-ad14ef76e368",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2babe2-c222-4c90-bbf7-3b29824525bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "148dd366-2b10-4982-855f-c8e9ee3c8b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947d31a4-6877-433d-b296-88cfffd46a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5cf8ca6-98f2-4b6e-83f1-1d2f274a2523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4a123c-c106-4bb7-a47f-d0580317f601",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70df1860-ba2a-40c6-8508-2a9bdbc231fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d18bb69-16e2-460f-908a-9c3610006b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7580bc8-dc42-44b3-b1e8-7e295d3f8a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec6d0385-18ec-490a-a20f-f58e71d7f25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec07609-4979-4b5c-a241-66b2b5ac23b8",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb67b40-aa54-4917-8e38-9c1bc206b751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9556da64-74a6-4b8b-97f9-d08cbce9c980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86dbbc33-6a59-42ee-ac64-6e75a818b1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "86c0df75-bcf2-475a-834e-eb8f24642e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91181df8-0353-4f7a-89dd-a6652edf8123",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6bd616d-d3fc-4f0a-b221-e0698f033f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0943adb-f423-4e98-9555-824d34a29a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2854c0b8-d06f-4c9c-b3ed-d7d6c1f5a0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "65980b1e-4445-4942-8528-1f8da7458b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e226fb0-7174-488a-a9ad-9c4f9701e566",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f275d8-d2a0-4473-889f-ac50051f7c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "318fac24-6a94-4b62-8eb3-f40f743ea54a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead136a4-de2e-40bb-b699-1b397010ca38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d989e2d8-53d0-4cfe-91d4-ec1af209656d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "426fd5bd-e123-4d4b-ab07-6dea7b93235e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15eb744f-f2be-44e5-bb5c-062dfb8c3bdd",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0a8499-cf9f-40e0-b26d-8ccd56b23d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f70cc3b2-9e6b-407c-bf59-9e1c71c8dae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d991d6b-a8e7-44c0-b8e7-6d3a42c2f2bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3721def4-3174-4c20-9621-639bb2390c48"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54a23115-574b-4100-8a4a-a975709cc371",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b31628ba-3c91-444f-bce6-b9929dfc5827"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd5e9907-dc54-447c-b46d-4d4265415a60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eca148c7-9f47-439a-acc7-68332bf752dc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bc6b6099-90f2-4a62-a9b4-f4ef89940b3d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "af36040b-338b-4683-8208-abc952399acc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8db1d23d-ff2c-4e67-83c0-243957c8576c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "58d6ba07-5900-452f-b387-c02773255e8d"
                }
              }
            ]
          },
          {
            "id": "b3df52c7-ec51-4452-b9c3-7d16053c1965",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a4c45124-1ed4-4241-ba68-263a38b534c7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c032509-362d-4c25-93aa-f8e1d677fa62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ca4431e-157c-4d8b-b8de-eac22a27c253"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90a4585e-e2f7-47f0-835e-a69738876a9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ba87837f-024f-42e9-9f14-c85845e7fc93"
                    }
                  }
                ]
              },
              {
                "id": "d1537128-6c0a-4307-9e0c-079631414eda",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67177fa7-5cd4-4e2f-88e0-24cd84dd0c66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d4f05300-afa6-4af6-90aa-9ebbced846e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "536ae2e6-f6d0-48d4-a1c4-50ff45d9b187",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d17b7aa7-c5a7-43e2-9c1d-3fcf9826a971"
                    }
                  }
                ]
              },
              {
                "id": "04a51a72-61c4-4464-a295-09f07a645834",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "367ea113-3a12-4aca-9702-8d18500704cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f41885b-81cd-449c-aa60-40bbde8a0bde"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0488c04-0b97-4321-a47f-dc3c385073b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5398687e-1fbc-4421-85ec-494b67257137"
                    }
                  }
                ]
              },
              {
                "id": "c0a05721-c969-4025-a92f-a6a85833dac6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a50f764c-d092-4555-bd62-7c3b4ba6a9a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0938fba9-a163-4a65-bfa8-3003b303cf69"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6adba2b8-8b24-475e-b2a7-afc9436f76ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7d831ded-9aac-48d8-8d5f-ce651e29341c"
                    }
                  }
                ]
              },
              {
                "id": "fddc6178-cd83-4bd0-9ab9-a7a0ef1c8b24",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "363675e5-33ff-4c21-8010-087a0242a763",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "667dfe88-31c7-4778-b1b6-d2e6aacfb6b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7097d7cc-4687-47b2-b7e2-c466eef7fef3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "bbccdb9a-0fee-4bd8-8761-5a934f3e4a66"
                    }
                  }
                ]
              },
              {
                "id": "271fd96e-b831-4313-92d7-34bf34dd728b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d815b89c-11dd-44da-ae36-c203fa67bbb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "971c42bd-fd27-4353-a37b-1693ca8025a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aade3c8c-aafc-47b0-88f0-3059c8466bea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d9d19fa9-5405-4759-bd94-e0e5f37e71a9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1e00794d-81ce-46b7-9434-77a571916c97",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9701b267-070c-4342-bb3f-ea4f096f43d2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d31d750b-9480-4b9b-a4ee-c666a2eeec99",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f35c2ff1-2c1d-46ee-b619-171d0fc610e8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e1e024a-145e-4bd8-a23a-0d0bcaa82d64",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "32f30cf3-f781-47f1-bbd2-132744e24240"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37d9bad3-0816-4231-8d40-273e2ec86591",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5a245afd-e65f-46d9-ae2e-a58effeccfdc"
            }
          }
        ]
      },
      {
        "id": "f07b644a-93cc-4adc-9d95-f56b262e4cda",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8790850b-a475-4f65-9ad4-2d279da501b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "64587e2a-feb4-49cb-b786-39cfd7a0124d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "561a72a3-d882-43e8-966b-2cd3a5b2bce0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0acdf51-21e1-455c-8ece-b07eba6a60ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9538e0c6-fec5-487c-ae9c-4fbbad0dffec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7a282e-6c81-4367-b293-4e70a867fcd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cffb8176-7daf-43e4-8b3c-67fbc95424cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df395d69-4281-41cb-a8d0-95943c2d53be",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0daf5f4-430b-4542-8436-bf75971bfe68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7bda6c9-71f4-4369-b28b-d09b7d21a8cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec1a9e3-c23f-4762-bdac-2a7cf0d5fe04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "603dd677-57ea-4636-96ab-de6bc75688d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3259164a-fea6-481f-b3d0-22b8a60f540b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2786ee1e-3b92-4162-9ba4-4bf720bc2b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e49e1f9-e061-4b9e-aa44-8a2c483ea571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11732a2-23e7-4f94-8d71-c7b18a41d09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b612332-c055-442e-9ea2-d96a1db123a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32791863-cdee-4d24-ac78-d52b5e594941",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "072876aa-4dc9-4576-bbf9-ef165238efca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "261ae94b-c882-45ea-af41-c0b097622ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6ad999-7b7e-4735-a31c-d6637eb79f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1376b8be-3675-467e-83ca-7d73ab5c6a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce22c18e-279e-4748-9808-af4158fcf4e9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde90eba-f77d-4193-ab97-71ff70645ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "211faf85-0668-45c4-9b2c-18be050f70a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ece975-af53-46d5-b19f-c26a3121705d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e588b275-0b43-4954-85fc-f05af4961b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf08c3f2-b4d1-4900-b5ab-6fb6068677b3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b48ac3-6bd7-4b4d-8c4f-d5a4ab6dfa0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4fbb5aa-8725-43b4-b935-1bbcc701f1f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fc8145-42e9-4c8a-8625-e6057b908bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa903400-bdcd-49f9-8ae2-da04e90dab9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da40695b-e62d-49cf-b635-da1deb4430ea",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3f1a09-39ad-4be3-ab7f-31853800659f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db38923e-493c-4b2b-a95d-1dfa03215eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afbefb0-ce56-45b0-8602-72c140fa698b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0994fe2-33d6-42cf-8c23-1093f0210f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988bcc63-0d2c-4bda-a1fc-cb2e728ed6e5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1632c185-f01f-4074-98ec-3ec613da202b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5473fb12-f354-4573-84cf-49acd97ac07c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b1ec94-8d4c-4d56-92f1-99297624ec7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52c69823-eea6-4589-bc8e-34d01fa1b34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c28974-864d-4df3-930c-149567a7b647",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb14ce8-71fe-4c97-9980-7324c78e5543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a86b6c1a-6bce-4192-b9be-cbadf8b9ee74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d58a15-99f5-4c1c-920b-b15d6079fe7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45f36d8b-7674-4448-b99e-42e2f58171ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8725ae-d1be-4a97-bba2-b402902948e7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "389f6cf8-422d-4c5d-a8de-63fc88f7b5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da50fcf-1806-47fd-a4cc-09307b368f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b78f165-2bac-43a3-9f6b-c6b9dc1b3766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5373317-a13c-4522-b08d-27fc5340c9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80dcb56d-b59f-434e-bbb2-852802b92627",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4359ab53-a34c-4fcc-9c01-501ce3e9d5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5705a7ec-de7e-4785-8082-a85de98c1d2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9977f30d-5626-4445-b037-7c8498872a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c835218f-ce7e-4414-9e16-e9e9238ed6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac78e91-3b14-4f5b-a38c-99b8e4516420",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff8cd11-b04b-4abf-bdbf-31cf960e1f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9c3eaf-7f52-49a4-98be-3f6b0d90583c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066c4fcb-df4b-446e-93d2-66cf4fe78cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "938978c9-84c6-4c7e-b993-7f254e4a4e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4e6b11-8757-48e4-a2c8-722520fe5754",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3e2409-416b-4f46-a021-3da9b9e96cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b4cca8-285a-4142-b605-c76d0bf8ed12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005c2c4f-0259-4f81-b054-701fa97f8b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b084761-5c90-4fd6-afb3-c8306f9c9cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3cc17e6-71d9-4b43-a34a-a83535bae752",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e269bce-d78c-4cad-80e6-4d93882939c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6749a321-2e09-4d54-a6e1-0edf8fef6569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb74fb83-30ae-4f42-a1bd-e19462b066ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "993944ff-559c-4d62-8406-99e5b5e49100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2016fcfc-aae6-4868-bce6-5133972572cd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0182173-06c2-4244-883c-d2c5e3d2520e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a076ed-82ae-40a5-abe4-1dc2860fc5dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e481d724-d656-4568-bd05-965a7ee9f68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "81dbaf2f-b007-4f3b-8f03-0e4650617934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612ecfdb-1b15-492e-9c64-90593547e384",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c238c638-1c82-42c9-8c6a-054ed8d38c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b021c5-8e07-427a-a42b-8fdeb98330c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca5068c-76b8-4d38-bef2-8831c3b9477b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a595108d-5a34-471a-b7fe-48da5605f990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa08218-f2bf-46fb-a403-8e33be998562",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c4f919-b030-4fd6-855f-c7b107942ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d1cc8b-f26d-4b36-9003-0649595c7a46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a389ef7d-341a-4233-bbba-80dfe60a62bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "64ee0e06-edab-4c18-b571-3832164b91f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d7bd95-3fcd-426c-bb2f-f41b183e4df6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0ac42e-2a73-4093-a27e-f9423ef0e1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9443cb43-ee3a-4dbb-95e4-463f4cc15e33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d93c712-ae52-428b-8367-f529c8b9f989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "55545139-f974-4bd3-b25c-ff53706fdb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b2bc8b-6639-4a61-b26f-285852c595e5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67c991b-7492-4e37-b49c-c263a7eb689f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e53f8763-5364-4ee5-964a-b1dc9df816e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0174ac-36f2-4840-925f-030f11f9b1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afc31e09-6c92-4ede-b6d3-452b26992b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14379ab4-6530-4c46-991c-4babe8c84b18",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53586a2b-6013-4b79-8932-4b15d19e2b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68925237-772e-46aa-99f1-06d395376842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea2f1a1-92ba-4e48-8d13-dea85c7c7d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c47d9cde-879a-4e2e-ab37-1fa5818ba52b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceddd2d9-eb80-4bc2-99d6-b0cc7f790aa3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b57a2a-3a81-4ea9-be13-2a0f3581c1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d06793-ae6d-45b8-9c2d-3b2a1459def0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2196260d-c4b0-4c05-91a5-6426289d3f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec09510-29f4-4fff-b205-8ad178330feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "762db50a-c9cf-473a-8369-de20597c8908",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfdf903-32f6-4c69-ac32-f96483a85c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dbbc02c-e670-4f01-8274-bc9816a603ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcfce8e-c374-40f3-9940-fdaef71186b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7be1d87e-e506-4dd5-827f-8d0c71ebfced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d29d43-41fc-4c79-89b4-adea85f670e2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6a7564-5088-4e05-9a60-ab46b854ca67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f8445ce-a85e-4e2b-ae3d-666ef47689be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61dd7e5-2f59-4262-98a4-ecf6dd268e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3098c77-56e0-4adb-b58c-ccd15e4dc62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297cbb47-bf2d-4414-ab78-3ad4a4d9dbbe",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85dcc8fc-2aa6-48b6-bd6b-c2f1cab9ba44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e50d73-f134-456b-a5ff-0ce2d87a5a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41904bc-e2c7-48d6-b34b-6774203c1c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3da7f1a5-4c53-46d8-9ddf-8ec6e9bc456a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9dcec8f-96dd-4445-a6dd-8de03a42f3cb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965f276e-37e1-4cec-b699-043c03e345e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a22d6cf-e894-462f-accf-576a37385165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f337733a-607d-4a03-9866-6c4810c3d643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3fb1fde-80b9-434a-b4a9-71d16c58d178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a81a94e-8d24-42a8-8825-1c5a6d1519cd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b174f1db-d60f-414f-9e18-087257dc9623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e78876-8285-49a0-9f90-be414f623b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c913eb8-7a5e-4e3f-bf8e-badbd4287670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a4fb57a-9a63-480b-ba10-5f9fab82e059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa398804-dec8-41f0-a94f-1fbaa4207226",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5daccf00-3e6f-4756-be01-df5fdbd5b35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5739a401-2f43-48f7-bc38-e28eda4474ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b98734-ed47-469a-b5f9-a71a3f2a5730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46ffd202-bf57-4666-ae6d-ebb5ec75837c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9ff86e-bd4b-452a-ac86-2ab0a3831156",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09aee24-cc08-4242-b934-5b660bcdb923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38ec3197-0d4e-4998-a75a-69c508e45997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710d9ac5-bcbe-45e1-9b6c-af5b0fa50c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "157501af-0c8b-4e7a-a0cf-1c270eca935d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146f6874-12d9-4e3e-910f-ad961c816723",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba943f6-addc-4b16-a4b0-c6b14047fa4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ee8901-592f-4253-8faf-6120aa0c8c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9e8a08-9ddd-4cb6-b4fd-a2b1387a5b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf4e3bdf-a867-4087-a38a-5f98197be728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7391c079-6bbd-49cd-96ee-6d78ee573468",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d810b8b-09e1-4f28-839c-8f5e30591af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd062df-739d-4bfb-ac81-74d8f023f967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5a0670-7544-48a2-987d-3eba959c793a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f06c150-83e7-4b1e-a3fa-add602a7d5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfa4954-f214-4bdf-9ef3-241864137a64",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9627c686-8ba7-49c9-aac4-f3c0b93cbebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf1d3f1-0571-4ac6-908b-e564ead1d8f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae99d91-fec4-43cf-8bdb-143d2ec16969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c8bc3f-dc5e-4a93-9cdd-32d07c7e6f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1085482e-2b0f-482e-b4bf-58854adf402c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6810eca8-5050-44b4-95af-355f5c73cf74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d26c7b-44ab-4cc5-9850-f35252982488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf24e8e-aa7c-4571-be8d-b2d1af4150d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4671557f-5b48-4de4-914a-f381008051a8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "09b6802e-c9cd-402c-8672-13e6c0c90dfc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "818c72e1-b1ba-4318-8dbc-01be8e0afd4e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759f0d79-7b0c-4fc6-bf02-24dcd943743b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "608a1463-1625-46a6-b1a2-3bf354eea2f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ec6b78-695b-4fcc-8b01-e7c0a507c0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1439a7a4-a417-454f-9a9b-3c48f17d68dd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cb2a910-b91f-4937-8b74-cf252e549e07",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d10d89fe-06de-473f-9fa9-2467898beaf6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9671b92a-d680-4b65-8049-f8ea6266c37e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4cbb5806-e42e-48a2-8396-c55ed32833a4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46b83fc1-20af-4a23-9470-15824590ba1b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "41f57cbc-7e91-4c24-8037-b7d46427d597"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4da1dcb1-5a66-47ca-b1b6-3a0ae2bb61d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c452a982-6dea-40fb-8395-dcf5b6aa0a07"
            }
          }
        ]
      },
      {
        "id": "45c508a5-fa7b-4195-9e11-7eec2c84c7ca",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "436e3a10-732f-4a8f-97b8-e6579a7cafa7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f58c2712-ef9b-4c99-b322-0c9af90cfaa8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "20977941-f0b2-4a37-b353-60e0833587e4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c0c18d-7a1e-4500-95c7-0a5d53aa9cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db7518a-3484-4ec6-a5ab-e1d7e5e5bd29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a033af-86f1-410e-8cdc-306adf1c7193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c27a2ee4-107b-4f9e-9945-fd64de514aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2647b3b-ec20-435a-9477-e525f7c20548",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bf23e0-5742-4aaf-9359-ba8fc28c8b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "369853f0-54f7-462f-9b1b-e3020288ac7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8c2d87-e9b8-440c-b164-466be197e54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3af389c3-4282-4b96-9d4a-3cd0e9904e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cfd1060-5dbd-46bc-bf04-58ce0fea50bf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc0048e-4370-4cc9-8fc1-8417d04660fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d28bc4a-c179-40da-83c0-30b14fa82f50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95319cfd-8aa7-42ee-bc4d-9f937b9decdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e158acd-2c6f-42c2-9d1a-93397ed69b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2577081-c2bb-4886-bf71-74c7c8355c79",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2265e99-7b28-47c7-a4f5-d572bebad590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41991c8a-8d6d-48d1-92d7-82c70d026bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef71ef4-bbfa-44a2-8f31-d33efd8a6968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e80e108-c64f-4049-bb54-e553ef025272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d1b4a0-daf7-4e51-b79f-5c139c7c9744",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4f3676-8eae-4b5c-818d-463f69c33ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7335552b-0904-42c9-9e4e-241ea91e9cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487525fa-a2fa-4b6f-be16-2e0da98ca9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef2146a-509f-4889-aac7-ee8ff1e2865f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a71fb43-6066-444e-9872-79d10f678a8c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9311aa7-c148-4f0c-86c5-1b31d0a34c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c6c2ef2-8ffa-4ff3-aab1-9d1889cb95ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5521c7d8-49a1-47fa-bf03-ad8dfe7fcedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e871fe-64b1-45c9-839d-66813f39e9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58d3c55-5258-49fa-9126-6cbfecc2baf5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8edbb4-04ee-4dcf-b4f7-c06364291831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23bb0a9a-e27f-427f-b325-9742deb2a556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1a76ea-8541-4240-a517-d19865e14ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "27b92296-31e8-41d1-919f-b086e290cf65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38a6b19-a4f6-42a9-9f15-d7e2cfc50ee9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6745fb39-4494-4d24-9fa2-abf8dd04500f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12964aa4-7e88-4160-be0f-544fd663a8cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b0dcbd-a81d-4f88-9f6c-bcf7d1e7f914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19183c25-a3a6-47c1-b2fa-d70497eef66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ea5c53-cbdd-482d-8a80-4f7a36bed3b9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc9c835-7225-4b97-9d03-7ec8331cb88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af37003d-fb52-47b9-b6e7-d0fd9927b23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a3a4bd-0a41-4c72-9340-0f92a6cbc7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49978ec7-e2ca-484b-b3bf-8f275d88be35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06252e3f-13ce-4a02-88d6-5f8e6b10f50f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0a656d-853b-4dd2-bdc2-ce2ebc7187b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb9d216e-b8ae-4a84-8b43-33b01a4a5b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528497e8-4bd1-4ff9-a34a-bf82860057ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26c9d808-d637-4c92-8b02-94664af8fa50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e466eedb-745d-45b7-9e1d-8499d9098df6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c11de24-4cfc-414d-aee5-a119c613f28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83c92aea-ed59-4047-8b54-f10a6906a8ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1762b0-8484-459e-99a0-c7a7e42258f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e07c860d-3a51-4ca4-adf9-873358a2e5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8b4498-ae58-4991-852d-9b0eb959095d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9acb1a-1766-45b1-bf68-700de961f1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a63ec1fd-7724-45c0-a5af-9c068469474f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac89d1b-3fb1-46e0-aacc-57deb9908bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "84e654d0-f6d7-4732-a3dc-b65569876d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e41d905-e0fc-4a34-a439-b01d8432f75a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47238f89-79cd-47de-9bc7-1127276c399b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea89c92c-85d7-4785-bd24-180440c23a86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872c7cc4-56e3-4c06-9432-efb9a4ba892f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "047521a4-204b-463a-97c7-b495054dd011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7ffa57-a935-4ff1-bad8-55ff6f13bb21",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850404e4-8297-42e5-8396-5d0f89090433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "746fcf6d-62a3-4953-9d43-901e18ec69a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b322cdc7-5529-49d9-8544-b58b51e8d699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "faee3250-6e8b-4197-a8ca-748af3f3125f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b328d086-5dd6-4291-a715-41038f244693",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22891465-d38c-4324-b7c8-faa1dd28f5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e90f94c0-01d2-4830-90c2-887f26193d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031f8544-88d4-4279-8845-4993bb702c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "be5327de-fd45-47dd-b70f-5ff8e4182b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b732f2-5c3f-42cf-af37-6ac6c15ff224",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe33f5d-c089-46db-adfe-d4a4c04310c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fc007fb-d70e-48f0-b0d0-46dc18f48b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce36f7b-4d00-4c8d-a279-d7977a93e669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e73c724e-eb23-4c99-89e3-dc86150e5394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4173be2d-9346-40c6-aa8a-e7c5c421d2b5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9bdb93-f763-414c-89de-665e1fa9eae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba56e40-0dfb-4b3b-bcc5-689e5d518e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9850bf89-c1cb-42bd-bbbc-40322ed5c24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c312180-135f-431f-aecd-50781697684d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3eec7a-6ac2-4ba9-9f7b-b0ef71b73a34",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a7767d-1871-4174-91af-460cc05d4580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7795d46-2e63-471c-aa08-402a509d848d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94604c6c-a954-4300-89b4-e8011ccd1085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf117921-c50b-4239-849d-d1b9947079cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f03eb7-4a87-45b3-b102-71147146d152",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e58ed2-a7fa-441b-a7ef-c04a28bb155a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad41be6-e1c0-4387-9f2f-beeac74d432e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450a5135-1e25-4371-9f51-ec6ed40496ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e25b112-cbc7-497d-885d-304b766c6aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d110513-ee9f-487c-9ef6-821cbbef59ef",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "941a73eb-64a4-4818-8859-64101a60efe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3271160e-fa3e-465c-95dc-f3f528b7e0d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7608fd-e95b-478b-98bb-58d044211111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78480e44-72a1-44a5-99c1-506b83106ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770eab6a-bfea-4f8d-aaf0-d3a0f2b812e1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54ece6c-b9e2-4cc1-a100-98ffa69f152c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd344e39-a45b-4674-a707-671a76f09c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb18920c-7a36-4955-866e-22ca14360cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81a9bdea-d2c6-4690-a68a-e1e6c076fb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6495df20-c563-4800-a0a1-ef7a93412009",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6a72d5-f0ad-4c87-a214-51d6ef45f634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad10946c-422b-4511-af9b-a0c6231e2040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81cb040-ce66-4d50-aa95-e6f83ca05716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea6d5775-04b8-4418-aa94-8dfbc62e57c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b335134e-a7e6-4480-bfd7-f0cd759db7f9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92553bbf-978c-44fd-a694-daa9df548af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68695a23-6598-40ce-884e-e302226fccd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd0ce1e-c9d3-4b96-8a40-7d12cb7635ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31a45fec-be19-4564-a422-da204dd09369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1acc20e0-cb81-4d7b-a2eb-71e7904c73c0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1bf231a-8770-4af3-a1b2-d618624fc616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0897f99-7542-4c64-82a0-57edc4dd9f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26bca207-3401-4ef4-9ef3-3a8760a23fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c8c5b5b-4559-4ad6-82d5-1b0423dfd9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ff36f0-7c68-4f73-ab36-2d14e731c620",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab43cbaf-7859-45e4-99be-647d3e2bd1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb6cc15-4926-406c-a307-be921bb4371e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403c6134-83a1-4395-aade-97e56a4da4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65c35352-7d6e-4cec-ba9b-a4c7c20c531d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017d474a-31ec-42ab-8ae4-0419095ef281",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bafc1f0-9ea1-448f-a2ba-4fc05d945d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab80cb01-c590-40e3-8bbb-c7719536e042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274df9fb-4893-4877-b3c4-dc738817c1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91f9187f-5a30-440e-82ec-fa830dd72fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b493fd-3216-45a0-a969-1544d93eefc6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78eb08e-23fa-45e4-8ed0-b1b438b1e8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41dc09c5-c07f-46d2-b486-93fa36d09be8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb921dc-b4c4-4a76-ac80-4b3cc2ad64f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84fd89c4-e0bd-4899-a820-20e251ef732a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e67c1e2-2bef-403a-9aea-384686fc8955",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6ecb4d-55ed-4c9b-a740-41be2468a321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa706938-40ea-426d-9d8a-9a05b2a52353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73c5750-de16-4842-a6a7-1b009818bc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ec49f87-c71d-41cd-ad51-c5d1153f549d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a08bb5-f318-404b-a72c-4af64fa7090a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1201f1f2-d17a-46ba-a1bf-4d4ec657ae95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e1307d-fe30-40ca-9c36-70b975550bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ed264b-f887-411e-ba52-e8147140532e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b7460df-271d-4a9a-b62e-3fc99038ccd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31427a8-c821-49fd-bab6-d8b0f5486cda",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a5ceb2-3099-4206-ab38-dd763cd73915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30797ae8-0e45-4af6-ac5e-12e2bc3ed84d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb09d8d7-1275-4a08-90d6-cd46987004d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf2fd3ed-0cb5-444f-9058-2e684faab0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff141654-6b73-4483-b462-f829e42a808b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962cd357-8096-491e-b4a8-292d7d1fdbc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b424583-56d8-487c-b1ff-cdfdf91c51e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f166b350-fb75-4893-aa51-9874a6ee4b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a76dc88-3cb6-494e-abec-45e99bbb710b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc22b18-59dc-421a-a177-9f70d1ac77a0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "792f18de-e9cb-44fb-99b8-0db7679c4df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4196c827-910a-4ddf-8164-c2f667ac1bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4697e7-200e-4e06-ae74-cedd5a672ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f5f69a3-fb1b-4462-a11b-91c9258c3791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9444f58c-5ba5-41eb-b8d5-cde4a9f80801",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3bec3b3-c8e9-4e23-956b-8b03712bffd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b820175f-e2ee-4b11-816b-df8a1babce0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9ecc84-b83e-422e-a2b4-8dd889d1f22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99b50bb3-c5e7-401a-b225-e0c78f8f813b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf73db8-a9c5-4d01-80dc-c5fb1b83ec1f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4fb1ce-96cf-4408-ab9b-6cce3ae047ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92122631-5dda-4d1a-b82d-34be18462757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695954ad-152e-406c-8430-f70df48baddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "188ae316-fb7f-4cbd-b8ea-4edede1a67df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f9986b-e104-4e43-b7e1-b6d6f4aaf828",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "591791bd-dc34-49e0-ab2a-9068329288c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546c3d15-0941-499f-8863-2ec2c5773d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a4f512-b269-4642-b7d9-e807f770e3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15420991-e69c-44d9-8bc4-d9d6045f3449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a447698c-15c0-4882-9938-9689ed9c600d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab0666c-66e2-4da4-a422-f9beb582aadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "523eff2f-d286-4a27-8b14-ff7dcefbb156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb02ff6-b41c-4ea0-a634-7b935d2e6636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "188d9353-c76c-4fef-9789-54ceeb456c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8159cb32-1a28-4942-9ba6-943f9ad1b128",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fec9987-2082-47c8-a1f5-bd1143aa7a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9cf50b9-7570-4044-a2ef-42318fbf1341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01aeea9-890c-4567-b283-bf41263d6ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "310cd090-f740-435b-8e84-79cddd97cf58"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3ec1ff13-aac1-4fb9-82c5-3f56801373bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78b5ad68-d851-476b-bf25-f4bc567b2718",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229db4bc-2793-41d6-b9ac-506b3685325a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "83a1bdd5-43c8-49af-b480-397312ffe21c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b7f206-10bc-44cc-969c-b573b4dba7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17d3463e-9455-4b11-9e72-6c211524ceef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "759d8b95-e0dd-4cb5-9afc-9dffced1e1c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "655c6175-a163-4217-8047-4749eac88333"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6acba1f6-1169-4d5e-923e-afe660722a6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "415502d6-3f46-44bd-bd1c-7602705e7f13"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78ab7e00-e14e-4eb8-8108-e6fa491dae10",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f59019bf-6237-4bbb-b51b-cbe4c512b144"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ad04c7f-afc2-44a2-9944-ed38396e92b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "863d640a-e6c1-4453-8e3f-b4af89b38951"
            }
          }
        ]
      },
      {
        "id": "5ae82c11-8670-4d69-9ce9-44c95b91ba43",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "edf26707-16d0-4384-88af-782b2dad12eb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a755210a-ccd0-4257-9a99-7cd1f7569bb4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "96bfea5f-caf0-49e2-8eb8-da0be372c614",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "416ce144-b71b-486d-aeb1-fbe8ee48f0ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e248d07-ebb5-4c7d-a200-59184c8859de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7761f0-c356-403f-a41f-75b87f7bee0c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7260d762-9e39-4dde-8ab9-44b08bc53a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a1b90f5-9258-42a2-9949-cfd75b4e9574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a43fa50-6c5b-4767-92b6-51a8e1ea777d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea47830-28d8-46c9-aaba-aad4338f4d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4121edd3-b22c-4cdf-b971-fa538a2d9fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc15bc13-a800-4ffd-8e9e-315e61591038",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c7ecd2-9226-4ce0-8cd7-56f357c1b0c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bbdf00a-a133-4af1-bad4-07c8b92bca4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1491174a-e312-4269-98be-4b693b64efa7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c1b6eb-a3a5-4284-a4b8-3d5a434c53cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d76c740-8f5c-4436-aed5-378705b359e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4a2e99-9d89-4252-95ee-3c53c4c9a693",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f6a8dc-d890-4fd1-8257-28d7ca0eda5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a95632d-5dd3-46a9-9570-b4fefe4f0477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba98cde1-23a2-4113-9e66-31314d14ec8e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6f43a8-ce23-432e-9d71-e7437000f5ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d7807c-955b-475b-b2ea-a57090b3d23d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9bef150-2cf6-4625-950b-92b774b4f6ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0716e9ec-180c-4e6a-a425-ba4845133bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea092a9-f585-49b3-845c-e13d5ec0a48d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76e6941-b52f-4fe9-b8cc-84bfd4b4e1b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "942be6ea-5e3f-4824-beb2-6d304d8c444a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c7f249-0ee8-487e-86bf-54fc649a5cbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca1c825e-e685-4467-b0fc-1db775b26e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69bd2910-1396-4662-8ba3-57ef7df8f588",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c862877a-ba72-4302-a305-d660f77de5c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d73e9b28-c3f0-46e4-81cb-9f6798e72cf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "251b6563-6d8a-470c-90b5-6bdd7b3cf263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b5f2dd-4acc-436d-8b72-e321f87a90d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e807610-8996-46a4-8894-f79164194df1",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528d71b4-bf59-4315-b616-1c8c9e95383b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fd3c4d8-7498-4b2b-b674-0c4cccbf0534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1a0109-9d12-42c6-b11d-de78705f8b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb48745e-3d29-49ff-968c-03f7198f4c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f638b78-2e5e-41fb-8c16-722f3fb8c154",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854178f5-2853-47ca-ad40-543311bd87f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bc1e5a6-f697-43af-b39c-22fd6ec7b3b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a618471-57d7-4190-82c4-d4fd4f6b0cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8cdcc9d-b3c8-4d9e-8d6b-889ebcf7b538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da28d4cc-d367-4ab9-af4b-82f9651d479e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5350ee4-c9cd-4a5e-ac17-280effe859ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e10a81c-d976-4a4d-bf10-087debdfefba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af53cf06-6452-4bc1-9779-0d766b8f9c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b92ddec7-ab10-499d-90c5-a8522bf9e5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253a03fe-1ab2-4bb2-a92e-0b845fe42814",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ccbe948-75a1-4e3a-be01-4c78cd122133",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05cea7c0-2c2d-4c8b-9ed2-2e7e4b1261fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c96169-abc1-4963-b3d4-9b681ef05d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e36ccab-e6ae-48ba-9fa3-5f3488c4d530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d805a087-340f-461a-a590-cd46e22a23b9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3f9214-d513-4f37-859f-19b68e784304",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51303aa1-7c6e-49cf-9626-d924989b1f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88c4082-7c64-4ebf-bf58-e9610da07229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781ce66e-a2d9-43f2-ab88-d3062b589e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a3856d-7fec-4630-b5d7-ea99a79163b5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d51733-c31c-46fd-9eff-11ca81fcbdf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b174c0e4-a380-4954-9567-43f2a95006ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56033eab-e04f-4a29-bacd-76afa38ffec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b83c5cc-6018-4670-8c67-36110ac9c643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89421b70-5f70-44b3-b6f7-0a2875f44808",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82f8334-87ec-4e1f-b192-115d242574e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e7e6757-798c-43eb-8f5f-611b81e867b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab04802-1426-4d1e-b2a2-b240874c0aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e45405-4eac-4dfd-ae3b-77ddfdf19487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7f3d6d-ebd3-466f-a020-3cfe00ccde76",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a974bfeb-169f-4c93-b9d4-b9e756895860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7aadb5-b4b3-49d0-8245-9a20bf02df3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e10f00d-40e8-490b-8739-454b237cf6bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04c79223-5a0a-4cf1-a653-c9f4ed53c217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8c6b92-a744-4caf-b603-7cae6c4e4e3e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35f5885-d12f-4b37-a51e-4fff54b375cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e379e68-59f2-471d-8062-bb637dc002b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9823743e-23e5-4daf-a57e-1ea830b25145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa6fe31-c65b-4503-9206-a0a42693a7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909ff033-05c7-48d0-ab1c-715aca6b8a87",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d4482d-37df-4631-8257-965bdecc77d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e80c179-636b-4225-950d-c0e65169ea91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14447a03-8b3f-4b1f-a417-2e32f18f4467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4672bb2f-ebd2-4ebd-9bda-1afdae8a45c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2741ecac-aca5-480b-9e55-1062e5439028",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e010fe12-9022-4787-8e09-4a0fe11f93f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58daa8fd-efd2-411e-8936-592f7eec9347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e7a6ba-af6e-412b-8067-7703123219cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3401f250-558c-40e2-b3da-66b4f45c1588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fd2108-6509-498f-b3b7-14025537b20d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc145f68-c615-4eaa-88a3-c98c56013321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e5f162-eb7e-4caa-b882-b1014c9a1e9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60415a68-1668-436c-9710-981e22b83b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "860c2762-5ff5-468e-b89d-8da99ea783da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1faff05-689e-446f-b7dc-0b8fbc9e861f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cdb6b1-1819-479c-8817-db9f1575522a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "debe77d8-8f8b-4883-9601-8a84c02917e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6abc8a38-303d-4d4a-8f34-45234b46252f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c0dfcf9-acdd-4511-9226-014459156d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56a0274-b946-44c6-ab19-8d9fb70db8dc",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1314175b-ae68-41e7-acab-9e6c5acd9e63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "821aa526-08a3-4f58-a663-1d8385c560dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c37967-25ec-483e-a986-524030c73efc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "894396f0-a99c-4a9c-aa20-18d47fe0079e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867b2b12-d8d0-48d5-a5e5-e8f00b3814be",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54759248-785f-4bef-9649-f542e388ac04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4edcf162-d2b5-43a4-8c62-03256c53a66f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79911c9a-bfc6-4ab0-9a0c-8209c58c03f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2d7eef8-ca93-456e-b2b9-35d1eb1ed331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e038f7d-a2b8-42b6-8f51-75db87bb8f0e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10db052-aeec-4fc7-8421-330d67f290b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74133b6b-7541-4454-8706-70be5a8d4861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "381fb34d-c06b-49ae-a875-5490267e1fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2534e8d-39b1-478e-ac2f-6448d4fc0a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba30e24-ef32-4568-85d4-e1c77cbf3c71",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa0721d-0bc8-4cef-afdc-1d43ac7e45aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e126ac4-264c-4b5a-88ea-f021193e4f06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac2ccb0-f308-49d5-a616-386fa6d9f2a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0428fc31-3a52-4a8d-8996-5915589dfaae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8e46b5-215c-435c-ad69-ec0ec6e2c9d6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663f72c1-b68e-41c5-bc8b-4f4cedbf0c20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44a4dd47-0a0b-4f24-8169-badeadaeacf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd56f454-8f07-4b37-923b-15d1448ea2b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b377f4f9-16f6-467e-ac06-ebf64f2de33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b32907-10f4-4a45-baa3-3addc2c3e9bb",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357dd916-ccff-4911-9b37-ece4251ce0b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f48124c-35c7-41db-8519-cac5ed56431d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70832d51-b3a2-40e1-b9de-763da153112a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c28bb2-af79-4e0e-ba8a-eeefe0b397b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4118757c-13b0-4344-9585-e2d58e594333",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202d7c2c-1657-4719-b27b-4e38eca5dab7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f179b417-b64b-481b-a3f8-0027ecad6a19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12339bb-d2c3-4cee-840c-d7a8d226db60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb15e777-30f0-4c68-b549-630b7d41637e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b5b3e9-dc73-4b62-bd7a-d68be95e6c31",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab80b28-bf65-49fa-883d-bce8693cfeb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7264480a-47a2-4cd3-b48f-a6801b81fcfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8441235-255e-4c0b-82ea-86bc7a0e9b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa626c4-9f0d-4504-af60-047144f9452e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4959dd6-0843-4f10-923e-9dfe4c453d0b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03994f4-bfa9-4e17-b407-4be74fa6dfbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b02259ff-3bea-4e62-b5aa-18ec42cae926"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "979ebda7-37fb-4aa8-8d7c-37df6a42d24a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffedad8d-e403-49ec-b44f-bc41157f60ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b68c834-0d29-4642-a793-e69789633d05",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09009a2-c9c0-4089-bb67-601654132e95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "180e29c4-57e1-4af3-9443-b74531ada27d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43a0c76-fd5e-4f08-b3e7-c76133f45a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7186979b-3828-4bee-ba7a-9b259832ec87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999d8d7b-6173-4022-9568-f4e48f055af5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6303b323-b37c-41fe-80c2-14cec18193cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f65c8e53-e533-4bf8-8b1d-02c5e7083824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a127029-94d2-4638-812d-b271da27939b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccbf9533-31c6-4b53-b7ac-6713f7eca94d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d4a9a1-4190-4478-abc9-4a6da8181ca0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e90a7ed-61ed-4189-89db-b1f741b2dd9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8c3711c-c2e9-4479-aa35-a9f5db2af51b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b7dccd-4116-480b-89ec-974a6853d1d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40d3add-a02e-4b1d-94a2-508664a2ce21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4ada5a-807c-404d-81c0-8322fb4fb3a3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2e19ee-04c3-4e38-b01b-ffb2c661f7ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba46473-b022-40d1-8ad1-ab1adb9813a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dddee41-bc9f-46b4-9dcb-841e7567a475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43115c5f-a1c7-404e-9435-d07f634f4362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36046135-6ebc-4996-a3b6-12cea06c8f7e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e9f4eb-200f-4679-91e6-0f9f7d97372b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c30ea191-616e-483a-9ddb-8f65a0e95554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4aee27-e4fe-4c5e-913d-669e9fb53e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02aaab04-9eb3-4210-9e7b-8a3ae574178d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7588e9a9-135d-4bd2-9e29-13ea483fed2b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f032ed21-6c74-4f78-b2bd-ef9ff57ac6ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a517125f-34f5-46f1-a9b2-b5887dc3aa30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedba59e-3ab4-4c12-93be-afa2bc5acf4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80717695-092f-45d4-a3bc-b8c22a914a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514f7408-0e49-41fc-bd51-020de6af2ffc",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e594707-2ebb-4de0-8f46-2b3174c6f968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8bb93fc-c56e-4a28-b537-152f0a53fe1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "343ebbfa-fde4-4553-afa6-b068f427fce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a50012c-7017-4a56-96c8-11bace1fe3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8993131d-d249-4af2-9a74-87696078f0f3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c470a32-31a4-43f0-b620-6e83dde6a763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bcaaaa0-9899-4874-9f16-aa0791e05a78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "821f8b88-59a1-4e16-a067-b083621c42f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6814fca4-18f3-4518-bdb8-606a7fc2ddbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3cf47d8-b93a-4829-953e-5015e6af5e35",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ba8732-e4c8-4762-9f81-66e92b5557f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ff4f72-c383-42a3-88a1-ad4ddb94f2b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8f597d-2395-4980-b4a6-89ec599f7d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663b1bd7-0f60-4807-9e9c-f86a735dd31e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d13de8-fda6-44fa-84af-9c00c6e37996",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84036a40-585e-4a58-8a6e-04cdbb76e69e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54fc0045-b93e-4bbb-90d1-1f33436a570e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4a04c0-53f6-4e1a-b5c3-e40225b08772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dba26b1b-0208-4fec-8585-f3b30092a137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e38f13-1500-4217-8980-2fa75f14aecc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997a2f6a-f7bc-46d2-a482-e4f65edb0b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4868ecb6-9148-437c-b272-5cd34a3c111a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d16897-1c57-4c26-a0c0-f3d11ae2086b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc01b7d-fd28-4e87-acd8-f68b36fec880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966a4dce-1d7e-4410-8f2e-c7bf8a61e503",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32240f5c-04f8-4874-b6a0-159555ce4535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d94a0648-ce3f-4c57-b1a8-917166d53a68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ea804a-bd33-444e-bf6e-85f6115af5a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b09f3cb6-4e58-4844-b1ac-343ab347b7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb618d23-385a-4cc9-814d-bbf469a28ee5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc41624a-94a8-42c3-b85d-8c8d3d5c7ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd131af-6e97-41f1-99f7-021d15a9c678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcd8eab-2ac8-4800-bdbf-28672e1604fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96b0a30-8c43-4b8b-aa26-075233b90481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d9d90e-ad19-4df9-b919-1e3492089a8d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ce3279-ec97-4637-8e3e-f4b5989d080e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5032a8d8-9b5e-40c8-b396-1e7972349eb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "281a6c4d-bfc7-463d-86dd-eee8cf481fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ff0f13-6c44-4334-b00f-3d31d78bc15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96430a96-e55a-414d-b7a0-12fc03b2c142",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c831036-5bd8-4a01-8e9b-97a5c504b1cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2cd9d00-f75d-4505-963d-70cff07b47aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca986f0-5cf3-4b2e-b03b-e5f2e06f0c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890bf62e-1405-4c55-9fab-aed4530061c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4030592-47c2-43c9-a522-06a2adcc2fad",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24b6ab7-4a35-45f0-ba78-2dc1f4ef38c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e389f4b2-83eb-47a0-b3af-ceed0a8d1ba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f4fd5a-8abe-4a24-ba1d-1a5df8d16c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac22af1-20cd-4b20-81d1-8c2501c2f6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c790ea73-8b8f-4b48-be04-a38a80fc491a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4feee1-839a-44e5-89ae-604394120984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e1885d-b8fa-4349-ab86-4d78c0421271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7beaf5a-a797-4535-ac86-1bd89ce940fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be39cd3c-b364-4907-a55f-f68b5e2cae72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f0960c-9c0d-47b5-b440-b06517cea8cd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73422138-d475-4ace-8a37-380c413eb9e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32a07992-323f-435a-8ff6-18a334c6b191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ccbda5-fb47-4f8f-8bfe-e175b2619368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef66efc-b4da-4a19-9a38-43b90f529522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e288be-55af-4806-ac3d-2dbe53a217b4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c876f9a0-d989-4525-b655-eac7ff48c614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a626a903-bbc1-4253-a4f3-4f2c3d5f34b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8729211-fce8-4753-b8f4-bc15d5144821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c87c5e-c898-4e03-815e-44b9390bb84c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a562963-dc65-4124-b0af-ef7e68646468",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819b8e94-83dd-4677-a428-678e361086e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a04a0be4-a44d-485c-8033-4ab518294f01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7586d254-b61d-4bdd-abb5-c062d61537d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a9c839-f2d6-44b5-bb77-d892832c17ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ffc3504-3b16-428a-b4e6-770de4531c3c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e98783-db21-4555-aaf7-b3a81f42f666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "040b5a6d-116b-4e3a-a569-5b490691ee50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7443eab-e832-43cf-9ad2-adc81887c2ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d5e720-905c-4c44-bfb9-f69b1599c2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86f54e6-6926-4209-b88a-8505bbc33d2a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72bf48d3-f1f6-43ea-86c9-a4c35ef1242e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc541831-17a9-41ce-8122-2bac5b7ac3fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6d7d9d-68f6-4b8b-9b7a-003d0bd7393c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff81534b-9013-4592-a729-b4b1d921c126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b94c864-9cbc-40d5-ad75-b472c9219eef",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8545b269-e20b-4acc-ab8e-9679469b53b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "379b87ed-35fc-4733-8ba4-6a409763c1ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6d03fe-9c8d-4518-ab62-ad8d6c330510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc252eee-26cd-4d22-8139-3bb7a8c7ab38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f8f180-51cb-432a-878d-0838ec259138",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edee3eb5-aa82-4478-9f56-e531d6bbeebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f52593-2e73-48e8-8291-e65bb796efd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "460725e3-2118-4d4a-93ba-eb774c996aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f8ab94a-08e3-4c3b-927e-368c3235c31e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82005c1b-b2f0-4a14-a7d9-bb75277beb3d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3081b573-d644-4a05-90cf-9584edc882f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a73b91d6-af59-4187-b57f-6d28efa99948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3352be13-7058-45d1-a4bc-15b9a9a2902f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d0342d4-9b3f-4d03-8339-4db022dd9c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263e1800-3358-4d71-bcf2-f6b776d9c508",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606ff582-13fb-471e-a09e-3a1405555624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bfc24d4-4d7f-42ad-820a-8a905b17e12c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74178fbb-9b95-4e91-b70c-dde8544bf193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06439a1c-01a7-47f8-84dc-999fa6090f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e0ff93-e6f2-4a63-bd94-d49ea9d2a9e7",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad76113e-38a7-446d-b8ab-a2d2902516bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ce4674-acee-4728-b77f-b4385ff32912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f456d0-b4dc-4780-b591-c3eea6416847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88dfc2f4-e858-4172-9d9c-e9176bf0719f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179a876a-ceec-4837-a037-6aef2fea9bfb",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fe53ec-cb22-452e-aba5-c95766d10db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b3f1b72-544c-473c-848b-c40931cf254d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "238075b7-8f8a-4914-9b5d-245915f5205e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74512222-fc05-45d4-8f58-be3fe3af3967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa18f103-2118-4962-9b64-174540f0d23c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f208a7e9-002b-4f73-8fb8-d35bd859befe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5e1c953-5d72-4a87-8c35-ab498de1d4d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ba1b1d-7921-40ca-965b-45535f293835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b380d51-ac06-45c2-967f-a523c5f23f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876d955a-a5f8-46d9-8a23-7e638a09eb80",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48055f9-e61d-42f5-9672-5d1e8d140313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8842a78e-d200-44f8-a8be-8586590b8276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c592943c-62a1-42f8-9f70-42cb9ba8e73e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a309601-01f9-4cf1-8e5e-9aa79d21031f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25673f24-5830-4972-8b04-49c899233f30",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3562789-8b1e-49bd-8c95-4fa0ec54c41e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e57726d4-b8cd-4090-9ac2-058f959e5617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca58084-f619-4287-85a7-d68d4bc9f5c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d0aeee2-d72a-47ae-82d2-5351f2df71d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36790e4-c228-4ed2-91e5-b2cda0a0c529",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d7cb41-a8c6-44f3-ae99-a810ec0741b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "842c82fe-0bc1-4871-94ab-13fddd0028ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f488b5-df39-4bb2-a958-f877223b8eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d06d8d-8850-4435-a96b-c3867ffcdcc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36070de8-85e7-4196-bead-515e44424843",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f7ef02-e3d2-4df0-b66c-008e373a5eb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0176864f-c1af-42c5-a5f3-04cbeb0cd34e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf807f5-64d4-49be-a944-35b937309be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa26c2f0-4bfe-47b7-a359-3606a0a601b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43fea7de-9dba-4155-ad82-fc32a9c5376e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3263ebd-f47a-4b33-b23f-b0ab298d5623",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40661b80-09bc-4bc3-b7ed-b53715c7702c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb67ba3f-c5b3-4500-9e19-b3715e0e2978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0aa174e-d172-470c-9727-38189ba29e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f40158-305b-4e16-acdc-5a70785c6cdc",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2090e086-b245-43e6-83d5-726bb6c164f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd1a4cc6-8d89-4a17-98e6-368067dad764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1555c6f-7e57-49d7-b51a-81455c7a4177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b8cd62-9624-4d19-b7a2-398cb0fdcd74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e5b3e9-e234-438d-903e-0c5db56f95ca",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a513761-c191-4210-811c-69de0515d219",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "898adcb3-6c1b-4fff-a256-56632be95e13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03090a3f-b1b2-4504-a639-5e3d90cc311e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c8ea1c-04b4-4f0f-9414-d3a7865f4cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e078262-82e4-4454-a49e-29ef3c584d04",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03c2ff9-424e-46ef-9ff7-ad3c20de2985",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86cfb729-dedb-4b1c-bcb5-1371cb6c1ea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae312578-59f1-4e65-b4db-79142a211c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a350d202-c025-4d10-aa07-c866e5c85ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb45141-00f6-4d1c-b2c4-d5db5222234b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de073503-c03e-4a13-bcdc-159d0505a665",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0d3be1e-c3fa-4387-a6a0-3cce6a96eeb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b61cb8c-3744-4f2c-a082-f1ad4bea18af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea752ded-2fe5-4b28-96da-70d7903e5e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a559039c-caba-4d67-b9ea-d25b77acd628",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270b7ee3-c881-4a88-85ac-85ff7241c94a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ade45945-1eef-4e53-a010-9a5b4e279d4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0aa5ee9-e288-4eeb-bcca-a514ed055aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a391ec06-9a52-47bd-8ce9-1980831590fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b649f244-9b2c-4d67-b1bc-14a72ecfa7b4",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ddc4d1-5a5a-4f53-af42-705ff6ecc46a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cc200ef-cc18-41fd-b45f-b68e98d092b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7864611d-6437-4b3b-b5cd-a954d4ef236e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fed8198e-a291-4e92-8300-9f20acffb1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd2e2f4-3c7c-40ca-aa90-b56660c246c8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d38fe5d-75a0-4a72-9116-4908892112d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b61b2c8-e3c2-425f-b62f-a494578876e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2134c781-1a45-4e81-bf05-5b0d7ddbef4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff803abf-bf08-4a64-a2cf-1762920d47c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08762d6c-1887-44d4-9a64-e807c894208b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3267992-0aef-4f55-9bc0-5a7cefa204cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61e2045d-39e4-4781-b0ed-d909c7f8bceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4faf61e1-f39a-498d-965b-1b98582a8a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c3426c6-69ce-4473-8f4c-23777464e330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b89d05-3c72-4b02-bff5-334b4a061f43",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4d923e-b42b-4bd3-9e62-ae2d6f1da93f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f31cbf3-cb6e-49df-bbda-5b79e66445b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb0ac38-ff0b-4f37-b4a3-7ccaede71642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2110e9c3-403a-481a-b6ca-1f9bbfd76e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1415b1e2-6907-4b7e-aa5e-d2d6b5b35210",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deea7bb9-d8ac-421e-a1a5-3c4a4fb85b54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e8f6cf7-6efa-4749-acb7-f8246151293d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f26d452-352f-40c6-a8b7-de3d129df8cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a5d70d-a21c-4ee8-8143-5c553d259c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32283048-218d-4ea9-b59a-079a1a4ceddd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad25ff0c-ac57-4013-aa79-efb3a2230887",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b899dc1d-5cc2-4cd8-b9c7-92c4e1074287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85667f42-9961-428d-b543-0e8e80cf6784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d9a60df-dc4d-4de0-bcf3-6365b8559065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755e45ac-ff43-4194-a320-3589b6557458",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3266feb3-b923-4c08-ab16-4a4a0e665ce0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "746a57e8-486b-45db-8663-e8cd5a4fc03a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5acc6ba0-912c-4623-b53c-97c8567176ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656975f0-1257-4c4e-8c36-8e32c50c506a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb609ac-dbd1-45db-9871-4f8bcd069894",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5253c63f-9b6a-4052-97ee-46d5814501f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8333d715-4b74-4fbf-8ba5-58ec4808f0dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdff5b73-792b-4b35-9284-4f2ced6263f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f249c13-b0ee-4782-a9f8-8b2f7af7281a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f053ea2c-559b-4955-9b2f-f28ed2afec81",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eaf787f-8571-4eba-bd85-183b8d741b26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c674978d-0d38-410e-b37d-5ab036a9fb87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d0d9f3-7873-4426-8d1f-a6aeeb718ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8102e525-fb13-4128-9212-4de6aae16e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1359b5-6246-43dd-81a7-8eebedaf152b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9f4309-04c0-431e-8d7b-16844034846a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f632f3e-8f04-4e70-9eb1-7bc553b637da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b075dc-8393-44ad-b3a7-44a5f2645094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ef7d91-335a-4f8b-9975-8c97d24536cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1cfaa78-f8f9-4670-a522-b57a17af355a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe8b1bf-d0c6-4c4e-b1ee-ae4098101b56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa6ed26b-d607-491e-b00f-ffc6ecb5c0d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa0ed15-0afa-4e08-8c51-c51eec0ff012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ed6ed1-53f4-4f81-ae2f-ebf82a8f1026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796ba5c1-85e3-44c3-adb1-596eac6cadd2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be16ccb-f902-4502-af44-4ec55d71a6b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bdadaf0-8cae-46d1-abe0-be640ed315df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e9c390-7e82-4bde-bced-4cb8de8d0f43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae7ec71-b46e-4241-bd49-81f6423a00f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f545d1-22e0-4bd5-8e58-6ae7639abddc",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef12f1ed-a7f9-477c-9d29-e30a77983ec3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e8944f5-63fb-4a61-9cec-c19f290da97e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3762a55-9808-4b25-bbb5-9dd86a02bc94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3961c8a6-6dc7-4aa1-bf4d-f0c7e9a196f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a096185-815e-4b66-a15c-770b2c3d6009",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8734aced-10ab-411e-b7ae-7efc15bb890e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56d0441a-d08a-4687-849f-f9632bda56a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaee74be-8b4d-409c-99f7-1d93b60b2cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21706341-ff82-4706-867d-bbd58b0aa0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95854f91-1042-4f00-b95d-13edc5ec5218",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c511e5-bb9d-475b-bf65-ad89e574a2c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a907acb0-204a-41d8-b8b8-57d9d3c6105a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ac523e-63b3-48e2-9ce9-47827396c07c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "476bc1d0-a37e-4ea8-b90f-1e6598064b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7fa4de-a0b0-4ee8-881d-02b7a0a8b11e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f9d67c-f2e9-4068-abf4-024e08bf1605",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cd0b6a0-691f-4297-99f0-49fcb28149d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d203b31-b6fc-4a61-bb32-9c61e21f2e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "466eb39b-0fdc-4bdb-bbad-de8023773e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc2f9e1-d9a6-4903-b87d-9f212d894260",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8adeee-c14e-4d06-999b-8fd1474555fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87b8fc44-2b6d-43b6-9007-35e379c23f6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bdec2eb-e567-42cc-941a-2c29a4a96f56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f63351e-d753-4641-a2d0-c1c48bedd52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4814bc7b-a3a2-4f16-8d6a-1e6063c14890",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c605ea-e0ed-4b43-85de-bc48818d6241",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35756282-798c-45fa-946f-234c40bcb2a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d070253-3100-41a0-ba74-53c2ada83fce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0b7819e-bb47-497d-9881-413c8c7f30ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "affe0c02-f000-4741-aa87-d5b80ad09484",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ec78bc-b3e2-4450-8029-24862302ac90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2d27f54-8ed0-40c9-9c1e-429470ddae03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fa4721-3621-459d-9a95-2c2d76992975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ec51a0-3d4d-49b9-a05d-f302f56b24e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6279f097-7ba5-4f41-9da2-2c1c3710826a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04051f71-7d94-475c-baf7-69a4283c4fe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa49d427-c6c3-4a89-99c5-49c3f4a20866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "537966a4-5ed8-496f-b40c-6d51a7e9e6a8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5c4fd6-41d1-4e65-a4e7-945270cdb846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f833e2f7-34d7-4574-8d73-1773a6a67481",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3700791-6667-4d26-8fe9-ada66bc1940a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a43fc92-a248-4d7a-8593-d1f3db15bdbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72eafc11-3f85-437e-b21b-c6b5f6081568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c4d8821-50ca-4eb8-bd1f-0f314a86bcd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f300712-8ec0-421a-981a-8feee8ef7e1e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66aba749-76c8-4d66-8d10-2a79db6e9642",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "905748ee-15c4-454f-a2df-c049d5420a50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c91da5a-a521-485f-aab0-4eac1bdaa8a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd0ac4a5-7af2-4a9c-80a3-559a3a48741a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b2ed16-cc13-4aee-bcf0-49be08c7af05",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bef5010-7eba-4c08-9b24-7aac2436682f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14e10b85-d457-4211-9985-a68e8e097e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95d949d-4416-477e-86bf-6ad0f30bdf9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d64ccc-83d0-40c4-bfbd-e7d6f67eca7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b4c6a8-0741-46ce-b4a5-b6e38476aaf4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f376185-f0ca-466f-986f-ea99708a7431",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "070c492b-4def-44f2-839f-919b60778d52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc3476e-6dbb-4d20-aae7-3a1f07acbebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f365f8f-1975-488b-9fc4-686ef9c44382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d7f8df-16bc-43ae-aec1-8b2ff1f96444",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d19a1fd-4369-45f4-9030-de00c48b25a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eab4de23-1485-48cf-b7f9-3d1c9b7d0de7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a376c112-e25b-4a98-bad4-18a978a8d8b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ccdd74-0030-418a-9418-a4442ba0aa3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e6b714-11dc-42db-bb17-6a35314fed3d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ed747a-cb3c-4286-9c5e-6dc6f0a0d7ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f3a8d61-d487-4100-81a8-d9e094ebd032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "211d37f7-593d-4b65-bca6-f19a2bae3878",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06beb5a1-9e29-41c3-9463-b41209b77017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f2d073-8432-4bb7-b2a3-48c859408106",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b39ab1-1a4b-4ef5-9f49-1e8114a1ed6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8ec5022-f787-4f25-970d-2fab241e2c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "620341f6-2774-4ee1-bda3-b0459ac3b704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35634d80-c12b-4ae9-9d02-8b1a30e40b13"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dce20424-c81d-4fbd-b620-b71174a02748",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46cdb84e-c67f-4391-a236-daea4e62817e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e5a0c93-67b9-4f31-a81f-03f365b49e10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d8dcc1b6-e1d3-4537-bba1-d3831219d37b"
                    }
                  }
                ]
              },
              {
                "id": "693d3ba6-c738-4443-8af5-7eb223b7af50",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "568ea09b-bf37-4af0-b431-ea7f99bcc969",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98de3e94-5fa3-4b3b-85b1-a3dd050e0421",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1e28976f-0946-4c07-8491-4e8f1cb81f75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c7355e-2b5e-480e-b1fc-ca1cde8229cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e579e96a-9217-4f67-857c-c44f41ebd34a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1da6d972-69f3-476a-97c6-4b5a8f543d2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab8ddbec-7cb5-4f69-8a0d-8c488ac73eba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ea650b6-6d57-49d8-8090-cf138497087b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00ea7fc8-ef6e-4f5e-889a-409858be5721"
                    }
                  }
                ]
              },
              {
                "id": "64dc1fac-faef-4996-930b-e4fa4cc2d46c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5e37859d-2662-4bb0-9051-d85556561504",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960625aa-aadc-452f-9010-c35cd20af1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4f6f5006-734d-4887-861c-338ba2f685d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11aff543-29e4-48a0-8947-00b1f26f59b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6337f9ee-50e1-4099-a43e-1da483345480"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a5f14233-1af1-4daa-91a5-a07df7f3c289",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4a742a8e-8541-4335-bab2-24952c3d94bb",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87d3e826-2289-4296-99ea-e466fe7b18d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e773022f-91d9-448c-beb9-efac8c2d4c40"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34e52b67-15cc-4f8e-8500-df9ba8be9b7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44556b46-d83b-4e65-bfb4-e35b555b0c2c"
                    }
                  }
                ]
              },
              {
                "id": "d4b5315b-555b-444a-9415-9d3007e6e599",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fbe60e7-635d-437f-a9b3-53bb9a701d10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9ebacbe2-2acf-49d3-95d8-f97860b53178"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf0546c9-ffd2-4cb3-90c5-9457f78bd2a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1eeae6fd-e64a-49e2-9eff-954c288897f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1dc5fb81-1372-43ac-bb97-f2d95fcb3a67",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e264bc0f-871e-43bd-ac26-ecf7df4f6e7d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ac5c2b0-8847-4ac6-a83d-30baeb3e17dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ee405fa-e624-4cbd-b4d0-acb04b0384b7"
            }
          }
        ]
      },
      {
        "id": "d1867805-3f2a-4fc1-90a0-a1e33bb8db3d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "55a8475a-6e2a-4d29-bcb5-50bac927d28d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f474a3f5-0776-4bbf-8017-448c019dcbf4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7bd5b703-50b0-42e1-8bcd-5049f4f2a334",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a407957d-9dad-4172-98d5-c19328273755",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1e3cf3db-f72b-48bf-9ce5-d57c568c8401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c6aa07-7863-4890-9fa3-d7600b1777bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5f3ff18-821e-4b95-9997-c3d46df3bba4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1f6138b-bfa8-4e75-9dfb-ea072d8e1655",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0568ab6d-f800-4f16-9e42-3ed32c851c0c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "de2495d7-8432-442f-ba6c-8339fc82dc3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c232c627-64d5-4fb6-a000-938ff6e60c16"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a372f3c9-944e-42b3-9028-1dc772f917c2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1ddeaacf-45cf-4edd-9102-8f2d8142600f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9010e5dd-e4cb-4f6f-bf0f-9d7936d426ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7fabf060-4c06-4903-a26a-3e883399a381"
            }
          }
        ]
      },
      {
        "id": "a8a1dc6c-874e-4465-a826-a5f801d9e911",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f766b338-e7e3-41bb-82ad-187ca8932c60",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a7be3023-aa14-4912-8568-e831768e7f95",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d77dc2fb-2540-4389-b379-9b589f6f6ed6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7371478f-ccc2-4510-a78f-29ea697e3c6f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c8a99ec-a0bf-4fa2-bdd7-6ee163ae689b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "990728b1-46e9-4d9a-849b-fb1cd4a08234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd85bbc8-fbd6-45a1-86b8-bf0ff26d3191"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9192d42-c155-4233-a8f4-dd7ddc8db908",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86aef289-8290-4978-bdcc-99936c5c3105"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "47be7be9-414e-4c4f-9113-6acb5689414a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c75d2761-ab85-4620-86f6-4c15383d85cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "309a6a64-19f4-4706-8240-d81a18370b54",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "52a4340b-bb16-4085-bdb8-a499554fd905"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96ca7889-3b5f-4863-88a9-7afb6d698eb0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b2d3d7d0-63a7-414f-8328-d910541258da"
            }
          }
        ]
      },
      {
        "id": "055d2d8d-3248-4c61-b474-e017ac4cf437",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a14114a4-2aed-41a3-98ee-cf2c08e5c7a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2595f62b-05d9-4dcd-8b6a-4b4c9bf17b9a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e611959-ff37-48ba-9378-733b3e443a3b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c23cfa-a514-490a-8481-b968a670f9ab",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4251d18-3572-45e9-8583-4386c465c862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa0f458-b826-47e4-b1bd-d2479b57e692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b75c5ee-dd50-4db2-bb09-d51a095b279c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be24a994-cb7c-4086-bb0a-3920a84ba08c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9881e17b-39df-4a64-bcca-049fa28f55f5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4962758c-7344-4143-981c-7188b500579e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f465681b-a345-4db4-93c4-bacefaeca36f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e74f9a7d-8009-48c8-ad65-1c3051e6fabc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4c7e4996-242a-43e7-a5b4-8e12b360e58c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc728907-9986-45cd-a289-ab5bcb7ad668",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c40ad3c1-c161-4bd1-a10c-84a19a34662f"
            }
          }
        ]
      },
      {
        "id": "88e11c21-465c-4493-8240-2b597e98a11d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0816253a-b88c-4b5a-b59d-ed8802cf6551",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "376df6a4-927e-4645-86d1-629fa8b8eef4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8c3d97f0-0c43-4056-ba7e-aac6d31c26f6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5283d56-6cc1-4569-8151-fd3764577718",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "65c41bf7-72b5-4b9e-9d2a-440a11f7740c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 234.67957746478874,
      "responseMin": 15,
      "responseMax": 7051,
      "responseSd": 770.4285432713064,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691109616207,
      "completed": 1691109695751
    },
    "executions": [
      {
        "id": "02d5f70e-1f8b-442f-87cf-939e71ccf410",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0442f0ab-4528-4711-b6a3-0f2cfb8ea541",
          "httpRequestId": "bee5ae65-cb17-4ef4-b340-56006c0142c1"
        },
        "item": {
          "id": "02d5f70e-1f8b-442f-87cf-939e71ccf410",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "797c24b7-d749-4cd7-be5d-c2cb30e001e0",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 0
        }
      },
      {
        "id": "14546a5a-f62f-4b64-851f-55880425c151",
        "cursor": {
          "ref": "6dce5596-193c-4b62-97df-95ef1046f54e",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "730a13a7-5d6b-42ae-bf45-b38ceb276636"
        },
        "item": {
          "id": "14546a5a-f62f-4b64-851f-55880425c151",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e7899370-369a-4d26-bd27-4e7896bad63c",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "4f3997c7-b5bb-4f4b-b706-059989d73f44",
        "cursor": {
          "ref": "c9a1ee4e-1aa3-47de-a223-e12d94967e8a",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6c75376b-65d4-4327-9999-c78eac1fee87"
        },
        "item": {
          "id": "4f3997c7-b5bb-4f4b-b706-059989d73f44",
          "name": "did_json"
        },
        "response": {
          "id": "97e271b8-508b-44c6-935e-ecb5786e215e",
          "status": "OK",
          "code": 200,
          "responseTime": 435,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd4acaf-8245-4995-bb39-b5931c686aba",
        "cursor": {
          "ref": "6284cb9e-2efb-4d10-8fed-e0ef510fec19",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "868dba0f-2f59-4420-9799-6ef301f2ff63"
        },
        "item": {
          "id": "fbd4acaf-8245-4995-bb39-b5931c686aba",
          "name": "did:invalid"
        },
        "response": {
          "id": "8072d2cf-2f25-4ab0-81cc-376c4929b33f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1623,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd4acaf-8245-4995-bb39-b5931c686aba",
        "cursor": {
          "ref": "6284cb9e-2efb-4d10-8fed-e0ef510fec19",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "868dba0f-2f59-4420-9799-6ef301f2ff63"
        },
        "item": {
          "id": "fbd4acaf-8245-4995-bb39-b5931c686aba",
          "name": "did:invalid"
        },
        "response": {
          "id": "8072d2cf-2f25-4ab0-81cc-376c4929b33f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1623,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7ddee4-6e71-4e2f-8099-e50c537df11e",
        "cursor": {
          "ref": "5bd75ada-8b8d-4135-8dff-81e595079450",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "73e1afb2-5744-4df4-9dc9-3bfaa64df058"
        },
        "item": {
          "id": "ac7ddee4-6e71-4e2f-8099-e50c537df11e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "78dcc37a-0f3b-43b0-8bc1-691e592ae754",
          "status": "Not Found",
          "code": 404,
          "responseTime": 102,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfff26e8-7e34-48b5-b65a-29f497c2d207",
        "cursor": {
          "ref": "23747385-3249-41c2-b788-4fab98241e2d",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0f85e934-a5ef-42a8-b660-c1130fd1ec5b"
        },
        "item": {
          "id": "dfff26e8-7e34-48b5-b65a-29f497c2d207",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5129f33b-b45b-4c27-a45c-ef205e21d0fd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 43,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701fb08a-3b5f-4815-b3ea-105cd69c5cda",
        "cursor": {
          "ref": "e1f793e2-e33e-4f55-a3d9-de6e3c0555f3",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "cc44e17e-c56b-46d3-af82-10da6e3df6b4"
        },
        "item": {
          "id": "701fb08a-3b5f-4815-b3ea-105cd69c5cda",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c421e3a8-6676-4b7a-882a-b69cac6aab92",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a64515-88a9-4787-9737-49a9cc1366ba",
        "cursor": {
          "ref": "3f68e868-57cc-4b2c-a105-b5d2f99a3dfc",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e1d21f10-0f48-4ed6-a50d-31f48c6fa91d"
        },
        "item": {
          "id": "41a64515-88a9-4787-9737-49a9cc1366ba",
          "name": "identifiers"
        },
        "response": {
          "id": "f37e7d11-9100-4b25-8778-aeef097f2cde",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705dad8f-6a3c-4add-a828-8a2b445d6642",
        "cursor": {
          "ref": "adc49d41-b537-47b3-9236-8909fed14e7a",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6e67a56b-0532-4d2c-b3e4-d5b3a2179ded"
        },
        "item": {
          "id": "705dad8f-6a3c-4add-a828-8a2b445d6642",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4ffd9234-8eaa-47dc-9448-59b5e46fa891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb61d83-b6d8-4603-bc4f-dd863c49f816",
        "cursor": {
          "ref": "48e19a35-98f7-4d28-b1b2-a9aa803cab22",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "70d5d56a-4c8c-467c-8cb9-0ae46dfca59d"
        },
        "item": {
          "id": "9cb61d83-b6d8-4603-bc4f-dd863c49f816",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2811b3c6-0cea-491b-be8c-a96f80cfd980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 187,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcb6c50-00cd-41de-903a-a956d5d10df1",
        "cursor": {
          "ref": "4781eb29-1c20-41c3-9958-fa07aa16cfcc",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d61f412f-b81f-404c-827d-ff3fb7bf1aaf"
        },
        "item": {
          "id": "2fcb6c50-00cd-41de-903a-a956d5d10df1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "fc527065-b5d1-4289-abaf-429474725a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465d7f1f-713b-40e2-a0ed-d7793976d8db",
        "cursor": {
          "ref": "d47a5866-3adf-47a1-b2c9-f35f2d4ff060",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "73bf0384-e14f-4da4-ab47-fc244d2f593f"
        },
        "item": {
          "id": "465d7f1f-713b-40e2-a0ed-d7793976d8db",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7e3a7dcd-e28c-4adc-a289-f815155c0a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18a3512-e1a3-4144-bf3c-f68a61f914ec",
        "cursor": {
          "ref": "6c0bdac1-7aa1-461d-85c3-ba893dca79e4",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1c0ea1e2-3225-495b-bbd2-6eae754f75d2"
        },
        "item": {
          "id": "a18a3512-e1a3-4144-bf3c-f68a61f914ec",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ec02ca2d-678a-4818-99ee-0a8497ec7d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcae7877-b362-46d6-8ef7-07862fe30b11",
        "cursor": {
          "ref": "3f96067c-7ca6-4d65-915b-603322c90a50",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b4fd80fd-d458-4497-bf85-a5313f466bf1"
        },
        "item": {
          "id": "bcae7877-b362-46d6-8ef7-07862fe30b11",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5ebfdf7f-9fcf-4a95-98bd-3fc9c47e74a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1d0e90-02b6-496e-b9e5-5f5801b6e029",
        "cursor": {
          "ref": "4164ac50-dd54-4082-8575-a27ed41712d0",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "87881b0e-50aa-46b4-ae23-a6feecf5bf76"
        },
        "item": {
          "id": "0c1d0e90-02b6-496e-b9e5-5f5801b6e029",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "91477e38-6f09-482c-a2a2-960fd362a884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207b049d-61b9-450e-ae91-7364c00bb3c7",
        "cursor": {
          "ref": "cc072fec-e852-4a05-95cb-ece26a36bd0a",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "855b537f-a63a-47b7-8d69-e9ed8a36adac"
        },
        "item": {
          "id": "207b049d-61b9-450e-ae91-7364c00bb3c7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3c02897c-805f-482f-be0c-89a59e5dd352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80214b84-65ca-4b25-bee2-0f4ba353a6c9",
        "cursor": {
          "ref": "6d971b2f-3016-45a2-be11-ae254ed69fff",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a9d972bb-91cd-42d4-a431-e5a07e299308"
        },
        "item": {
          "id": "80214b84-65ca-4b25-bee2-0f4ba353a6c9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ebe6bfe1-139e-4b87-b936-2f6fc34a8439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e64acd-7800-4a44-997b-9ca015e1f78e",
        "cursor": {
          "ref": "a7c2a0d4-6735-4a94-82f5-86d7081a0338",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5f59f9c2-611a-4e60-bdec-2fed92d5c90b"
        },
        "item": {
          "id": "47e64acd-7800-4a44-997b-9ca015e1f78e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "60bd9d8d-3bcc-4e61-8527-04f6352f405d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a053a83d-d310-4eb6-b9cc-3246c03ff352",
        "cursor": {
          "ref": "14eaf7f3-7fa3-4b53-8367-9e126457ef85",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5c4826d0-7999-4d78-a712-75e490893f52"
        },
        "item": {
          "id": "a053a83d-d310-4eb6-b9cc-3246c03ff352",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6b37afc5-f0b7-43e9-badb-02009f779251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e224e8af-f456-47a1-914e-b6ed38b66c7b",
        "cursor": {
          "ref": "595c4d1b-aa15-4a18-aa95-555fa45c52be",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e78bf158-5d53-4508-a510-920d9de85786"
        },
        "item": {
          "id": "e224e8af-f456-47a1-914e-b6ed38b66c7b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "babd1a84-2018-41f0-8d86-58383e98436e",
          "status": "Created",
          "code": 201,
          "responseTime": 955,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "ce1fcc85-d635-4425-8868-b5db1e2aa3e2",
        "cursor": {
          "ref": "3df91494-3b4e-4716-b1a1-f7fb224bffea",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fe596964-0d7a-4645-a71f-d6663f18122e"
        },
        "item": {
          "id": "ce1fcc85-d635-4425-8868-b5db1e2aa3e2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "97a012c6-1285-44d4-a717-407b7e201476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22837e2-84b4-4a32-8d0d-96b155affd6b",
        "cursor": {
          "ref": "dc026fed-7398-4e17-8a3b-8e1aec13362e",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "39602733-4003-4ae6-acf6-a3a59a7b420f"
        },
        "item": {
          "id": "e22837e2-84b4-4a32-8d0d-96b155affd6b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e5f4b6f8-0e6d-4041-b245-7b5540ddce01",
          "status": "Created",
          "code": 201,
          "responseTime": 7051,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "4ab543b4-1d21-484d-b632-2ba28e4e6363",
        "cursor": {
          "ref": "903e9153-de61-4219-85c3-dfb7502fe445",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d1767c29-c869-4248-9582-b95ef9bfb1bb"
        },
        "item": {
          "id": "4ab543b4-1d21-484d-b632-2ba28e4e6363",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e1d5974e-577a-49b8-b6dd-377e0acbc8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d257e6d-6e62-4817-bd54-4de314726b0e",
        "cursor": {
          "ref": "dae5b209-c4eb-48c3-9aba-496f14ec6dd5",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e8121dae-5353-41db-a3cd-5689d9760388"
        },
        "item": {
          "id": "6d257e6d-6e62-4817-bd54-4de314726b0e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d78cc1b1-1430-44c7-94e1-4adda3c6aff2",
          "status": "Created",
          "code": 201,
          "responseTime": 3051,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      },
      {
        "id": "1e233edb-60eb-438b-8b2f-ca45bcc87307",
        "cursor": {
          "ref": "23f79e87-efba-45ca-beea-730a90e09afc",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "389bc53b-3834-4319-bb93-e8e55fc95abb"
        },
        "item": {
          "id": "1e233edb-60eb-438b-8b2f-ca45bcc87307",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4232418f-f6b0-4656-a6b2-83f7ac643d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b661f15-03c2-4c81-bc91-a98d12923717",
        "cursor": {
          "ref": "4b878f11-2f40-4e27-b6fc-019c05c959ef",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a7b34f39-63c9-416a-803a-cf4b7dfc6276"
        },
        "item": {
          "id": "3b661f15-03c2-4c81-bc91-a98d12923717",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0c70698a-086b-42a6-ab57-a54abf47a0f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2bc94b-3d39-47b5-8a1e-88fde95152a9",
        "cursor": {
          "ref": "bf05c8e6-24ab-4be8-8d5c-99de1708b495",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "cc14e92b-67b5-4e2e-bc19-dba9a6d8ffae"
        },
        "item": {
          "id": "fb2bc94b-3d39-47b5-8a1e-88fde95152a9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c6bbf032-7b2a-4955-bba3-1764dfb01efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9bbfb93-4cd5-4a15-8041-fdd6448c60b2",
        "cursor": {
          "ref": "bc7ad261-bd6d-4ac1-b83f-fde04504f867",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f054135d-b725-44ea-8c2f-70dd126b7f67"
        },
        "item": {
          "id": "d9bbfb93-4cd5-4a15-8041-fdd6448c60b2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "35dfc525-e9a8-4e7d-a88c-f8b88b3f4527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669db718-4a59-482f-b808-0705140c5599",
        "cursor": {
          "ref": "7470d033-5f35-42ab-b25a-cd8c423b8600",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9c95d843-d90f-447c-9525-fe422d7064f1"
        },
        "item": {
          "id": "669db718-4a59-482f-b808-0705140c5599",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "53166209-c806-4a98-8b9b-c4f757906dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67879c16-7f85-4fc3-833b-d88387235da1",
        "cursor": {
          "ref": "2622ae3d-2f5f-4eff-bfa1-07bc2cd2de59",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4e7d31a1-4121-40db-97eb-b4081446ea5a"
        },
        "item": {
          "id": "67879c16-7f85-4fc3-833b-d88387235da1",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f2a816af-0558-4fd0-bea1-d135554d6245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2dc7811-80ef-45a5-8e8e-e0d74aad7aa8",
        "cursor": {
          "ref": "2405ec4e-36c1-4dad-8ab1-92b74a3970e3",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ba27c0c8-ebc7-464d-b72b-4f5339717c3b"
        },
        "item": {
          "id": "c2dc7811-80ef-45a5-8e8e-e0d74aad7aa8",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f606ed78-128f-4d75-aac3-d4fdd4686c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7067e968-7641-4b5c-a370-0d17aec06a48",
        "cursor": {
          "ref": "067f803c-b792-4872-869a-09b65f1fcd11",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7b6406ef-b035-4ec3-a828-c33c29bf4b87"
        },
        "item": {
          "id": "7067e968-7641-4b5c-a370-0d17aec06a48",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "756d2582-afd8-42c3-b94f-60e2a9f62e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5327f160-9950-43f8-840f-8f64a8f3eeb1",
        "cursor": {
          "ref": "a1797742-f4d7-4aad-858d-c25af0bfd067",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "35859047-b44f-484c-930a-fe819e60fac9"
        },
        "item": {
          "id": "5327f160-9950-43f8-840f-8f64a8f3eeb1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d737691b-cb33-478a-be56-e4d0a7640a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b773c9-6136-4a70-bf94-394c47a745be",
        "cursor": {
          "ref": "a1db4317-4415-4533-9940-bf6a8cf37dc7",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "01c792a7-e457-4a05-948f-08ea90a982e0"
        },
        "item": {
          "id": "08b773c9-6136-4a70-bf94-394c47a745be",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b7d52948-537e-4fd1-bde3-c25e4330dd9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ad22c3-46f0-4c8a-9406-86f0f60ad5af",
        "cursor": {
          "ref": "254957a6-e2c0-43c4-8620-a88f50f10720",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "46d09150-292d-4ec5-a87f-b3ffcede86b4"
        },
        "item": {
          "id": "77ad22c3-46f0-4c8a-9406-86f0f60ad5af",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "937bbd08-a93e-4901-91a5-4e43335bc3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132c89dc-84ff-4be7-9edc-5da163360867",
        "cursor": {
          "ref": "3932884a-bb13-408f-a251-571d03e5177b",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "05c7cce7-dce1-48e7-980d-695cdd662ab3"
        },
        "item": {
          "id": "132c89dc-84ff-4be7-9edc-5da163360867",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "20c6a1f5-40fe-41c0-b7e9-b2f18a74d2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3d9e10-c925-4c28-8ea6-6323e1063aaf",
        "cursor": {
          "ref": "63135844-ce0b-433f-a192-3e5d7614f031",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c4fe32bb-43d4-4c51-bfaa-20029600125e"
        },
        "item": {
          "id": "2c3d9e10-c925-4c28-8ea6-6323e1063aaf",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c8d40373-25c2-4331-bd26-7a1f0cb4ac88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e134458c-a545-4bc9-a053-47f0c1669cc2",
        "cursor": {
          "ref": "437b1007-0ae9-4a3b-ab5a-c21998b278a0",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2124f7ca-9dcf-4eae-bfa1-eb30a54a38a2"
        },
        "item": {
          "id": "e134458c-a545-4bc9-a053-47f0c1669cc2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1bd0ddc3-97b0-4367-859a-8e349e7d8c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85029f4-69f3-49cf-928b-93f4b1320ef3",
        "cursor": {
          "ref": "3ff930f7-8f10-4d6f-ad36-2cad83106dc0",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "651c698a-1cd4-4e07-958a-bab3614023bd"
        },
        "item": {
          "id": "f85029f4-69f3-49cf-928b-93f4b1320ef3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b683e0a2-5f80-4a39-bf64-98a68c7a9907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1cefc54-d467-452e-8352-b1267fa6b537",
        "cursor": {
          "ref": "bd21eeef-65f4-416c-a6bf-56dac7250e43",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "461e6e70-2b22-4e02-8a4a-e5d05c1de1a4"
        },
        "item": {
          "id": "e1cefc54-d467-452e-8352-b1267fa6b537",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3e982a58-a7d7-4d6f-8504-663fd5655970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2172964-8206-4b86-a7f2-a213fcfc86d7",
        "cursor": {
          "ref": "d109fde1-531a-4902-9308-728a897f6a6b",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9629442b-f2eb-470c-9ec4-0056ea9414ad"
        },
        "item": {
          "id": "b2172964-8206-4b86-a7f2-a213fcfc86d7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "45ae182a-609e-47a3-b3f4-56250ff86d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8cfd54-f079-41a4-bd50-ddda9b9c5c6f",
        "cursor": {
          "ref": "08e72890-d69f-49f9-a962-23862fa49f96",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c92135a7-11f3-4024-b4d6-4d8f1ffd594a"
        },
        "item": {
          "id": "eb8cfd54-f079-41a4-bd50-ddda9b9c5c6f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "bbe1ff9b-b9be-4f20-ae72-0d14ccfa3446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86a66af-166e-448d-9209-e5eb22dd3ba0",
        "cursor": {
          "ref": "2cb655cc-a8d1-48e2-91d0-a7b0f00f78fc",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8be2b31c-48d1-435e-b9b0-8f9c4b70e914"
        },
        "item": {
          "id": "d86a66af-166e-448d-9209-e5eb22dd3ba0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3e0f5516-0fbe-43f7-a4fd-43c4185766ef",
          "status": "Created",
          "code": 201,
          "responseTime": 4149,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:43)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:43)"
            }
          }
        ]
      },
      {
        "id": "37fb399a-b037-4db7-9911-ec80bac1287a",
        "cursor": {
          "ref": "37af9ed7-5f78-4fe8-bb1b-d22fec83c422",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "577f5ec4-c981-4031-86fd-cc6d1127f327"
        },
        "item": {
          "id": "37fb399a-b037-4db7-9911-ec80bac1287a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cc06e03c-2252-4ea6-85a5-9d2a4ac4277a",
          "status": "Created",
          "code": 201,
          "responseTime": 5420,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "ae461a0e-8c65-4044-b139-5334cbe1327c",
        "cursor": {
          "ref": "2b0edf04-b308-4ff5-be9d-7191c8f05b04",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d88a6046-6a56-45d7-917c-1c1606b9e1a6"
        },
        "item": {
          "id": "ae461a0e-8c65-4044-b139-5334cbe1327c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "599a15ea-6f55-4a87-ab8b-332f66b53406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8331ab5c-08af-41f1-9e55-9fa5125eb176",
        "cursor": {
          "ref": "bbfa5ed5-c7cb-404c-9379-fb03d99790a6",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "97867fc7-35b2-4479-9d34-dadc6a084c94"
        },
        "item": {
          "id": "8331ab5c-08af-41f1-9e55-9fa5125eb176",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "be8ea875-2f79-43bc-852d-fb16ffcda082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88f4cd2-e739-45b6-ad44-45f63137f671",
        "cursor": {
          "ref": "30446d2c-e9e0-43fb-9fc2-57927a063021",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fb852083-e7be-4af3-bbfe-6e940f38b854"
        },
        "item": {
          "id": "e88f4cd2-e739-45b6-ad44-45f63137f671",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "64c81399-52a5-4865-824a-6da322700d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a100ea7-e801-4f1d-8310-6c3acb4453ea",
        "cursor": {
          "ref": "3fb4fcce-b55c-40d5-b090-1d877cf254a0",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e29da3c8-7390-46f7-821d-672ef813be2e"
        },
        "item": {
          "id": "8a100ea7-e801-4f1d-8310-6c3acb4453ea",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ae1f775e-8152-4cc4-a8a0-261ef0240416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f21a8d9-e1de-45cf-a721-3a748196385c",
        "cursor": {
          "ref": "c8827f11-6fee-4517-940e-aa6a9093fc8b",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "be793eac-756c-49b3-8d97-7c9256922d36"
        },
        "item": {
          "id": "8f21a8d9-e1de-45cf-a721-3a748196385c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c7548216-f313-4b96-82f4-7052709a54d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bc2df6-81cb-4784-902b-d149a739e002",
        "cursor": {
          "ref": "d8428407-e860-4c9d-89bc-c2df16a9738b",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d287de98-7abc-4772-85b8-187a0fc9053f"
        },
        "item": {
          "id": "39bc2df6-81cb-4784-902b-d149a739e002",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0bb8dc2e-5ce4-4f22-a708-152588952247",
          "status": "Created",
          "code": 201,
          "responseTime": 2771,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:50)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:50)"
            }
          }
        ]
      },
      {
        "id": "ba09861c-ebe5-4040-97e6-6f23dcc041ad",
        "cursor": {
          "ref": "da8169a3-4df0-4cba-a338-b660218bb239",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ca30f07f-3744-497a-927a-40bdf2e7bb65"
        },
        "item": {
          "id": "ba09861c-ebe5-4040-97e6-6f23dcc041ad",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8cd2e08f-fbc6-46c1-9b14-7cb1f1fd05f4",
          "status": "Created",
          "code": 201,
          "responseTime": 2517,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "07304c07-e89b-4639-989e-d911599a2683",
        "cursor": {
          "ref": "dcd6655a-6366-4970-9215-e74111cb9086",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "01bc5121-4e6f-4339-a8f1-1e3f0fd4497f"
        },
        "item": {
          "id": "07304c07-e89b-4639-989e-d911599a2683",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9d1050ec-413c-4c09-80f6-2c7fc2b23b24",
          "status": "Created",
          "code": 201,
          "responseTime": 2426,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:52)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:52)"
            }
          }
        ]
      },
      {
        "id": "5a8754ad-42e8-42fe-a895-31621f66e8a5",
        "cursor": {
          "ref": "234361bf-4d2c-46bf-b7d3-e57120ee5d53",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2ab3d1d6-b75c-4ce3-876b-bdd2052ab349"
        },
        "item": {
          "id": "5a8754ad-42e8-42fe-a895-31621f66e8a5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2d007048-9650-447e-82ad-91b062ee42b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9460f9bb-ea69-44e5-b009-9ce9c3692715",
        "cursor": {
          "ref": "26a5b7dc-0b5c-4225-8d93-4181d9c276c5",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3cf5111e-bd08-43b2-aa0d-ae835356eae6"
        },
        "item": {
          "id": "9460f9bb-ea69-44e5-b009-9ce9c3692715",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6d9850b7-417e-488c-a7e8-51c2e85d96f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b816299-2315-4b2f-bd01-6e4b5fefcfd6",
        "cursor": {
          "ref": "b7fa23b9-48d7-42bc-bdc1-50a23c705b28",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "33f33c00-2894-42a2-8d77-c7503e9ab861"
        },
        "item": {
          "id": "1b816299-2315-4b2f-bd01-6e4b5fefcfd6",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6ec2b717-ea28-4afb-abe3-e766ad36fa05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5879a093-48b5-47cd-96a0-d3676d57e604",
        "cursor": {
          "ref": "35861530-fa97-44e3-876d-ed8fe201cc02",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e22bfbd6-235a-4478-b761-1fa3b872e8c1"
        },
        "item": {
          "id": "5879a093-48b5-47cd-96a0-d3676d57e604",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "77d4cb41-30f1-48f7-a5ae-703216689a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de647e01-021f-4092-8292-5ce6458a7cb4",
        "cursor": {
          "ref": "ec164d89-b5b8-4304-a034-98223812c8d1",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a89e251a-a2b3-4580-b231-badbc4f4ef4d"
        },
        "item": {
          "id": "de647e01-021f-4092-8292-5ce6458a7cb4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ffbdc114-7875-448f-8fa0-3a0bc6fd5071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d326e6-63bf-428b-b73a-9a71f1a57002",
        "cursor": {
          "ref": "02a251f9-5aa3-4c2a-a78c-0bc432d426fb",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1caeceb8-e5c5-4eec-9f9a-260d40d2ca42"
        },
        "item": {
          "id": "c3d326e6-63bf-428b-b73a-9a71f1a57002",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "28fb6dd4-987f-4269-84d8-04ca0be32eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a4733b-4b54-489f-a58e-1010b4899067",
        "cursor": {
          "ref": "2b82b82f-edca-43d2-a526-001add0e32aa",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1bf4d489-4ae8-4928-b5fa-86dd7c8cdcc7"
        },
        "item": {
          "id": "17a4733b-4b54-489f-a58e-1010b4899067",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e9c2c577-48f5-40df-9d7b-005ad03bb9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a652e3-c3e3-473e-bf84-4c6e233205ba",
        "cursor": {
          "ref": "73e9ff1d-e74a-4da5-9d3e-b4c13e5e5549",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "274b35e8-5160-4b76-ad15-f7b3da079086"
        },
        "item": {
          "id": "27a652e3-c3e3-473e-bf84-4c6e233205ba",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "db84d6a6-0f30-46b8-9379-41a68a6ad587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9368c224-950a-4645-b771-85805b0a3f9c",
        "cursor": {
          "ref": "f5c6ab06-e496-4203-a6c1-c624bc47dd96",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1dc09be6-3913-4ff5-8f7e-98d0a26f807e"
        },
        "item": {
          "id": "9368c224-950a-4645-b771-85805b0a3f9c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "807fc7c4-6751-4d6d-a05e-853dcc32a745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40350820-5197-44d3-9167-6338c899cb7c",
        "cursor": {
          "ref": "5f85aad1-126b-43ca-826b-496d66eee684",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7cf02589-114b-4a1d-9eb0-187632844967"
        },
        "item": {
          "id": "40350820-5197-44d3-9167-6338c899cb7c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3db1addf-88a5-4b02-9573-bb610097af0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46a263d-82d7-4c55-a8dc-792d287fd92e",
        "cursor": {
          "ref": "a94f42c9-3003-4f57-932f-440db1595aa0",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "386d12e5-8656-4d01-ba43-6a8c59de6522"
        },
        "item": {
          "id": "c46a263d-82d7-4c55-a8dc-792d287fd92e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "04a0d3d5-3802-4e8f-8189-d13363f26116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04685f81-af5e-45de-b024-78014527ddac",
        "cursor": {
          "ref": "f54224f3-e60d-45e5-ad6a-dd619f636a4d",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6d43a6b0-afce-4dd6-9209-db0a289b6cf1"
        },
        "item": {
          "id": "04685f81-af5e-45de-b024-78014527ddac",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b794637d-9f37-4e54-9714-50ac06b69b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6348cba-2bac-4668-b703-ab63a49bed75",
        "cursor": {
          "ref": "efc33f28-8d70-4456-8ba0-82f8fa7dcbd0",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e59f3521-ea82-42c3-b113-70ca8597cb5e"
        },
        "item": {
          "id": "e6348cba-2bac-4668-b703-ab63a49bed75",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9b6333de-6e19-424b-b583-9f50511c2c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c301277a-bab5-4b6a-b369-07e6e99b10aa",
        "cursor": {
          "ref": "92c25d20-0734-44d8-a268-5b8db18e86b0",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ea6647ec-4968-4764-9a2e-af6c4a237fc0"
        },
        "item": {
          "id": "c301277a-bab5-4b6a-b369-07e6e99b10aa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "45dcd18a-d295-46a1-a981-f34bd34c865a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5121839-db0f-47e0-a6bf-ee6e2699f46f",
        "cursor": {
          "ref": "331759b9-fcc4-4952-8362-2cff5f5144d5",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e72edc68-2357-4fcd-88d4-24b1e20f93d5"
        },
        "item": {
          "id": "a5121839-db0f-47e0-a6bf-ee6e2699f46f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "51d9d791-01f2-4d5e-90fd-4a73350d1e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9e6bac-59f3-4858-bdb3-111f3bc1a8f3",
        "cursor": {
          "ref": "e089d3c2-5dff-44d7-a4f8-78815cf98a35",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b2c646d5-ee3f-421c-8d92-e6377bad65bf"
        },
        "item": {
          "id": "2a9e6bac-59f3-4858-bdb3-111f3bc1a8f3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c5cb7b5b-c3da-47ee-a3e3-1af5373d626c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce6a5ee-d3f3-450d-bd7b-e712a824b326",
        "cursor": {
          "ref": "edfd2dbc-8789-4451-9c7f-be1d3e711379",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9c180c59-4d58-46db-91f0-cc65691b88d8"
        },
        "item": {
          "id": "bce6a5ee-d3f3-450d-bd7b-e712a824b326",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "78b38a0b-c1f0-4ff7-be41-013a4b3eb23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479686f4-ba43-45a8-8a19-e59d1da92a02",
        "cursor": {
          "ref": "718dfc81-fb00-42e7-a181-56cfdf56d576",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9df31abd-6bc2-4fb7-8e13-c59d9bdfdf9b"
        },
        "item": {
          "id": "479686f4-ba43-45a8-8a19-e59d1da92a02",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "338ece02-f17e-4458-9af6-4335269b9b2a",
          "status": "Created",
          "code": 201,
          "responseTime": 2233,
          "responseSize": 978
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:70)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:70)"
            }
          }
        ]
      },
      {
        "id": "8cd059c6-27de-4cdb-a2cd-ee133c4a1862",
        "cursor": {
          "ref": "203c66fa-f604-4b34-bdee-c5d1af628a6c",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "59831066-2f6f-4139-8d26-5e93dd1bc311"
        },
        "item": {
          "id": "8cd059c6-27de-4cdb-a2cd-ee133c4a1862",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6357c83f-7bd5-4acf-bfb9-697a909e0f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e1617e-8227-4c1b-a02f-882d10ac3ff0",
        "cursor": {
          "ref": "56e4cc10-8d15-486e-84d1-505abde12855",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2f0208a4-4fef-41dc-8e94-b6828889770a"
        },
        "item": {
          "id": "64e1617e-8227-4c1b-a02f-882d10ac3ff0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "85ade6a4-802d-4f86-8399-73445059a2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7922b3e-2370-4dde-879d-d44ab6724e3b",
        "cursor": {
          "ref": "0a573be2-af13-4518-8782-c9ffbc23196a",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "29a6ad44-ed47-4b15-9dae-c6c5106bdbf2"
        },
        "item": {
          "id": "b7922b3e-2370-4dde-879d-d44ab6724e3b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bcff8d3c-b25b-4962-9002-d697db414fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3d0706-5c01-4bbf-85ab-2adae551425c",
        "cursor": {
          "ref": "1e350880-eae8-4382-a1cb-1dee238dc505",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "62b5bb71-4e43-462d-83d2-86de37ddefa9"
        },
        "item": {
          "id": "8a3d0706-5c01-4bbf-85ab-2adae551425c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e0e6c438-25db-42e5-9ae0-085dee204446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc04b9ce-8b83-4501-9f2a-6a027bacf56b",
        "cursor": {
          "ref": "f6c423c8-3ba9-4c9c-99f0-e9db4da0f69b",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "dcc27366-3451-44e9-8fd3-0e22e0dd2c61"
        },
        "item": {
          "id": "dc04b9ce-8b83-4501-9f2a-6a027bacf56b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "07eb10ba-6040-4cf3-be96-981bcb3527b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062cddd3-edca-455e-8e39-fa5cd06b022d",
        "cursor": {
          "ref": "085617d9-237a-42c4-8644-8e1f24ec0bc5",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1c991ffb-64e5-4be2-8b79-12111df91c3f"
        },
        "item": {
          "id": "062cddd3-edca-455e-8e39-fa5cd06b022d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "dfe67b48-caa7-4fec-81ce-ea5c837c2a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd658e57-ddad-423d-b2ec-a68e614573cc",
        "cursor": {
          "ref": "3a042f9a-0231-4b17-a3e5-64bdca43a9ae",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "67e63f31-e2f1-4bc7-aa3f-591e58b80fa7"
        },
        "item": {
          "id": "fd658e57-ddad-423d-b2ec-a68e614573cc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "23d6be25-d8df-4cb2-8276-8fb2ad561737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf30b24-1a64-46f9-9345-1d3dcd77fba5",
        "cursor": {
          "ref": "3e195d3c-7d83-4730-bec1-1f9d0e7319ae",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9e4156a2-c596-49f3-ae93-861d99308772"
        },
        "item": {
          "id": "2cf30b24-1a64-46f9-9345-1d3dcd77fba5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ced6c712-a29f-4b0d-af84-d45f52966cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aceaa08e-7388-484b-a2f6-7c7d2e5c7a16",
        "cursor": {
          "ref": "62cbdb4b-7115-4183-9036-73f66e560606",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fdca8570-bb5f-46f5-a870-a2089ea99eca"
        },
        "item": {
          "id": "aceaa08e-7388-484b-a2f6-7c7d2e5c7a16",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f12fb56a-b372-4539-ae18-57c04f06d696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05011ff-3da8-4e21-a918-512c087eee96",
        "cursor": {
          "ref": "de0e4e13-62f7-4470-b423-d253fe8dfe6e",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1ab72984-63cd-4fd9-8ed8-a02fb14fb530"
        },
        "item": {
          "id": "d05011ff-3da8-4e21-a918-512c087eee96",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "25d1ff9d-e6f3-4672-b6d8-c8a9b30b0452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d6803b-8dd0-4b3d-9c16-c60e8c9238dd",
        "cursor": {
          "ref": "8187edd0-d86e-41a0-9073-d5fe9adc59b3",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "29a6256c-70f2-4f54-a1d4-07406ba72b4c"
        },
        "item": {
          "id": "a4d6803b-8dd0-4b3d-9c16-c60e8c9238dd",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b5175961-af4f-496f-9f4e-27eaf730a6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41982b9a-8be4-4d35-96ae-82b2c6c4d582",
        "cursor": {
          "ref": "fbb3eaaf-9fab-4471-b00b-1bfc77af7309",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "33ba4349-e0fe-404c-a2a9-8c8c2cbd0485"
        },
        "item": {
          "id": "41982b9a-8be4-4d35-96ae-82b2c6c4d582",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d8995442-ffa6-4343-a6b0-ae65f5f95ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6eeb42-84ab-4406-bdf7-7a15354195e7",
        "cursor": {
          "ref": "61858993-a050-4882-bf1b-6dd0a44fea1b",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "cee436ef-40c5-43a4-8e8a-68acd8aed33b"
        },
        "item": {
          "id": "ed6eeb42-84ab-4406-bdf7-7a15354195e7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "69829278-876b-4b71-afd7-48e875423e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d29e023-9f9b-4af8-8c0d-1785b374c48b",
        "cursor": {
          "ref": "8a4898dc-6084-49fa-8924-5e8cf6df0de5",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bd6af5ce-b0a3-4031-a0c4-9727de109393"
        },
        "item": {
          "id": "1d29e023-9f9b-4af8-8c0d-1785b374c48b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "63d87ad9-ae44-40bc-8804-9a523ab4c713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26186bf-1de8-4855-9226-93892fd0bf1d",
        "cursor": {
          "ref": "abe23a55-f858-4fb4-98dc-62d59694d533",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "99055306-fd9d-4dcf-9374-16baea8769ad"
        },
        "item": {
          "id": "a26186bf-1de8-4855-9226-93892fd0bf1d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a9299ce1-13a5-4810-b911-08f2ffdc9d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b9c772-62ed-4c88-a715-17f93d9ef57c",
        "cursor": {
          "ref": "6902e647-c22b-4a32-80be-b240621dfb03",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6044626b-cdaf-43d2-a486-1ddf270b6f7e"
        },
        "item": {
          "id": "77b9c772-62ed-4c88-a715-17f93d9ef57c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c0dc1876-21eb-403a-9ba1-1f995bd67e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0e4d70-06ad-4710-b216-dae73a9aadca",
        "cursor": {
          "ref": "0e90bf81-7558-480f-a818-fb9bce4ae788",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7a234c51-f359-4558-b1e6-946852d8a065"
        },
        "item": {
          "id": "3e0e4d70-06ad-4710-b216-dae73a9aadca",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9efa0d98-a5b2-4c84-a87b-f41d6737d8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816c425b-907a-4f43-b75a-d2dd8c561050",
        "cursor": {
          "ref": "4257a73b-95a9-4034-9089-c171294527ac",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1e5a9bf3-b6c3-4b0e-be71-42143a9dff1a"
        },
        "item": {
          "id": "816c425b-907a-4f43-b75a-d2dd8c561050",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8c9d5a33-6e27-4512-ab40-dad4a4b679eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f1978c-b3b0-4e71-b730-a4767864cc25",
        "cursor": {
          "ref": "19a42fe5-da30-4fad-b6d4-24e1bb610f73",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1693b640-1321-4c79-8e87-e1c52085d0a1"
        },
        "item": {
          "id": "b3f1978c-b3b0-4e71-b730-a4767864cc25",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b9520ec1-1851-46a9-9a7f-1cb98bbee440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f0911c-57ac-4c38-ba92-3fe1338258c1",
        "cursor": {
          "ref": "e653f347-98f9-4577-b5d9-aae79d130a81",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "20e2b84e-a054-4014-938e-01547e62f1f1"
        },
        "item": {
          "id": "24f0911c-57ac-4c38-ba92-3fe1338258c1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "cdd38a55-ee0e-49f3-a367-54e38d1ae340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7747d940-eb7e-4069-a3ce-fc8c5a596d27",
        "cursor": {
          "ref": "89294f13-2a03-4c1f-93e6-cf74d7622ad0",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e9d15225-24c3-43eb-8dee-1378b6e8921c"
        },
        "item": {
          "id": "7747d940-eb7e-4069-a3ce-fc8c5a596d27",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "48f05e16-5072-4410-a860-82f6b233de3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b51919-b27f-42f9-a0b1-57feb3cfb14e",
        "cursor": {
          "ref": "40695426-3f3b-4837-bf58-ec8201ffbaa9",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8d02d328-9bb2-4f76-a20e-b0f633bd1a25"
        },
        "item": {
          "id": "e1b51919-b27f-42f9-a0b1-57feb3cfb14e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3459f196-48c8-4aa2-a46a-87337500d3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84069482-4a7e-4afb-9bbb-c3d69a93d15a",
        "cursor": {
          "ref": "21f7609a-df04-4419-8d7c-8b4eb503cab6",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "67fb122c-fe04-4595-8b05-fd5061eccd4c"
        },
        "item": {
          "id": "84069482-4a7e-4afb-9bbb-c3d69a93d15a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "edb28540-2192-41ae-aa20-11db235723b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0a0a7d-7099-4c5a-9959-678439e7307a",
        "cursor": {
          "ref": "efe90264-e333-4b19-8d04-2395dfcb5701",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "90012645-3e5e-4de2-9c7a-8fbf23144040"
        },
        "item": {
          "id": "9f0a0a7d-7099-4c5a-9959-678439e7307a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "78720d7d-8d3d-4b1b-ba39-0d5a0418cd5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6bb6a8-7d30-42f3-943f-00d21f905515",
        "cursor": {
          "ref": "fdbf27bb-74fe-4b1b-ba6d-539b7e4ad198",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b4ffad2b-1c06-4f2a-96d3-bd487533a8fc"
        },
        "item": {
          "id": "7e6bb6a8-7d30-42f3-943f-00d21f905515",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "dc6d2398-c755-4a5f-a168-282423f4dee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e737437-6337-49a7-9c8d-ad14ef76e368",
        "cursor": {
          "ref": "f0b55e48-78ff-45cf-a857-b72ba43e9139",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "af108269-9b93-468c-b3fb-b16b31f73085"
        },
        "item": {
          "id": "7e737437-6337-49a7-9c8d-ad14ef76e368",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "25f14233-a173-4e52-88c6-50d2e7ab4a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4a123c-c106-4bb7-a47f-d0580317f601",
        "cursor": {
          "ref": "66f3108b-d202-443a-9678-801a36aa3ddf",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6411a668-34b1-48f0-9bdb-3c762d37e983"
        },
        "item": {
          "id": "fb4a123c-c106-4bb7-a47f-d0580317f601",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "dedb937b-fd12-4d0e-b329-63bb3db4f60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec07609-4979-4b5c-a241-66b2b5ac23b8",
        "cursor": {
          "ref": "f667bb43-8a0f-423a-855f-74cebbd0a0f9",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7d12c87a-93af-4272-8876-53071ffb1359"
        },
        "item": {
          "id": "1ec07609-4979-4b5c-a241-66b2b5ac23b8",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2dae2892-19f9-425d-b6d9-ffbaac2d3fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91181df8-0353-4f7a-89dd-a6652edf8123",
        "cursor": {
          "ref": "647354b5-1aa5-4380-93a1-7c50c285df82",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ef60f2a2-6b12-4246-a830-3e90ad2702c3"
        },
        "item": {
          "id": "91181df8-0353-4f7a-89dd-a6652edf8123",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "eaf10915-ba7d-4cb7-8a2e-85dfc6c6f441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e226fb0-7174-488a-a9ad-9c4f9701e566",
        "cursor": {
          "ref": "68c95adf-5903-4c94-88b5-115cfab9970f",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e6a75dca-75a6-4144-aefd-149ea52ad47c"
        },
        "item": {
          "id": "6e226fb0-7174-488a-a9ad-9c4f9701e566",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0f3ec254-ba33-466c-9391-e38cf09c18a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15eb744f-f2be-44e5-bb5c-062dfb8c3bdd",
        "cursor": {
          "ref": "ffb53785-b0ea-4f10-8f71-fa0170f93aa4",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4bae8bcc-9eb0-4099-8354-78674a2264aa"
        },
        "item": {
          "id": "15eb744f-f2be-44e5-bb5c-062dfb8c3bdd",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "13458882-aea5-4d9f-bfbe-3f8bd4289954",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c45124-1ed4-4241-ba68-263a38b534c7",
        "cursor": {
          "ref": "2e6538e4-abd3-4ccf-b3e2-58b46cd16b52",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "dc050e62-817e-4244-a5ee-1c91e4b792c5"
        },
        "item": {
          "id": "a4c45124-1ed4-4241-ba68-263a38b534c7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e13fafb9-c644-4481-8192-fa336847e532",
          "status": "Created",
          "code": 201,
          "responseTime": 2425,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1537128-6c0a-4307-9e0c-079631414eda",
        "cursor": {
          "ref": "f0a27165-0d36-4888-abac-3bed587c599b",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c3ac7100-6ad8-4f8d-afe0-32ac4e3321fc"
        },
        "item": {
          "id": "d1537128-6c0a-4307-9e0c-079631414eda",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d82b781b-9b9f-4405-b958-190866b45b21",
          "status": "Created",
          "code": 201,
          "responseTime": 2931,
          "responseSize": 985
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a51a72-61c4-4464-a295-09f07a645834",
        "cursor": {
          "ref": "00d68b26-e081-49a1-b9b7-1469c83e7d08",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4564a0c9-eb2e-4b21-9f98-f76181444539"
        },
        "item": {
          "id": "04a51a72-61c4-4464-a295-09f07a645834",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "76f6b054-d14b-43ed-99b7-e91bea2a05bb",
          "status": "Created",
          "code": 201,
          "responseTime": 2645,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a05721-c969-4025-a92f-a6a85833dac6",
        "cursor": {
          "ref": "7af0c6e8-55cb-4276-be4e-b4b02454b6c7",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "93c66e89-3e68-4f74-a31a-bd661ff99366"
        },
        "item": {
          "id": "c0a05721-c969-4025-a92f-a6a85833dac6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1519e654-f683-4d43-96d0-112ea6a9dfad",
          "status": "Created",
          "code": 201,
          "responseTime": 2664,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fddc6178-cd83-4bd0-9ab9-a7a0ef1c8b24",
        "cursor": {
          "ref": "3356cace-1d6c-4f97-af05-d0d3be37cadf",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "21f0694f-da84-46b7-8cad-4b5f53932945"
        },
        "item": {
          "id": "fddc6178-cd83-4bd0-9ab9-a7a0ef1c8b24",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "bcb89565-9ba8-4b39-9d00-0b91d068a804",
          "status": "Created",
          "code": 201,
          "responseTime": 2356,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2023-08-04T00:41:12Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2023-08-04T00:41:12Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "271fd96e-b831-4313-92d7-34bf34dd728b",
        "cursor": {
          "ref": "b8fc08f8-ce74-498a-a8ca-a8f422b2b1ca",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c0d7a2fc-3d13-4257-b9e9-4e2574f56c19"
        },
        "item": {
          "id": "271fd96e-b831-4313-92d7-34bf34dd728b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "51ecebad-3ef5-4c51-907f-6834bf32ebe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "561a72a3-d882-43e8-966b-2cd3a5b2bce0",
        "cursor": {
          "ref": "3c12b5bc-e1bc-4020-8fd4-abd11044f696",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "bffd6c9c-2c77-4297-927c-6b85609edc1d"
        },
        "item": {
          "id": "561a72a3-d882-43e8-966b-2cd3a5b2bce0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d8dd38d1-02bb-4b1a-8f94-87a664d4ba0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df395d69-4281-41cb-a8d0-95943c2d53be",
        "cursor": {
          "ref": "556f8b03-c41d-49d5-99c0-94dac0ac4c4c",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e90f2524-2bdb-40ef-a458-77779567e690"
        },
        "item": {
          "id": "df395d69-4281-41cb-a8d0-95943c2d53be",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "92882591-5627-4df4-82d1-8903026c0f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3259164a-fea6-481f-b3d0-22b8a60f540b",
        "cursor": {
          "ref": "d3ffa176-eca4-4f35-a524-e8afbe00cf44",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9ff3eee5-b8ee-4f3b-8327-3bebff60516f"
        },
        "item": {
          "id": "3259164a-fea6-481f-b3d0-22b8a60f540b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cc760816-7478-40cc-a7b3-719a4d280dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32791863-cdee-4d24-ac78-d52b5e594941",
        "cursor": {
          "ref": "145a7c02-15cb-4d28-83f4-62c181771d39",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4b8b68be-7198-48f0-bd79-77ebd56de9ea"
        },
        "item": {
          "id": "32791863-cdee-4d24-ac78-d52b5e594941",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4ccf108f-8a92-4618-9008-c3e6aaac9aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce22c18e-279e-4748-9808-af4158fcf4e9",
        "cursor": {
          "ref": "198502ac-f25e-427d-9d8e-72c418ef9d89",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "87184dab-f862-4965-bd9a-96d0c337bd63"
        },
        "item": {
          "id": "ce22c18e-279e-4748-9808-af4158fcf4e9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "57294bfd-d21f-4c21-a725-9604ffedf7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf08c3f2-b4d1-4900-b5ab-6fb6068677b3",
        "cursor": {
          "ref": "97a1cc90-ec7d-4114-934f-582d83f5c463",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4b85dd9c-7c60-4294-bfd8-ab333d789621"
        },
        "item": {
          "id": "cf08c3f2-b4d1-4900-b5ab-6fb6068677b3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e0cea3f0-aade-4b44-9831-912502c4a291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da40695b-e62d-49cf-b635-da1deb4430ea",
        "cursor": {
          "ref": "60f30257-f307-4360-b3db-a7c8bb6b5beb",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "851caf31-4ad1-4d95-ac60-38b7841d562b"
        },
        "item": {
          "id": "da40695b-e62d-49cf-b635-da1deb4430ea",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "29d7a47c-9b40-43aa-850e-3126dcecf3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988bcc63-0d2c-4bda-a1fc-cb2e728ed6e5",
        "cursor": {
          "ref": "84a09678-2182-4602-88cf-1d3239932268",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "50548580-0cae-4f18-9996-3ac635b96d5b"
        },
        "item": {
          "id": "988bcc63-0d2c-4bda-a1fc-cb2e728ed6e5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "16efd550-db5b-460d-9d9a-c7255f42b1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c28974-864d-4df3-930c-149567a7b647",
        "cursor": {
          "ref": "647b3cf6-41a0-4d81-8249-27c2ef2f75d8",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ada2d344-28c9-49a1-9f67-eb77f71b98bc"
        },
        "item": {
          "id": "e7c28974-864d-4df3-930c-149567a7b647",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "525a36f4-9100-493c-9bd1-6e4c6e084862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8725ae-d1be-4a97-bba2-b402902948e7",
        "cursor": {
          "ref": "32e29e36-b116-4eeb-b63c-65c6f028d7f4",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "dcc57e9e-7c76-4ff8-9cea-804b1b5e0da7"
        },
        "item": {
          "id": "5a8725ae-d1be-4a97-bba2-b402902948e7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fe84f547-5daf-445d-8a54-5b0db1b2a279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80dcb56d-b59f-434e-bbb2-852802b92627",
        "cursor": {
          "ref": "83a162fd-ec54-423e-a62f-b23eb401b8ba",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6452d9d6-8da5-49a2-b93a-5321d3872b69"
        },
        "item": {
          "id": "80dcb56d-b59f-434e-bbb2-852802b92627",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "303c8592-a83e-4889-a230-37e129e3710e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac78e91-3b14-4f5b-a38c-99b8e4516420",
        "cursor": {
          "ref": "0032e1ba-05c0-48fe-b7db-57b597ddb49f",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "82fa7a04-831f-4b38-b293-b414e580ec2b"
        },
        "item": {
          "id": "7ac78e91-3b14-4f5b-a38c-99b8e4516420",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ba652316-8460-4b60-bb07-29726fd7322e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4e6b11-8757-48e4-a2c8-722520fe5754",
        "cursor": {
          "ref": "41032657-4a7c-4a2e-8708-63b6643f827c",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b034dd5b-e3ea-46bc-b44a-e368634af334"
        },
        "item": {
          "id": "4a4e6b11-8757-48e4-a2c8-722520fe5754",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "07bff221-f708-4d87-93e6-52c55ff0a14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3cc17e6-71d9-4b43-a34a-a83535bae752",
        "cursor": {
          "ref": "e55ba69e-553e-43fc-9c8a-30e2ab2092ba",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "57643e14-8a8d-4f05-977c-470d3532ff1e"
        },
        "item": {
          "id": "d3cc17e6-71d9-4b43-a34a-a83535bae752",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d05dfe9e-2385-4692-86a6-4c61851eb88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2016fcfc-aae6-4868-bce6-5133972572cd",
        "cursor": {
          "ref": "d98828e0-f1b3-4c0f-ac33-45526eeb3d8f",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5ae27730-9fd4-4ca7-b4c8-31b7283c68d0"
        },
        "item": {
          "id": "2016fcfc-aae6-4868-bce6-5133972572cd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9903b91c-f794-4f8c-84d6-66a5ab0a2c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612ecfdb-1b15-492e-9c64-90593547e384",
        "cursor": {
          "ref": "69fd7340-4ac1-48e1-aed4-50c314d48c7d",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fba70dd7-82bb-4f10-8196-9514557f762e"
        },
        "item": {
          "id": "612ecfdb-1b15-492e-9c64-90593547e384",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "babe62a7-3aba-4d66-9d4a-17dd034f990b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa08218-f2bf-46fb-a403-8e33be998562",
        "cursor": {
          "ref": "7a7ca566-cf70-46b4-9336-d247bfe397d7",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f122d237-d3f1-40c0-9e81-8966944f7ccf"
        },
        "item": {
          "id": "bfa08218-f2bf-46fb-a403-8e33be998562",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9579c542-32e7-479b-b8fa-afc199ca2ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d7bd95-3fcd-426c-bb2f-f41b183e4df6",
        "cursor": {
          "ref": "c87295c4-2c82-4f22-8beb-5ff8679b7aa5",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d9bdb729-bc1b-4b36-ad4e-74d3be5bb97f"
        },
        "item": {
          "id": "c5d7bd95-3fcd-426c-bb2f-f41b183e4df6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "752c31f1-0cc1-44fc-b2dd-df7bb97c92f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b2bc8b-6639-4a61-b26f-285852c595e5",
        "cursor": {
          "ref": "babf6952-5793-40f0-afc4-2b2c951a9530",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e14557f5-73a6-4bad-ad6b-66055e1e8bfd"
        },
        "item": {
          "id": "a3b2bc8b-6639-4a61-b26f-285852c595e5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "359d6684-b6ac-4f6f-bb98-1fc86549e643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14379ab4-6530-4c46-991c-4babe8c84b18",
        "cursor": {
          "ref": "95c601d7-5461-4030-a18a-ae253438f0db",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "45cb6937-c5bc-45f6-8769-cfd62c275d17"
        },
        "item": {
          "id": "14379ab4-6530-4c46-991c-4babe8c84b18",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "61994a41-c705-41c7-879f-c89a30304805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceddd2d9-eb80-4bc2-99d6-b0cc7f790aa3",
        "cursor": {
          "ref": "070d83e7-cacb-459b-b89e-11f1a02dfa66",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "cb5da6ba-b7bf-4ede-b576-99c383f7cdcb"
        },
        "item": {
          "id": "ceddd2d9-eb80-4bc2-99d6-b0cc7f790aa3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "24ee89d5-7f49-4489-b7eb-af271963bff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762db50a-c9cf-473a-8369-de20597c8908",
        "cursor": {
          "ref": "092078a5-ca5c-4526-8c73-32c8cb2dd969",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6c4003d8-e6dc-48e8-a9fb-53a2ce8432e7"
        },
        "item": {
          "id": "762db50a-c9cf-473a-8369-de20597c8908",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5f9f262a-da0a-447e-a528-8d5b27a2cf67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d29d43-41fc-4c79-89b4-adea85f670e2",
        "cursor": {
          "ref": "272d0f5d-f226-4ea2-8673-8c2e2b90a96c",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c23b6748-8348-4fcf-81e5-9e4161e72c21"
        },
        "item": {
          "id": "16d29d43-41fc-4c79-89b4-adea85f670e2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cfbeefb1-fe80-4268-8b3e-fa63e5250e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297cbb47-bf2d-4414-ab78-3ad4a4d9dbbe",
        "cursor": {
          "ref": "3bb38c4e-afdd-4a4a-8264-3dddea8ad58f",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c5d39d69-1192-4980-b6bf-4935b6ded6fa"
        },
        "item": {
          "id": "297cbb47-bf2d-4414-ab78-3ad4a4d9dbbe",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7f20445f-6504-4fa8-81ef-154168af05e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9dcec8f-96dd-4445-a6dd-8de03a42f3cb",
        "cursor": {
          "ref": "91601679-0f0b-447c-93e1-60a578e72d1d",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "81c6b386-a214-41f3-bbbf-3d5912541855"
        },
        "item": {
          "id": "b9dcec8f-96dd-4445-a6dd-8de03a42f3cb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "48e3f42a-16c0-4aaa-9d7d-865f7964b662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a81a94e-8d24-42a8-8825-1c5a6d1519cd",
        "cursor": {
          "ref": "f9c8ed96-6b34-445e-b44e-54603071a3a3",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "803b63bc-b66a-400e-ab37-94e9a8edd24e"
        },
        "item": {
          "id": "0a81a94e-8d24-42a8-8825-1c5a6d1519cd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "eabcf13e-c466-4aac-80ec-9fb09cf0a1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa398804-dec8-41f0-a94f-1fbaa4207226",
        "cursor": {
          "ref": "b7d6b052-2ea3-4486-91bf-f821e22c763c",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "44406b0d-f3d3-43ab-ba1b-83a1a6bfa78f"
        },
        "item": {
          "id": "fa398804-dec8-41f0-a94f-1fbaa4207226",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8bba06c3-0910-4503-821c-76397632e2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9ff86e-bd4b-452a-ac86-2ab0a3831156",
        "cursor": {
          "ref": "0cf4da04-25bc-4776-b701-321170a080d1",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "72ad21bd-b5ef-4772-a3ec-dc30b14cb1e0"
        },
        "item": {
          "id": "1f9ff86e-bd4b-452a-ac86-2ab0a3831156",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "da901400-9821-4e66-9121-2f2d0bea190c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146f6874-12d9-4e3e-910f-ad961c816723",
        "cursor": {
          "ref": "18fedab4-202b-44eb-83d4-8248ce179352",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7eb46546-ee2a-4cf2-bf98-e30345859ebe"
        },
        "item": {
          "id": "146f6874-12d9-4e3e-910f-ad961c816723",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d5f75fa3-b1f5-4caa-b6df-9d1ed6d9aa1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7391c079-6bbd-49cd-96ee-6d78ee573468",
        "cursor": {
          "ref": "8db60a9d-d6e5-4f0d-bbe5-5239354db6c6",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d98b2212-beeb-40c8-a31f-f0b53fef8998"
        },
        "item": {
          "id": "7391c079-6bbd-49cd-96ee-6d78ee573468",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "93abf8b1-63e1-4774-80c6-5898a1222249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfa4954-f214-4bdf-9ef3-241864137a64",
        "cursor": {
          "ref": "c5ac0751-cfb7-4182-a803-71c1270457da",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b71da824-b83d-4f2f-8c95-91b43c2ba60b"
        },
        "item": {
          "id": "6bfa4954-f214-4bdf-9ef3-241864137a64",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "50e768e8-1672-4a19-b9e5-912f56e0ee64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1085482e-2b0f-482e-b4bf-58854adf402c",
        "cursor": {
          "ref": "afd7819d-c3b8-4127-9aa2-46254452e019",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c279f39b-4346-4f7b-825e-9c0e4bb765c6"
        },
        "item": {
          "id": "1085482e-2b0f-482e-b4bf-58854adf402c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "55e3e40e-575b-443a-ad7c-ffa003ae1de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818c72e1-b1ba-4318-8dbc-01be8e0afd4e",
        "cursor": {
          "ref": "4bb8c54d-b38a-4745-ae3f-898d92a505bf",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c464b28c-10ef-494c-bba4-2326cbbc2970"
        },
        "item": {
          "id": "818c72e1-b1ba-4318-8dbc-01be8e0afd4e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d6844931-a411-41b2-a185-92132b3d2a07",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20977941-f0b2-4a37-b353-60e0833587e4",
        "cursor": {
          "ref": "61bf247d-c4e4-4a29-abd8-8a1889765a3d",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a733262a-8b34-471a-9596-68e7fc4cad07"
        },
        "item": {
          "id": "20977941-f0b2-4a37-b353-60e0833587e4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1a8836d2-6c91-4c85-a7ea-9a18aac28ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2647b3b-ec20-435a-9477-e525f7c20548",
        "cursor": {
          "ref": "1fe31377-cbee-443f-82bc-7a4f4e37c414",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0c05f730-4094-4bfc-a5e2-23e9df3358fb"
        },
        "item": {
          "id": "d2647b3b-ec20-435a-9477-e525f7c20548",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3710e489-fbc4-4627-ac54-c2815d744230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cfd1060-5dbd-46bc-bf04-58ce0fea50bf",
        "cursor": {
          "ref": "82c4219f-f7f2-4609-aad8-f71b39340f81",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e52c02a7-feb0-48ae-9851-9515cf14918b"
        },
        "item": {
          "id": "1cfd1060-5dbd-46bc-bf04-58ce0fea50bf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "62a963ef-ebd7-4ff0-bbda-942cc9e57442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2577081-c2bb-4886-bf71-74c7c8355c79",
        "cursor": {
          "ref": "2a8ca48e-0ba2-42f9-89b7-1ce338e29954",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4e08774c-fa7e-4cd0-a874-9ba59d3284e7"
        },
        "item": {
          "id": "c2577081-c2bb-4886-bf71-74c7c8355c79",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f2760abf-d83a-4627-bcfa-50b6947ecbac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d1b4a0-daf7-4e51-b79f-5c139c7c9744",
        "cursor": {
          "ref": "9e5c30a8-b4db-45f7-b266-9487ff55fa8e",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "940934a6-3190-4063-99a1-986b70e3a0b5"
        },
        "item": {
          "id": "f7d1b4a0-daf7-4e51-b79f-5c139c7c9744",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "23153e4e-766a-4717-9dcd-1100ba257809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a71fb43-6066-444e-9872-79d10f678a8c",
        "cursor": {
          "ref": "88e736fb-3514-4894-9a70-4e90143a3e9e",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ec82aba5-23f2-4fac-85a2-331c28d73e5a"
        },
        "item": {
          "id": "4a71fb43-6066-444e-9872-79d10f678a8c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "efae5dd6-9ad9-4e52-87c7-7b86678c13b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58d3c55-5258-49fa-9126-6cbfecc2baf5",
        "cursor": {
          "ref": "6ba4c464-1fba-4af3-b6d7-28927ec3afb5",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "264c4aaa-aa91-458e-b948-a2bc56843447"
        },
        "item": {
          "id": "e58d3c55-5258-49fa-9126-6cbfecc2baf5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "564b0f45-9a71-43df-81bf-a1286a4eb1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38a6b19-a4f6-42a9-9f15-d7e2cfc50ee9",
        "cursor": {
          "ref": "875cfd31-230c-4566-93a0-f54baa785087",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "bac53cae-8734-4d67-bfe3-f763937486e5"
        },
        "item": {
          "id": "a38a6b19-a4f6-42a9-9f15-d7e2cfc50ee9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "adb1a3ee-47f5-4818-bb2c-394a52a41b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ea5c53-cbdd-482d-8a80-4f7a36bed3b9",
        "cursor": {
          "ref": "f6786aea-4021-4005-8ce9-3f10591a9d82",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1fcd7d31-b08d-400f-9186-9e0ef523d60e"
        },
        "item": {
          "id": "65ea5c53-cbdd-482d-8a80-4f7a36bed3b9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5aa74c3c-4ffb-4e8e-a76f-4f688fdeb786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06252e3f-13ce-4a02-88d6-5f8e6b10f50f",
        "cursor": {
          "ref": "5fcaae5d-47ac-4a25-86df-a41a81df0842",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5188fe0e-bf37-45f3-9bd1-b2d88d3d48a1"
        },
        "item": {
          "id": "06252e3f-13ce-4a02-88d6-5f8e6b10f50f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "03ce8966-5a23-4aaf-b5de-760a0eed997c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e466eedb-745d-45b7-9e1d-8499d9098df6",
        "cursor": {
          "ref": "92ff8a0d-0a44-403b-bd42-02cdd5fc6363",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9856b1bd-8e0f-42e3-a41c-baa17c575ba8"
        },
        "item": {
          "id": "e466eedb-745d-45b7-9e1d-8499d9098df6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1b6cbf5c-4c34-4004-b22b-e978ef9a2ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8b4498-ae58-4991-852d-9b0eb959095d",
        "cursor": {
          "ref": "9738c125-030c-4abb-ba69-98be1ed77d82",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "36baf310-216b-4a6a-ad4f-79bb03ee96ba"
        },
        "item": {
          "id": "7d8b4498-ae58-4991-852d-9b0eb959095d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bf29b674-93a9-459b-93ff-f0f3ac062006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e41d905-e0fc-4a34-a439-b01d8432f75a",
        "cursor": {
          "ref": "16fc730b-3ad3-4319-8b74-45f0d2584244",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "13c00f42-869e-4284-95cb-ca6683e71188"
        },
        "item": {
          "id": "7e41d905-e0fc-4a34-a439-b01d8432f75a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "48d1f4bf-2362-44c2-9904-ab39d2f33757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7ffa57-a935-4ff1-bad8-55ff6f13bb21",
        "cursor": {
          "ref": "f508bb96-a90f-4ff6-8064-dcec675c4af9",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "35503c01-69ef-4feb-b2d7-50e5c1c3d57e"
        },
        "item": {
          "id": "bf7ffa57-a935-4ff1-bad8-55ff6f13bb21",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7af95a97-894f-4de9-bd9b-ae7af9999542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b328d086-5dd6-4291-a715-41038f244693",
        "cursor": {
          "ref": "55f69195-56b4-49c6-81be-261fed526466",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9df04ccb-0a89-47f1-9ea4-b57c13e6cfed"
        },
        "item": {
          "id": "b328d086-5dd6-4291-a715-41038f244693",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c7b558b7-a3fc-4405-a8cb-c23f8e25f31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b732f2-5c3f-42cf-af37-6ac6c15ff224",
        "cursor": {
          "ref": "53a524b6-de6f-471f-a2f2-554898ecbd93",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "09f243bf-189d-4db7-9b8e-ed4e4e1fef9c"
        },
        "item": {
          "id": "75b732f2-5c3f-42cf-af37-6ac6c15ff224",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9b77de53-f41d-4456-bc17-8d9b85fe3994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4173be2d-9346-40c6-aa8a-e7c5c421d2b5",
        "cursor": {
          "ref": "e95a2a16-9fea-451b-99f6-c907b5a6f751",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5c18b7b5-7925-48c9-90d3-8066fc3c4071"
        },
        "item": {
          "id": "4173be2d-9346-40c6-aa8a-e7c5c421d2b5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7fb370c7-aa4f-4f5c-856c-87e8d4a881c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3eec7a-6ac2-4ba9-9f7b-b0ef71b73a34",
        "cursor": {
          "ref": "1e86e689-5c4c-4047-b760-ac9695face0b",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "da016149-565a-4a36-bae1-5e87f2ebfc9b"
        },
        "item": {
          "id": "cd3eec7a-6ac2-4ba9-9f7b-b0ef71b73a34",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "74371ccb-3894-42c0-93d3-6afc6c0a55cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f03eb7-4a87-45b3-b102-71147146d152",
        "cursor": {
          "ref": "b3ff14b5-b655-42d4-abc2-e721d6584259",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c1c613a4-4c42-4f6b-a63e-c9f49d1ba9e6"
        },
        "item": {
          "id": "55f03eb7-4a87-45b3-b102-71147146d152",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "54ec1ab9-fe5f-431b-9c2f-bccd684a7e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d110513-ee9f-487c-9ef6-821cbbef59ef",
        "cursor": {
          "ref": "20a71d39-5fc7-4dc6-a9dc-a9d828baf80a",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a34ab46e-7312-40e6-94f5-887a296b33d5"
        },
        "item": {
          "id": "4d110513-ee9f-487c-9ef6-821cbbef59ef",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ab2ed313-f798-4ee8-b0e1-c35f88358b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770eab6a-bfea-4f8d-aaf0-d3a0f2b812e1",
        "cursor": {
          "ref": "5a1516ba-b14d-40af-98da-d3f69bd0f0fa",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4c919d4d-c67f-431f-8d12-1ef56a3633e2"
        },
        "item": {
          "id": "770eab6a-bfea-4f8d-aaf0-d3a0f2b812e1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ef9c4a58-1111-4d30-bed2-676cceaa516a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6495df20-c563-4800-a0a1-ef7a93412009",
        "cursor": {
          "ref": "c715489a-89be-4a9e-b474-1c03c1379dff",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ab79250b-2839-46b1-bfbd-14b6a50807ff"
        },
        "item": {
          "id": "6495df20-c563-4800-a0a1-ef7a93412009",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f54ef9ad-889a-4a48-9bbc-d56b0597c6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b335134e-a7e6-4480-bfd7-f0cd759db7f9",
        "cursor": {
          "ref": "89cbed8c-6f34-4200-ab63-1e4e033a5e22",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ba958833-7096-4125-a0bb-4f8e01014674"
        },
        "item": {
          "id": "b335134e-a7e6-4480-bfd7-f0cd759db7f9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "861c008f-4590-41ab-95be-85f46780cc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1acc20e0-cb81-4d7b-a2eb-71e7904c73c0",
        "cursor": {
          "ref": "bbde95b3-8683-48fc-9edd-09b5357a8144",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ece08955-aa54-4dc9-9365-8afe60a9abb6"
        },
        "item": {
          "id": "1acc20e0-cb81-4d7b-a2eb-71e7904c73c0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4491ac99-b97f-4445-8937-6911bb6f4593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ff36f0-7c68-4f73-ab36-2d14e731c620",
        "cursor": {
          "ref": "c88d276f-780f-4448-a04c-6bf02c6b2cde",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "41b4fb9a-e279-4382-84b7-580b85aab84e"
        },
        "item": {
          "id": "00ff36f0-7c68-4f73-ab36-2d14e731c620",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c97b3767-18b3-431d-b7ad-4cfccb9f807d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017d474a-31ec-42ab-8ae4-0419095ef281",
        "cursor": {
          "ref": "d1218b50-e7d8-45e6-8436-431e3d8692ef",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "328b1403-a88d-4da3-8843-159bdbbae9ed"
        },
        "item": {
          "id": "017d474a-31ec-42ab-8ae4-0419095ef281",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9d93b28b-641b-42ad-bdf4-e3d6e9f8f157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b493fd-3216-45a0-a969-1544d93eefc6",
        "cursor": {
          "ref": "df125297-3cf7-449c-a6aa-84a794c64c94",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4b10091e-516e-40a4-9398-88f148c056b1"
        },
        "item": {
          "id": "47b493fd-3216-45a0-a969-1544d93eefc6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c980a480-ade4-44e3-9b0b-90edc813de10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e67c1e2-2bef-403a-9aea-384686fc8955",
        "cursor": {
          "ref": "50f7f957-4611-4878-b02b-c2523091847f",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "25beba21-0be9-4e39-a57c-cbb0890a6f24"
        },
        "item": {
          "id": "3e67c1e2-2bef-403a-9aea-384686fc8955",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "91303aad-2c7b-4d9a-b233-9922ccffb7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a08bb5-f318-404b-a72c-4af64fa7090a",
        "cursor": {
          "ref": "f0745c04-9e3f-4bc7-832e-e83b8144cb21",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9f32c5e5-1faf-4db9-9bc3-7eadf7ddf140"
        },
        "item": {
          "id": "94a08bb5-f318-404b-a72c-4af64fa7090a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "eb0e5013-57f0-4e10-9067-84765f617e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31427a8-c821-49fd-bab6-d8b0f5486cda",
        "cursor": {
          "ref": "41039b2d-6ec5-476a-bd96-3ad015d4b67a",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4e0e7a58-8e15-4d7f-aa3a-1a12368710b5"
        },
        "item": {
          "id": "b31427a8-c821-49fd-bab6-d8b0f5486cda",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8f81cd93-1f47-42af-a3e4-bd450b661659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff141654-6b73-4483-b462-f829e42a808b",
        "cursor": {
          "ref": "38b58963-e5ce-4ad0-a898-37a7ef47611e",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "306ad219-08dd-40a9-8308-9769db1e34d4"
        },
        "item": {
          "id": "ff141654-6b73-4483-b462-f829e42a808b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a216eccb-1dbc-4710-8e21-53597faa3838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc22b18-59dc-421a-a177-9f70d1ac77a0",
        "cursor": {
          "ref": "f890f69d-9ed1-4b52-a717-a15f6a925e73",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0a63e78b-f70a-4376-95e6-9c14a8104239"
        },
        "item": {
          "id": "cdc22b18-59dc-421a-a177-9f70d1ac77a0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "def8905d-0c3e-4ec6-b074-118c05d559de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9444f58c-5ba5-41eb-b8d5-cde4a9f80801",
        "cursor": {
          "ref": "a4332f06-85d9-4b3d-930f-2f1eb9daaa7b",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "136014e4-06cc-438a-aca4-9e1005bddbd4"
        },
        "item": {
          "id": "9444f58c-5ba5-41eb-b8d5-cde4a9f80801",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9b549f14-c9d1-467d-90a1-0df032a51e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf73db8-a9c5-4d01-80dc-c5fb1b83ec1f",
        "cursor": {
          "ref": "9242609c-b6f3-488e-b0e1-fb5f0ca1d553",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "15ffef57-e669-4f1e-9276-ecc0921d72fd"
        },
        "item": {
          "id": "5bf73db8-a9c5-4d01-80dc-c5fb1b83ec1f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "902f2905-7a8a-4fe3-80ed-67aef35627e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f9986b-e104-4e43-b7e1-b6d6f4aaf828",
        "cursor": {
          "ref": "908bed68-08a0-4bff-97a1-12852e327629",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "813906f1-5835-4980-bec3-dd3ea3f69574"
        },
        "item": {
          "id": "70f9986b-e104-4e43-b7e1-b6d6f4aaf828",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "380866f6-1fa8-43c7-90cf-d1e61f113c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a447698c-15c0-4882-9938-9689ed9c600d",
        "cursor": {
          "ref": "fe83faa9-083a-4ad2-b732-eb7a78482244",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7a1c5c0b-d708-42d2-a885-a43f748c409f"
        },
        "item": {
          "id": "a447698c-15c0-4882-9938-9689ed9c600d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9aef8a52-e9f5-42bc-a3e1-eea9e3bd451c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8159cb32-1a28-4942-9ba6-943f9ad1b128",
        "cursor": {
          "ref": "1cd42be3-365e-466b-9309-08172fee3b35",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d36d653c-59f3-46db-bf53-dd6a502131e2"
        },
        "item": {
          "id": "8159cb32-1a28-4942-9ba6-943f9ad1b128",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7b0f997e-f82c-4666-b4a5-149acb2edfd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b5ad68-d851-476b-bf25-f4bc567b2718",
        "cursor": {
          "ref": "f5040c57-42f2-43d7-a37e-51c41a507803",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f2c75045-e480-4633-a159-4d1a1e9417d4"
        },
        "item": {
          "id": "78b5ad68-d851-476b-bf25-f4bc567b2718",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "312d4728-e2e1-431b-8f40-f16fa5c65e37",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96bfea5f-caf0-49e2-8eb8-da0be372c614",
        "cursor": {
          "ref": "b08d488c-ceb1-43ea-b82c-196fecf52f22",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a0d755ec-d3f7-4c7c-8bbe-e70271387620"
        },
        "item": {
          "id": "96bfea5f-caf0-49e2-8eb8-da0be372c614",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bd05e300-5fc2-40eb-b71e-a53fca1e001e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7761f0-c356-403f-a41f-75b87f7bee0c",
        "cursor": {
          "ref": "2777e0af-42a3-474f-8046-e2bdaa3e6a8b",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8b1811ff-d703-4969-a658-01b1008ea362"
        },
        "item": {
          "id": "6c7761f0-c356-403f-a41f-75b87f7bee0c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e66d92e7-f3d3-4917-aa92-4282cce5ba64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a43fa50-6c5b-4767-92b6-51a8e1ea777d",
        "cursor": {
          "ref": "fbee14c8-fbbe-4ac6-9bb1-05c60993eef8",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3c4961ac-eae9-4d4f-9f58-0eaa9a7b27d6"
        },
        "item": {
          "id": "6a43fa50-6c5b-4767-92b6-51a8e1ea777d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "84c9cbb8-405b-4a81-8a70-77a4c72fa8b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc15bc13-a800-4ffd-8e9e-315e61591038",
        "cursor": {
          "ref": "4649563a-d3be-4268-884d-78e0531bb4cc",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1f58cb0f-0afa-4841-a3e1-d35d5847dc0d"
        },
        "item": {
          "id": "fc15bc13-a800-4ffd-8e9e-315e61591038",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9c8f7dee-d3d3-42fe-9844-b55890727e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1491174a-e312-4269-98be-4b693b64efa7",
        "cursor": {
          "ref": "5cd1d5b2-3c2d-466c-91c7-1e0386ac0918",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "75cbe4e1-a6be-4099-9fe7-e4c0dadeada1"
        },
        "item": {
          "id": "1491174a-e312-4269-98be-4b693b64efa7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9045b3f6-fbb5-4b46-a69a-91e78899e00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4a2e99-9d89-4252-95ee-3c53c4c9a693",
        "cursor": {
          "ref": "53e75933-3fa8-42b4-a6c3-54e3f0f59d40",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1a3ec350-5642-42b1-82c7-cdb2c2f379c5"
        },
        "item": {
          "id": "9c4a2e99-9d89-4252-95ee-3c53c4c9a693",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c41e39d2-438c-4123-a966-27e7865753f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba98cde1-23a2-4113-9e66-31314d14ec8e",
        "cursor": {
          "ref": "8dad1b5f-045d-4b76-9aa9-7729e38a2cfa",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "58b2804b-de3c-4b2c-a562-72b43f027e93"
        },
        "item": {
          "id": "ba98cde1-23a2-4113-9e66-31314d14ec8e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4286e904-9a12-40db-9409-9c1dea10e95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea092a9-f585-49b3-845c-e13d5ec0a48d",
        "cursor": {
          "ref": "aad3e397-1009-420d-af92-f13e72ad8095",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0b500bc0-14ee-4f01-9147-696856b5020e"
        },
        "item": {
          "id": "aea092a9-f585-49b3-845c-e13d5ec0a48d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1b0ad09e-9516-43fe-9cde-6392be366db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bd2910-1396-4662-8ba3-57ef7df8f588",
        "cursor": {
          "ref": "67c94b58-341c-4ec6-9ab2-1f0f611ffdc8",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a534edf6-7acc-40f2-b224-3cc529164d47"
        },
        "item": {
          "id": "69bd2910-1396-4662-8ba3-57ef7df8f588",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ab6ce4ec-6981-4d31-9de6-c277f45b7b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e807610-8996-46a4-8894-f79164194df1",
        "cursor": {
          "ref": "10295555-c2ce-428a-a209-37a818b1a76a",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2d1b4205-3e24-417f-bf1f-a9f3bc78a1dc"
        },
        "item": {
          "id": "3e807610-8996-46a4-8894-f79164194df1",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "cac2a5ba-5e4b-438f-a347-ee9acd22fd7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f638b78-2e5e-41fb-8c16-722f3fb8c154",
        "cursor": {
          "ref": "583219d3-1e23-4891-945c-f70ed0bdfa73",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b0c15c38-cb27-4acb-91db-5ed82892c9d4"
        },
        "item": {
          "id": "0f638b78-2e5e-41fb-8c16-722f3fb8c154",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "66aa5572-2031-4a8e-bc0a-aee7729e0dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da28d4cc-d367-4ab9-af4b-82f9651d479e",
        "cursor": {
          "ref": "5e6795e7-f0f5-42dd-bf31-b805cc306b09",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "bfba5f7e-6d1b-4e8e-900c-6321d0587e00"
        },
        "item": {
          "id": "da28d4cc-d367-4ab9-af4b-82f9651d479e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "02167cdc-0baf-4818-b1b5-36d90f5766f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253a03fe-1ab2-4bb2-a92e-0b845fe42814",
        "cursor": {
          "ref": "2e133a47-38d9-41d5-8510-3bcf815280f4",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "284226ed-a730-4b87-a245-accb49bc9d4f"
        },
        "item": {
          "id": "253a03fe-1ab2-4bb2-a92e-0b845fe42814",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "603cad56-1d45-43bb-8f5d-8e8631c7ba5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d805a087-340f-461a-a590-cd46e22a23b9",
        "cursor": {
          "ref": "9ad317fd-4a07-4700-9846-4e7cfc972391",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e2308086-3c9c-4e14-ac3c-49dce81a1ede"
        },
        "item": {
          "id": "d805a087-340f-461a-a590-cd46e22a23b9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d43c3295-0df9-4121-95ce-a14edda2d684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a3856d-7fec-4630-b5d7-ea99a79163b5",
        "cursor": {
          "ref": "dbfe651d-5e83-4fd1-95be-d93530d21716",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9cb1c9f3-80d7-4960-91d9-feca216c0e79"
        },
        "item": {
          "id": "72a3856d-7fec-4630-b5d7-ea99a79163b5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "15305644-7765-4610-9a14-578d3a0e533c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89421b70-5f70-44b3-b6f7-0a2875f44808",
        "cursor": {
          "ref": "4acbf2cd-e743-48e1-85fe-81a03f82e518",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c1a31f17-0840-4cf1-b812-e5ee158baa86"
        },
        "item": {
          "id": "89421b70-5f70-44b3-b6f7-0a2875f44808",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "35e1af6c-266e-48d7-ac69-49406549d353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7f3d6d-ebd3-466f-a020-3cfe00ccde76",
        "cursor": {
          "ref": "84adecdd-9ff5-4ee7-bda1-6fa7684912cf",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "250278c1-9591-419a-b321-992df12bab35"
        },
        "item": {
          "id": "3a7f3d6d-ebd3-466f-a020-3cfe00ccde76",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d12daeed-78cc-4ac9-b8b3-fae98f72cedc",
          "status": "OK",
          "code": 200,
          "responseTime": 304,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "5b8c6b92-a744-4caf-b603-7cae6c4e4e3e",
        "cursor": {
          "ref": "ba8e6bb2-fe22-453d-96c1-bdee76d64c22",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "eff89fdb-613a-468b-83a3-b2cb9a840013"
        },
        "item": {
          "id": "5b8c6b92-a744-4caf-b603-7cae6c4e4e3e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "141b5f95-2808-4968-8e49-a593ccb41062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909ff033-05c7-48d0-ab1c-715aca6b8a87",
        "cursor": {
          "ref": "0f178cdf-5227-408d-b0fe-7f201921fe88",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ec0dc4b4-bea4-4891-8c11-5c7af3f1fb58"
        },
        "item": {
          "id": "909ff033-05c7-48d0-ab1c-715aca6b8a87",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "192ccb3e-4a66-4b38-ba1b-908f6e3676ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2741ecac-aca5-480b-9e55-1062e5439028",
        "cursor": {
          "ref": "37186d40-83aa-43b5-bea2-ee3faaf7c3b8",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d07ad948-e6ec-4b6f-87ff-9258264a6afc"
        },
        "item": {
          "id": "2741ecac-aca5-480b-9e55-1062e5439028",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "93fe717d-5997-4b7f-bd1c-07cb0e2c0e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fd2108-6509-498f-b3b7-14025537b20d",
        "cursor": {
          "ref": "f6008ade-ab48-47fb-8f51-9a20587bfadc",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "668dc033-bf18-49a9-9176-e403a73dd821"
        },
        "item": {
          "id": "71fd2108-6509-498f-b3b7-14025537b20d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5c1bac95-18ff-4156-90f2-8c4615b1d6fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1faff05-689e-446f-b7dc-0b8fbc9e861f",
        "cursor": {
          "ref": "d095096a-3635-48b5-b7c6-d89b464d7cc1",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1f91b9a2-a349-4de2-9f12-92fdde0b74b9"
        },
        "item": {
          "id": "b1faff05-689e-446f-b7dc-0b8fbc9e861f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3df5b90f-6939-4944-bfa2-5f958560aebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56a0274-b946-44c6-ab19-8d9fb70db8dc",
        "cursor": {
          "ref": "9dfd0aa8-1e8d-4173-b9ab-786aacf23ff2",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "dd7cdf65-06d4-4135-8c9a-4fa7d10d7e26"
        },
        "item": {
          "id": "a56a0274-b946-44c6-ab19-8d9fb70db8dc",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4c48b09e-7394-44f2-a14a-31b48aac5ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867b2b12-d8d0-48d5-a5e5-e8f00b3814be",
        "cursor": {
          "ref": "cfd478cb-059d-4ff2-b921-e3398230bc4e",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a90b8a13-a11c-451f-a784-33904eca5511"
        },
        "item": {
          "id": "867b2b12-d8d0-48d5-a5e5-e8f00b3814be",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "86222e10-0744-43dc-bcc6-4dba2012e27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e038f7d-a2b8-42b6-8f51-75db87bb8f0e",
        "cursor": {
          "ref": "a220bd4b-5f1b-413d-98c3-470b6a5fbc0b",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "cedcace8-1c24-4bfb-8013-6883395aa7f4"
        },
        "item": {
          "id": "6e038f7d-a2b8-42b6-8f51-75db87bb8f0e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8f8da594-61c6-4d1c-9add-ae92d5da01cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba30e24-ef32-4568-85d4-e1c77cbf3c71",
        "cursor": {
          "ref": "c8028802-4ead-4f9f-8865-6c8b07dcf840",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5802722c-46b5-4e97-959e-f80ce12a54fa"
        },
        "item": {
          "id": "bba30e24-ef32-4568-85d4-e1c77cbf3c71",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "93dbfd8c-9acd-4106-a5ad-19ca679de8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8e46b5-215c-435c-ad69-ec0ec6e2c9d6",
        "cursor": {
          "ref": "379f461a-784d-447f-b403-9cbebb8ad12e",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7e6505a7-cd49-400c-b4f5-9afacebc755f"
        },
        "item": {
          "id": "ea8e46b5-215c-435c-ad69-ec0ec6e2c9d6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5cacfd65-2465-479d-9edf-f53edab0a0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b32907-10f4-4a45-baa3-3addc2c3e9bb",
        "cursor": {
          "ref": "b54bfca8-1218-4139-beff-dfc108a68c1b",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3a908b71-a83c-48a1-bf95-946c6d0a9d31"
        },
        "item": {
          "id": "b6b32907-10f4-4a45-baa3-3addc2c3e9bb",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2a994995-c743-463c-9dd2-43dd9125c268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4118757c-13b0-4344-9585-e2d58e594333",
        "cursor": {
          "ref": "2f0e8f6b-7d17-43ab-8f3d-86246314bba7",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "bc251066-0fa7-4659-adf4-8197b9e30d97"
        },
        "item": {
          "id": "4118757c-13b0-4344-9585-e2d58e594333",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a1b1bcbe-5216-43c7-aca8-c3432003ce77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b5b3e9-dc73-4b62-bd7a-d68be95e6c31",
        "cursor": {
          "ref": "a257c78e-fe06-4744-90c3-0ba370bad23a",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9cd8f97e-fbc5-463d-b07d-ba7af40c899b"
        },
        "item": {
          "id": "e0b5b3e9-dc73-4b62-bd7a-d68be95e6c31",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "958faac8-7257-472e-8345-d981c2a66f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4959dd6-0843-4f10-923e-9dfe4c453d0b",
        "cursor": {
          "ref": "5ead4cf9-34a9-4e6e-b4a0-14fb37b4dc62",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ad88115e-f5dd-41a9-bdd7-daaa1be68f2c"
        },
        "item": {
          "id": "e4959dd6-0843-4f10-923e-9dfe4c453d0b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7c5522b9-e202-4938-86ae-a4bf6d607e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b68c834-0d29-4642-a793-e69789633d05",
        "cursor": {
          "ref": "57a9462a-19b5-4857-895a-77276df75f80",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "de76730c-178b-4de6-a473-f16065af4f74"
        },
        "item": {
          "id": "7b68c834-0d29-4642-a793-e69789633d05",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3624333d-b8c3-424e-a3d1-613cadbc8d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999d8d7b-6173-4022-9568-f4e48f055af5",
        "cursor": {
          "ref": "7ad50f42-53f5-4d20-a013-1dae5d399cc2",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6b02b19d-5a76-44c4-8109-b770dccab772"
        },
        "item": {
          "id": "999d8d7b-6173-4022-9568-f4e48f055af5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ae9d7b22-4657-4711-8e7b-b399ea852f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d4a9a1-4190-4478-abc9-4a6da8181ca0",
        "cursor": {
          "ref": "d883d2ba-2e31-4d7f-a8fb-79c4e96b5402",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7044520e-6261-41b6-8a70-2ecfd9208682"
        },
        "item": {
          "id": "62d4a9a1-4190-4478-abc9-4a6da8181ca0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ed5804ef-7a3e-45dd-a836-6559e1f92646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4ada5a-807c-404d-81c0-8322fb4fb3a3",
        "cursor": {
          "ref": "4f7f59a6-c88a-4645-be22-905a2077b28c",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e3ca9553-2d8d-4a5e-bef9-10e5a52e7658"
        },
        "item": {
          "id": "4b4ada5a-807c-404d-81c0-8322fb4fb3a3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2aea9b20-7457-484d-973d-8666cab72bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36046135-6ebc-4996-a3b6-12cea06c8f7e",
        "cursor": {
          "ref": "f6cc2113-1cd8-483d-ab81-b2eb71770c47",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d9bb3ff6-e9a4-4663-a04a-83517f74a126"
        },
        "item": {
          "id": "36046135-6ebc-4996-a3b6-12cea06c8f7e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "21bb2c83-2f41-4a59-8167-6afd0d2baf5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7588e9a9-135d-4bd2-9e29-13ea483fed2b",
        "cursor": {
          "ref": "80184d56-27fe-4344-b630-b5db2074e65b",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "be99a09c-5c94-4934-8445-0da5d64565e0"
        },
        "item": {
          "id": "7588e9a9-135d-4bd2-9e29-13ea483fed2b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d47621c7-7084-49df-aa6d-0e1970594155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514f7408-0e49-41fc-bd51-020de6af2ffc",
        "cursor": {
          "ref": "fbad1862-0e5f-4f2a-9bb4-9aa1cbb658aa",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a6ff9fd4-709d-47f8-917e-027f1ee01436"
        },
        "item": {
          "id": "514f7408-0e49-41fc-bd51-020de6af2ffc",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bcc027a0-d41b-473a-88c4-6893076959cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 184,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8993131d-d249-4af2-9a74-87696078f0f3",
        "cursor": {
          "ref": "3ca6b2e5-8951-422a-8ea8-5058fb44945a",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "871c7fd5-52e1-4937-a276-f0220c2643a3"
        },
        "item": {
          "id": "8993131d-d249-4af2-9a74-87696078f0f3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3bbe9113-ea2a-41a4-949c-4cc4dfd754c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3cf47d8-b93a-4829-953e-5015e6af5e35",
        "cursor": {
          "ref": "01ee4155-a859-40c9-b40c-cee7ee4d7619",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "94f20abf-1f3f-40fb-8a2a-9e98ff25de47"
        },
        "item": {
          "id": "f3cf47d8-b93a-4829-953e-5015e6af5e35",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "29abc67f-5b4f-4d96-97a7-2f4c28c71afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d13de8-fda6-44fa-84af-9c00c6e37996",
        "cursor": {
          "ref": "91250e50-14d4-459d-b9a1-124dd2580e4b",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8e095057-a838-4d09-ad15-b55e897bcb6c"
        },
        "item": {
          "id": "74d13de8-fda6-44fa-84af-9c00c6e37996",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9bb49e8b-a15d-4480-b48c-c92239e0ea2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e38f13-1500-4217-8980-2fa75f14aecc",
        "cursor": {
          "ref": "51f53afc-3b71-4fc9-80d9-fd99e2420f69",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ee91f9e3-1311-438c-9a3e-25e0ca4f5054"
        },
        "item": {
          "id": "31e38f13-1500-4217-8980-2fa75f14aecc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d8e2c552-2a5d-4721-9588-58753a2a5494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966a4dce-1d7e-4410-8f2e-c7bf8a61e503",
        "cursor": {
          "ref": "125203f8-5ff6-4e3c-a23d-d19b75618c70",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "558a1392-7792-407e-88bf-62380ac60649"
        },
        "item": {
          "id": "966a4dce-1d7e-4410-8f2e-c7bf8a61e503",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1e0306ea-cfcc-4689-956d-705160c3975c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb618d23-385a-4cc9-814d-bbf469a28ee5",
        "cursor": {
          "ref": "e489289c-68fa-47ab-89ef-51d842bf4db9",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "bb9a20b9-8399-4595-9b01-6de074c08ff5"
        },
        "item": {
          "id": "bb618d23-385a-4cc9-814d-bbf469a28ee5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bc8e48c6-0af4-444e-b7f4-5c6ed28ff8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d9d90e-ad19-4df9-b919-1e3492089a8d",
        "cursor": {
          "ref": "41d66322-92e5-4b65-b98a-a6f97706fded",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a49c040a-2c7b-4a91-8091-b665d12d426b"
        },
        "item": {
          "id": "99d9d90e-ad19-4df9-b919-1e3492089a8d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "440453d3-15de-419c-ad8a-511750416cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96430a96-e55a-414d-b7a0-12fc03b2c142",
        "cursor": {
          "ref": "f49130fc-9a47-4696-a8af-a97fae5056f9",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b9014b5e-18a1-4439-baf1-b2a19b70619a"
        },
        "item": {
          "id": "96430a96-e55a-414d-b7a0-12fc03b2c142",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7c157078-1468-40c5-9cb2-8036b6f49bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4030592-47c2-43c9-a522-06a2adcc2fad",
        "cursor": {
          "ref": "bb64abcf-f851-468f-ae0e-6aa0527329d4",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "cece3d98-c488-421e-852e-51c64c85f06b"
        },
        "item": {
          "id": "f4030592-47c2-43c9-a522-06a2adcc2fad",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "06c0abe6-224e-4991-ac54-fe37b367e1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c790ea73-8b8f-4b48-be04-a38a80fc491a",
        "cursor": {
          "ref": "1526b0ab-2de2-44f2-8f64-787954e8f72d",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e76d0f0a-9848-4e3d-832f-339f7b892eed"
        },
        "item": {
          "id": "c790ea73-8b8f-4b48-be04-a38a80fc491a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e358d9fe-9491-40f3-8239-5a696677bf34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f0960c-9c0d-47b5-b440-b06517cea8cd",
        "cursor": {
          "ref": "bd91c7d1-b55a-4cb9-9306-c80980b78670",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "de14ea67-3032-4b71-84e6-00b0766386f2"
        },
        "item": {
          "id": "06f0960c-9c0d-47b5-b440-b06517cea8cd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e57284be-26a7-4e7d-832c-a26918187650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e288be-55af-4806-ac3d-2dbe53a217b4",
        "cursor": {
          "ref": "a19e9329-27f9-4c50-af72-7d73fb97932c",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "79a04a8b-e997-4d35-a684-88cd4c078bdd"
        },
        "item": {
          "id": "19e288be-55af-4806-ac3d-2dbe53a217b4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "fc1803c0-d581-4925-8124-6dbf1434dfae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a562963-dc65-4124-b0af-ef7e68646468",
        "cursor": {
          "ref": "cfa7f928-d170-41e6-995f-e338173f9b23",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1d704654-022a-46d1-bdfa-49a4a96e504c"
        },
        "item": {
          "id": "0a562963-dc65-4124-b0af-ef7e68646468",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "29075860-c27c-4ebb-b71c-d3075dad906e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ffc3504-3b16-428a-b4e6-770de4531c3c",
        "cursor": {
          "ref": "2c15ae71-179d-4927-8373-75daf856f4bd",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5b87be2c-2b04-4a97-8021-8402d3e2a25e"
        },
        "item": {
          "id": "9ffc3504-3b16-428a-b4e6-770de4531c3c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ef5e33ad-a9fa-476f-8daa-cc06dcb5705e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86f54e6-6926-4209-b88a-8505bbc33d2a",
        "cursor": {
          "ref": "b7b53019-d1b3-4d4b-bc19-57212b3303a9",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ebaa2b35-8f0e-4fca-b449-501e4434d9af"
        },
        "item": {
          "id": "c86f54e6-6926-4209-b88a-8505bbc33d2a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cb4fa19a-e9da-420b-b27f-79de8cfc7446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b94c864-9cbc-40d5-ad75-b472c9219eef",
        "cursor": {
          "ref": "b9c9b952-4e77-4a56-8b35-edf75aee129e",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f38b4146-4b15-4c94-9866-638a13dc34a3"
        },
        "item": {
          "id": "9b94c864-9cbc-40d5-ad75-b472c9219eef",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b25c4550-d4a9-40e4-8993-7a47c60adbd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f8f180-51cb-432a-878d-0838ec259138",
        "cursor": {
          "ref": "8f3901b3-58d2-4b9f-8ddf-a21a9c23840a",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1ef5ef5c-42ac-4c4e-b774-948f8b55ffc7"
        },
        "item": {
          "id": "98f8f180-51cb-432a-878d-0838ec259138",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5ca879df-89b9-4d8c-96f9-5768ee5c2827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82005c1b-b2f0-4a14-a7d9-bb75277beb3d",
        "cursor": {
          "ref": "80097137-a973-4751-baab-46dbc63d93e6",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "36d36a16-575c-4e78-88d2-55ae771c56bc"
        },
        "item": {
          "id": "82005c1b-b2f0-4a14-a7d9-bb75277beb3d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5b2c7838-41b6-401d-a66e-aee9543b4c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263e1800-3358-4d71-bcf2-f6b776d9c508",
        "cursor": {
          "ref": "d9efd997-08f2-4975-9205-6297e118be24",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7a20806d-2829-47f4-87bc-c1059a555609"
        },
        "item": {
          "id": "263e1800-3358-4d71-bcf2-f6b776d9c508",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4af87ba3-2827-48bc-8c31-c5e5d82055ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e0ff93-e6f2-4a63-bd94-d49ea9d2a9e7",
        "cursor": {
          "ref": "a134ca6b-8abf-4ccc-ae3b-6f82d605debd",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "df7e6be8-e5f4-48c9-a8b1-c600189c380d"
        },
        "item": {
          "id": "c5e0ff93-e6f2-4a63-bd94-d49ea9d2a9e7",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7b2b5bed-a63b-439e-b7ff-15cd7a7d1068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179a876a-ceec-4837-a037-6aef2fea9bfb",
        "cursor": {
          "ref": "92d2aedf-ab30-4d9a-b339-b58d4a0a95b0",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "76e20686-7ec9-4691-8214-be4ba55ef3b6"
        },
        "item": {
          "id": "179a876a-ceec-4837-a037-6aef2fea9bfb",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5a126b68-5d69-460b-8d9b-f4a36245ee9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa18f103-2118-4962-9b64-174540f0d23c",
        "cursor": {
          "ref": "265cfdb2-9417-496c-b1fd-928e17a916bd",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "35a09324-6c35-4be0-8a64-d274bdfa4bf8"
        },
        "item": {
          "id": "aa18f103-2118-4962-9b64-174540f0d23c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b077b126-ffb0-41c8-9a6a-8b5a81877b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876d955a-a5f8-46d9-8a23-7e638a09eb80",
        "cursor": {
          "ref": "bc70532a-78d3-4b17-b293-1bf72a4cc0db",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cff21745-50a9-4484-96a4-69c21289fc64"
        },
        "item": {
          "id": "876d955a-a5f8-46d9-8a23-7e638a09eb80",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0375fa19-92a2-4d0e-ae26-62d81e05a9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25673f24-5830-4972-8b04-49c899233f30",
        "cursor": {
          "ref": "583db1cb-e8bb-445e-98ff-77cede93cfec",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "233e6aac-7996-418c-bf2d-53f7ab740f6c"
        },
        "item": {
          "id": "25673f24-5830-4972-8b04-49c899233f30",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "097cd50b-e61a-45c1-a8d0-46bd220b83ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36790e4-c228-4ed2-91e5-b2cda0a0c529",
        "cursor": {
          "ref": "3944426f-4635-4bb3-a203-e18b74fac51b",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "dcfd1b93-142b-4a66-9e2e-5330e8ed9cfb"
        },
        "item": {
          "id": "f36790e4-c228-4ed2-91e5-b2cda0a0c529",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2fd2c12a-86d6-488b-aefe-feb80e50d11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36070de8-85e7-4196-bead-515e44424843",
        "cursor": {
          "ref": "0259350d-7500-48cb-8733-a9867a635a73",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "075cb772-a745-42d2-ac08-3cdc38bf922b"
        },
        "item": {
          "id": "36070de8-85e7-4196-bead-515e44424843",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "42a22d6e-511c-4e74-afa1-2022793cb040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43fea7de-9dba-4155-ad82-fc32a9c5376e",
        "cursor": {
          "ref": "43b91dce-480c-4ed2-a5ad-db0325d2b327",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c7419fea-c425-4c07-ae0c-7e5af94bc33e"
        },
        "item": {
          "id": "43fea7de-9dba-4155-ad82-fc32a9c5376e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5b9e736e-26f2-484b-9cf9-b96dcdc04163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f40158-305b-4e16-acdc-5a70785c6cdc",
        "cursor": {
          "ref": "2efe4143-0f63-4122-a8ba-7397e3300173",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "406e5e5d-31d7-4e5c-bb25-75c4cc946e81"
        },
        "item": {
          "id": "25f40158-305b-4e16-acdc-5a70785c6cdc",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "bf22b361-e9e9-4fb7-b12f-f9fae8b4a27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e5b3e9-e234-438d-903e-0c5db56f95ca",
        "cursor": {
          "ref": "d34faee1-ffe9-41f8-a77b-a73414155003",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d6bb39c5-a9cf-40e2-a392-d3256350c3a9"
        },
        "item": {
          "id": "b9e5b3e9-e234-438d-903e-0c5db56f95ca",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "086c9076-ca7f-4b35-9c82-a779ff8aaad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e078262-82e4-4454-a49e-29ef3c584d04",
        "cursor": {
          "ref": "cbde827e-8692-4f79-8597-0be0a67e1b87",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ce8c1948-ef91-448e-af08-2cdda155814f"
        },
        "item": {
          "id": "6e078262-82e4-4454-a49e-29ef3c584d04",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "269d8637-825b-4dd7-aa0d-740b2b380133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb45141-00f6-4d1c-b2c4-d5db5222234b",
        "cursor": {
          "ref": "ee9c35a4-7cec-431e-bb5f-fffe87d41661",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "88488f3b-6ec9-4bf6-b419-f42bc1428c94"
        },
        "item": {
          "id": "abb45141-00f6-4d1c-b2c4-d5db5222234b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6f37829a-b770-4067-95b5-d2e631d961f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a559039c-caba-4d67-b9ea-d25b77acd628",
        "cursor": {
          "ref": "2e6251f1-0aaf-4c42-97b5-b4b42ee3ba9e",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "70e4917c-bab8-4f22-a7be-40dbd596d982"
        },
        "item": {
          "id": "a559039c-caba-4d67-b9ea-d25b77acd628",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8ba645fa-1e25-41f0-b632-96034c72d120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b649f244-9b2c-4d67-b1bc-14a72ecfa7b4",
        "cursor": {
          "ref": "2f097d66-e3e8-4e03-a0a4-ca72d97d6875",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c914c0eb-2a37-48b2-8fec-a35ce5211160"
        },
        "item": {
          "id": "b649f244-9b2c-4d67-b1bc-14a72ecfa7b4",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d5c647c5-450c-42e5-a60c-5fd7c7a479d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd2e2f4-3c7c-40ca-aa90-b56660c246c8",
        "cursor": {
          "ref": "d995d0f7-c70d-4161-8082-0b1e58d814ac",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0a32eeb7-f440-4fdd-a787-ec2588c7d2bf"
        },
        "item": {
          "id": "4dd2e2f4-3c7c-40ca-aa90-b56660c246c8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "978fcd56-8667-4623-9f58-b51dbf99c8b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08762d6c-1887-44d4-9a64-e807c894208b",
        "cursor": {
          "ref": "280be9b5-4565-4602-a552-d4d0a4b91596",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c0be2e80-9bfb-49fe-9916-c28729a58740"
        },
        "item": {
          "id": "08762d6c-1887-44d4-9a64-e807c894208b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a6492060-bb5d-427d-81e7-ac4689652543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b89d05-3c72-4b02-bff5-334b4a061f43",
        "cursor": {
          "ref": "a3935418-47d6-466e-934e-2a50523eb6a9",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a9de19b8-5126-435f-9fab-9f3af09a4cf7"
        },
        "item": {
          "id": "d8b89d05-3c72-4b02-bff5-334b4a061f43",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "18e07cb7-7068-4652-8017-c9d9a1e5ce7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1415b1e2-6907-4b7e-aa5e-d2d6b5b35210",
        "cursor": {
          "ref": "cf8c32a6-d3e9-40eb-bca9-d03950b9626e",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "56c3c7a5-328c-4b9a-8d27-394bba70e525"
        },
        "item": {
          "id": "1415b1e2-6907-4b7e-aa5e-d2d6b5b35210",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3ec9106c-bc46-45fe-b47f-323460b935cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32283048-218d-4ea9-b59a-079a1a4ceddd",
        "cursor": {
          "ref": "511087e0-9fc2-42d2-bdc9-bc9fa72c3f9e",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "31e287be-7994-4873-aedb-121205b17457"
        },
        "item": {
          "id": "32283048-218d-4ea9-b59a-079a1a4ceddd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "279f9369-98ad-4035-a1e0-16962a7d856e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755e45ac-ff43-4194-a320-3589b6557458",
        "cursor": {
          "ref": "d889e9c2-1367-4220-8660-f7716b365ea4",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "427c016e-4f22-4870-b592-f0212fa1a6fe"
        },
        "item": {
          "id": "755e45ac-ff43-4194-a320-3589b6557458",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1c3335f1-90b1-491a-9ce0-4ce78a37ec52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb609ac-dbd1-45db-9871-4f8bcd069894",
        "cursor": {
          "ref": "a0505566-b192-4637-9a4d-9fd059897c2b",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "3e7dbcb1-d598-4d2a-92f7-51559bee5b7d"
        },
        "item": {
          "id": "ffb609ac-dbd1-45db-9871-4f8bcd069894",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "624dc699-bd14-4dfe-8cca-ab9a781aa481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f053ea2c-559b-4955-9b2f-f28ed2afec81",
        "cursor": {
          "ref": "3e25981c-2fe6-4e07-8993-e0c00f215cfe",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "4e0be4eb-c24c-40c6-a80f-f1d7d5933498"
        },
        "item": {
          "id": "f053ea2c-559b-4955-9b2f-f28ed2afec81",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "294f052c-b260-4acd-a2d0-2f26935560f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1359b5-6246-43dd-81a7-8eebedaf152b",
        "cursor": {
          "ref": "f3abe3ca-ac7d-4db1-a391-2d242ac92637",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "5edc6768-7fa9-4fe0-be47-2abcb93109c1"
        },
        "item": {
          "id": "bd1359b5-6246-43dd-81a7-8eebedaf152b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3c7c77b5-49b9-49f7-b6f3-6bdefbfa72e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1cfaa78-f8f9-4670-a522-b57a17af355a",
        "cursor": {
          "ref": "fd9e058a-5c31-4001-9508-7189fe0fe809",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "a7c5fc97-86d7-4da6-a187-0379b98cf655"
        },
        "item": {
          "id": "e1cfaa78-f8f9-4670-a522-b57a17af355a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8ef850ad-6340-4a9b-a8f7-82a65a0eb34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796ba5c1-85e3-44c3-adb1-596eac6cadd2",
        "cursor": {
          "ref": "4a5cde27-460a-41db-8989-6c29b75e9e7b",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "52fe77d0-e88a-4e2a-b2f1-11c33d7df0bd"
        },
        "item": {
          "id": "796ba5c1-85e3-44c3-adb1-596eac6cadd2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "23fd6766-0ff4-4cfd-954b-fdeecc4d5e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f545d1-22e0-4bd5-8e58-6ae7639abddc",
        "cursor": {
          "ref": "3ed74e78-702d-4805-9041-0ba61d358f13",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "6769946c-5e3b-44b5-ad5d-1562713f7f98"
        },
        "item": {
          "id": "42f545d1-22e0-4bd5-8e58-6ae7639abddc",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1ffb0ed0-e926-448b-bc9e-e45c21fc4344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a096185-815e-4b66-a15c-770b2c3d6009",
        "cursor": {
          "ref": "c9af324f-c2f3-45b5-a71c-e3b5a23af45c",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "40c07a6d-607d-40a0-aa0f-dd8aadbac73d"
        },
        "item": {
          "id": "0a096185-815e-4b66-a15c-770b2c3d6009",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "33f51ae4-da8b-4504-a06c-987764261986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95854f91-1042-4f00-b95d-13edc5ec5218",
        "cursor": {
          "ref": "09c53249-a523-41a8-8703-1493eecaa4c0",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "bd866a03-fb37-46a9-8f2f-37493135c12f"
        },
        "item": {
          "id": "95854f91-1042-4f00-b95d-13edc5ec5218",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8c5b23fc-7de8-4034-bc74-ae441b26ec4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7fa4de-a0b0-4ee8-881d-02b7a0a8b11e",
        "cursor": {
          "ref": "2a3f504d-fbb2-41a8-b2a3-4c2f121f1a2e",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f9a9489b-8672-45fa-ab4f-d02855aec4ef"
        },
        "item": {
          "id": "ee7fa4de-a0b0-4ee8-881d-02b7a0a8b11e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0a7dc733-fc2a-4a1b-8414-b02fd8cfbcc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc2f9e1-d9a6-4903-b87d-9f212d894260",
        "cursor": {
          "ref": "96403f2e-a644-4ab6-b167-188a4b41a2ac",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "7ad67e63-2c92-4cdf-9826-8416d1a8c2df"
        },
        "item": {
          "id": "4dc2f9e1-d9a6-4903-b87d-9f212d894260",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b8d7fd2a-0c41-4246-bacb-2b2d9f9a367e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4814bc7b-a3a2-4f16-8d6a-1e6063c14890",
        "cursor": {
          "ref": "9a514d9a-1677-465a-a402-4297a8acf43b",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8514f1fd-1f93-42cb-93e0-3b91404ae1d9"
        },
        "item": {
          "id": "4814bc7b-a3a2-4f16-8d6a-1e6063c14890",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0cd4234d-e11a-4ff3-9ea6-2fcde909e220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "affe0c02-f000-4741-aa87-d5b80ad09484",
        "cursor": {
          "ref": "e7da5a2b-724e-446e-b130-0b1b8bd9ae04",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "e4594a7f-e7bf-48f7-9cce-b80179fb6fc4"
        },
        "item": {
          "id": "affe0c02-f000-4741-aa87-d5b80ad09484",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c151904d-4287-4ff4-a9f0-c2ffd66c1417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6279f097-7ba5-4f41-9da2-2c1c3710826a",
        "cursor": {
          "ref": "0bed9f10-189a-46a5-9624-217a10de385c",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c0ae4ec2-a150-47f1-9831-9686a6691754"
        },
        "item": {
          "id": "6279f097-7ba5-4f41-9da2-2c1c3710826a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "345649ca-1554-46d9-9b77-5027370354bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f833e2f7-34d7-4574-8d73-1773a6a67481",
        "cursor": {
          "ref": "92873736-5ccc-4308-908b-c8ca081d2110",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "91e3710f-87b3-41c1-8a16-4ae46254b418"
        },
        "item": {
          "id": "f833e2f7-34d7-4574-8d73-1773a6a67481",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4ed46b3f-871a-4814-ab76-3bb7ccd2763a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f300712-8ec0-421a-981a-8feee8ef7e1e",
        "cursor": {
          "ref": "25585c9c-c463-4a6a-9b88-18676962cba2",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "cf99eebf-95b5-4cb7-be22-938f89f446e6"
        },
        "item": {
          "id": "5f300712-8ec0-421a-981a-8feee8ef7e1e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "bf7f3e13-49e6-4204-89a2-0fb87d5047c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b2ed16-cc13-4aee-bcf0-49be08c7af05",
        "cursor": {
          "ref": "c04ce3ab-2c88-4de2-a89c-e849e3e0ad7d",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "0bc3e808-a5fb-48af-9448-e1593e3c90a5"
        },
        "item": {
          "id": "f8b2ed16-cc13-4aee-bcf0-49be08c7af05",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b7af5911-0ec2-4d73-b500-9fb284e3c7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b4c6a8-0741-46ce-b4a5-b6e38476aaf4",
        "cursor": {
          "ref": "610e5dfa-177f-4cb3-ae57-35ae54a900a1",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "7644d82e-92d4-47ad-9f7f-2a82f61c1f9b"
        },
        "item": {
          "id": "61b4c6a8-0741-46ce-b4a5-b6e38476aaf4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d1460393-2075-471b-9cf5-641b2916deb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d7f8df-16bc-43ae-aec1-8b2ff1f96444",
        "cursor": {
          "ref": "80e8ff8b-a3f4-4e07-829b-5e46a1114f04",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "5a9820b4-c5e8-46b2-82e7-3f40718a5764"
        },
        "item": {
          "id": "a1d7f8df-16bc-43ae-aec1-8b2ff1f96444",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "50dcb680-041a-449e-ac97-5582cb3727eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e6b714-11dc-42db-bb17-6a35314fed3d",
        "cursor": {
          "ref": "1d132c70-21f4-462f-ac47-f07dfb242599",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b7e8b8a6-ea1e-4533-8cd1-6717ac8549cd"
        },
        "item": {
          "id": "00e6b714-11dc-42db-bb17-6a35314fed3d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8d76b60b-acb7-47b5-9451-e124dcb5d43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f2d073-8432-4bb7-b2a3-48c859408106",
        "cursor": {
          "ref": "43257b65-b850-4a9b-956d-4e13acd7f47c",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c0987dfc-7890-4364-bf2c-8347a66ac7cf"
        },
        "item": {
          "id": "62f2d073-8432-4bb7-b2a3-48c859408106",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "cc830a70-72f5-4046-875b-586d047d808f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568ea09b-bf37-4af0-b431-ea7f99bcc969",
        "cursor": {
          "ref": "fe8e6d04-cc52-4b2a-bd0b-aad70b001224",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "e51ce0ea-003d-4f6e-a6ae-d7ca92ec859b"
        },
        "item": {
          "id": "568ea09b-bf37-4af0-b431-ea7f99bcc969",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "41f075f1-2e59-4f68-a376-7d84082d47e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e37859d-2662-4bb0-9051-d85556561504",
        "cursor": {
          "ref": "6c720e61-47f1-4415-bef6-d3e039d016a5",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "fe0f92ba-252f-4472-82d3-9d3f96f8868a"
        },
        "item": {
          "id": "5e37859d-2662-4bb0-9051-d85556561504",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "26ae89f7-92aa-4579-9e67-211029145c9d",
          "status": "OK",
          "code": 200,
          "responseTime": 95,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a742a8e-8541-4335-bab2-24952c3d94bb",
        "cursor": {
          "ref": "207dcfe0-7611-4e0c-98a0-0495db9285b9",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "169b623d-77bf-46ae-92f5-c9a0c9d382c3"
        },
        "item": {
          "id": "4a742a8e-8541-4335-bab2-24952c3d94bb",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a36a15fa-2526-435b-9d94-f22dae77ee1f",
          "status": "OK",
          "code": 200,
          "responseTime": 2206,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b5315b-555b-444a-9415-9d3007e6e599",
        "cursor": {
          "ref": "5250b3f7-8425-44bc-8cfb-8fa3273b2342",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8db7377c-235e-475f-a213-203c35579cd0"
        },
        "item": {
          "id": "d4b5315b-555b-444a-9415-9d3007e6e599",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "63047b13-690e-478f-9742-fb76411ab164",
          "status": "OK",
          "code": 200,
          "responseTime": 1856,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd5b703-50b0-42e1-8bcd-5049f4f2a334",
        "cursor": {
          "ref": "ad5d4240-78a3-4206-86fd-f496d0625d7b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "75da3789-36aa-4d63-a8c9-d2695d72e448"
        },
        "item": {
          "id": "7bd5b703-50b0-42e1-8bcd-5049f4f2a334",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d0334174-2f5f-4ba8-914f-c47162700bb8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd5b703-50b0-42e1-8bcd-5049f4f2a334",
        "cursor": {
          "ref": "ad5d4240-78a3-4206-86fd-f496d0625d7b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "75da3789-36aa-4d63-a8c9-d2695d72e448"
        },
        "item": {
          "id": "7bd5b703-50b0-42e1-8bcd-5049f4f2a334",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d0334174-2f5f-4ba8-914f-c47162700bb8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77dc2fb-2540-4389-b379-9b589f6f6ed6",
        "cursor": {
          "ref": "ef98d820-43d1-42a7-8763-f1986cc41e9a",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b847e469-c865-4844-bbd7-7fc484063ed7"
        },
        "item": {
          "id": "d77dc2fb-2540-4389-b379-9b589f6f6ed6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4f0578fe-bb0c-4f27-8107-4c2d8d279200",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e611959-ff37-48ba-9378-733b3e443a3b",
        "cursor": {
          "ref": "36749ee5-6ed2-40a3-9946-6ed6cddbf011",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "cf6dc035-983b-4afe-af8a-f911cf2bce6d"
        },
        "item": {
          "id": "0e611959-ff37-48ba-9378-733b3e443a3b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "471d22ea-2270-4797-9b13-58315aa2fb8c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 85,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}