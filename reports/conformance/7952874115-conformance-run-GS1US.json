{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f3ce7b6f-a99e-4f30-8d04-ec21812edf91",
        "name": "Clear Cache",
        "item": [
          {
            "id": "922e4d53-b8fe-4358-978a-d5b5c512673d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d5e2602d-abd3-4359-9062-ca8bf9ad6c88",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a5a0f5b1-269e-411c-9396-b168878a618f"
                }
              }
            ]
          },
          {
            "id": "e5304f33-b3c8-47bb-a04e-b6e1df38debe",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "478a1ac0-2b46-4ccb-a039-0779e3d96176",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8b799ef6-d565-4b12-a31c-6f569c5b0813"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a2eea726-88c7-4c16-93e9-a1c33c715b60",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b8b5dd07-a1a9-4fdc-b968-e93fe352dfa6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a9c61d1c-cc65-4456-ab00-10828dd351ca",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "76fa3773-a22a-44f7-bf44-c2fcb8c32895",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c9b63fc2-5e35-4ebc-ba5f-31391c793ffd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "21434ba0-e3ca-404e-871e-e8f46992c5da",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "02a497b7-23a1-4d9e-90cb-5228c70b84d2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "681b253c-dff1-4e42-8789-7f2345e938f7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b627a074-3eb3-4f9a-a5fd-653eab622cb3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aff73580-267e-4720-ba6e-d156dc95d120",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "07449788-7973-43b7-83be-a574bde18cd3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50ed8715-f941-4759-a3f2-ecfd0cfd3278",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "264e1f81-abe0-4b32-98ad-2fc1803bcb4d"
            }
          }
        ]
      },
      {
        "id": "efc334d5-de38-4025-937e-9c951eae06ff",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6f467433-94b2-4f47-b102-62018149524d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "680de35c-11e5-4ea3-88a8-c6692c92b5e4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b4c639fc-0965-4792-936b-74e525448959",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a25e42-5adc-492c-b574-a1cfa910caa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2361418-7e0a-427d-8338-102aa5febc43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c2cca3-03df-4bd7-8efe-d35f4707612c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28a4dc2-b48e-496e-8930-4aa24fd82348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "334fea57-e09f-41e5-89c0-2de10316c914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350585b9-7585-461a-95ec-a65fff0cbcf3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01afbb44-c5a1-4411-a06c-626e6660941c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3cb9eecb-7113-4937-8848-c227f1714e6c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3470ede9-9338-4f73-ada0-fc21737da517",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a9693f9b-f971-40b6-93e9-14c555269013",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ea7a51-e809-483b-8943-ad8802432f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7146ea8a-e90b-4333-a776-6d2cb8d9e6b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e9c219-5642-4e16-b721-f6bf7f3e730f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "187e6b30-1449-4511-9a68-fc3ac5746b3c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c4ae0a0c-497b-4553-99a2-97f096b68ecb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ecb194d0-fe2b-40a2-8665-69e852e6f416",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f1f44d4-ad79-4e81-a305-96785403ee52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e7571119-1c35-4ae6-a316-602b4b01d2b2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c320126-f44d-4218-9225-dbbd777e1efd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "bdbeffb5-faa9-416c-8d20-60e56c0104bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89771c92-889e-4c35-8685-85d1a4c21a3b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eed5741e-7d62-4123-8073-ab9f83d2899b"
            }
          }
        ]
      },
      {
        "id": "c369ab31-e460-489a-a775-8c2bb44238c7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0416a088-79d4-4d53-844d-32a298cc5bc1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "812e0bbb-f43e-447a-981b-a52c10b0d98e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e778d3a6-d1a1-4fca-ac5f-ffaf1414855a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff7a01e-0e56-4f39-ab93-254dd74059aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "838ceca9-ae92-4e79-ad09-46732a132ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c132fc-323b-4e2d-8a9b-3eb47e4b2117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddca92d5-dafa-439f-9a59-299c52e4a042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9911ff2-7a7c-40ad-8a78-e8e0ce0c97e4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce84a833-9687-4a7e-8f77-e28622ec7101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f95ab4e5-adc9-434d-86e6-dd6126d49712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2840ff1-0d4a-4923-bd92-145dd13513da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c9f1121-00f7-4ce2-9177-5b6234c86943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827c6a89-140e-437a-9299-027e172a8d22",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "373c6520-0aaa-4544-b8f5-8874209089dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc42087a-00df-4830-b039-9d2d64305ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd641e3-a689-468a-ab81-ddb8fec095e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4cb1802-92f6-495c-a03a-2e31f9f15b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77d06fe-a7c8-4031-b62b-a71ed18ed2ec",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94754601-41ba-4c67-82e5-a83d4d2ed333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20cc8b80-6a5b-47dd-b205-9ac903ae7cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dcf1fbf-b51c-464b-9d13-e99fd91a1e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a27fe8b-eac4-4be3-9e4e-75facf914879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3ac90c-c504-48de-9de1-f99c20515e1c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "327f6d36-b014-4197-8916-2132bae9c377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216dd8d1-6d2e-46e1-ba4f-77541ef3e10e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f097f6-14ce-46a7-b84e-26cccdf800e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68a5cb9a-6e03-410c-9e25-4367d4ebc3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012e2162-2312-4e03-8bb1-fdee226cae96",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7964b6d5-cece-49be-891a-1725641ec91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed2ebd8-49ad-41e4-89e8-34d66ecdc0ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd933b1-d303-4ed0-9e33-ce33cc670e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4058934-017a-43c6-a9eb-849fa38b2a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9854bc3-a877-4065-9d64-1bfaf627165e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7987cca4-01df-46f8-ac79-fdc27c52d6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce4a79e3-eb36-49fe-b6ca-156082344bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0921d1-7d84-4ae4-b638-b1cc27504bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7c92022-fbdb-454f-8557-c3ee09490347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f10791-d88a-4383-9463-336f7f15b2ba",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcf281e-3d15-4b89-94fa-8ba808418e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1b00c97-4962-4d5a-b11f-f0e56ff4a523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf6d224-8d24-449e-9550-4017e68f6ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff9ddebc-e44b-46c0-b068-2b7aa773583b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37788961-7a41-45bc-85df-0d67b85c0e06",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a63e775-f3e9-40d1-903b-7e77099f5d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "098ec122-962b-4a51-8464-e90211db339d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8dee5d-c81b-4042-afec-fef1ed388800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "635c80a3-83d3-4332-928b-2e7a4ea2eeed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5bb05ac-438e-4ca2-8601-1446dffd0fbc",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3373f858-8942-405d-b895-4da70d3507be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31757779-cf75-4337-8973-2d48be2c1476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9e6351-1b4e-4c2d-9a7c-120513a10285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da34ed4d-c706-42e3-b8ec-9d7a416d8711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f360f172-584a-4f54-8c0e-afd77b6f7c5e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5397359-fa6b-4d3e-b6cf-d2571694df91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe6cfc38-1452-46de-a8ef-00c3d929b8e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c875f3d6-1977-4b33-badd-f2af794cf82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "199ec859-4718-40ca-94b8-fc21d31640ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f54a3a6-85e9-4b24-8856-d513acad3766",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04061f53-7119-460e-851e-46e1e6499424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f1d117-7e22-4bf5-8837-102c23af0865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a748a93-aaaf-4cab-9580-32335d4a5231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b827c477-f570-480e-b456-de9173f2c93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118679f7-97a8-464c-af36-70e68a7da1b2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4c938e-bdac-43bd-a593-b3098a9829b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "576d549a-b77e-449a-8ca8-8aa5ac82b11d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "665794eb-20ea-47ac-9fbc-6ff5842d109c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e02defe-ec7a-48a5-a689-23b8b5a79e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba3eef2-7957-4b86-aaf8-e53e6422cb8f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcef54ea-1e14-4395-b33c-01fabb5caca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba87b589-e7aa-4157-96f3-b2f5832778fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95a079a-0e48-4206-b54c-210ab0efc647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f672434-5f6f-46e6-8194-1bce8d2446f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233912b0-fa83-4200-be49-ade642b434c7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec130119-42f8-4317-8959-d00c812cc4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b082f012-21d0-4ecd-bd94-069ac742ffdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5284b57a-b6cf-47ea-820e-1537f94186f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c04ff3f-3a25-4bb9-aa67-334ff6f4d945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38312386-e021-4b46-b743-d5dc2b455e1e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c7b012-6aff-4faf-8cf0-9ce20ec8616f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a160e815-d176-4c86-b533-4e35deddb6bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d979d52d-26da-4da2-a745-a7d2343ca77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3397b780-3c46-47fd-ac81-9ff6511646cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68de59f0-f6a8-4340-b501-e054bbf65436",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64532262-6725-4cdb-a43f-bc283ac79523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a578db2e-66cb-44ee-938e-2f294dc68137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fae6d9a-bc84-4824-aa20-f9a114aab20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "529b5402-f4c2-401a-8e3f-ea7339e25709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c526cf28-a08e-4bff-857b-afebe960fc63",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d3de5c-e47e-4fde-a39b-587e6de5e670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c9cffd-3f06-4b4b-bd04-c5c492520a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0673577e-5610-4b80-a7c9-432383a4a9b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "db508d14-733e-4a7a-9b3b-2905434e45ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda927f1-710c-4c17-9d84-57cb2746a48d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425b1f9b-2deb-4a11-a3a9-934fecaf7348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e1db67-40c1-4c0a-8d35-3cc10f494fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947b2911-648a-4ffd-81c7-18a1c3cfc11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "39824a8a-a37b-495f-a6dc-4cf3720694d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4dab122-6115-4ec0-968a-eb4a019914b8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80f1c79-87ae-499a-9098-7f0eec83f46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca481f8-83df-4329-88a1-35e17293c464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337300f8-135b-4110-b12b-7f5255ac7996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18f248b2-3c4e-42e2-aae8-0fd2819e51d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a324f1-adba-42da-b25e-7646a1260747",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf77497-89d7-4dd9-980c-3fd7aff573be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6dfb022-5d47-4b7f-8434-4775a92c8aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396293fd-7ef9-470b-a854-23b18fe0d14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2854c054-e390-4a55-b9e1-ffcb46fa73ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd4619a-b411-40fe-b8d8-8890e8ff72ad",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49416c32-a382-4e2b-9ebc-1035ee778f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b168ee-fec2-4627-b749-e520e3d85598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3e01c1-1007-4ed9-9b80-8582f93132b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd817f9-5166-4498-81a0-5791f656f44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4e666a-d23b-4edc-8eff-d51598ae8498",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464b2a3a-1056-4727-bd23-a27c771bf288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dbeba21-adba-479b-ae46-0043040c737d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5221952-af1d-4876-a1aa-2919224abe66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "81a4886c-c3ec-4776-ac1e-df602646ee29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbaf63fd-a927-43cd-b8d3-123eb1a8c39a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7ca9fa-2222-46cf-a3ec-92aa80e40214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb45e944-35b5-4cdb-915d-57e2f7e8ac1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbd9ece-2f52-480d-9a8f-95363ac28420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dc7e18f-47e0-4857-814a-4c6dc4fd879c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c00e018-ecf1-4eff-9a7a-b3eb38ce3350",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfacd1e-2300-4fc1-be1f-13732be15d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e914e8e0-7cb4-4793-adbf-2a8f309d58a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bacb815-e25f-434a-ae9c-90e9690183ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9af0398c-477b-43b3-8eb9-34f8cf49022d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fcbbb3f-3f29-4cf5-95b8-f01ac952064d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78da536-d62c-49f7-af79-03f139f4d0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f389b278-545c-4cc3-baef-cce3955c320e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c3551a-8218-4fea-8901-c3858b81ebde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a03185c2-015e-4659-bf30-c17b9f258384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e075b26d-fe58-4850-900f-cfe88057585e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bafe95-4c53-4eba-9048-1259a62dfdd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b6b3445-70b5-4588-8bbb-f86f161b3245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc2b23a-c47a-4e6d-ab39-715eb384c147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff266e36-8068-4fab-8f65-fe23682a9624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a767af-cfd5-4d66-9c29-66cfe2192bb0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90e7b0f-13be-4a90-be3b-acaa0cd5d7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af016a49-0ed2-4e95-b5aa-4ccad8df853f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c430b9-b850-499f-93f4-39fb1d7d462e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a2da06b-7003-4007-94ce-62ea4c6d86ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba52298e-098a-4f07-9b11-00b5b2d3667b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "042abf69-b6f4-4ce3-ba31-579bdfc48453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a8c44a4-fefc-4c93-bf9a-c583b28710af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e067f0-3327-4166-a915-3d23e8e63331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7684c06-fb26-424a-8468-396a7ec1a6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a667f77-a6ad-4e43-b8a9-4f010a231c14",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc20026-7720-4786-b96f-25fc968bb4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1f5e92-df94-4aef-9bbd-e0813918ef6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640743c0-8e9a-4afc-8879-cfd2f92ba9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b76c4a8-b53e-4815-91e1-edfed1bd2c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e473f8b-9f80-42a4-9937-fbaf0a05edef",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00573e70-b1f7-44d1-b98a-f9a5a5f8bc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a086810-4dde-4171-a42d-1789dd25fb4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d713c2-258b-4e61-b77d-8e5306162c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0433afea-eaa8-4b26-a05b-09dfa148ff0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091812b6-e509-4160-bf6a-4be985502ff2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "963d5c2a-e6b3-4118-9ac7-410d01dd0dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98df4d95-365b-4855-be41-c4286cbd6bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d831d15b-b46d-472b-ad4e-062568a7eb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b76c059-e07d-47e6-b6d5-84239eb4d19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c5f91a-7eec-454f-9cac-79dd20918c12",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b5fa8b-2ac5-48a4-a96c-9366280be9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aef8b6aa-7bec-45e4-85b5-d6ddc0b8cfbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74b6306-269a-498c-918b-38c0b72f9185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95fe64ac-d45f-4066-a82d-2ea6c060d323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb89d864-f69c-4569-8e20-d3eb1e2b5227",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "370aff0c-5cec-4cbb-8f03-7ee63a0bc333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb35d17-bdf8-4357-bae3-dcc2ed542d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b313c8-b996-42ef-adc4-d6309b3fe67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21450c0e-8677-459b-b8c4-cd5edbe441d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a235efc3-7e88-4e2b-b565-cd8def4d048b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68397fcc-bd01-40d7-b283-b97bc24493ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eddf23a-b541-46ab-9442-2cc41ae47195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a411f61-4d41-4c83-a703-90cf2a7c348e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "985b6770-0f97-4f34-9d50-a5b15ea9edc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb48bbb-840c-4612-a026-bb71c4f51704",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ef4db1-8fbd-4e2d-8e68-1fbac7ad2547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7340ea7d-4797-46cf-b5bd-7901ee484d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3209589-8584-4139-a88d-d65c8601c186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8489afb6-9b88-40bc-92fb-5d164d3559ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ec0d56-9b83-49b2-b7fa-a9ccc102a410",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "133175de-c228-4c9b-bab2-f3447848f11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a493f889-b169-4d65-9512-0bd6d9c616e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780d46e9-2e47-4224-bfdd-49273d30319b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e800fd-4ead-4063-9ea7-c1d7aca40711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7fdca63-b913-48dd-bb74-ee16b6204afc",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "236f0014-7cf7-4cba-a99f-051ad46a6ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b19b7d72-8f4a-406b-93b6-5ce9ea4f3a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e52fc03-0bdf-47f1-8dda-6376740e0b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2cc25c4-3049-4694-a10d-fc224edc063b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f55d39e-2d6d-45b7-a0a0-22f31c9650d6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549cbd00-7134-4462-a112-fd81a2358926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9333ea51-b4ab-4b0b-88eb-de0b82e1a90e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0732ec3d-6d45-4a18-923f-b51f285ca270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2fd672-e6df-4fcd-bbff-fc75206501bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c69620-a90f-443b-a698-695788ed30d7",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeae1d31-84a5-4b57-b1c8-87781c4df73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2660b050-2bc6-40ee-85b3-5f41dfb5d00e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6525e3-ecd9-403b-86ed-7ff9be1cb5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1fbccb1-f8d8-474e-a4d1-b96bcc1c1078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68496574-03be-4122-983b-c149a417481e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "559313bd-c5a9-4368-9e1e-18caac36ad2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "701ee90c-b7ae-4dc7-82a6-d16de85265ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9934c3f-e0c6-41bb-820c-ef1a20f29b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "98ecbc7f-4e12-4b88-a0e6-a825f9adb03f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560e0552-41e1-4abc-ac45-c34b060bee7a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1f16ea-0ce2-4cb2-81cf-43c0abe6cd5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c2fefa-a89b-4b8b-967b-da0d1e3ccc08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db3792c-6f54-467a-92f3-6a287a3a638c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "eadc04bb-440c-4825-90c1-8fc4bdb99cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ceffd9f-3ed0-4ef8-bd7e-96dedca8142b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76c5949-abce-4823-8d3e-5c61236095ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "526f3e0e-0b8c-4b82-809f-7bd3e93ec2b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2853fca-58e2-4ec7-aa51-d46886d21506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8209a94-6128-477c-ad23-9ec0d76e2021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a37df47-cc40-4479-ba7c-67de4531258b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eebc8b7-c5cb-4bff-beed-a8e4d873b630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b7fd915-8936-4404-9d07-f40638196c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c14df6d-9c73-4208-a7fe-0801885ac66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d438a690-afb9-4f9d-97b1-79667379080c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d87b0ad-8761-45f7-8139-000cf05297ee",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6a0413-a85d-48bd-b1f7-bc4d31a3e3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "596a26f0-a23b-499f-b952-f99240191446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20839835-16b4-4e18-8f6a-3c9dfbf3ba30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "115252cb-fdab-499d-83d3-9d3803263a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da5220c-05f0-48ab-9e05-9a1c4aa3f192",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c8fb08-f2f6-40d9-9025-b291293ec05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "470b2ff6-f5e9-4891-a33e-0665bd5b7d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c98e5e-9bd7-4106-8862-b3e5a38e21c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e44650-8e70-481f-816d-98f5fe2991e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2694a058-531f-4611-9c9e-1b025d01541b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac69cada-679f-4d50-8a4c-f671e0298da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e9d71f-992b-4571-9e28-6bde7ca99dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d40879-82c2-4f25-90fb-6bf4ac807151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d83c3c8-dcb2-4955-a469-7f589442bc2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208bab53-f170-4a8f-b9e8-26e965402031",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bda775-781b-4a19-afe7-1dcf3c04529d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e39bb5f-3330-4c00-ac02-380196e2f222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705d643a-219e-4784-92c4-2d7a653727a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eefa48e7-6870-468e-935d-e5689e6ff72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfcd2a4e-68bc-46cf-8ac1-e49d7f53fdf0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21740ac3-b12c-451c-90c8-01bbc24593e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc542672-d2c7-4cd3-a189-dc7e9f75c716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32637821-0e09-4d2d-9090-02588464c525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d7a28f7-bcdb-42c0-9e2a-8846547bb895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014cf4da-c07d-44bd-88a5-85313ee7cd6e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ca7acd-d1f2-4cd8-94ce-fa2508d8c3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19cbecc5-b28b-4e11-a088-78358c4fbafd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4265dbe7-f036-497a-b8f6-b0b60eb21b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41d43280-b153-4144-8a59-088187d17f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79423bc-bfa8-4f6c-b7bb-2eb827d5ec3b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d9983a5-6868-4eef-9600-398b46781acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e57a04cd-8a43-4a1a-b61b-af19e36468b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19cf9db9-ed38-4c10-bb1a-6bba22a107e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "39153ae4-3804-458b-affa-b005ee98c6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e814a6-51e2-46bd-9594-60d2eb884946",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b876fcd-4a6c-48c9-848a-a4a683db4b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9eb1f7-6abb-4d23-b642-da8c2ce74ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66d0f00-5b73-489d-9e35-4f23cfa35741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fada2e9-b7f1-4243-92db-8b105833ccf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e638501-8e30-427a-8807-799298577bdf",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09caf4f-20d4-4016-bf4c-8633b32317b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ca0a28-ec16-4774-837d-0aadb816c61b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35390009-899d-40bc-863e-d78a3c758430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29df0f6b-fe30-4cdb-9117-e987e703103e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163026d8-433e-493a-8089-02ac04471f3e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02bb3eaf-16b2-4ff7-bbbf-6494239d30c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f40c49-e68a-4a5b-891b-bfc12f84dbca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23dff63-99a4-4743-ab75-a7dfdab7a92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eadd245-229c-4c0c-8a08-6276a1735836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534de254-de8c-46ef-b0cb-89526a375ae8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aeda7d7-41b7-4eca-8ba2-b2e51cee86e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2484ca49-837d-4380-97e6-b638a72820e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07e6755-0c2a-46c2-aff1-988940c89165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "116194e6-00e8-4442-b6e3-d368e2316669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28016e0d-4824-4ee3-8bff-c7977dcf1b1c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7381d18-2e12-4055-962a-1ef4ccc48f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6b6e7d-0808-42f0-b022-f57130116f7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7438d508-7d07-4880-a100-723dda07ceee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a4ee99-5c70-4da5-a832-d18307ed15bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06551c93-a920-48e0-8e24-8b109640275e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd19cf73-7ee9-4753-9b6f-66394c4d8319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4edb8a37-fd59-45cf-838e-a7176f7c0954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a66a865-dd3c-4ea8-af65-dc49784c5a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa780de5-f29c-4b4e-90bb-65cbe598c18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72002d69-880c-4a11-b6cc-7c139a29c33c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ce1494-9eeb-4b78-9b71-7deaa54f5c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff4e4ce-d509-4c6f-876e-a5be501631db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf611dc-9c34-4dfb-a30f-12d1239d37f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7804e7f7-93a2-4a6f-808f-857c74f14241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df677488-ff76-4327-9fc9-c62a742cec2a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29620234-12cf-4e87-8844-a69b720d5109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d43e85-f705-451c-8eb6-95a60df61424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b9d8b2-e6e4-41fe-9133-778644b28f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1730c79b-6467-4de1-82f5-046b564743f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc6b2ae-85af-4e53-9cee-bdfe6d1eb800",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98854fa-ba8f-4c2a-aee3-274fd380c454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba17c050-6e8b-4d0a-971d-4ebb6159c904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36af0cd2-353d-4654-b98a-c71856d9a236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "48cd77a1-3ce9-4f6b-a897-bbc093791150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62df4ebc-1df9-4100-a4ae-6c8635b375dd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efa4efa-c207-4f2f-866b-53573d75a187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd3f5d7-0ad8-4944-9eb4-4b51f6896193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52bc43cd-b72f-476b-86ae-3fcad4369303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fed7d676-132d-44ec-b4cc-b14edc15dd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1285dfb4-8fc8-433e-89b1-da62d888e699",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec70b65a-2e73-4cbc-9e17-5736fa9c2ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11890455-46bf-443a-8fdc-3d432d43dc90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894971fa-a957-419f-8953-f6d221793814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6857722c-d85f-42c0-9de0-5a12f1ad9462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913d1413-67eb-4e10-aae9-7833511e087a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3a175a-1bbe-4194-881c-12e39f9150c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc648c5-b3b9-4602-be27-f0551c0f7f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8779b26c-d3d4-4926-a0c2-5d37fc82e2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "322f299b-15d8-4f6f-8697-657156375e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d548391-387f-4d17-9714-b2dc7c54d4c4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37975fad-d577-41ef-933d-df882f106e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467bca9a-67b7-4458-bdf0-839071736c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63112fd5-89e1-46fa-a97f-cfd63322959d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dd98232-295e-404c-8be7-0c1cad5ca788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb607748-e6c6-40b7-a947-3ed855384e3f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03121bca-575a-42ee-b037-79112b4aa90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c757e9-4135-4fb9-b33f-1e91d0be142d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7d05c7-470b-4854-829d-5637aa38b45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "50601443-e64d-47a8-a1dc-43eb7c15eecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf005d6-bdfe-4d1c-bc9b-b7dfd45f5d75",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "016dd1a1-3905-4327-baf0-16f3ca35cb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c547137-ac68-4869-9d87-226db20c4b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7ee43b-8029-4d40-982f-b01726852d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87672145-48dd-422d-999a-f0401fe2a138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86daf9c-0c23-47d3-9d56-0e80e67b8631",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeec108c-c1c7-49ca-b054-6bc37261e09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc23e356-4d31-48dd-b797-ccc7320e8c8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720fe56c-88fa-43da-9c0e-2d13d0dff3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c47c35f-cee3-4d49-9fea-04af97de9985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e15d91-b7f8-49ab-ac0f-341d1a7f051d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8754685d-1853-41bc-aaa0-9dae217e6ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a63fb0f-e180-43cc-9d9a-6948d695885e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c06f2cb-2895-4fc8-9558-7d178a431bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b1e9e71-d00b-4d3a-990a-6073e9f0548c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f1bff1-ce73-47ed-91da-903824f3076f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5efc8f-67c6-4cc5-bc33-0281089f2584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61cfd159-ca0c-4eb1-80bd-8e2e2035657e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1084c964-d0dd-4ebb-8d81-509fc0e5f57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e070c18d-7b83-4a92-b3d0-f51ad623aa8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02492e2b-6db7-46c2-abb4-8e3c4d285362",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2947cb-c8dd-4887-8267-29aeca5f3260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a47c613e-4eae-4098-bc0d-5a105b988556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5fde0ee-cbd9-4366-9d39-def34bf02dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "abbf34f0-874b-4cd8-9485-0068c2531e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a7d1e7-0a6e-4562-8c2e-6d7c49fbb540",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4675168-1cc9-4fc2-b5f9-05b00b3ccc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d620ee39-a1bd-42ab-a3b8-0f0464e96750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc27ebfd-c508-4bd4-aed4-6e6f5c96741d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "337cd193-6047-457a-95e4-e13bd5a7465a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f30dc99-2b73-4b65-868e-ef61d1586ebf",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cec3ad4-1bf4-465b-96a2-b25aebb63072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04aec6a8-9cca-495d-9be7-80a8cd791ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a42813-bd8b-417b-8a40-8b36005531dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2073114-d734-4ed2-81e2-a977582ffe9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aebf002-45f8-4589-b266-963536425f1b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08c02b6-03c6-4f69-83f8-1cad6a51e8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e9c92d7-5b6f-4b2a-a223-9b4331343e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8caae0b8-38f7-43cf-b55d-88e26fa4d27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfdbb24e-b458-4c62-9735-ca163d4228a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d78ab0-b5b2-4043-aa46-c10e8eb0490c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "127c5f0c-c96e-4ddb-8ad8-daf854c9d36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc945ab0-25bf-41e5-9053-d85facd754d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd141199-b33a-41e3-b7dd-48ca75253266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a9ee6057-8b62-4ca2-b388-754dd6cfa1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916dbc4b-0348-4dc1-8b69-8de78bf178b2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8646be08-780f-49d7-af28-d2bd1f73059b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ed68d6-e64c-40ab-baec-092bf60ebcf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99fe53b-d544-4403-8164-cd01b13381a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c49b97b-0037-4f3f-9c02-e47c70bf4c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "277327d3-9be0-4b03-923e-a1dc2e738a9c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86dc42d5-73c9-4fb4-91ae-d26076ebcd53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df83684-388c-4083-b2f5-99c092fd1a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2611c618-2523-4c51-ab6e-65153ff1def8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6722ced-c2c5-4449-96c7-b313ff96c173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0fd37a-1886-49e6-bdb6-a0e685ab3274",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c060325c-3442-426f-8ff8-09d92a7a5e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b6a3a4-8a95-4824-9b1e-816a98c5e79c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66252c3f-2ae6-463f-8a4e-9c13d39789a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a56b590c-91ce-4905-8c24-bcede7a470e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe28dc04-8efc-442f-ab2a-e66a74fa1a5a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee97e3ad-f2c2-4fd3-9ad7-70688e5ba113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "565bfaa4-2689-48af-9f01-1c232af9b639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d856ac-333b-4adf-89c1-b01ba092d829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fe75255-1f68-45bc-8818-dfdca70ae9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef293f8-267b-4161-9cce-fedc8a6f1ccc",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c475707-5b73-4973-9182-53367c2683e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec953be0-4545-4284-86dd-3bfb87671851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb639b61-2bec-4172-981f-2fe28610cd4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "82046a4a-a5d5-4858-8061-b21046ba51f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d219c507-efa9-47cb-a610-9b5badfbeec8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2d7eec-54b0-4d7a-92fa-8518897b6a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc895e4d-3f12-474f-bc24-1ff8540a33d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cebb974-d550-4599-8759-7ce1a690d1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b7dd42f-e658-4468-b45a-133fa59f4bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc489499-6779-4ab3-ab0f-362fe1f3eac4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e2bf2f-9ea3-4cb1-bb94-c9fc489ace25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b81e82-b0e6-4617-875a-7d7e5b185cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac2acd4-3426-41ca-99f6-7e7c68c048a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea89801d-72e8-4c11-b9f8-37a8cb77a391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c692dda5-8834-4040-9401-d2bbc773127a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c712b3-ca59-400c-98c8-e2d54221ae9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e982d8ea-2310-4931-a004-c8c1289b7078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763ac86a-7f52-4f6b-8297-9bcb37f55935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a79f715-4036-40fc-a9f8-5e4b6f2ed384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e3eac9-1cb5-47bf-8f8a-76f2adbc6aa1",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0ab80e-af55-457e-908c-e62b560070e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41267a54-73b7-40e0-969f-1134bc864cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d52807-a3ac-4d62-bfee-addb520582b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e30d873-c61c-48ba-8add-c34bdad24c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a5e3bc-f1f2-498e-93f2-c356c8dd8f79",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08124c3a-6672-4507-acf0-c55fc4626f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb34dee-96ab-4d14-aad3-49c82b99f1e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1fd781-a8d4-44d1-afb0-660b69099a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92419b36-89e6-4bba-afa3-53415429badb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c894ea75-48da-4c7a-b534-e3a81cde73de",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4978a3f-990b-4375-b895-d471a3a280bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea6e3c46-f04d-4fec-bca1-0aaed5ddd54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df13dec-a2ff-42b1-a378-6894d5d8f91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1bec25db-06f9-41b5-b76f-feea9ec17609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5829ce-78af-4f3e-8b07-9ebb01a18a9f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de1a8d8-ad9e-48b4-98c5-e8e6e002d50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1cac08c-03a1-42a0-88db-b928f9e3ddeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f7a31c-23af-4621-9b42-4067e3c2b242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "387cc232-e777-403e-a824-0674b18c8b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2d515a-5353-4c53-80c3-b36263f6cea8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0649fa-0f41-402f-a790-3fb21cd4f66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df55039-eed8-4dc9-9db8-c330c1f23409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fe55b6-a2ab-4cc2-a280-c38f6d3b09e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff410d7-2eff-47d4-ba9d-52c47d50c3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5992e14-e470-4213-9b46-53cba074ab04",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aba65f5-458f-4f23-8655-e702f20db17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f62e749e-9944-4ca8-b559-0e23da861895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75780837-d67c-49ab-9083-4d4af8b83fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "57f5aa33-19d4-47ee-b0b9-28a5ba0fe0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c71081-a4bf-4a99-80d5-829560d5a8a3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c90f8fb-d281-4359-98fc-7e25c468225f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a4a9dab-a785-43dd-8cfd-a545c52ce917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97e62e7-d544-4e86-895c-ece0b229aef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c621afb-9f01-413a-95e3-6be9c755e7f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685e59c4-7d48-466e-a751-cb8180df559e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f67de86-7741-4048-bea1-b1e23ed0cab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6166acfb-0ad9-4e96-94a7-0c3c413df8ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020d5ded-ab36-4548-b59f-60cc875f57ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "af11ee57-adbe-426d-af3c-e1dbe7f8ec3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a7e49e-51d2-41bc-a2e8-888548b33793",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da113663-0ffa-4df8-beeb-c627cce5770b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e447759a-2fc1-46e3-9319-6acc4af31e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff245e7e-9d58-4653-95bb-99d160ea3e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "474fc81f-5206-4009-b3c3-b8095c572504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67714526-c1f8-42aa-a2b3-7b6ca22077b4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "132804ad-e775-4b5e-80b4-6df1e783a3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "14954bbb-c12e-4406-9c08-424bfa831a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22af86fb-9693-482b-bba3-148157cfcd65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7b054a-3ac5-4fd7-b6d9-08e688fdb338"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ece52bd8-1e0b-4c8d-878b-6489ce86f182",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04d85cf0-5a60-49e8-b328-0c265d8fc58d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768eeb16-fa42-4afd-920c-5c609adf7467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7530d1b3-93ca-4e63-acc7-8f7d137aa1bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b34b8c-3041-41cb-b609-ca3e26e89447",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0beee117-0e8a-42ce-b4b0-975cddb50c34"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0f2a384-43ac-4912-8a1a-aa2275382e1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9877b813-b3d3-4163-b0d6-e8c3933aaf4a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "76e77c02-27b5-435b-938c-d1f67a0ddfe4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5269e240-aaa6-46d4-b5b3-9af39ecbe4ea"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e38dbbd2-2ba9-43b5-98af-2b435985ab1b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f54da2b1-3691-4e47-a8f1-9ce26d34398b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a9a77085-394f-4ec3-ae5c-ac21832a31ce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "32533704-eade-4d03-a876-8872fce3ad7b"
                }
              }
            ]
          },
          {
            "id": "985e7e70-f9e5-4680-9862-b1625f8f3c4f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0981ce02-faf8-4f2f-9eee-e941a21bb366",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "1ed03b56-c489-4000-adec-e84e511dc574",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22c8f68-024d-4fc5-91c8-3145b82a4285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f4a048cc-1675-4760-b256-b1149d48eab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d660b19c-8ebc-4115-8f41-2b7450db401e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cfc0627-573a-4d39-b800-1aaa02f89c3d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a72b3713-4f58-4d9b-a456-96e5e802e1a9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50d000a1-56f9-4b4c-80d0-92d603106609",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "56b68c75-c327-4d00-b700-28fd0ad3f870"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a704f424-9c7c-4f2c-928b-ed0251736071",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2c315fe8-304b-4871-ba87-831015fe7bfb"
                    }
                  }
                ]
              },
              {
                "id": "e9278280-b981-4fd0-b1bd-94313f165e02",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d3ce190-057f-4b27-9d57-7424c68edb27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cbb20658-71dd-4a5f-855c-8ce0d31d03e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bccc7131-cac6-40ef-8b41-c93212bd33e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "99155f56-4d24-421d-b590-65efefcb2221"
                    }
                  }
                ]
              },
              {
                "id": "b7667944-6077-4b3a-bbef-a7d07d2d0f21",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c5a218c-6549-4db9-b2c0-43756c97393c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c36b67cc-8487-4161-8552-632f5ae513a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1d8ef0f-8462-4918-a09d-0ad97c653218",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bab8bc1e-fefe-4ab1-a1f2-cfce59aed45d"
                    }
                  }
                ]
              },
              {
                "id": "b18b80dd-8665-4369-a0ec-1a6bece40c2c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fd46794-617a-4064-98ea-c207f488d070",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "53494f2e-9f9d-445f-9acd-0b6a1cbad5de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8a76a79-59e4-4b4d-b44d-89e606c6681d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c9fbd93f-be9e-4391-8d3a-8585f2cc497f"
                    }
                  }
                ]
              },
              {
                "id": "58a2aa25-fc48-4a84-acbf-0fb1804837cd",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8cbb4055-c359-49d8-9de6-2d5fee0f832e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd8253e1-7710-47fb-87d0-16f8e4225c61"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20d17832-3397-46e5-8935-963c263c5fab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "29426ee4-1c72-4d36-a0e2-79f2478d9398"
                    }
                  }
                ]
              },
              {
                "id": "10ad8865-db69-41ae-93ea-8e2aad1dc22a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c527c9b1-2840-46bf-9250-949d4b3dffc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d496cba5-0250-458e-8e40-6726ec30c550"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9f988d9-c48b-46c2-8eec-44efa9cc56b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "98b31c29-4f92-491d-806a-a832d672b1c4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6c8f1360-fb0c-4beb-916c-7fbafeea3d1c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cfb9d643-39a4-49c4-9271-7587a461b9fb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "da2b2e03-3f3c-4f62-a843-3a6960db20f0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f21fda9d-467d-4fb3-af01-212f49d50276"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "110b18d7-a0be-4a88-a492-4008f779dd65",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "442da69b-564f-4287-a8ce-3608704411f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c7d350e-baa8-4f0b-a5ce-ff9520d27b39",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c082309b-5ebe-4499-a14f-77856217da7c"
            }
          }
        ]
      },
      {
        "id": "babb01e9-341b-4ac0-b8e9-ac304708e95a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "091dbb60-e0d8-4d37-94de-c50f1a0b0971",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5d1367af-5c76-4faf-bc47-7ee861a8dfa0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dfff324c-714d-4dc1-8559-10cd60e0f003",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49bab21c-c51b-43a2-98ef-62aedc81c2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a46cf3-3286-4881-ae0c-f8bf25f77f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b339e8ac-aa20-4732-bb84-d119cb1fe418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "96b3551b-88ee-4835-8ee4-87e180b202ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625a8300-113c-4592-aa55-b6882f1c9ebc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8558c715-3baa-425d-83eb-abe116d5bccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8485bf47-cfbe-4ef7-8c3a-754118577936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18dc22a-1628-4bba-ae4c-bc469c6253cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a9a5d7d-67b5-453b-89b9-2afed503b292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c10fdda-b1ce-43dd-9ca8-b26e732352d0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e184cf-5ae6-4f79-a296-1b99add7eb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a8eff5-8dc6-4b21-873b-efb924fff041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f7713e-048a-4cfd-a71f-d8438d389ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ac6121e-a5ff-41fe-a464-e4ae8fec1476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe24af3b-d25b-4502-a610-a45ae716e685",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86233235-eb95-4199-a524-ce12aa46b7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13e7a966-a30b-4f02-93f3-6919f65cbdb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea00cdf-17a8-48d0-a365-08195da8d36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "340739ef-d308-4dbe-b2e4-d405749ef2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a4cb3f-2c40-43f8-b2c8-055d2502420f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77703e52-1ccf-45bb-aefc-fa40dd738433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c897d55-13d7-4c9a-b1ac-0cd8222aa56f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e83bf77-c6e5-4fd8-a2e4-595aec8c5d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8bb1387-7e66-4720-bf63-fafb7f6168de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b38ca7-5a30-4020-a145-b1d03730a01b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b1ecfd-aa52-4881-badb-fb1f9629fb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c554e91-cb8f-469c-9e16-540afd01cc10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2182cbed-c42f-4da8-8cb4-148a94cf3dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3faa57c8-7646-4e5b-9773-e9ab194a409c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3595857-1123-4072-99cd-5c647b94fe2a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b1c2f7-443c-4c30-bbdd-c0dc42175a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e492db6e-b8d3-4c6a-93f1-f643ae2746a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6dd20d-ec4f-4427-91be-f0dd2418e30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "379b5cd6-b09a-4f96-adae-11416b0524b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b085c3-d488-46c6-b644-f856a5ebdd9c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "284ee93c-6ab6-4113-926d-b862a8feba5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c4d978e-48a8-4ea0-bc32-0d4dc6690eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13113be7-f33b-44e3-bd3b-3b171aa25968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d32ea2c1-0f4e-4165-8220-d9c694ae6e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d6a6ad-3bc9-4cd0-bdbe-21c6f1e7b8e2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95a12d4-34cf-4e35-ac2b-3793ce59f7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6517389b-e278-426b-86b7-33c3e6928277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1066e9f5-d897-420d-8130-937122b63254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26edf3bb-bc90-4c60-996b-6f9b643d1d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2dabc67-776a-4339-80f2-2fa9dd3b3c25",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8769752-3182-4ad2-87fc-e41f5033a9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc216a04-b732-4e18-970a-280bd81625af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84453176-ef21-4eec-b089-cbd209307143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cdf94e9-6ca5-4929-a4e2-7e784c044e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1e420f-a2e9-43aa-bc6e-f65cfd4a5952",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef489d7-4dea-4b46-af89-047548deb256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4480026b-ae7f-455e-9ca2-f23f77f7efd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16e67e5-9c2f-40bd-9094-30e1f7cef097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2d7016ab-d120-4449-b193-4e600afc508e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84254f2a-cdb3-4c8a-8040-c605036cddab",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab95a94-0ca0-4011-8984-8a18110721bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29584a1a-e4be-40a1-9cff-90abe40ebec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1e25df-0d0d-4b36-a1f2-e9b72d8f1324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47df23e7-5cca-4ee2-bf76-9af7bfde1cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa97dc6-a65d-4c4d-a1f6-73041c538003",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff57870-1bde-4096-9998-1d3f2ae273de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fae5654-ff10-4561-b07a-39cc2528e050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df3e488-3bc7-46dd-ac37-00cb01771b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bafccd2d-e845-4845-be4f-2848c9cda6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debf13f3-22ed-4212-849e-f5a4083211dd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5402791-e53d-42bd-b300-0a7dd7527d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "554f11b9-c4d0-4157-a5fc-ce23d4491891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bef3f4a-66a8-4639-8265-20bd07a4db5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "125e2aa3-4b48-49f1-8cb9-043764a3b99c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8522e8ad-f356-4c29-97d6-2fa7f30aa7a0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a214459-d9f3-4406-8e56-66f2864456c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f3517bf-0eb3-4b33-babb-07493034a04c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ecb725-b880-4821-a592-0e8498d03993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "31c2d39e-20d8-4963-a141-2b81255b7c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081ce76e-8d56-4a3c-bbbd-4543896ace11",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0fe330-48cd-4d29-a296-927f76d37679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e7853e-3388-4cbd-a555-a7ccac24dc48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9192ed31-db2c-4cd7-a735-0b084b8f4143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e548fd-7ff5-47c2-bbd6-6495ef8682de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac0f8a4-6077-4971-95da-24e855905cfe",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ed8d9c-f6e7-4546-b668-8e4752aa6906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "142d62f1-a418-48b8-ad12-eda5ae63360f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dadab2c6-1634-4584-b957-090b3327cf34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "33987a7c-4bde-4604-84c7-3b4623181169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c847a268-2dc5-4b08-b522-a765bf1cd311",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88030a50-cde3-48ed-a097-2e7ceb8c38e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb7d0825-6105-4ef6-8467-25e9d8aac317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacbc91d-1398-4d9c-b765-c06b725d92b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3527c015-bf78-418a-bb84-68e39f22a0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a069d8a5-5de7-450c-a1eb-0b4ba0cc9351",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa990f7-6e44-4104-aba8-3d935fdc6d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f9eae1-f37d-4a3e-aadf-b679cc544aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c93c7cc-b2ba-49ce-9bea-a319c4e2ee33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4187e977-0902-4a2c-bd21-e8b36c530066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29fd69f8-a39a-48d9-a078-f2c7fb10712d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6609c6a6-5720-4c95-8d6e-75d14c1ef8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc5e8cfe-5fc7-4c6c-95e0-f03390e97f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d03530-8b23-4821-b7d7-cc2f0ae413b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d45a360b-ea21-4aa0-854d-97b2d8868055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0088026-c331-4006-84d5-16cee320551e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "593bbabe-4a7d-4495-ab37-27d3ce801361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e18a41d-d5cc-4052-8372-3b031d8b22ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b42d4d-ac84-48fd-80d4-e7067f2c8141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cc62e94-3645-48e3-b2ef-876f603a841f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a21a3b-db54-4663-9d63-bd03e9cb1973",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6dc3ba2-6998-439a-9d71-0be54c3017be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f8a368-6e0c-4d41-ad6e-714e56c19dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f73dfb-d0b5-4d95-a486-6f3f4c1fc23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45d1d3f7-a950-41b6-b329-8286d01ea0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6c710b-ee70-4489-a0be-7d9fb03ff112",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ac1ca1-f1cf-400b-8862-37868d1338ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b1e39d-ccaa-4353-8ab2-ea0d227724b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5eacc4-5228-4f8e-81f0-a55ff0c00c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "502f5363-f032-4b15-b9a9-405569570259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3886c467-ed5a-4d74-8667-fc2066a0f62b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b707fb22-7320-4b5f-844e-5d2972cd99d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea73ae9-e66f-486d-a0b1-884243185106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f333d2-bc4c-415a-a88f-7b511ea1f57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec9bfc7-519d-4e58-a2aa-fec1bcd6ea26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f71672-289b-4b17-92eb-9aefb0a1a9de",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "555b57c7-b921-4faa-bc2c-1add3af83e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6546f20b-0318-4626-b40f-1b2e992d5494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6446d9bc-07df-4cf5-9c55-d1b9d62f25e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0398060f-7380-405f-817a-c4524b04074d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351b201a-ca69-4783-aca5-d3cf52821e2b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546b1cc1-0b10-4f05-9259-b64f81b978f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25f6f987-a7d3-4676-8481-35a74fbbb1ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ba4296-eb18-418b-bc95-f9247551687c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd13caa4-6393-4998-844b-6cbd042e377f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0677ac-930f-49ce-8267-4dd89a6eb1ef",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8642492e-c769-41dd-a87c-8e56a9b1013f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf3b10c7-2ce9-4225-9212-58cb162141dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204b1397-25dd-4def-84e9-9efe008cb0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c9ae2ec-5094-4df1-8ce1-e075d641741b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4ae22d-e491-4dfb-a137-f1dfcf22fce4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7021d7-961a-4bb3-b0d5-f4ebc0aa04c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e27cc6b9-227f-4e20-9bd5-f1dd508d572c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8def9c-97e0-4842-94b7-d6311d57b39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a261890-ccfa-450c-89f2-f82c3143797e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae211cf-e990-48be-a1b1-2c3b7de42f8e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b616818-3661-4299-88f9-ac19a206192e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2243bf58-7e44-4da8-9169-0b12db2dc220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5073df-3bd8-48e2-afd7-c95588190682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a3fcf0d-3453-4c18-8078-af5e8f839e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad1a031-c660-4b06-b1df-34139a9dd18d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8732f216-cb26-41c0-aa5c-932065214a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676aded0-3e15-45a7-a81b-d3e09eb882d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96600234-563d-4685-87a9-24f9b50935bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b114742-79ed-4173-90c8-e04d50864620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa50fe6-71df-40ec-9dc2-81fa482f0475",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029e81ff-185f-4bad-bf21-bca0ef497d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7c86ae-eda2-47f1-b7e7-7a9932bb3d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418d80de-be8e-41f9-a0fb-d85ef757b866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30dd942a-8460-4835-ba7a-a3d8f3b53ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1e66c0-9165-46b5-8eb6-67a92984c928",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "755f44fe-f91e-4790-9d51-322c77b2f805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d0206a-8930-45a9-8b14-f3ee3629e4b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8e8ed3-a01a-4e4d-acc4-c8244d2ff807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a92d3b51-a2cb-476b-9029-2d7fcffd1ce3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9088ee84-f700-4326-96cd-5a60530e147b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f9013383-1592-477f-9bd2-56cbb0fcf2e7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ceda585-3078-4ac8-aea8-6137344c66bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dca35944-a912-4937-9e2a-a3d017765a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2af3a94-3787-441a-9bb9-4694b2458bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0bc2c5f9-93a0-4e4c-a6bc-908f4b1ce6cf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f30b46e-60ba-4b7d-bae9-e93728f4e788",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a0da210-f046-4361-95e8-00cd029e542e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dea105e5-73f3-4574-ad0e-1eaa8eb9ec73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe345985-88de-4ce3-ace2-01e22a591a92"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f23d43c3-0b68-4f8c-846d-c64d59569408",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b88dbb13-0cbd-4155-8313-4efe94df503c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2abc3f90-1d09-4edc-a6bd-a5678c21e99e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b957de7a-753c-40db-8f50-b6cab44e9774"
            }
          }
        ]
      },
      {
        "id": "d5a3d9ad-eea4-4c1a-b899-c1347d4a6e3f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "498d03b4-dc86-4c7b-b6f2-4a54d907150f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "162cb00d-c458-4cf8-b301-c72ca70310fa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "99f12cfc-f141-4b00-bfe9-49cb4728c029",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "420912d3-4dc1-417c-8f02-dfe2a0d7a8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf74732-e0a8-473f-804b-d7b49368cc91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a7af16-e51d-4204-abf2-f11fc7b555e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5881c87-195b-4ee0-9070-77a6b0635d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3eec19e-885b-468a-a326-20728c406779",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df80d62-9e7e-4fb1-9547-0b6d88ecec90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d184a4-577a-4b66-b7dc-df5dd86a59fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1175e29-f6de-46a7-8632-d22002f8ee45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba18b077-531a-43d5-8318-48cef95726fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d1b2cd-8994-4697-ad2a-9d37b080fce7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd0b1e9-a2b6-4f8c-8d02-0dc9db239649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebbad186-66b8-4b2c-892b-f955a2e8796b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d2126f-87da-46fa-a712-4f0e441813d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a953b63b-26d3-4147-b4c4-1050c37cbe3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4f497f-6f8e-46f1-983f-a61cad23c3e7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d88513-638d-4457-9875-09f1bb1a890e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f3c253-b64c-494d-85f6-295a330927b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9b3de1-0834-4726-abc9-d9f70ae6ded5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c198efd-7368-4827-bc23-430df0afbe05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69af3da-142c-443a-9292-f01fcdb1391d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4b9622-81ed-4578-83e6-b391018546f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb33a53-95ea-4313-be98-e9ca7d64ee08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92bbecb3-4668-465c-b29b-0f2621f7b57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b082b124-42f1-456a-8621-29c002aed6b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb94f02-bce9-4f8d-8dc2-ca8953354cc0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ac71ba-e17a-4175-a504-0fa54e1625f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "defe461f-aca9-485e-88b6-8ab5f764ed35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19fa171e-b6f7-42ba-abd9-b258196c1e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7382032-4fea-444f-a4b2-7d3925290103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717f03d2-0d33-4916-be8d-47a728a25895",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352023cb-7124-4666-907f-d6388d7ebc77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9c5056-d5c4-4900-afe8-1bfda8d00863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83f8860-eb08-4ff5-a7fe-9ae24427e07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "22fd858c-ae17-474a-bba6-e8aa921cc13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec8e1df-55d8-4e9b-a9b8-71a672a0f612",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec5d400-4db9-429f-8ae4-b6c0982a6e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62e647c-6f86-418a-ac9c-751b23f99967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b641d4ec-d837-4a32-aafa-874fa9e21d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4675692-a252-4fe4-96fb-79cb0851553e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd09cba-3ea7-4c3c-bcde-735ec9bcf4b6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d54b49b-c385-40bf-89e5-5555b6ada6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3390e8dd-f319-433f-b9ac-50f1c395a183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4807ff-ec01-4886-ba01-a682c4224930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b83804fd-f8fc-4926-a462-44106a048dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e9d579-efd6-474d-ae1c-4a785fe5b29f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f5fc5f-0dff-4e5f-8f8c-fe3f2b502cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce0db4a-1666-4be1-b0b0-eacc89b2e257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0471c11d-f7f2-4df6-8c40-18ff8a85edbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed21d883-e38b-42e4-85a2-1ead0fc8d741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3fc705d-2150-40d5-9f70-84b0a7da205b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c29707-f26b-4692-a0c4-1b8b95b3b6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f65d52b5-4e4f-4f01-88e1-6e2f382e72a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85ea7be-ecc2-4729-b25a-788df7c1d829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "dac50573-4e5f-4872-af15-82c0524c7cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d0b43e-70f2-4087-9ecd-d4ef38c7575a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32808e6e-387e-4355-8512-5be549c6d3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "538fba62-cc25-44ec-9d16-d0ca0e86accf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575ccce4-d23c-402c-a212-6671288dce96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "60dd5c8b-59b8-4af1-a801-918dc96176b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7851c09b-97a4-47f7-bbd7-5264baa6dac9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd06f282-f2a1-42bb-993a-44fd3245922a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "938a32f9-96b6-40ad-b155-d1bfa755148c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64844352-8b34-4559-acd0-5d9f6d18360a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf385b4-cfef-4a7f-a3b4-6ed22cb5fb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83dae18d-94bf-4304-8bad-7ea2a44545e7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66a8479-f4ce-489f-83d8-5edc9a7d934e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6b7a22-00ae-4586-a1aa-7da84a918182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c90607-0b13-4cd9-a869-2ea268209da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "76f33633-7650-4afb-9415-3b1c6a13ac97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48839eae-bf6b-4563-a4d0-3786e134eed5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db79398d-b330-470c-a295-b02298799ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "552f1b34-399d-4e22-b43f-629fbba1303e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e5dec3-70a6-4f4b-8a78-5bba22baa965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "33956d46-44c2-4f84-8bac-69a034e9defc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3ec428-ccea-4dfb-b79f-189580f85b84",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77a1f15-cfcf-46a3-b744-64d41722220b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90651126-cd1c-477b-a295-3a8e35516d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa65f89-5a1a-4be4-9218-45a60321bd17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a080818-46d0-42b9-afb0-fe2c65e5c6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6918b0d-4379-4c98-ac6c-100c5dab9397",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e38bf7-e36a-4b38-9d05-bf9b7466b085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5daa4e-b0cb-48a7-9972-1dc6ef617f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6b5dff-a45b-4dc3-8b45-ccec34f4414a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0506405b-f026-4da6-a5c1-4d5c280fa364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0157c2c3-8a8e-4a34-a643-7103c847b749",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4e084c-695d-49b2-86f7-1cbe8581058a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a5fbf9-a95c-43b9-923c-ae3098ecf28d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5dd7f4-3e04-46dc-abab-b851a976bc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a4cc5c-7c29-47bb-aadc-bed2adfea8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6287bafb-8328-4592-a231-0f6991657ebf",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1479f006-c308-44e9-ae68-dba821c69da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26cd35f1-b693-4972-a8e5-c0f4ea5fd55e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990edfcf-cc35-4bb2-be65-d09c0afa2a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d94baa8a-fbf9-420e-a674-e6b6345c61f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3fc3ec1-b1a0-441a-ba91-f5da0e2c82e3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef9b8ac-eb0f-4aad-8bd9-9cdfedfc5047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102ccaee-a30b-460f-a53f-279b39b15754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675ecd3f-e8f2-4e15-a4d3-ce658f7837f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b14c134-1a46-4339-a2a9-ef4fce86ddff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02909d1e-9c6d-4942-81cb-cb83465e12aa",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f728f4-8889-4c23-b0b2-f81c94d087f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "314301df-4b75-4665-abab-392fd9e0d993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca08a95-132c-47e6-8249-fc5e2b22c54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63f6708b-4952-4e36-a1fa-7f75128ca1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509905c8-6526-4425-9a7e-cd7565440b1c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4747813-3237-4831-9761-8ac7f8ce8ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efb6e0ed-b6d6-422d-badf-f8d9a550fc0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a1c756-0dfd-4624-b2d1-647115a2ba77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c571a3b-5346-4657-9c98-e033a71f73d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899943db-c506-4aa9-a91e-c7e15c293592",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c1ad0a-1c85-46e9-af12-350006fabe49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80094383-46b6-40f1-b9ed-987f372947aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cefedf9-6e2b-4422-aeac-7f21b0085a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18816057-0874-414f-9cc2-fd0f1ce3dc3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa8b8d0-9089-4794-a75c-65b11440b5d2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45c8194-6b8f-49c1-a451-e359182be74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d2f0434-5bdc-48b3-ad88-da61b90aea05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ee87ab-9c34-4b96-b081-512474d0d0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cebe12a5-600f-4a69-b5cd-9e4cff3db4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182de2f5-a354-41e1-af6f-415b57650671",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ef3a55-dbb6-499c-b721-bdc9cfa5df87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5be3f66b-911a-449a-8362-eae3b0e0dfff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f881d2f4-f9b1-42ae-b706-e21d47403563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "439296cd-62af-47d2-9eed-6bcf653600ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c600c3cf-1125-4b01-b31c-ca04627e6165",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a32faea-c887-4ace-b67c-7f94b251a9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a61b77b2-11d3-4d51-acb0-8d270659a85e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b1f052-d124-447b-87b2-be52789b2544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9126e7b3-8c38-4886-90d0-c202316a1852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0deac554-4933-4124-9e4f-946593a57877",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ccf5c39-2119-4566-ad13-43bfbbdaf6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ee5284-dd3b-4c95-8d8d-3d7300420c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ac7161-31f6-448c-88dc-a301c6266d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d48892a4-00b0-4688-b9d7-d88be57f4840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8fa5f8c-4761-48fe-9698-777d221c4b5d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c1e971-1392-4fd3-bdcd-dad52bf7fb36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6f67c0-9d02-4c63-96c6-f5361c7bac48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a20c5d9-938c-4129-9f61-f69fe4115b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fe97a0a-b89a-4e99-a173-732d676c5c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e507303f-e871-46da-b796-0e4d88fd085c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e6765a-1a22-40c5-bdac-a3152d8834ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6483cf08-7bc3-427b-9b34-cc21e2ac53f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62894081-e6dd-44a9-a521-3566dfe608d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3911589e-00d8-4c62-add6-34a7fde61924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb2c3d8-2bf4-42c0-bfc8-402f10cfb56e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "720048ef-e660-4f0c-88ec-8e0ed643385a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead84d9a-1896-45da-93a5-ca48f30bd070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f10c8a-9511-4af7-844e-0aef40a31f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "145b7edc-4e99-47b3-bd6b-7cb92d7cb25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4bd120-dd5a-45a0-bb44-47419e3ea241",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398b25f4-b9e4-465b-b0cb-b5af794ac4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d142a4e3-73a3-4ce3-aff6-b73a28c57fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60e364e-9ac5-434d-b4d4-060ed0fc11ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e275a63a-e689-493e-ac6a-3cc3dfaa32ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eedd00a-243f-4d4b-ae94-b1fe8acbc769",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb47586-43b7-4541-bc2d-4595d0e2dd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d332b88b-1578-4d31-943e-0ba96ca3e0e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c564ef52-afc8-49c9-9a4e-3ad390979332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37885f6b-a76a-4176-b45e-c3e2eebfe8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952abae0-97c5-4d24-ab4a-24cb37534dcb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bfe883-58a8-4b4b-a060-d4eebdc73faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18208047-c527-4cd1-98ad-0366eb5b90c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7596de65-c5cb-4bf4-b8b0-3f11cb5e7fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d645c0e2-04dd-4fdd-a1df-bf63b1dbf270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8981c19f-31dd-4147-bdb6-e20a6c5b31f5",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70e357d-c6ee-4b58-9f76-cd0e984022d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de324fc-6c7d-47c9-b231-a9644f425c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4d07e4-b55a-44d2-a337-f1fe945f5f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12604f0a-60f8-4d4d-8d5f-011ad19336ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46921739-7559-4f99-96eb-c7743e2d6237",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779cede4-8836-4c83-a60a-0c9eec619c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2a6c544-a42f-489f-a734-d36cc858ac17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ca7629-a230-4dc4-a3df-82aecef3e7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0079e90-cce8-4c01-9659-d45f8a1c3009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d7fbfb-ccaf-4404-aa33-956c412f462b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f3c320-762b-4067-a487-8414ac77fdaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fecbf1db-eb50-44af-bb86-7dab5a6f9c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3007ca-05f9-492e-9c0a-efba912dfcfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47a044d4-0656-43cb-939c-fa55d5de8c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8257ea68-bee5-4f92-943e-9edca04aa4ae",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baac05b6-66ed-4962-b91f-121aaae77517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d4b224-027b-4c75-aad2-53631f919360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d20619-c7d9-4405-bbcd-46d33d58424c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d3fc8e-7960-4ff1-aaaf-a2cf580436f7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d7ffb104-a543-4d29-986f-55a3490e0e5b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c22a00f-22de-4819-9984-df052fb649da",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d77e511-b056-49ec-9208-e74b88d909fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed13fad-3aeb-45fd-8144-809e654e4f6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba4094b-366c-4f01-9cc7-836ff9a14a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7e86329-f9ce-4ff2-8356-dadf8290373c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0175992-5b5c-45cf-a731-166ffc152f75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d024ba0-4003-489d-b0ba-67955227dfc3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84f0e86c-5b30-48b8-9d18-5d4083e78789",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9afff3ba-798d-400d-8474-5d09bc018957"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d56f360a-37b3-4e56-bf6d-eca8230eef2f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "747e78cd-f56a-406d-a3b0-7cd8215452bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba16f539-f38f-4597-8673-207f7c094a54",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0755dd35-7173-4cd2-baae-2ef0e8a705f6"
            }
          }
        ]
      },
      {
        "id": "ad1803c4-08a6-44d4-ab22-a379a86a90ab",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "dc46112a-b1db-469e-b77b-eccb017472e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d6ca0a5a-6edd-4b4a-bb19-c23311b35bf9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "699be47a-79ac-4b82-970a-e22ffaa6b058",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d1880d-99f7-4a4d-86a8-dcb28b576af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "881a7068-e054-4e30-91dc-50312a56f05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b04aa5-062f-4966-9c22-c3c6ebf3dd75",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e86be1-e85b-4125-ae48-78e452ffa3d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c71d70d-feec-4625-8241-fe2972d626ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e996be87-e08e-48e0-ad58-be1662b3e497",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87612d2-5d97-4829-9503-e0887d227adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dcd1027-017d-436d-a447-4cdf63ec79ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71613ee4-7745-460f-a556-d4b76fdce762",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8f097c-d261-4ddc-a3cc-508f6afcbd88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5d8cbba-3766-4f7d-868e-aaf43848f851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc34b2c2-41f0-49a9-994d-3776b73f52db",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b146f64a-7ea1-404b-a291-c9b259952a01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5383051c-85ec-43ad-be2a-b77393404a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a2a530-a874-4986-a663-3b5b54538ed0",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8717640b-c338-4c1b-a624-76a430c7a1ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f378161-d3d2-4d3b-a1fa-280c233c51e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c7f3ac-310d-4008-9fd0-87c594ea77f3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e0d7ea-9ba3-4a78-80e2-50f307d8924e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb3f52e4-1f92-4f95-a7e8-8534e8ccef82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6f54e2-8da3-4e9d-a9d4-a9b1c09a9620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "858e4495-fae4-4435-b289-a45794e1903d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398f2b23-adc1-4abc-bcb1-eb5eb24d091c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c54220-106c-4bbe-93bd-56bda9b8216b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c56ae64d-259d-4722-a33a-860d18fc71b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5776d0-9612-4879-9ff9-59ed0de07052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b7eee7-61e2-4f10-ae05-27fc55f441c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4177cf8d-d0db-46bb-aa1d-ea3654498501",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfce5eb1-e789-475c-83ab-df8abafc4f65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbe864df-c6ed-40e3-9c66-1a9d4f40f735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e1c7ad-e317-4721-b673-04885071ccab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "161281ef-4e3e-4c0b-b78f-c67c774cae22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f258779c-0dd7-48bb-8351-1c99da453554",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaca2d79-4fad-4edd-81d2-e632f0aade78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a733dc9-19d4-48c8-bf60-e99278fb75e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec7656d-cee8-46c7-bf38-9877e8c68e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2152335-de44-4e4c-b2b1-f20480e2cc38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5106493b-8fad-43c3-9395-eb5c9cb61f99",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a660f5bc-e4e3-4add-8c36-3dd37153d492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5e4f7b4-bae2-4b5d-9c17-391f63305e83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "070ec70c-824d-4324-bad2-e9d17707b89a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f53a26d-a9e3-486d-b0b9-da8cbc586379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7436ce61-6dad-4696-8cf2-33ac9cf9927d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050b17c6-d6ee-445b-a11c-20a6ee727203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "590ae3b6-0b94-41f2-95dd-93dd396c87e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de543ef-46da-41d2-87fe-6291f099c4e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a1eade-3b5a-468f-ab31-138368afb7ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea30d8b-5345-4540-a083-09417830dc8e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa8d9a4-605c-4eb0-b9bd-f474dd8410f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93752e43-3bd5-4276-9336-9ce7c790775e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6b9b3d-8fd3-476c-9695-d97e57ccff2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b9493e3-b669-4ef2-a504-59992bef9b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220f881f-9839-49af-88b4-a11780786fcf",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29428d87-d36e-4d1f-a218-6ea69018a46e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff9d69ab-16fb-444c-9e33-418d05c07f26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0ff447-e02d-4dea-bdb2-05ebb88e40c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a564dae-b682-4c0d-9515-0be3e58c53f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8f1981-db3c-457c-a54e-d205baabcf1e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5fa93c-25ff-426d-b791-239fca3ffbcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14bcd347-41ee-4538-8602-272b50da2037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc26121-c78d-4f35-b6c0-db3c2f58b766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc8308a-5fdd-4502-ba5c-ae857e35149b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10bcc0f7-2137-427d-8551-2ebf9bc71abb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e7bfd8-2b6d-4cf8-beea-c37b749e5f29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a597decb-d9a1-4516-8160-7b18d0e40c2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f03f52-bd52-4863-ad6a-faa7db3193ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f17a6e37-87cd-4695-9233-f9b840cf1990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0bdeb6-42c6-40bf-8e94-21141a8d0bd0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d61704c-37b5-45f7-bdeb-7efcfaf5b090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0054233c-efdb-45e8-98cb-f7a180119ffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2a6d36-44a7-4b1f-8c3d-6d121574cbae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eadcdba9-c5ff-4915-bf63-98edd7c3bfd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857caac6-9ee8-4c3d-8ae0-7297c8cb94cf",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8a622b-6abf-408f-bee2-f7bf689594f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdec6357-29a1-4841-a766-ddc1b530fae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63baf32-a816-4f32-9ac0-531f56314808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cdd20e4-6db9-4707-bc49-ace17ac7cec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc77171-8bf1-4269-8eee-16a7f184507e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e605df-4842-4e64-ae60-7274c1182bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d805ce-0a8d-4aaa-bcc0-d65c773e999d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "614e8a35-ee4b-4479-852b-e1ee16a28355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bf94701-4ed9-4f7d-a7e6-4efb7ed10e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4e0908-4d5c-4eff-899c-4608df1e0c85",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907e03e6-f569-4638-9f7a-9d2c2e3cedd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1fb1206-98c1-44a1-aed6-0d77edbb1da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d338a737-bc63-4d0c-8c8b-aac841c874af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33cc5363-8467-4cff-aa25-e52c71bfa28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9f57df-ee50-4037-b860-eb35d631be61",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e79701-5af6-4f2e-9720-6378f6fcd60b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb4f1cc-3080-4f46-a789-242918fecad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfac550f-75d6-4596-8ea7-ebd3ac0c6471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16806d4d-7d15-434c-b6a8-d203485aa0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ef93dd-b73e-4f6e-9aff-1924c7517e91",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b53031-8ade-4678-912e-a28577206eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee754d3c-9b62-44da-bac8-f37dd1314c9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25bf0c66-4407-44aa-adc9-daea7d7a134e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7187f5a1-e573-4f81-9c7e-55528a8c504e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2094fecc-fc74-40e9-86c5-443f2625b4e4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b436ab2-78af-4f29-8a3f-1e4453fd3bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a698058-cb26-415b-8813-e6ba773fdec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac183e7-62c0-4cb5-b7c3-c32202b3f896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9037180f-7dbf-4472-a260-9520f4fcc368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296e0cd0-2dfd-4235-8e95-ec5106f3a91c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "665fcc6e-9e81-4767-8411-0606cccd68c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6926619-f5c1-4191-93e9-05751bba6d54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b601b51-2775-4b91-86d7-79b32c17ae66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8fc98dc-3ba0-4572-926c-6b5b4e70313d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be07ca6-e58a-4059-ad1f-09c656f7db95",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9d051b-883b-481b-957c-9ead94782b8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f69478a4-022a-4f71-bea4-16541a5d1686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "105728fa-9ba3-4777-947a-8fc8406d4492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb1a451-2098-4446-8383-cf64a347e041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd361d4-5f62-4663-bc1d-e592b96d5d4c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3358b07c-7dea-4799-9d9b-b4a1af2f80f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37a16496-9740-41a9-8ce0-9259699092b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a355dbd-137a-442f-8f4c-58660564962c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66899791-c1af-4cdf-94cf-3dec426722df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c5808d-d8ca-464b-8e4a-348b7c16c153",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586bae91-edb0-4857-b97e-0886e5254a1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b764dfd-275d-4af3-b153-3ff39b37b449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "383237c7-37f5-46bb-82b7-592e936399c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88fa8e34-30a4-4ec2-a8ba-e5e75b770cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78cbf0b-f747-400e-8894-665abd92923a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4b56c1-a465-4156-b23c-30a795180730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee85dd60-d454-49de-8f49-d7f0d6b5cbbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "288f8bfa-6bd9-4d91-a4e3-9638177866b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ca36686-b24c-49ff-aeb6-0bda76e2434d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72ef641-9157-4b43-9b3c-0af217cbf90a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63f6553-8ef2-43ea-968e-e6883e122785",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad596cca-4cf5-4755-93ae-c6d9de9d6598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b44ff98-d591-43ea-b9f2-cba5512f67c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26fe8fca-e5ec-44d0-bac4-3ea65f510888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ca06c0-4a40-4da3-9b96-8a10fa684308",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a3c2cc-b4e8-4532-977c-d71c777bb9f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37ac1a96-fce6-4f08-ae27-b8cdb4de3fbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a593730-2b25-47dc-aa48-3461a254a676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9660bfce-8d1b-4dc9-8f07-31301f8f45cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ada2445-d7a4-4837-a67e-01b49f880ffd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5051c13-0c58-43e3-a80e-b952a1eb4064",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4143c02-9565-468d-bfda-bf373d543c5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c43166-b068-4d45-8963-4d4d5166f519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc3000e-7e15-467d-9ce6-39e516a0fb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5372ec-4376-4979-862b-d8ec6a2db015",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce45da5-2936-4cb4-8bf4-2d9f2339a073",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36c51264-ea1e-4c26-be24-c46be7847174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "063efeb9-4654-48a4-b402-ed072a6fb88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3cd0804-21ed-43ca-a007-387bfbf7b42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8541f9-5cd9-40a2-b7dc-c13a296b6bfa",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a03b62-2c63-4991-b65a-e76febce7dfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a11e0b6d-f6b9-41f7-a315-7e55bc4befd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c912383f-23e2-40aa-9db8-8fe221af54c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0902f357-eb70-4cdb-95a1-cf728ff6eff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12dd52db-f32c-4971-9f74-45524590b3e3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cdad10-ee9d-466e-b02a-451f59063178",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ce70685-fe34-49dc-bbe2-1436c2738046"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "592c99b4-5efc-48be-8759-e9717f1a81fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5978eafb-c995-4f5d-9435-b4b26b709274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e17ef60-185e-442e-9e07-005dcf1871c4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fe5650-8f67-4517-98c1-95135970fce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a5f7aff-c678-4f76-a2bf-37c647ea26d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90ad413-be27-43a2-8453-3ea11639ea6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954510b0-98e7-4272-a1b0-4b185eabf0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52378c4-c3dd-49b4-a4c6-7ee0ed302dc3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f4a508-e5b5-4b24-b806-56a577d33500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd2754a-c384-4c15-a572-91a18d5c886e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c46a55-21a3-4867-a9a1-c4a25c7fb411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18452213-eacc-4285-acf4-457a0a3eb756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb319e5-8be7-4ce9-bc30-82771cc60ab6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328210b5-483b-4244-a9f5-26b4b0c6818f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e28141a-4903-49b2-b43b-7e20cc0ccea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5338b03f-c50a-4768-996c-10f190bef899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e58e0030-d555-4796-a9fb-c9f090c81380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0786257f-9ddf-48ed-908f-6a662033c503",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5715bf-e66b-4000-aca5-d5fb68d6321e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc0597d-86c5-4b25-a108-ead43dd2dea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f128d777-5cef-47a8-8a0e-9cb96814a78d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d5286f-09e2-4f4a-bc83-ffd6b23cf4fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f977e483-d8a2-416c-b25b-a153b4fcde8f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854d34c1-a9fe-4057-b08a-7bde12e6e17e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f00b4b5-caca-4b30-a32b-9d005fe50356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ce8969-d1b9-4133-bec1-e87daee23d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b9a529c-1680-40d3-a234-a0cf1278bbcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b74abca-063f-4c76-ba9f-db9c7a3f5bf4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58551ffc-1140-45db-aff5-a3ae0a3525d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84cd93ab-3699-4a2c-b28a-48c5de7ec04b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10efa948-48db-4f27-a8d1-b2cc5be16b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "481359e8-a976-4e79-8ca4-fc70249d4811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44ba6b3-b175-4d5c-a3fe-381cafc90425",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a984a4-5c1f-4329-b74f-79934c5c319c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9bf23c8-05c6-48ab-b23f-a0a87a0512f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2f6e25-a72f-4cfe-bb94-cf966ab529e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c739119-67a3-4568-8dce-436d2fda940f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144e9626-9d41-4115-b25c-22a36b4be684",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9ed4d1-eeb2-4ced-b13f-6e53b29b28cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b08f8a92-4d9e-4e4e-a4a1-d2691b648cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d2899b-d0bc-4045-b257-4474b6a40d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "474640ce-fe1d-45f1-be11-e65766e1e51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b33caba-c041-4f64-834c-0487c2b560be",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0677fec-2d4b-4959-8df6-441379166ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e43b7fca-caba-4cdd-ae6c-c9d5b95a5882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c5dd87-25d2-4116-8a33-4e4ec2c174dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a19c56d-003c-487f-8150-e74d7bb26cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce396e20-1759-4ac4-9eb4-a9b1d7f983b8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ee21b6-2925-414d-ab48-96d34bf9acf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51bfc881-8136-43f2-9073-7381f7841d96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01aeff7-8523-4cfc-8da6-b894002b891d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ca363b-eb10-442a-8ade-d30165ef8d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e7a1c1-2df7-412f-a473-4bfc0dd5662b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b0a0f5-d5d6-4ade-b983-90ffb8e0a1e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a339cd61-0d28-41c7-ab78-0ef32df0ab44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2fcff7-805c-4ab2-8c0c-38e87f855d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e6994a5-faf9-45cb-87f0-0a8dfc6305b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6944dcba-b656-4ee6-a35f-6b5d2421fd5d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a87082c-c64a-4477-aa75-ccd8886c04a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3be8d1-1c90-450a-a79a-bfc144c39187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a5986a-daf5-4104-a4b2-9721d3891413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e2463df-24a4-4e6c-bc02-2570e2c1793b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e9984b-25a5-4bc9-875f-1e7e34acc1d5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebdcfdb2-84eb-4928-a351-0aaa54b0238b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176698fc-0d00-4f55-a51d-474d154849f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd15b304-82ab-4626-b3f2-94218a5aea98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d780746e-8159-442e-ab75-59249f378f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2596c4d-323f-42eb-8c53-618660db0001",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd07d960-e3f5-4689-9118-338eb769fd35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129cfab3-2459-4190-9350-69d5fc8dba8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e809f1-71b2-4a72-a945-a6fa248eeddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26abd990-8836-4320-915d-9f3b66f65a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa84d2a-4299-413f-a074-793a028c68a6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d08c788-4883-4bd4-a037-fca15e91dd7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e2b8cd4-04ca-4f5f-acfa-8de3f9f7df46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf4311b-26f2-4a6f-8752-cc39d59f209e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ecacc1-7f72-4e31-88f8-1248e0a76f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b46d9a4-00a6-489f-ab5e-cb1a5f035986",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb463c4-45ed-403a-8660-ae9203d1346a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87ab80a9-8d9e-41fc-a9dc-ad2aa7266f2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6b9e3d-0e86-4b5b-a528-9c23971594e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf92c0a-636e-46f3-9fd2-ebfb506a92df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3755456a-d051-4998-b335-3fab93b1afe0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ecfd44a-614b-42c9-8669-cca18b5afbd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8812c79-73d1-43b1-a7f8-5c9cb158006f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c19284b-69fd-424a-8c02-bb5eaebd1008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e8271c-6d5a-4eac-8b2e-44c2bd8e5158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ac74c7-b0aa-4138-9258-03b0a333c242",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a0dac8-87d8-447b-bc72-9addd3182292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0089261f-5c12-4071-a8bb-0d1ab72f01cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b14e303-c122-4d79-a7e3-8315ec24ac94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef62828-7d30-43f7-bbeb-eae0e325c06f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163dd20b-f9e2-4bf2-830e-6dfa52fc74ff",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "264f3102-91d5-4bc6-8a2c-095a8c4d6c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37a525ad-ccc7-4ccf-bde0-1e3659f017f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0deef724-2bad-4562-ac5a-12a421e3d607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07b3ad44-9e55-405c-9a9b-87b1dc66bb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce622c5-caa3-4ce2-8904-a085900f8bf3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb56bf1-005a-4ec4-b6b4-119cc613f4b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7673f527-ff9d-4387-9aa7-e3e268826c08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4182ed-e965-41bc-8a5b-baec9e70f9ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c71dc37d-d2ae-4e55-aec4-dd5f9b01e9a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd9d01a-74d4-4cad-8092-569d7a31c64b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082f1d23-4432-4dbc-b7ed-dcac04f41915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba0f5ea-48c4-437c-a34e-b5f566b69342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b06c476-9316-4115-931d-97b4187e7a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db8fbcd-3140-4149-9c21-a3a966a7cd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5156459-2517-429f-87ce-6ff606a9c452",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40dd7e6-263c-4ce0-b4e6-122c65d99b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a0a2b1c-8cfb-46ac-8e60-9ed918862895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d24c351-b177-4cf6-b6c7-da4290283b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69201dbe-d730-4b6d-aef7-fae4ada7adeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02a0423-ff8d-4e79-a689-3b0edbaa29d7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47d731b-6d62-4bab-85dd-6ab4ee7d3ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4dbe1f0-ca16-4eea-ab61-582db2bd0d67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "949aaf7a-c6e9-4f6e-84ae-ae563aa66eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be3377a9-7fbf-4948-8a20-9367bb37ff54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40273b7c-f8bd-48b6-8434-66ee0a853085",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3fc18d-b75d-41f9-9b8d-fdd9219215d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95b97760-8568-47de-9628-69fee3cc9bdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "739d7262-d80a-4762-abc0-ef2110d1fdfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0960c9-89c9-4126-a62d-1b406a8f92db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c540c4-4dc0-4786-b56b-d81c840f681c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f060bd-43ef-4958-8c83-8fe03cf3beea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fb8ffe9-4463-419d-9a5c-0233fe993d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c68096-052e-4910-838b-1c54a064ea39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80586efd-a97e-4cd8-af88-7c5d73b59b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a99d460-c009-4f3b-b8e4-65e3048f3f11",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba1e880-0e48-4bb0-8c70-64b123355423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d316f4fd-4775-4eb3-96fb-d04e6926a6df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4924b79b-fd96-4536-90bd-921ebdff3547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4ebfaf-bc7b-4673-a898-6576c73cf01d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e43ff2-a860-4073-802e-096b5f3f77ec",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a56c34a-25d0-4b37-ac11-b0b390ff68ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d4872c-0bbe-400d-9646-f7d2f035c330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e834591-3375-488d-9a10-1098032fb0f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a5103f-799e-4783-ace1-00e90a02fa23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132195f9-0faa-4dbc-a50c-82d7101c23fd",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20992598-8414-4613-ba68-35b4cf3b2449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f520694a-5a19-4e6b-9c4d-5bd932f1c8e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b3ac50-fa17-4a81-8e0a-c76353e7e383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa4dbe4-f141-476f-9052-f5631bcf0e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc8b3f8-316b-4625-b7ff-696d0a988bde",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6954fb3f-2018-48dd-acf8-21742104bc30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b7b9dc2-da65-43d8-a678-c6b88f541004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39873619-5978-4694-b6cc-d6f344aa893a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e8f622e-56a9-445a-81b7-799ea695c814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb38dc04-9617-4028-af74-ecc9e4ac9a68",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f188b23-4f9b-4550-a69d-093f99e159f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45f06398-bc84-4396-876d-bc12b02e48fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feffb230-3143-4edd-a172-85a1df00b291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff4453b-e32b-409a-beb9-3a0c6a10d6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ef49ae-cd7e-43a6-a46d-7af25d8e35e4",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ad87e8-593e-4d8f-806a-3ec528837384",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "911d5b53-ce03-4696-a9f3-e308d11dd8de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4920281c-d7a8-451a-b20e-721b8e628cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7380106-1338-4bd2-a478-e1c79e3b253d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afb3a4b-74a7-429b-b76c-c072b9a5a2b4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d38c1c-778b-4470-9324-7ac273f956b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ce4002f-15cb-4283-9b70-c43c05750446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc685bc-b79f-4972-b085-a2c8ba0a776e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd96811f-c6f8-485c-8520-c0150a29542d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac11208-63a9-42b8-9692-485217e3c15a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586115e4-2e02-40bc-9a2c-3240f76050be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0284cde-2d6d-48f8-bdf8-e58c08f7140c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0d21c5-cc5c-4672-9760-4f67f67e8bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff1d1a1-9784-4b8e-a090-13ed8a245a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4434e1-1459-4015-9066-31b49709a54b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b4320a-68ea-4112-a910-d90e4d7def27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44751646-7713-4fba-a346-e76da4758f88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c25f3a7-0dd3-4b68-abc4-508e6048ae89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9de54a6-edab-4b32-b73b-3272289f3b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd4b800-edd4-482a-81d7-a8a2d0c5f6d2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782965ac-310f-49f6-8187-473f87e83050",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa882cc8-f3a3-47d5-8d2f-8351cf246e9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c1c933-cded-4b96-8b3e-2c44ab11ca74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf42ab9a-8af7-463b-884a-f445d50c9470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa730ee7-e728-4f54-8edc-51b4782b3f1b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6baf380-f83c-4f47-913e-9a6b60d450d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eee963af-d38a-476a-9b3a-d31c16264830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "944e9baf-d214-46c2-8529-3b15999c0d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bedcdac6-9b0f-4dbf-b5e7-75ca99490503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f5e3ab-2c11-4ca9-a015-878d0fc4e628",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9794580d-2a77-473c-aa35-08e8118afdf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e12c49be-21c6-41b7-8839-5c601cbd6d59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90a936d-183b-4bc8-815b-8a036c13a6b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae86ad7-87ed-4c56-8595-3bf64c5725e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1885c6b5-d269-4f77-bb80-30a61befccce",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b84bfd7-8a2d-4896-890a-3f337158c8c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca25d81b-cbd3-440b-af0c-1a178e5aec00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba0cc72-bf7d-452c-a30d-fe1c635094c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c24be4a0-6cc2-4c06-84e3-5808854e803b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c4855c-9a26-4c99-8c3e-0437898b5aaf",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2adb97-92cf-44d0-9bf9-478c4a161951",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8b79a79-ce18-4c61-aede-73c2e58a9aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8c3be7-a542-4726-812d-bb614c95510d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df9296b-d27b-40db-bdf3-bb5439c1f8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26509933-0c59-4596-8d6a-868c335a2813",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8060371e-535d-43bb-b978-7b72e5b65cdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a5b5a68-d004-4779-9c02-3a9d869be6db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64779ca3-cc10-4f1d-934a-fe0aa39a20bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a845cb74-b7ed-426d-b44e-32de8787c896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69359ae9-e54d-4de3-8725-ef1b66dd23fc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08d36c7-e9bd-4db5-9e26-81fa7d4a2b6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1496e435-1aa0-4e6e-8721-d3365b5ecf03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c9e146-e560-4688-be44-3e93b12dd98c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a74ca976-7e95-439e-9b22-be9199cdb07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a93beee-1be6-4279-a313-68f4cc792aea",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45db97f1-4afe-4699-bc67-fd5baed6c166",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0389a3b-cfbb-409b-a03f-af463fdc6c61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ca7441-c925-4cf4-8238-81b07e43766a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b3fd15a-c41d-425d-b6b3-4af9d0be9810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef09e69c-1958-4f88-a912-449225f94905",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a837c9-d852-47df-9476-1cebc44f2781",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bec6b20b-d1a0-4d7b-b859-5b789b7963c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcb3c9b-efd8-432e-905e-aac1e604a9a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ce102b-0796-4f06-81cd-a973efccdbe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d8f715-1541-4cd8-b129-717c26837931",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996509cc-1ca7-497c-b0f7-91763f6131ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf1f119f-ef0c-4ce9-8273-32f4b624c266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf07701-2b5f-440e-a6bf-eebcfadca024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d7b7e52-8b2a-4db3-b330-4782aabeeb41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93655423-f444-4e48-8758-12cf61a87567",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c70833-c9c0-4a29-af23-89928dd42e96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d796352-3695-45ee-ba34-6b593e8b805b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f7babe-dfd2-4f93-acc1-e657d38d0d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a38380-90fd-49d9-9ba0-ceaf24f08606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa97265e-d42d-426b-ba43-6732d9a9c2f3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494c0118-6f26-4439-a9b7-d6515f0555a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1604efe-7398-4592-90cd-5df341d091ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea291cbb-0ae5-4bff-9e9c-798d9be2dca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1935924b-3512-4d54-a342-7b8b46820a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936991a0-b6f3-43ac-83fb-80b3e6151f5b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd1e28b-1a78-4823-bda1-6a412ee6b057",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4ff0d5e-b954-44cf-8b3a-e7b0ad2296c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa3588c-5144-4503-afcc-ea43fc87d702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d8dad9-ec5d-4252-ac3d-280f51ab2555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151abd4a-eec8-4ca2-81f2-474f1527920d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b420978c-e8d4-4e34-83c8-cd03803e730b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "883ab3c0-3ecf-44ae-91b0-dc4d1280adfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7cfe816-3e40-4f81-a608-db48d3d45375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "899cc356-8fbe-4ac6-8e2d-9e4885d7d6ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8daab3-792a-4df4-a3a1-d67d60ce3a88",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ebb1c5-a7fd-4738-8dd0-c9407c7b5fd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56bb339f-fa31-443c-a806-300117146340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd4b4de-60b0-4ac6-8255-0b914d7aa628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8405bb72-d81f-46cf-99b7-a6cf2ef534e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32216910-14c5-4ed9-a55d-9a5ba3bfe803",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1b88ce-55cc-4179-8db8-0f47849693a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e10c4094-ce58-480c-a57b-3c1a6fbfae29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a96e33c-463f-4a3e-b2cb-5cbc746ca2bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f32a791c-fe0a-4f85-8600-52cc5f3e49e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f5652c-462a-4768-af75-b97510443b96",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b2dded-4554-458e-b28e-2663a20ce19b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d89a0a3f-f674-466d-8a75-4ff23f048690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5628a5ae-82ec-464d-a6fb-699c4194a6ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f8b0a0c-1a01-4cb3-888e-6d1fbabc9599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38caeed4-e748-4156-a134-cf648818276d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57557881-e00d-45d9-acdd-8fc1a5ea82a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2385fd32-ef23-4eaa-8109-0fb9d6c689c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f5e741-e23d-4f31-8e63-2c67c2fb238d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96e6fe13-5aec-47be-a2ce-ae1fc375b7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13410c43-8ea9-4d25-8e09-e076741b08e0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf978574-acbc-4456-b8dc-79084a62f268",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95848714-0885-48b1-b4fb-cfceddd3caef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4c525e-e7ad-4e6c-94ba-fbda8c33f00f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2b20c5-c8cf-4653-8e7a-0714b35101e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1447e4c1-51da-491f-b4e0-9af35e47ea63",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0f3c0e-73a1-4fca-b8d0-39f453d926c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "167b0fb8-2a66-4011-afe5-3c043167def2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6feaa7-ef8a-4d75-bd49-b14237d6305c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ef7f45-6d5b-431d-b527-4766727f85ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6774dace-b69f-44c5-982b-0b5c7c6a56f3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8d7d23-fafe-4cde-bd6a-64907b408d3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21a39256-3d25-47de-b47e-737df964962d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f40536-9cfe-40ce-8313-709f90d6310a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e483334c-eb0a-4f6e-9abe-5aac109b43e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49513336-8df8-4355-b888-8b13e760770e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e5ee25-b748-457d-8c6e-4b55793280d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ad357fa-76b7-48cb-b573-467cb163ffe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f65ffc8-d3bf-49d4-a3c5-6569cf94e8c5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3208d011-2cd4-45b2-9860-02da613b3af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab695cc-1f64-4e4a-9b36-9942d1187b09",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b54e9a2-fb12-4399-b60f-42034cf8402d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffffafc3-6d31-40dc-bb86-c059c2bf4e93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fdf0085-46bb-4762-b072-0c21ac085048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602d9f74-6f29-43bd-9142-44417707c53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bae0583-d4b2-4901-a740-f26648d021a9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa52efda-9880-4a4d-a632-82ec582fe62e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8ee9aab-805e-411a-86bf-24c84f6527d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f106374-ccaf-4fe8-82bf-06fc4bc284c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "604bfa3a-5246-4657-8dec-86b7f0289950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48bf394c-ac21-48b5-8345-fc1ce99594c4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0ad7f0-6abf-434a-8173-df757caa8203",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "242b3a0c-0643-4759-8e48-8a9a2e6de734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78f59c7-208d-4262-a22e-b2747f84fb47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "401294a8-b2bf-484e-bc4d-20a94d7f1527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45049614-11dd-4fe9-8097-2a3a0f99446e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e515ee-fc65-4dab-a873-5be6cf9040ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1b0e52f-1bcc-4a9d-b5fb-ff4668d3c7de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd5b49a-c420-4b55-9347-57256a3f97dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd70b8b-06ae-481f-b9cb-29f0d6284d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897dd8a2-1c2e-4090-8ed2-bbf1423cef81",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eda7030-9a0a-4c03-8a10-c18fb3f47994",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e6c86f0-ffb3-45b7-a7be-4ab771097938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88537a8b-a2de-4f6b-aa10-437e6e0c39dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f1ee1e-080a-4c5b-8fb3-9cbf698b023f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfcc1d8-47ff-4edd-a39a-7af4c263a76c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb251d3-9c47-4e7b-8e7e-86fc9628e99a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82bfd075-ae6f-4b0f-8e6c-17038f3f8457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1b22c0-9a4d-4d46-b503-2ffe12fa1196",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9f7782-3960-4ec4-a3dd-9625ace0431d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a8636c-e3c2-4122-974e-0a1cff27eb53",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9931fe66-1fa9-4b20-8997-781854305f62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4431db3e-fd67-451f-b1ed-d0a033b7c4ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8642815-c4f2-4b5a-8ba8-5da277aa4585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "677998cd-8cbb-4dcc-8574-a911ce6c97d1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ef3c534-27c4-4029-a50b-9daa9ee69e02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "555db000-5cad-4035-92c5-981bd8c23fb7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e70e31f-6762-494a-8a30-9b57d456ede6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "01a9417b-301e-46a5-98a7-e493314ffcfe"
                    }
                  }
                ]
              },
              {
                "id": "e64ae0d9-921c-460d-a3a0-53028a6868ce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8b141468-39e3-4944-93e8-642a9991731a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0ad320-c28d-44d4-b3af-d9035766f242",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1e966ace-e68b-4477-adca-f676ae17a372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc490fe9-31a7-4620-a122-56f67a045862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aec8cc85-b934-4cfa-a3c8-02560d532601"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9f5b80b-d88e-4260-9121-7dbd1dbf1634",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c6b368f-b7b4-49c6-a394-b8878b53b36d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "80190211-a848-4aa1-ba9b-47a1bb0be1b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "346550c8-851e-4496-a453-802484eab356"
                    }
                  }
                ]
              },
              {
                "id": "fa14953f-684d-4406-ae8d-ec377b2f8b1d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a5d89dad-b1c4-44b9-9d0d-407e508f654d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12d8b8d-70f2-4f6f-9b3f-c002cf7eec46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ce054a6d-817d-4bac-9e33-0af7b02bd147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92641d3-dbc8-4656-868e-e704a22e64a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd5d024-0d62-4570-b74f-ee64870ab825"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5b61c7dc-e026-4c45-aea7-5c8e22b5e375",
            "name": "Positive Testing",
            "item": [
              {
                "id": "58553be4-06f9-4f43-943b-49122684560f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2326c9f5-7170-435c-aa1e-1431ee1a895b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "006699bc-9471-48a4-abaf-e69d2685e314"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "028fec09-0a2a-4e58-8406-61e8c28845fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f88cbff9-001a-4515-9ca1-ede580898515"
                    }
                  }
                ]
              },
              {
                "id": "71cfe466-935a-426e-af23-8133a3c632c4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "574917fe-2b0e-47b6-bba8-0500f06f83f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bada244e-faa2-4dc9-810d-f7c7281b7c7b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6bad5fb-2879-40d7-909d-b003da344489",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5827d994-e290-43aa-87cb-c91f4164509c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a3bfbe1c-465b-4dc2-84cb-e1ac446b8e99",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "617925f2-c509-4c5c-b60b-78a7e775eac3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4128b35-1083-44e3-a9ad-aa4ccf4ee09b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "28c451a8-7380-459c-8c7b-54c1762a465d"
            }
          }
        ]
      },
      {
        "id": "679a1571-9af6-4737-9331-eb00ae91e48f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "53676679-8c97-448f-be63-b1068649e1a2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a0666f8a-5ffc-4ba8-b64e-81c9d67a6b4c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65979608-abd6-4ec7-8431-b1a744c3b889",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652bef4b-fc96-408c-aeb7-5d243ff93826",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8a3da85d-f43a-4efd-b9f1-8d2f44bb034b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f974a54-baf7-4300-ab99-3493e89062e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "787defc5-f8df-400e-9956-6aa41c53220c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef838d7a-002a-4af8-b698-7516a09dd530",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb8c518c-bcaa-4a6e-ad31-36a3fa76f0bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f96a133a-f8d8-4c1f-863d-3a3cbb831bdb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ab61a17-d905-46a3-80dc-ea9b0e6b8e89"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "316924cc-d6c1-419e-845f-d2b5a59b9f5c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1bcce650-e366-4828-b04d-67e6e47f93f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f3adfa30-61ef-4d92-8428-d2d14e895cfd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d79cffbc-d087-4b78-828d-792382ade61c"
            }
          }
        ]
      },
      {
        "id": "6672be21-c847-4b24-96d7-090e0cbd3644",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "705434a5-3283-4bd4-ab21-2b88dc74f2e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b4968b36-b17e-4bb6-9510-30d27a1716ab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b0fa6c09-b534-4b78-bf39-f8167e5ed101",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc575b8-73f5-43bb-97e6-97bba9f604db",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "380d2877-3913-47c0-a0d6-1bb540ce00e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da076d8c-4f88-41e9-9e09-0353cd34460c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b76cc99-03ea-4c07-b143-57f7f6e81372"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32892f59-dc1d-4d47-9482-d3f68f7ede5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45e6b3e4-b036-4e1c-b9e6-9baafd2c7663"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "236887af-e60c-4631-8130-113f7842ea06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3a37b31-9f7d-4cd8-882e-b2f273462cd3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1032e34-3376-47da-b913-51e7509ae5e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aa7e0fe4-041a-4443-84e6-c0cb4d2ff49c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44f870cf-7ca4-48c8-9627-705f7ef8f17e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc341acf-7cc1-433a-b5b9-3f76639cd26d"
            }
          }
        ]
      },
      {
        "id": "02b7b2f5-2e61-4ded-808c-83307aaa37b2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1e8c09e4-252b-4a5d-8c42-fd78de3f82fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c1dd054d-ad21-41e0-b64a-8cfff49087e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e88b4439-629d-45e1-b4ae-67d1809e9e8c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133fcb4a-e047-4518-b789-0e087fa6e26f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3aa30cb-9425-4c86-847d-c7c91f1c981d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c00601-92b6-4a5d-9f49-b5c8447c617a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d622d081-88d9-4f49-ba03-5fd50ac36ac1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4745e3f-4594-4fd7-8897-f0ebdeda4daf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70c078ab-bcab-4be9-a0c3-0e02563e3f9a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ff5b6dd-034a-44f4-bd4f-f47cfacdf403",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7b9f582-a40b-4fc1-a889-64e92dfae907"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a8f9882-6edf-4dbe-8482-0a28ffd65711",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "982dea94-0797-4dbf-9f17-536e35b0b823"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "008cac69-350d-42b8-8572-f4451d72910f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f8226851-decf-42e2-93a9-e6aae3c83298"
            }
          }
        ]
      },
      {
        "id": "d8041ba5-9f5c-4bc6-8fbc-31600068f983",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c7265e9-ff0f-4dbe-8b54-f27054258936",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f9c2362f-d97d-4fb3-acab-4523aed3b949",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e4375001-5247-41bb-930b-98f11fe258a2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f6e39764-c386-48f6-8645-a1c0791c0df8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6235330-a9d3-4e9e-ae73-c676f53201f0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 103.48070175438593,
      "responseMin": 5,
      "responseMax": 9485,
      "responseSd": 606.496840922218,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1708302916081,
      "completed": 1708302954635
    },
    "executions": [
      {
        "id": "922e4d53-b8fe-4358-978a-d5b5c512673d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "fa6c94ac-1178-4c5d-97c2-08545dc059ef",
          "httpRequestId": "f1be556d-d77f-4d86-a8ce-033b30c8744b"
        },
        "item": {
          "id": "922e4d53-b8fe-4358-978a-d5b5c512673d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a1ead34c-9f66-425a-978b-8aaae842e6e1",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 0
        }
      },
      {
        "id": "e5304f33-b3c8-47bb-a04e-b6e1df38debe",
        "cursor": {
          "ref": "43ae550e-d18f-45d6-ac0c-06c15b3cdae7",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "077340b0-dc24-44b0-a294-7c5d33c1bd6d"
        },
        "item": {
          "id": "e5304f33-b3c8-47bb-a04e-b6e1df38debe",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "151de0bf-4791-4514-a45d-20377e326d59",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "a9c61d1c-cc65-4456-ab00-10828dd351ca",
        "cursor": {
          "ref": "133c58db-e730-4ef4-aaad-dae4846cab33",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f0ac1a69-73d7-4ac5-98e5-7c4a7b393840"
        },
        "item": {
          "id": "a9c61d1c-cc65-4456-ab00-10828dd351ca",
          "name": "did_json"
        },
        "response": {
          "id": "e49cd222-fea7-492c-8983-2149748d0301",
          "status": "OK",
          "code": 200,
          "responseTime": 264,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c639fc-0965-4792-936b-74e525448959",
        "cursor": {
          "ref": "66c85a97-1ec6-416e-865c-8c1787305c37",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e03a44d5-9c8c-4d60-83c5-84d6995db4e8"
        },
        "item": {
          "id": "b4c639fc-0965-4792-936b-74e525448959",
          "name": "did:invalid"
        },
        "response": {
          "id": "d9cbd859-349c-49c0-863c-635524294e0d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 620,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c639fc-0965-4792-936b-74e525448959",
        "cursor": {
          "ref": "66c85a97-1ec6-416e-865c-8c1787305c37",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e03a44d5-9c8c-4d60-83c5-84d6995db4e8"
        },
        "item": {
          "id": "b4c639fc-0965-4792-936b-74e525448959",
          "name": "did:invalid"
        },
        "response": {
          "id": "d9cbd859-349c-49c0-863c-635524294e0d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 620,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c2cca3-03df-4bd7-8efe-d35f4707612c",
        "cursor": {
          "ref": "2aca067f-00d8-49bc-a612-9e1ba93c30ba",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "389e181f-44e5-4b87-8b55-6d54eef6b53a"
        },
        "item": {
          "id": "77c2cca3-03df-4bd7-8efe-d35f4707612c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "60ffa7b0-28ca-4371-9c2e-8ba2199bf6de",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350585b9-7585-461a-95ec-a65fff0cbcf3",
        "cursor": {
          "ref": "87b45acf-8c1a-4b0d-9017-f13a621507e9",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1be35006-4f4a-4691-bc42-dfe8cfbd7de4"
        },
        "item": {
          "id": "350585b9-7585-461a-95ec-a65fff0cbcf3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5d8778b7-9c7e-456e-848e-cadfa782a12c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9693f9b-f971-40b6-93e9-14c555269013",
        "cursor": {
          "ref": "c2bf79ba-c4d3-44da-bac3-f489b47bdee7",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fe17259b-29fb-470e-8c06-4caebd990c4d"
        },
        "item": {
          "id": "a9693f9b-f971-40b6-93e9-14c555269013",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "637517a8-a255-483e-b228-f8400496b17e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb194d0-fe2b-40a2-8665-69e852e6f416",
        "cursor": {
          "ref": "a1479583-60f1-4bc6-a5b9-3a079ce9a35d",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "242bf7d8-6cb7-46ff-9e35-145f14729173"
        },
        "item": {
          "id": "ecb194d0-fe2b-40a2-8665-69e852e6f416",
          "name": "identifiers"
        },
        "response": {
          "id": "4f7b20bd-fbf4-4429-a06f-927958f3af7d",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e778d3a6-d1a1-4fca-ac5f-ffaf1414855a",
        "cursor": {
          "ref": "494f259b-2584-435b-be22-82b7ba80535b",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7fb63398-67a9-4668-ba3d-5c56717996bc"
        },
        "item": {
          "id": "e778d3a6-d1a1-4fca-ac5f-ffaf1414855a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "69e9ba95-baf9-407b-a7ae-27106577861b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9911ff2-7a7c-40ad-8a78-e8e0ce0c97e4",
        "cursor": {
          "ref": "a23c55b8-570b-44ed-894f-97d1ec9cd8bf",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d72e3b47-188b-4b59-a869-8eb4f9d3db1e"
        },
        "item": {
          "id": "f9911ff2-7a7c-40ad-8a78-e8e0ce0c97e4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7f4d2c82-c9a1-4b5d-98f8-247752fdf4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827c6a89-140e-437a-9299-027e172a8d22",
        "cursor": {
          "ref": "8ebc9404-143c-4389-9379-3c6e82aff416",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0bb0780f-5d3d-4820-949f-34685c5e47bb"
        },
        "item": {
          "id": "827c6a89-140e-437a-9299-027e172a8d22",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7c6d2a38-f22a-4d72-85ae-0a8563984c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77d06fe-a7c8-4031-b62b-a71ed18ed2ec",
        "cursor": {
          "ref": "d0ab454b-8027-43fb-9bc7-6edbbb912f27",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "daa6f2e6-dbaf-47fd-b573-11641de47d55"
        },
        "item": {
          "id": "b77d06fe-a7c8-4031-b62b-a71ed18ed2ec",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bb30fd94-0629-439c-8728-fafc3de85eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3ac90c-c504-48de-9de1-f99c20515e1c",
        "cursor": {
          "ref": "e340631f-b582-45dd-85c7-09419b80664c",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0c84be5f-f3e5-4e8c-8a57-5d20b0d96484"
        },
        "item": {
          "id": "3e3ac90c-c504-48de-9de1-f99c20515e1c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b6050c1b-f2dd-4ae9-9c3d-5a54a1ac6690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012e2162-2312-4e03-8bb1-fdee226cae96",
        "cursor": {
          "ref": "a547b460-9d56-4ca2-9fa7-a26f5d01db33",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ed2f2185-49bc-448c-9cfa-0b691dfa7e5f"
        },
        "item": {
          "id": "012e2162-2312-4e03-8bb1-fdee226cae96",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "af8ede4e-10da-4e84-b112-0a910ab8896b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9854bc3-a877-4065-9d64-1bfaf627165e",
        "cursor": {
          "ref": "1a8a4dab-c34e-4802-b2c1-989613495887",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "39a0c017-275d-4323-8ea7-bf304580d3cd"
        },
        "item": {
          "id": "f9854bc3-a877-4065-9d64-1bfaf627165e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "df81177f-a61e-411d-8dc4-110f2f2bacc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f10791-d88a-4383-9463-336f7f15b2ba",
        "cursor": {
          "ref": "f5e761f0-6e3a-4cb3-8c98-823bc586fcae",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5a5729a3-c646-4370-a0cf-2a29ea9bf636"
        },
        "item": {
          "id": "83f10791-d88a-4383-9463-336f7f15b2ba",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "cb9e28f4-60d2-418e-9793-46ab452d3977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37788961-7a41-45bc-85df-0d67b85c0e06",
        "cursor": {
          "ref": "e8a58946-1ac5-4fc6-910a-bbb2256da2fc",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6b4e63cc-ee1d-4927-89a0-a4009ac63962"
        },
        "item": {
          "id": "37788961-7a41-45bc-85df-0d67b85c0e06",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f2a9b456-21a9-41f6-a1f9-357524082e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5bb05ac-438e-4ca2-8601-1446dffd0fbc",
        "cursor": {
          "ref": "39b6bbb9-d923-466b-a8c4-4e9e030db806",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a9db0a81-dd0a-44a1-85d5-1ab1f5024551"
        },
        "item": {
          "id": "b5bb05ac-438e-4ca2-8601-1446dffd0fbc",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "701cb02d-b2cc-4589-9d36-2bcba048a368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f360f172-584a-4f54-8c0e-afd77b6f7c5e",
        "cursor": {
          "ref": "a64150c9-1547-43df-add0-b362c6be52dc",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8bdbdf82-9e99-4885-9b0b-bdf4608d3b00"
        },
        "item": {
          "id": "f360f172-584a-4f54-8c0e-afd77b6f7c5e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "024eb156-febc-487a-b8a2-7f662542131f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f54a3a6-85e9-4b24-8856-d513acad3766",
        "cursor": {
          "ref": "ec77ca17-556b-48e1-8a19-125f9275c5d3",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f54f6f62-c6e2-423c-8520-98bf51ab8230"
        },
        "item": {
          "id": "1f54a3a6-85e9-4b24-8856-d513acad3766",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "cc5e067a-356c-4c89-b333-13d133759232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118679f7-97a8-464c-af36-70e68a7da1b2",
        "cursor": {
          "ref": "af14c428-7690-46cd-87da-4c55bc8301d4",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "704b12a2-84cf-4b21-8c20-e740dbf32035"
        },
        "item": {
          "id": "118679f7-97a8-464c-af36-70e68a7da1b2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cf4799e6-d34f-41d8-aca8-9c4c2e8898ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba3eef2-7957-4b86-aaf8-e53e6422cb8f",
        "cursor": {
          "ref": "4b6b54a6-4844-43e7-9be8-94b99b896ca5",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "eb406469-bb48-4296-9582-e81e792f61ae"
        },
        "item": {
          "id": "9ba3eef2-7957-4b86-aaf8-e53e6422cb8f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d24e1b02-01cc-418d-a724-8667e6596996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233912b0-fa83-4200-be49-ade642b434c7",
        "cursor": {
          "ref": "d99f8f84-91c9-48e1-9731-f98e2a464d13",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "32f3d683-7699-4abe-84d4-b40f56ae3b09"
        },
        "item": {
          "id": "233912b0-fa83-4200-be49-ade642b434c7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "14d2451e-b649-4f8e-a865-17ec9716913c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38312386-e021-4b46-b743-d5dc2b455e1e",
        "cursor": {
          "ref": "76b2686b-eda6-4089-a0c0-2351a3af0148",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c7bff916-843b-4967-a899-26cd3575bc80"
        },
        "item": {
          "id": "38312386-e021-4b46-b743-d5dc2b455e1e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c03e026f-38c5-4bdc-8c1b-9314551bc729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68de59f0-f6a8-4340-b501-e054bbf65436",
        "cursor": {
          "ref": "3ea9a9ba-16be-435b-a57b-c6d152c24532",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a5f51857-d46e-482c-ac70-80422bf04993"
        },
        "item": {
          "id": "68de59f0-f6a8-4340-b501-e054bbf65436",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "83572f75-53b6-40b9-96ed-0af1402fe809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c526cf28-a08e-4bff-857b-afebe960fc63",
        "cursor": {
          "ref": "c358b504-5270-483b-9679-af032bab07d0",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d7610903-29ff-4f93-a17f-37489dfaa030"
        },
        "item": {
          "id": "c526cf28-a08e-4bff-857b-afebe960fc63",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "14cffbd4-9a9d-49d7-9a9d-0525e47d8afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda927f1-710c-4c17-9d84-57cb2746a48d",
        "cursor": {
          "ref": "21aa72d2-41cc-49ae-ad51-474d01728a08",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5d8adf72-92f4-4c29-8ba2-43021345374d"
        },
        "item": {
          "id": "bda927f1-710c-4c17-9d84-57cb2746a48d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "cd8abfbc-18b0-438e-b906-290aaa54cb52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4dab122-6115-4ec0-968a-eb4a019914b8",
        "cursor": {
          "ref": "2af5fd90-a6f7-4d36-aefc-e74047c7708e",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2ed64c30-1812-41ee-8571-a09bc9531ac9"
        },
        "item": {
          "id": "b4dab122-6115-4ec0-968a-eb4a019914b8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "23f1c0d6-46a7-4eae-bfe5-6c9931bbed2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a324f1-adba-42da-b25e-7646a1260747",
        "cursor": {
          "ref": "19c9c60d-45cc-4d4a-ab74-c9eb67c884ce",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "03c52cf8-5e3c-4fd4-bbcf-7828776600dd"
        },
        "item": {
          "id": "14a324f1-adba-42da-b25e-7646a1260747",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "46a66185-1f2b-4659-971d-65c1d95258dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd4619a-b411-40fe-b8d8-8890e8ff72ad",
        "cursor": {
          "ref": "7f9af4de-0a0a-4f9d-9732-61b201ae84fa",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "cbf24ed4-7026-4806-9bed-c212bfb611b9"
        },
        "item": {
          "id": "8bd4619a-b411-40fe-b8d8-8890e8ff72ad",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f37a6d84-aa96-4a84-8284-9df0b6072a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4e666a-d23b-4edc-8eff-d51598ae8498",
        "cursor": {
          "ref": "8aeeab32-044a-4fc9-a477-85739bef5438",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e2742b6b-a361-4e17-adfd-316b694b0920"
        },
        "item": {
          "id": "bd4e666a-d23b-4edc-8eff-d51598ae8498",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "544043d6-98e8-428b-aedc-50b6a287b4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbaf63fd-a927-43cd-b8d3-123eb1a8c39a",
        "cursor": {
          "ref": "b28e8717-3911-410d-b018-06951ef0c745",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ce1035cc-21bd-42bf-a739-8ce594f5e0e1"
        },
        "item": {
          "id": "cbaf63fd-a927-43cd-b8d3-123eb1a8c39a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4ec45951-b81d-4b8f-bd4a-a92750bbdd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c00e018-ecf1-4eff-9a7a-b3eb38ce3350",
        "cursor": {
          "ref": "70679119-c0d0-4175-9386-87ca3ff7d197",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "68154b00-333a-4f63-9c34-b74435d48aff"
        },
        "item": {
          "id": "7c00e018-ecf1-4eff-9a7a-b3eb38ce3350",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6aed9e13-61a8-4fc8-bbba-ef6c387d85f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcbbb3f-3f29-4cf5-95b8-f01ac952064d",
        "cursor": {
          "ref": "b21680ee-8530-42f6-90d3-940ee52a7d64",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3cfe8ef6-2b56-43b4-aab0-8ad45e9b87b5"
        },
        "item": {
          "id": "1fcbbb3f-3f29-4cf5-95b8-f01ac952064d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2bbfd324-7729-4019-9e2f-a1eb6789f9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e075b26d-fe58-4850-900f-cfe88057585e",
        "cursor": {
          "ref": "55534ff3-ae4c-450b-a70f-4ac829d1b39b",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f38be962-b3a8-4c41-b654-144436c97892"
        },
        "item": {
          "id": "e075b26d-fe58-4850-900f-cfe88057585e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3bfd9764-5ae2-4c00-9e68-8b1e7345b106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a767af-cfd5-4d66-9c29-66cfe2192bb0",
        "cursor": {
          "ref": "a21fa577-2b7f-4118-bb17-d51f246d3d2f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "feec4f81-9afa-4168-9e85-e1b36c9c0e37"
        },
        "item": {
          "id": "12a767af-cfd5-4d66-9c29-66cfe2192bb0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9f41c971-8bb9-401e-be74-8d9a4a2e3f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba52298e-098a-4f07-9b11-00b5b2d3667b",
        "cursor": {
          "ref": "f6d2fcfb-a52b-4356-95dd-ed30df32f97e",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8d1f3884-8451-432e-96fe-39186f1a56ea"
        },
        "item": {
          "id": "ba52298e-098a-4f07-9b11-00b5b2d3667b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "42bc8435-388f-4d76-bb1d-1d420d8864c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a667f77-a6ad-4e43-b8a9-4f010a231c14",
        "cursor": {
          "ref": "10b0940c-a10c-483a-9899-4cf3b77e1555",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a0296ef7-74a4-4856-8b7e-bfbc4a5f39b3"
        },
        "item": {
          "id": "5a667f77-a6ad-4e43-b8a9-4f010a231c14",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "14fa92b2-b63a-4154-90a5-e7c1d33584a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e473f8b-9f80-42a4-9937-fbaf0a05edef",
        "cursor": {
          "ref": "16ed7cb4-cca8-48e2-9f32-e6b4bd093749",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "031f9499-50a0-47f1-93c7-b5f126bfd2aa"
        },
        "item": {
          "id": "3e473f8b-9f80-42a4-9937-fbaf0a05edef",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e63cd9be-baad-4a86-8ac3-5a5437093bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091812b6-e509-4160-bf6a-4be985502ff2",
        "cursor": {
          "ref": "96a5e707-0c51-4607-866c-7c46f1b2d7c6",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d12251bb-7541-404d-a51d-b2cd1f7ca93f"
        },
        "item": {
          "id": "091812b6-e509-4160-bf6a-4be985502ff2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "df80b515-4f22-4bec-b3f5-441d930cc75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c5f91a-7eec-454f-9cac-79dd20918c12",
        "cursor": {
          "ref": "463dc674-485f-442e-854b-b0d4b1f7b95d",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3bba2ca9-795a-451e-a25e-0d4306ef772b"
        },
        "item": {
          "id": "c0c5f91a-7eec-454f-9cac-79dd20918c12",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6461754c-2f80-4cc0-b306-c674082d69e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb89d864-f69c-4569-8e20-d3eb1e2b5227",
        "cursor": {
          "ref": "c271b953-1be2-442c-a1ac-f4ed28dedc9a",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e69eefb2-30de-426d-9d5d-5d8cc63af7c8"
        },
        "item": {
          "id": "cb89d864-f69c-4569-8e20-d3eb1e2b5227",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9281c02c-49d1-4159-8a88-5256c7877f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a235efc3-7e88-4e2b-b565-cd8def4d048b",
        "cursor": {
          "ref": "ca964805-3619-4710-8edc-56904b20da15",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8cfdc20e-a87b-4469-a969-e2c7ebbe1f40"
        },
        "item": {
          "id": "a235efc3-7e88-4e2b-b565-cd8def4d048b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "134833bc-4230-4928-a20d-d2a5adc6136c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb48bbb-840c-4612-a026-bb71c4f51704",
        "cursor": {
          "ref": "231b6092-641b-4bfa-b494-2256ae4d386e",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c0d87c73-bc37-4c5b-abe5-804e6384803a"
        },
        "item": {
          "id": "fbb48bbb-840c-4612-a026-bb71c4f51704",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f6641e06-428d-440f-9545-c95970215197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ec0d56-9b83-49b2-b7fa-a9ccc102a410",
        "cursor": {
          "ref": "3f8e2538-c78e-4401-9018-603d8211bb87",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bcf28ffb-f12d-4b98-84fb-aff273bc56b6"
        },
        "item": {
          "id": "35ec0d56-9b83-49b2-b7fa-a9ccc102a410",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c333ec20-38a6-44ba-8764-e13696a6eb13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7fdca63-b913-48dd-bb74-ee16b6204afc",
        "cursor": {
          "ref": "05087e90-cd20-498d-a3b7-978d171adb0b",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "25af6009-a4fb-4af8-9dcf-0827b13bbda8"
        },
        "item": {
          "id": "a7fdca63-b913-48dd-bb74-ee16b6204afc",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0216bb26-19ca-499a-83d5-34d8fac642da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f55d39e-2d6d-45b7-a0a0-22f31c9650d6",
        "cursor": {
          "ref": "d24dc928-82b1-49be-900a-7efd7169581c",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2e68ecad-fd28-4b6d-94e5-0d0eaef83cd6"
        },
        "item": {
          "id": "8f55d39e-2d6d-45b7-a0a0-22f31c9650d6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "343ebe5f-09d2-4137-b30f-0221212ce14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c69620-a90f-443b-a698-695788ed30d7",
        "cursor": {
          "ref": "0587caa0-55dc-4941-8337-01aec436863b",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5135669b-817b-4efb-845f-625a8bc1ebe8"
        },
        "item": {
          "id": "06c69620-a90f-443b-a698-695788ed30d7",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3bacbe6e-a419-4a61-aaf3-72313efd5899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68496574-03be-4122-983b-c149a417481e",
        "cursor": {
          "ref": "a43a271f-b9b0-456e-9c1b-a3b55e8b7930",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d15cbd1d-fda3-4215-addb-c551061b2bbf"
        },
        "item": {
          "id": "68496574-03be-4122-983b-c149a417481e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "44ae69eb-a881-4bc8-bd1a-8c74e8f7eb45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560e0552-41e1-4abc-ac45-c34b060bee7a",
        "cursor": {
          "ref": "d78beac7-f809-4bf2-ae48-991629d4de51",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5ab49f8b-edc6-4934-9948-69e71600562b"
        },
        "item": {
          "id": "560e0552-41e1-4abc-ac45-c34b060bee7a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5c717ef4-c146-4ea2-a2e2-def1ad9ec16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ceffd9f-3ed0-4ef8-bd7e-96dedca8142b",
        "cursor": {
          "ref": "8ffc954a-7e17-47e2-8854-2c881da84e0c",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "89df3817-9bc1-404f-913a-0ecd08001e15"
        },
        "item": {
          "id": "8ceffd9f-3ed0-4ef8-bd7e-96dedca8142b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7c870255-b144-46b6-9d2b-b9c63044f795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a37df47-cc40-4479-ba7c-67de4531258b",
        "cursor": {
          "ref": "e39d6e37-dc7b-4cda-a04d-73227ff011e2",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f99ce847-9eca-48ea-a6ca-3adaaa89011f"
        },
        "item": {
          "id": "3a37df47-cc40-4479-ba7c-67de4531258b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e6506d5d-32d4-4497-8d9a-c53a9d9c8011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d87b0ad-8761-45f7-8139-000cf05297ee",
        "cursor": {
          "ref": "0bd494c9-67a3-4811-942c-ceeec3eb74d4",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d1f94bad-192b-41ce-a04f-324fd92e9702"
        },
        "item": {
          "id": "8d87b0ad-8761-45f7-8139-000cf05297ee",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "44b8b109-7a7c-42d9-8412-808efb3ff575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da5220c-05f0-48ab-9e05-9a1c4aa3f192",
        "cursor": {
          "ref": "3abadffd-b35f-47fb-9b89-c52e175aa3bb",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "415c2c33-454e-4490-8f9b-44d492de8821"
        },
        "item": {
          "id": "0da5220c-05f0-48ab-9e05-9a1c4aa3f192",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "98e84f81-a2e4-4528-911d-8256d4fc9816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2694a058-531f-4611-9c9e-1b025d01541b",
        "cursor": {
          "ref": "47f2d471-918a-42c3-ad02-1e9be645e2e2",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "277a2c3d-a2ab-4d86-a4b0-3b42ff569690"
        },
        "item": {
          "id": "2694a058-531f-4611-9c9e-1b025d01541b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e11c59d9-541c-49d7-a432-71c892de9e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208bab53-f170-4a8f-b9e8-26e965402031",
        "cursor": {
          "ref": "9a9fc535-e459-41d1-94b5-5e1ad8615aa4",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "24821cb2-2c31-45fe-ade8-cbbf926db32b"
        },
        "item": {
          "id": "208bab53-f170-4a8f-b9e8-26e965402031",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f50d5df3-b602-4bd7-a07b-d7433a507a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfcd2a4e-68bc-46cf-8ac1-e49d7f53fdf0",
        "cursor": {
          "ref": "25b96a7e-bdd4-4840-8dee-dad47f7f7f35",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c1455199-3408-404e-ace7-8a084bfc8d9f"
        },
        "item": {
          "id": "bfcd2a4e-68bc-46cf-8ac1-e49d7f53fdf0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5ade5d14-9ffe-4545-871c-827b4bfc6112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014cf4da-c07d-44bd-88a5-85313ee7cd6e",
        "cursor": {
          "ref": "987ac86b-eee1-4776-9625-d93d725b44ee",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ec216ed7-aa23-4ad9-901d-863f8f3162c4"
        },
        "item": {
          "id": "014cf4da-c07d-44bd-88a5-85313ee7cd6e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9012e5bf-3dae-4cb2-8f8f-3360893851e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79423bc-bfa8-4f6c-b7bb-2eb827d5ec3b",
        "cursor": {
          "ref": "b147f6d1-5bd5-4749-81fb-8c9a0f1d2cb8",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "71f6fe37-335e-475d-81b1-c9ae798b629a"
        },
        "item": {
          "id": "c79423bc-bfa8-4f6c-b7bb-2eb827d5ec3b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7bb8e13f-3be8-48c4-915d-f0b3232d35e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e814a6-51e2-46bd-9594-60d2eb884946",
        "cursor": {
          "ref": "5f0ec68c-a841-4d0f-bb3d-902c71419127",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "32dfc6ba-aacd-4d67-a1e2-8b0eebe6cf6f"
        },
        "item": {
          "id": "b8e814a6-51e2-46bd-9594-60d2eb884946",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c9b7082c-d74d-4a66-a624-0fa2b277df0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e638501-8e30-427a-8807-799298577bdf",
        "cursor": {
          "ref": "a6a7eaa9-4965-46b3-a284-7cd289e97d07",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c10035c4-7df8-47f5-9ac4-9eccc269b5e9"
        },
        "item": {
          "id": "6e638501-8e30-427a-8807-799298577bdf",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "239b82e4-8617-43a8-8c1d-9338bb02da91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163026d8-433e-493a-8089-02ac04471f3e",
        "cursor": {
          "ref": "e9bfd361-59e3-4705-890a-6f9cb0cce004",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "efec6733-75dd-4d37-b82f-bfc80322a2c9"
        },
        "item": {
          "id": "163026d8-433e-493a-8089-02ac04471f3e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7f003814-621f-4980-9f55-2d6a0bb0b86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534de254-de8c-46ef-b0cb-89526a375ae8",
        "cursor": {
          "ref": "982591e6-f6bd-4cfd-b527-abf1b002e8bf",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "31b96eec-167b-42da-a94a-d972f4d57e46"
        },
        "item": {
          "id": "534de254-de8c-46ef-b0cb-89526a375ae8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7354d158-e3ff-47ba-931e-1f8a81c2329e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28016e0d-4824-4ee3-8bff-c7977dcf1b1c",
        "cursor": {
          "ref": "d6f9b964-d1e8-440b-9074-769ba711db10",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "228a720f-fd24-4b67-94ac-90f7ed23f033"
        },
        "item": {
          "id": "28016e0d-4824-4ee3-8bff-c7977dcf1b1c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7c65c6c1-682f-44ce-b357-b0ef0b7f5b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06551c93-a920-48e0-8e24-8b109640275e",
        "cursor": {
          "ref": "f4eb5d7d-7e8c-4233-92c5-0dcabd6be00b",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c96674c2-f085-4e42-a849-518cd339d680"
        },
        "item": {
          "id": "06551c93-a920-48e0-8e24-8b109640275e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "735a70bf-ed41-4c05-8e61-d4e734466374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72002d69-880c-4a11-b6cc-7c139a29c33c",
        "cursor": {
          "ref": "5441620b-b8e2-4bee-b9f3-52b113195803",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "749211f6-1659-4dd1-b096-5df2e68ab4bc"
        },
        "item": {
          "id": "72002d69-880c-4a11-b6cc-7c139a29c33c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "133e7a9d-9442-4c21-a6ec-5720ff4d59cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df677488-ff76-4327-9fc9-c62a742cec2a",
        "cursor": {
          "ref": "9db97b77-0802-40be-925b-0a7a31a2859f",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ce227e3d-f3bb-4a15-b025-faf065251431"
        },
        "item": {
          "id": "df677488-ff76-4327-9fc9-c62a742cec2a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "02ce9bc0-7f59-43dc-8ea5-36f816111934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc6b2ae-85af-4e53-9cee-bdfe6d1eb800",
        "cursor": {
          "ref": "4cad1796-129d-4899-adc3-496d156327fb",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "44d71996-6bce-4c26-9c60-a9f602bd7dfb"
        },
        "item": {
          "id": "ecc6b2ae-85af-4e53-9cee-bdfe6d1eb800",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "498c49c2-60a6-4250-84e7-d1f8ed553a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62df4ebc-1df9-4100-a4ae-6c8635b375dd",
        "cursor": {
          "ref": "6bd6401f-13fb-45f7-a740-8cb18844709e",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e76c7119-6bfc-4d87-98aa-6afb97067a5b"
        },
        "item": {
          "id": "62df4ebc-1df9-4100-a4ae-6c8635b375dd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f800b15b-e7ae-42ee-9de0-ce61d29f6e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1285dfb4-8fc8-433e-89b1-da62d888e699",
        "cursor": {
          "ref": "34c66124-a7ed-4bee-a081-8780c2a84f53",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "018587d6-a1de-477c-9668-2b792c47c164"
        },
        "item": {
          "id": "1285dfb4-8fc8-433e-89b1-da62d888e699",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "cfc371d5-370b-4ea0-877d-4fb148595816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913d1413-67eb-4e10-aae9-7833511e087a",
        "cursor": {
          "ref": "ff76f2a7-c44f-40da-bb39-54eb61e3ae6c",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "da05e60f-f713-4a0c-8c8a-2f4e93f0db8e"
        },
        "item": {
          "id": "913d1413-67eb-4e10-aae9-7833511e087a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "387ea02d-3568-464c-b1e0-b61f5cd9d2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d548391-387f-4d17-9714-b2dc7c54d4c4",
        "cursor": {
          "ref": "05650924-3cf8-4503-ba0c-644744efc679",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "87574231-df4a-4d3d-ad6d-592ac4223818"
        },
        "item": {
          "id": "0d548391-387f-4d17-9714-b2dc7c54d4c4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "cca5bf3c-abee-4ea2-9abd-457d95ff33ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb607748-e6c6-40b7-a947-3ed855384e3f",
        "cursor": {
          "ref": "42a1c5b1-7b2e-4dba-94c3-dffadc0194a2",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6a9da835-0556-4034-94dc-486a154c5a88"
        },
        "item": {
          "id": "fb607748-e6c6-40b7-a947-3ed855384e3f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "86274fd9-5091-44c6-9d68-ac577618d336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf005d6-bdfe-4d1c-bc9b-b7dfd45f5d75",
        "cursor": {
          "ref": "8d1c832d-39a2-4335-aad0-dac9ae25ec82",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2155a4ab-96f6-4990-b564-e240bcc83553"
        },
        "item": {
          "id": "acf005d6-bdfe-4d1c-bc9b-b7dfd45f5d75",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0ad69a57-5382-4c89-9bee-ab977e4daa82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86daf9c-0c23-47d3-9d56-0e80e67b8631",
        "cursor": {
          "ref": "400b18b1-f447-4069-aca7-ad257ce56e1b",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0a32d79e-554d-469a-b8bc-4f8ca529aea1"
        },
        "item": {
          "id": "e86daf9c-0c23-47d3-9d56-0e80e67b8631",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "cc65e6c1-2bd6-4d4b-be77-dd075d93414c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e15d91-b7f8-49ab-ac0f-341d1a7f051d",
        "cursor": {
          "ref": "b8d4e273-cef6-495f-9f41-af084afffade",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "dde8ff43-3733-4d48-b609-a0e68f818f3e"
        },
        "item": {
          "id": "09e15d91-b7f8-49ab-ac0f-341d1a7f051d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d8dd4aed-e390-48ba-b32e-67c6e89389f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f1bff1-ce73-47ed-91da-903824f3076f",
        "cursor": {
          "ref": "f42cb5f7-09e9-4de8-b7c5-411e20f950b1",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "aff3c74c-4369-4a09-956a-8b7efb84420d"
        },
        "item": {
          "id": "e4f1bff1-ce73-47ed-91da-903824f3076f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b74deb63-63be-485a-9e23-b0f0e023ba99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02492e2b-6db7-46c2-abb4-8e3c4d285362",
        "cursor": {
          "ref": "60d7a297-5fa3-4e6d-a441-babc058743e6",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "03c672b1-2012-4957-8236-acf5bb609ae7"
        },
        "item": {
          "id": "02492e2b-6db7-46c2-abb4-8e3c4d285362",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7d6d021c-3c4d-4c3e-800f-22229630d8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a7d1e7-0a6e-4562-8c2e-6d7c49fbb540",
        "cursor": {
          "ref": "48f11042-3f08-4358-b57b-1a0602804983",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "940121ce-fd7c-4216-b0db-d30254096ac6"
        },
        "item": {
          "id": "40a7d1e7-0a6e-4562-8c2e-6d7c49fbb540",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "70717f86-28a9-4612-9742-71bcfb7c8a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f30dc99-2b73-4b65-868e-ef61d1586ebf",
        "cursor": {
          "ref": "6a92d185-fe0f-4bc3-9218-fe7002c34002",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "da4dbca4-c4f4-4f87-bfbf-76114a8f1d02"
        },
        "item": {
          "id": "7f30dc99-2b73-4b65-868e-ef61d1586ebf",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9372907a-05a2-4fdd-87f1-e146b63ee866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aebf002-45f8-4589-b266-963536425f1b",
        "cursor": {
          "ref": "0bf80d18-12e9-4e97-ab95-3405d1c6d0fd",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5daaadfc-f572-4656-b339-466a1b91323d"
        },
        "item": {
          "id": "0aebf002-45f8-4589-b266-963536425f1b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "07e120a2-59f1-4ba1-88e6-1ca9ee843af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d78ab0-b5b2-4043-aa46-c10e8eb0490c",
        "cursor": {
          "ref": "6814e42f-0c99-40d5-a9a6-a4f7a5821ba3",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "326632fa-1ff1-4839-8167-b04e3adec5f1"
        },
        "item": {
          "id": "a1d78ab0-b5b2-4043-aa46-c10e8eb0490c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c7fb3753-ba5b-4131-869c-7e4122ceaaad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916dbc4b-0348-4dc1-8b69-8de78bf178b2",
        "cursor": {
          "ref": "185db50c-7b32-4e60-a6b5-133fce0b3610",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1ba4a652-af91-4bf3-8097-cbf5075adb9b"
        },
        "item": {
          "id": "916dbc4b-0348-4dc1-8b69-8de78bf178b2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1a946e9c-46d3-4dc5-b0b9-74f174eca173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "277327d3-9be0-4b03-923e-a1dc2e738a9c",
        "cursor": {
          "ref": "c45bb24f-00c3-425c-91cc-e1669cf73f38",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3eeaad07-f3ad-48c8-99f1-31920dbb06bb"
        },
        "item": {
          "id": "277327d3-9be0-4b03-923e-a1dc2e738a9c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "379480f1-14c0-4bde-b8e8-d557734c8405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0fd37a-1886-49e6-bdb6-a0e685ab3274",
        "cursor": {
          "ref": "72708ba8-ccb4-4d1b-bfeb-eb3bd652b767",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "007db4fb-4325-4f78-857d-f712f6a627be"
        },
        "item": {
          "id": "ca0fd37a-1886-49e6-bdb6-a0e685ab3274",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9c4bcae0-3057-44cc-8158-b8e041f757bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe28dc04-8efc-442f-ab2a-e66a74fa1a5a",
        "cursor": {
          "ref": "b52127a3-f728-4b71-b9b6-49d7a5a17ae4",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "54699647-246b-4bea-a3b4-e7f440c29b0b"
        },
        "item": {
          "id": "fe28dc04-8efc-442f-ab2a-e66a74fa1a5a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c1f5b580-7a53-4107-94fe-a36165b83fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef293f8-267b-4161-9cce-fedc8a6f1ccc",
        "cursor": {
          "ref": "4d491394-898c-4f52-8eb5-fd21e2e7145e",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0aec1c8b-dbe3-4c06-adae-71b5bb73fef2"
        },
        "item": {
          "id": "9ef293f8-267b-4161-9cce-fedc8a6f1ccc",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2521277d-e35c-433a-b1b7-58fead14eb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d219c507-efa9-47cb-a610-9b5badfbeec8",
        "cursor": {
          "ref": "5935233d-5cd2-4e11-b980-5e5d12aff01b",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5e52adfe-8e24-45d8-b197-8ce2d2251122"
        },
        "item": {
          "id": "d219c507-efa9-47cb-a610-9b5badfbeec8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "25d0efea-132c-43bb-9651-116beb066aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc489499-6779-4ab3-ab0f-362fe1f3eac4",
        "cursor": {
          "ref": "7c5b3c96-1ecc-4dcb-b908-6ac5d1e5263a",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "98ab45e8-ad58-4a07-9ba8-7f42fbc51b0e"
        },
        "item": {
          "id": "bc489499-6779-4ab3-ab0f-362fe1f3eac4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0e7b4e05-9626-4617-a30c-99cb8b9f63b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c692dda5-8834-4040-9401-d2bbc773127a",
        "cursor": {
          "ref": "9bf45df4-6f1e-43b2-b4c9-5aee05fbcfa8",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f11743ad-3222-4774-9436-cb924ea96e98"
        },
        "item": {
          "id": "c692dda5-8834-4040-9401-d2bbc773127a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d7bbd575-f810-41e0-be56-fb0c7ab5e061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e3eac9-1cb5-47bf-8f8a-76f2adbc6aa1",
        "cursor": {
          "ref": "82880557-5d11-4329-adfa-1065809829db",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a83f78b3-6b88-43d6-9146-a050419d9817"
        },
        "item": {
          "id": "25e3eac9-1cb5-47bf-8f8a-76f2adbc6aa1",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "324a1370-912b-4c9b-9c77-9d29fc5cf25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a5e3bc-f1f2-498e-93f2-c356c8dd8f79",
        "cursor": {
          "ref": "1b25d9a0-fd4c-47dc-beab-229e4c3aeac7",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ad637e18-14f1-4d26-84f3-0bb80f44d551"
        },
        "item": {
          "id": "c1a5e3bc-f1f2-498e-93f2-c356c8dd8f79",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b77f5d0a-3928-43a5-a245-9870c02d27f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c894ea75-48da-4c7a-b534-e3a81cde73de",
        "cursor": {
          "ref": "40d10cc8-bda5-4b7b-b81c-fa50d4d7c650",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "40db91c4-b857-4901-b5b7-84ca96358a60"
        },
        "item": {
          "id": "c894ea75-48da-4c7a-b534-e3a81cde73de",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2e5fa173-d710-418a-a3d1-e2b86fb60c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5829ce-78af-4f3e-8b07-9ebb01a18a9f",
        "cursor": {
          "ref": "fb3fdfe5-9cd4-41d8-ad70-d385bba762ab",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2140bcf0-125a-46db-b8f5-6f175d0aed29"
        },
        "item": {
          "id": "9c5829ce-78af-4f3e-8b07-9ebb01a18a9f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "80095733-83cc-4606-90ec-c704296b97aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2d515a-5353-4c53-80c3-b36263f6cea8",
        "cursor": {
          "ref": "7702fbb7-3606-4a04-b4b4-102d1ea00b9f",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "dd97021b-f735-469e-883c-c663881ba006"
        },
        "item": {
          "id": "ac2d515a-5353-4c53-80c3-b36263f6cea8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e1a2214d-b556-4d38-8867-aef3cc3e4c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5992e14-e470-4213-9b46-53cba074ab04",
        "cursor": {
          "ref": "2df22d85-fed1-42dc-8cd7-a36750c8c540",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c7c21294-f027-49bd-830f-6461638e902f"
        },
        "item": {
          "id": "f5992e14-e470-4213-9b46-53cba074ab04",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "176cc2db-ddbd-4a51-9c44-889bb967641f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c71081-a4bf-4a99-80d5-829560d5a8a3",
        "cursor": {
          "ref": "d49e0801-e357-41e6-a373-3b9075316895",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4635c841-7663-40e8-92e3-e7d374497baf"
        },
        "item": {
          "id": "29c71081-a4bf-4a99-80d5-829560d5a8a3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "375b1600-e850-4a82-8083-6610dca4d1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685e59c4-7d48-466e-a751-cb8180df559e",
        "cursor": {
          "ref": "d6adf4e9-d44b-4181-88eb-f9d7ed221d08",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "93c2ee7f-6844-4a77-8437-2e423ee4a03f"
        },
        "item": {
          "id": "685e59c4-7d48-466e-a751-cb8180df559e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5114c5e1-8b74-4f9e-b8ef-dc6398fc2a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a7e49e-51d2-41bc-a2e8-888548b33793",
        "cursor": {
          "ref": "3193ebec-c993-4886-b74c-a8593cdba177",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6556ebff-2260-4330-a3d5-58f8bb5bed81"
        },
        "item": {
          "id": "e9a7e49e-51d2-41bc-a2e8-888548b33793",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1ea0885a-8e15-4de9-a72a-dfcfd3e13c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67714526-c1f8-42aa-a2b3-7b6ca22077b4",
        "cursor": {
          "ref": "50df5e1e-fb77-4f84-a83c-4e12b07111ec",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c6e0dd6a-0801-41c4-9a2f-e61a399548ae"
        },
        "item": {
          "id": "67714526-c1f8-42aa-a2b3-7b6ca22077b4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3fa84c2d-2c12-4d32-bd7d-c8e982463386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d85cf0-5a60-49e8-b328-0c265d8fc58d",
        "cursor": {
          "ref": "5e087645-1643-46b3-942e-1793ec92b41a",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "30e2c45b-46fd-418d-9037-bedcddc52fff"
        },
        "item": {
          "id": "04d85cf0-5a60-49e8-b328-0c265d8fc58d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a1bd04e3-16f3-4bec-a84d-01b8d8592cab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed03b56-c489-4000-adec-e84e511dc574",
        "cursor": {
          "ref": "1c901595-5832-483a-8935-a4e68138f3c2",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b8d3eab9-927c-4891-b7a9-af2080a74270"
        },
        "item": {
          "id": "1ed03b56-c489-4000-adec-e84e511dc574",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "65d75c15-8c46-4250-bc92-7289eb038b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "a72b3713-4f58-4d9b-a456-96e5e802e1a9",
        "cursor": {
          "ref": "0a00ee16-b90d-40a2-9bb0-4da714296a97",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "254c4f45-ffcc-421a-9316-0e685c43df6d"
        },
        "item": {
          "id": "a72b3713-4f58-4d9b-a456-96e5e802e1a9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a1cf3d5d-17c6-46c2-a525-a2184cc671f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "e9278280-b981-4fd0-b1bd-94313f165e02",
        "cursor": {
          "ref": "c0551ef6-9180-4f34-8d57-e49ebbb26c64",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "de8f1c9d-8ac3-4aa1-a712-26b45c9c2b3c"
        },
        "item": {
          "id": "e9278280-b981-4fd0-b1bd-94313f165e02",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5423b258-ff95-4e53-83c3-a2c48ca2da9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "b7667944-6077-4b3a-bbef-a7d07d2d0f21",
        "cursor": {
          "ref": "684a9a26-63a8-4f9f-ad86-ded666908b80",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "eabb8a61-b4c0-4e18-a509-ce69ce7468c3"
        },
        "item": {
          "id": "b7667944-6077-4b3a-bbef-a7d07d2d0f21",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b4cf825a-44b1-4f7d-aea5-716bd32a5d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "b18b80dd-8665-4369-a0ec-1a6bece40c2c",
        "cursor": {
          "ref": "f0d3f924-af82-4e97-aeac-19aca3f39ef9",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0aca7f9a-b7b7-43d3-b05f-af109ea068fe"
        },
        "item": {
          "id": "b18b80dd-8665-4369-a0ec-1a6bece40c2c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c4f6a923-681e-4788-92cc-211c10a33e43",
          "status": "Created",
          "code": 201,
          "responseTime": 9485,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a2aa25-fc48-4a84-acbf-0fb1804837cd",
        "cursor": {
          "ref": "02e7c4e6-820b-4e4b-b8ee-db80e6e57ce2",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "641c8469-9c64-48f6-910a-5a5e03ca440e"
        },
        "item": {
          "id": "58a2aa25-fc48-4a84-acbf-0fb1804837cd",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4e0cb9ac-ca5f-4375-8e5e-c5b20dab98b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "10ad8865-db69-41ae-93ea-8e2aad1dc22a",
        "cursor": {
          "ref": "b1ba9374-c7a8-4189-83d4-47af51ccf4c5",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "575db4b5-2905-4e15-8828-5f6dc9812023"
        },
        "item": {
          "id": "10ad8865-db69-41ae-93ea-8e2aad1dc22a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2b72011d-bede-4f42-9d03-e4a749552613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "dfff324c-714d-4dc1-8559-10cd60e0f003",
        "cursor": {
          "ref": "95fd8552-f733-4287-a75e-575451c43af7",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2fbc4567-a8d2-46a9-a97b-a0a5f9d88375"
        },
        "item": {
          "id": "dfff324c-714d-4dc1-8559-10cd60e0f003",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7c997f5d-9d2b-4417-a228-6de7ba93ef66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625a8300-113c-4592-aa55-b6882f1c9ebc",
        "cursor": {
          "ref": "988fd01b-18ad-4a7c-b589-b8e33c8d76e0",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "463eb19f-d3a5-4800-b938-c8bb9e7d3c74"
        },
        "item": {
          "id": "625a8300-113c-4592-aa55-b6882f1c9ebc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "82add788-b386-48f1-8caf-db980a82d448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c10fdda-b1ce-43dd-9ca8-b26e732352d0",
        "cursor": {
          "ref": "2d08c6bc-7d3c-4d48-af9a-2a473bf144ee",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "77f54343-5a7a-4e20-a281-a18c94a41ea0"
        },
        "item": {
          "id": "5c10fdda-b1ce-43dd-9ca8-b26e732352d0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d9b26770-cb61-416f-a77a-3ce3f962e4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe24af3b-d25b-4502-a610-a45ae716e685",
        "cursor": {
          "ref": "43f17ec5-859d-4d88-8270-d26b6a6852f7",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "08ef5fbf-c0ba-4639-8b77-7d09eac25ccf"
        },
        "item": {
          "id": "fe24af3b-d25b-4502-a610-a45ae716e685",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "03f1e048-dd9c-456c-b172-1101381fc08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a4cb3f-2c40-43f8-b2c8-055d2502420f",
        "cursor": {
          "ref": "a7c9041d-46cb-4f94-8013-7d6a89eaa044",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8ba0d022-889e-4d16-8ead-c7ea2c46ca4e"
        },
        "item": {
          "id": "59a4cb3f-2c40-43f8-b2c8-055d2502420f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1a1a4dae-e626-4c86-9203-e0ead22446d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b38ca7-5a30-4020-a145-b1d03730a01b",
        "cursor": {
          "ref": "27eee594-baeb-470d-831b-285005fa2d83",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "304462fc-9dc6-40b9-a0b9-61c3288858f1"
        },
        "item": {
          "id": "f0b38ca7-5a30-4020-a145-b1d03730a01b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6a10e3d6-0f27-44dc-badd-d1279a7df564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3595857-1123-4072-99cd-5c647b94fe2a",
        "cursor": {
          "ref": "861b51b8-6518-4d18-a35b-4839e66deba4",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "33f0123b-f62e-43ed-822e-62ee7ca71973"
        },
        "item": {
          "id": "d3595857-1123-4072-99cd-5c647b94fe2a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0bc0c3bc-b228-486a-8894-9513f42dccd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b085c3-d488-46c6-b644-f856a5ebdd9c",
        "cursor": {
          "ref": "334f8bde-8c24-49be-b031-12b36e71acb3",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1fbf39cc-7ce0-4746-9044-227c6e4cbde8"
        },
        "item": {
          "id": "37b085c3-d488-46c6-b644-f856a5ebdd9c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5ddccab2-5034-4109-8f6d-aae31fe74b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d6a6ad-3bc9-4cd0-bdbe-21c6f1e7b8e2",
        "cursor": {
          "ref": "691cdd6e-cb95-4662-aac3-331a915a71d8",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "52001145-5701-4635-abdf-d25816bc009f"
        },
        "item": {
          "id": "c0d6a6ad-3bc9-4cd0-bdbe-21c6f1e7b8e2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c1259843-43ea-40ef-923d-3c84dc2ec062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2dabc67-776a-4339-80f2-2fa9dd3b3c25",
        "cursor": {
          "ref": "25000680-cf9b-4693-ace0-043795c4b93d",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3d41ab5d-5fc3-4992-aa31-414bafb2c26c"
        },
        "item": {
          "id": "c2dabc67-776a-4339-80f2-2fa9dd3b3c25",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dc381467-0a75-49cb-affe-2f2eccb423b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1e420f-a2e9-43aa-bc6e-f65cfd4a5952",
        "cursor": {
          "ref": "01951239-e6a2-4041-9789-cabd9ca62a75",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9251df7e-04c3-4b4f-8318-2bf1f266d85d"
        },
        "item": {
          "id": "5c1e420f-a2e9-43aa-bc6e-f65cfd4a5952",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "69173318-7e9d-4543-975b-d1493c9d5444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84254f2a-cdb3-4c8a-8040-c605036cddab",
        "cursor": {
          "ref": "ec9007d3-e813-4d01-8a1a-54c71fc2cf54",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "61c1f7f3-42d1-4875-9043-d9ee5bbf9a12"
        },
        "item": {
          "id": "84254f2a-cdb3-4c8a-8040-c605036cddab",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "402174d2-c87a-4b76-a5cb-1c40264c1a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa97dc6-a65d-4c4d-a1f6-73041c538003",
        "cursor": {
          "ref": "a4dae3e0-b923-4357-831d-62747f9724a8",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "19ba9ef6-187b-4302-9857-4d574b0ec2d3"
        },
        "item": {
          "id": "5aa97dc6-a65d-4c4d-a1f6-73041c538003",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1c17bfd3-cace-49ac-8245-8eda6b7057a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debf13f3-22ed-4212-849e-f5a4083211dd",
        "cursor": {
          "ref": "16c11eba-265c-4e72-817d-54b0dc5d2a5c",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8e8e32bb-d2b4-4874-ad25-c8b88ababd05"
        },
        "item": {
          "id": "debf13f3-22ed-4212-849e-f5a4083211dd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d87dea49-4b61-4cb1-b091-6e7e2822511c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8522e8ad-f356-4c29-97d6-2fa7f30aa7a0",
        "cursor": {
          "ref": "8ebf1124-73d8-44c6-b01f-b243d770cb75",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e496a7c3-d193-4cd0-abd3-decdec3400ab"
        },
        "item": {
          "id": "8522e8ad-f356-4c29-97d6-2fa7f30aa7a0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a64be9bb-bcbf-46a3-a22f-597daa155d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081ce76e-8d56-4a3c-bbbd-4543896ace11",
        "cursor": {
          "ref": "c1dd887a-c480-489c-b0cf-5367464a0336",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9e434305-1e4f-44df-ac89-63d5e4f6cea3"
        },
        "item": {
          "id": "081ce76e-8d56-4a3c-bbbd-4543896ace11",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "acf9caf6-4498-4d94-8fe7-f317d95e1852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac0f8a4-6077-4971-95da-24e855905cfe",
        "cursor": {
          "ref": "f1df4750-af7f-4ab7-a5fa-ce0e48327c8e",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9484e1b2-898a-4570-83d8-26c41cc23d64"
        },
        "item": {
          "id": "3ac0f8a4-6077-4971-95da-24e855905cfe",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a11a6dd4-d69d-48d0-ab1e-c516ab09424e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "c847a268-2dc5-4b08-b522-a765bf1cd311",
        "cursor": {
          "ref": "2c9ba645-90cf-4787-8e5e-8c1e1c3535fe",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2882aa1a-861c-421a-9a7f-ac708ee1fae9"
        },
        "item": {
          "id": "c847a268-2dc5-4b08-b522-a765bf1cd311",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "34e4cac0-1329-4c8e-a6bd-650edc4c5870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a069d8a5-5de7-450c-a1eb-0b4ba0cc9351",
        "cursor": {
          "ref": "f2919efd-7366-4600-a3a7-8f4d669b69a8",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6584ddf9-c8ed-455c-80c4-bdd2c57ea3b5"
        },
        "item": {
          "id": "a069d8a5-5de7-450c-a1eb-0b4ba0cc9351",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1458c1ca-72d6-415d-a1c0-ec5f6e59fe4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fd69f8-a39a-48d9-a078-f2c7fb10712d",
        "cursor": {
          "ref": "49d2f57a-4b97-4d55-bd81-9a4f45bacd37",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b7365369-474c-431f-8322-1e2501b27f0e"
        },
        "item": {
          "id": "29fd69f8-a39a-48d9-a078-f2c7fb10712d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cf86c16e-eca4-4332-adbf-2c664e535bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0088026-c331-4006-84d5-16cee320551e",
        "cursor": {
          "ref": "ab4f06aa-2d78-4070-929c-804158bcf3db",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3dca96e5-8905-47f5-95c2-f6d6688f0353"
        },
        "item": {
          "id": "d0088026-c331-4006-84d5-16cee320551e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "361251fb-7767-4c21-a885-113db9bf00af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a21a3b-db54-4663-9d63-bd03e9cb1973",
        "cursor": {
          "ref": "b8d6443f-a15a-4651-872c-a3dd73c648c8",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c1df20e9-03ae-46e8-814b-d80d66da086e"
        },
        "item": {
          "id": "93a21a3b-db54-4663-9d63-bd03e9cb1973",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e95c0722-0525-483b-aa2b-83fe7cc6e8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6c710b-ee70-4489-a0be-7d9fb03ff112",
        "cursor": {
          "ref": "6cd80479-4be0-4cea-a962-07655680533c",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4753508c-dcfd-44c1-98a3-42aa91677f9a"
        },
        "item": {
          "id": "2c6c710b-ee70-4489-a0be-7d9fb03ff112",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e2cffa56-794b-42c3-978b-aac95a862e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3886c467-ed5a-4d74-8667-fc2066a0f62b",
        "cursor": {
          "ref": "597c3c5e-6b58-4e23-b9c8-872eb1a9a6df",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "45cec203-c1cb-4e0d-8588-4c6bf31c6b18"
        },
        "item": {
          "id": "3886c467-ed5a-4d74-8667-fc2066a0f62b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3f7b505d-5eca-4b69-9dff-2ae3c27fe8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f71672-289b-4b17-92eb-9aefb0a1a9de",
        "cursor": {
          "ref": "478f24bf-f49e-4fb5-862e-cf1f95e438aa",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b1c3fff1-7fb1-4ea0-94c6-1dc6d5a12e29"
        },
        "item": {
          "id": "51f71672-289b-4b17-92eb-9aefb0a1a9de",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9f42fa22-9fa6-42fa-b85c-966ca304e61c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "351b201a-ca69-4783-aca5-d3cf52821e2b",
        "cursor": {
          "ref": "ae084298-09da-40f4-92d8-8d13f587e7d7",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "34d16981-532d-4036-8e7a-81dfeeba45f1"
        },
        "item": {
          "id": "351b201a-ca69-4783-aca5-d3cf52821e2b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d92b92cb-d304-496e-a53d-bd828576a6ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0677ac-930f-49ce-8267-4dd89a6eb1ef",
        "cursor": {
          "ref": "fb2c4806-247f-4b91-9d1d-d5b8d0902c17",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "98a64d63-fbd1-4dc3-858c-ee797eeb581b"
        },
        "item": {
          "id": "5a0677ac-930f-49ce-8267-4dd89a6eb1ef",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b6238f82-34d7-4779-8f0b-cbaa37c6e8e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4ae22d-e491-4dfb-a137-f1dfcf22fce4",
        "cursor": {
          "ref": "c2ba4497-5402-4cf7-ba0d-eada705df25a",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d4d71fd1-eff3-48fc-a31e-c3faeb82cb5a"
        },
        "item": {
          "id": "ce4ae22d-e491-4dfb-a137-f1dfcf22fce4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "314c9814-ddca-453f-abf7-ca7207717498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae211cf-e990-48be-a1b1-2c3b7de42f8e",
        "cursor": {
          "ref": "5c5542b9-ead7-4591-8d42-ef8301f56bb1",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c0874007-e31d-4c15-b06b-47880157db51"
        },
        "item": {
          "id": "5ae211cf-e990-48be-a1b1-2c3b7de42f8e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "54f1894e-a53c-4635-9ada-16dc36028eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad1a031-c660-4b06-b1df-34139a9dd18d",
        "cursor": {
          "ref": "0757b1d1-842f-4cdd-9cc8-0468582baa5d",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "33bd8d3a-afd5-4003-a8a1-0759e633a521"
        },
        "item": {
          "id": "0ad1a031-c660-4b06-b1df-34139a9dd18d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "647cedbe-c962-4432-8d37-44fc3d330468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa50fe6-71df-40ec-9dc2-81fa482f0475",
        "cursor": {
          "ref": "5f22ef2d-863d-4c02-b110-9aae281035a6",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e8d83dea-e441-40a7-ba45-8a78bd5214cd"
        },
        "item": {
          "id": "1fa50fe6-71df-40ec-9dc2-81fa482f0475",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ebede314-8545-4f42-a3da-530b2049698a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1e66c0-9165-46b5-8eb6-67a92984c928",
        "cursor": {
          "ref": "43e6f18f-dab9-4f96-bb61-480d948c5415",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2d0f865c-582b-4533-8465-165b8507e03c"
        },
        "item": {
          "id": "9d1e66c0-9165-46b5-8eb6-67a92984c928",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8ba436f2-5962-449a-9f50-40aeae650774",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 77,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "f9013383-1592-477f-9bd2-56cbb0fcf2e7",
        "cursor": {
          "ref": "1ca19c25-bd5c-4530-b678-4e15097ed981",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "dbceea38-21c0-4845-ba18-c12d819ff917"
        },
        "item": {
          "id": "f9013383-1592-477f-9bd2-56cbb0fcf2e7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "af1b3c74-9ce1-49ee-9281-bbf9ab90126f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f12cfc-f141-4b00-bfe9-49cb4728c029",
        "cursor": {
          "ref": "b6f7de01-efc1-4a25-8109-2c4d71590aad",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "483c1e8a-9ff2-4e94-b53c-2d5c9329ea2e"
        },
        "item": {
          "id": "99f12cfc-f141-4b00-bfe9-49cb4728c029",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f8480757-7c22-4db5-a830-afb1a3e5ff23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3eec19e-885b-468a-a326-20728c406779",
        "cursor": {
          "ref": "654b9a0c-a611-4d24-93d2-d54be56ae93c",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6b6a811c-1f98-44b9-a00e-99898db858df"
        },
        "item": {
          "id": "b3eec19e-885b-468a-a326-20728c406779",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0b09a777-225f-4ec3-b1d2-45ee628ce4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d1b2cd-8994-4697-ad2a-9d37b080fce7",
        "cursor": {
          "ref": "04b8051a-40ba-436f-86ac-199699bc18e3",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f4ce56d3-b69e-437c-ac1d-61b0cade1aed"
        },
        "item": {
          "id": "c9d1b2cd-8994-4697-ad2a-9d37b080fce7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d542841c-b910-45c3-9ccd-5ba57334deca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4f497f-6f8e-46f1-983f-a61cad23c3e7",
        "cursor": {
          "ref": "e84e090d-5cbe-4b49-a0fd-987600b3db2c",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "27d0fa03-b020-48ab-b88b-98c229983c08"
        },
        "item": {
          "id": "bc4f497f-6f8e-46f1-983f-a61cad23c3e7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "04c233e6-eeb2-4ce8-9c78-751a19c6e6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69af3da-142c-443a-9292-f01fcdb1391d",
        "cursor": {
          "ref": "879a3097-82ef-49e9-9ea3-91ab109ec7e0",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "edba479a-86ae-4e7e-84b6-20a0a2cec9e7"
        },
        "item": {
          "id": "d69af3da-142c-443a-9292-f01fcdb1391d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8e22aaad-047d-46f5-b645-80aed14f02a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb94f02-bce9-4f8d-8dc2-ca8953354cc0",
        "cursor": {
          "ref": "281ee4b1-cc55-4e24-9901-49d7e6662496",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4fd27ba9-6087-4c7e-abbc-ca8a9148c99d"
        },
        "item": {
          "id": "beb94f02-bce9-4f8d-8dc2-ca8953354cc0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0bf59857-d051-4f2d-93f1-012858831571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717f03d2-0d33-4916-be8d-47a728a25895",
        "cursor": {
          "ref": "8941ae4e-3d87-4923-8903-6d4741e0553c",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1ae2ada8-e293-4f9d-b657-9b986763dd74"
        },
        "item": {
          "id": "717f03d2-0d33-4916-be8d-47a728a25895",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9c96efb4-75eb-43eb-be34-b02436d3e034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec8e1df-55d8-4e9b-a9b8-71a672a0f612",
        "cursor": {
          "ref": "2cce753d-4fed-42b0-bcc5-7458c01da3a8",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "02af5354-6cb1-44d3-9b03-dd8e9491732f"
        },
        "item": {
          "id": "fec8e1df-55d8-4e9b-a9b8-71a672a0f612",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d0c24443-57da-4980-9558-81a6d4fa3681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd09cba-3ea7-4c3c-bcde-735ec9bcf4b6",
        "cursor": {
          "ref": "8ee0a2f1-83d3-438e-b0e1-3564e96573cc",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c2f99c87-b20f-488f-87db-3e816379c68e"
        },
        "item": {
          "id": "5cd09cba-3ea7-4c3c-bcde-735ec9bcf4b6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ab71b5a7-c6a3-4407-b724-f9907612cf3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e9d579-efd6-474d-ae1c-4a785fe5b29f",
        "cursor": {
          "ref": "20142b68-fd21-49b0-8dfc-b3fd4649043b",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4cc7a5f6-7fe2-4386-9c9a-a7cb281114c4"
        },
        "item": {
          "id": "07e9d579-efd6-474d-ae1c-4a785fe5b29f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "97162e04-4462-4b86-9f71-a8054864a5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fc705d-2150-40d5-9f70-84b0a7da205b",
        "cursor": {
          "ref": "5359384e-0ded-4a19-85d5-55aac3c88a01",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "289385ad-2299-401c-9219-726539c8cdf2"
        },
        "item": {
          "id": "b3fc705d-2150-40d5-9f70-84b0a7da205b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "09d90c74-6bde-43af-b6e4-e690d1c8303b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d0b43e-70f2-4087-9ecd-d4ef38c7575a",
        "cursor": {
          "ref": "a0c6a3f1-5255-495e-9b47-f00dd362fbea",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ca6b2a1c-8ee1-4f08-87d1-67e088a9d59e"
        },
        "item": {
          "id": "c6d0b43e-70f2-4087-9ecd-d4ef38c7575a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4bbeca39-8671-4941-8cf9-dfa9b0553e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7851c09b-97a4-47f7-bbd7-5264baa6dac9",
        "cursor": {
          "ref": "17359347-e956-4f80-97b9-4314a683472e",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0e80f893-b482-44d2-8afb-47813963a92f"
        },
        "item": {
          "id": "7851c09b-97a4-47f7-bbd7-5264baa6dac9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8bddb5ae-9a7f-48ba-b89c-7545b130f880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83dae18d-94bf-4304-8bad-7ea2a44545e7",
        "cursor": {
          "ref": "ff8245b5-fff2-4f67-9359-c3ef66ef483d",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3f4039d2-cbe3-434e-8658-ec1cc617285e"
        },
        "item": {
          "id": "83dae18d-94bf-4304-8bad-7ea2a44545e7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "291ce560-337a-463b-a564-6f9f43eac758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48839eae-bf6b-4563-a4d0-3786e134eed5",
        "cursor": {
          "ref": "be2012c4-68a2-4f1e-bc7e-c5145a0e3a21",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "071d2e72-f07a-46df-93da-265e9886531f"
        },
        "item": {
          "id": "48839eae-bf6b-4563-a4d0-3786e134eed5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "939e790f-01d3-4bbd-8c86-9eb806985586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3ec428-ccea-4dfb-b79f-189580f85b84",
        "cursor": {
          "ref": "0329f0ee-ec12-4d5e-956a-973fecde7670",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3dd94e98-6b61-47d3-a117-a432922a4c60"
        },
        "item": {
          "id": "3f3ec428-ccea-4dfb-b79f-189580f85b84",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "95bd4b18-68fd-4a99-905b-a95c4f291f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6918b0d-4379-4c98-ac6c-100c5dab9397",
        "cursor": {
          "ref": "ffd7f275-eb15-4853-b6f4-4d223dc6d7ea",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "332373df-7620-4704-bfd0-ed6d2dae30d3"
        },
        "item": {
          "id": "a6918b0d-4379-4c98-ac6c-100c5dab9397",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e61a6951-2cf0-4468-a9c9-dc9e180ffe9b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "0157c2c3-8a8e-4a34-a643-7103c847b749",
        "cursor": {
          "ref": "84515830-babe-4692-abf6-0c260f0a9335",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "12469cfc-20f8-4861-9fb0-364b436affcd"
        },
        "item": {
          "id": "0157c2c3-8a8e-4a34-a643-7103c847b749",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3a900057-29ca-41f9-ab01-78c0fdb160dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6287bafb-8328-4592-a231-0f6991657ebf",
        "cursor": {
          "ref": "74dada94-a32b-4c25-84e2-f046c734d0cd",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d9ccd0f2-706b-4a14-a75c-dd2e809b8070"
        },
        "item": {
          "id": "6287bafb-8328-4592-a231-0f6991657ebf",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b3cf01d1-1d66-439a-bd27-8cbb4c305ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3fc3ec1-b1a0-441a-ba91-f5da0e2c82e3",
        "cursor": {
          "ref": "ac823a45-eb25-421e-971e-52e8dbebc93b",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c5559351-101c-49ea-95cf-98a0c9f3ec9e"
        },
        "item": {
          "id": "d3fc3ec1-b1a0-441a-ba91-f5da0e2c82e3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7e2d4215-154a-434b-928b-e0608cbbf64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02909d1e-9c6d-4942-81cb-cb83465e12aa",
        "cursor": {
          "ref": "463aeeab-eeed-4f99-9920-ea6de06a3f10",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3aff18a5-42f8-4ab1-bb37-e9244405ca32"
        },
        "item": {
          "id": "02909d1e-9c6d-4942-81cb-cb83465e12aa",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "54db6139-3f11-4cb1-92ea-dece9ebda17d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509905c8-6526-4425-9a7e-cd7565440b1c",
        "cursor": {
          "ref": "00963a2f-52a2-4bfc-912a-1691b82ca1c0",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2b2fce66-fd9e-498a-91fa-7dcbf9a52c87"
        },
        "item": {
          "id": "509905c8-6526-4425-9a7e-cd7565440b1c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0f3caee6-0f22-4f49-8e06-3d67f0796816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899943db-c506-4aa9-a91e-c7e15c293592",
        "cursor": {
          "ref": "870ffa27-4385-4a77-b92a-2715c6d64f4e",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2d1a06c8-73fb-43f8-aa04-dd3fbb3c8b8c"
        },
        "item": {
          "id": "899943db-c506-4aa9-a91e-c7e15c293592",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5801b93b-a154-465a-9c93-daef7cb43b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa8b8d0-9089-4794-a75c-65b11440b5d2",
        "cursor": {
          "ref": "0022f7fd-f6f0-4bfc-91bb-f2c28552daed",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c8a93d14-689d-47f7-b0a8-07380fc86517"
        },
        "item": {
          "id": "dfa8b8d0-9089-4794-a75c-65b11440b5d2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5719ef02-767e-430d-b7f2-1fe4f29e3519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182de2f5-a354-41e1-af6f-415b57650671",
        "cursor": {
          "ref": "8edbcc5e-7eff-4eba-b3cc-d98cf09b0656",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8663b18b-802e-41d0-af5a-dcc31bc1900a"
        },
        "item": {
          "id": "182de2f5-a354-41e1-af6f-415b57650671",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "aa2db518-0a77-4d39-898e-862fc83dab6f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "c600c3cf-1125-4b01-b31c-ca04627e6165",
        "cursor": {
          "ref": "96a42965-c1e8-4061-a9a4-64cf97ada4eb",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "32b2ac20-cb49-43ae-b822-be2839f75a8a"
        },
        "item": {
          "id": "c600c3cf-1125-4b01-b31c-ca04627e6165",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "378734b4-2f8d-4633-9ef3-1e1eb84a95bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0deac554-4933-4124-9e4f-946593a57877",
        "cursor": {
          "ref": "a0bd3827-c9e2-4d01-b375-1fa5ff228bcc",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f493dfbc-99e7-48cb-bc56-9f63e6278ad8"
        },
        "item": {
          "id": "0deac554-4933-4124-9e4f-946593a57877",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "aaf80a9b-9cbf-49ce-a609-cff04045fca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8fa5f8c-4761-48fe-9698-777d221c4b5d",
        "cursor": {
          "ref": "9d7270c8-9974-40b2-b94e-e4b9b30c2b67",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6530819a-f44b-4e35-b11f-e8bf6c01ba98"
        },
        "item": {
          "id": "f8fa5f8c-4761-48fe-9698-777d221c4b5d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "689056bc-f631-4feb-930d-ed86a49d21b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e507303f-e871-46da-b796-0e4d88fd085c",
        "cursor": {
          "ref": "5efc73f8-7284-4e21-8220-4f353d71cdcf",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "fc24d59f-2062-4552-8bc6-d89380366033"
        },
        "item": {
          "id": "e507303f-e871-46da-b796-0e4d88fd085c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a33cd56e-0642-4754-bdb7-36b478361614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb2c3d8-2bf4-42c0-bfc8-402f10cfb56e",
        "cursor": {
          "ref": "00504712-3534-4866-9cf2-3674c7d8c34d",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "bd1b289e-d109-46d2-a34c-c2e5571ecc6d"
        },
        "item": {
          "id": "5cb2c3d8-2bf4-42c0-bfc8-402f10cfb56e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c9520b24-582a-48f8-809f-e3742969bd03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4bd120-dd5a-45a0-bb44-47419e3ea241",
        "cursor": {
          "ref": "09c8846c-07c2-4c45-bb86-aac275909259",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b7b5fe93-73cc-4aa9-9f6d-b81762ab6868"
        },
        "item": {
          "id": "7a4bd120-dd5a-45a0-bb44-47419e3ea241",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d8aa2cec-27c4-4edc-b332-e41ac7506f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eedd00a-243f-4d4b-ae94-b1fe8acbc769",
        "cursor": {
          "ref": "d6e0112b-cf4b-4749-ae1f-f9bd9d8a7d5e",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "81857b16-e5d7-4a57-b308-02e725327eba"
        },
        "item": {
          "id": "2eedd00a-243f-4d4b-ae94-b1fe8acbc769",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4c26fc89-8947-4dad-9596-b5f723f3e7d6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "952abae0-97c5-4d24-ab4a-24cb37534dcb",
        "cursor": {
          "ref": "065929d4-b609-4fe3-973e-31d41a8953f6",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "171ff726-c4e2-41e7-b663-6505abdabadb"
        },
        "item": {
          "id": "952abae0-97c5-4d24-ab4a-24cb37534dcb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "3f1adf6e-8aea-4565-9c7d-fa978ffc92bd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "8981c19f-31dd-4147-bdb6-e20a6c5b31f5",
        "cursor": {
          "ref": "b96a19bf-b2bc-433c-9b20-b343058a61f8",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "39c36e58-01d7-4618-af9c-02086ebdfd32"
        },
        "item": {
          "id": "8981c19f-31dd-4147-bdb6-e20a6c5b31f5",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f3aa43a2-7a59-4315-90d8-d47fde886c80",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "46921739-7559-4f99-96eb-c7743e2d6237",
        "cursor": {
          "ref": "106dd97d-836a-47fa-abee-c9b73cfbca4b",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "90c3c9ec-83a8-4721-9af1-5f1f9d7fbe26"
        },
        "item": {
          "id": "46921739-7559-4f99-96eb-c7743e2d6237",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "53ad1855-31db-4449-81cf-e77ef80226b5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 47,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "92d7fbfb-ccaf-4404-aa33-956c412f462b",
        "cursor": {
          "ref": "70c8e4e0-2249-40cf-96fd-27b6c3c1ae48",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4a9777ba-b22a-43b4-b54f-5eecb6faf41d"
        },
        "item": {
          "id": "92d7fbfb-ccaf-4404-aa33-956c412f462b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "eb43e13f-bae0-4cc7-9343-5c3cb71e28be",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "8257ea68-bee5-4f92-943e-9edca04aa4ae",
        "cursor": {
          "ref": "270da273-9fb1-4f93-a8f6-ff16f5ddd5d2",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2db907fa-b431-42ff-bb10-6dde73c34e0e"
        },
        "item": {
          "id": "8257ea68-bee5-4f92-943e-9edca04aa4ae",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "25a6dfb3-d184-4fa6-b785-6ec7c18b4b37",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "3c22a00f-22de-4819-9984-df052fb649da",
        "cursor": {
          "ref": "6c7d317e-498f-4ede-a39e-8286f9e55ec9",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f447e176-6248-44b8-b46b-68298b5c47ab"
        },
        "item": {
          "id": "3c22a00f-22de-4819-9984-df052fb649da",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "db18105b-50fe-4065-a728-1993e0c3ac65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699be47a-79ac-4b82-970a-e22ffaa6b058",
        "cursor": {
          "ref": "120db077-5f0f-468f-a37e-a79a74442f34",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d248b4e2-3f0d-4e62-8271-1a2f76dafc5e"
        },
        "item": {
          "id": "699be47a-79ac-4b82-970a-e22ffaa6b058",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8b2d0290-6c9e-45fd-94ae-5c9db14b4ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b04aa5-062f-4966-9c22-c3c6ebf3dd75",
        "cursor": {
          "ref": "190d1dda-4bd4-401b-8212-4e1b09d8d52a",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9dd29f03-926c-4de6-9bea-ae152cc1988e"
        },
        "item": {
          "id": "29b04aa5-062f-4966-9c22-c3c6ebf3dd75",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "99e302df-5490-4323-a4cd-14a44c4bf3af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e996be87-e08e-48e0-ad58-be1662b3e497",
        "cursor": {
          "ref": "2c250a13-822d-4d8e-a8fa-8741cbdf2dc3",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "590b49c2-2e95-4845-a0aa-ca9fc8157ed1"
        },
        "item": {
          "id": "e996be87-e08e-48e0-ad58-be1662b3e497",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ad9696e3-3f7a-4f41-8690-30ee62c871bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71613ee4-7745-460f-a556-d4b76fdce762",
        "cursor": {
          "ref": "152e682e-307d-42b9-945b-2a513b5023ec",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3fdf9bf6-6596-4018-a0fe-ded35dafb73a"
        },
        "item": {
          "id": "71613ee4-7745-460f-a556-d4b76fdce762",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ff2f8cc4-35f9-4adc-b5fa-dbfdcee8425f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc34b2c2-41f0-49a9-994d-3776b73f52db",
        "cursor": {
          "ref": "0bea20b1-52cf-4121-9dc9-efe2b8d9c6ac",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7541fa13-fa1c-4ce4-922f-00192452bb12"
        },
        "item": {
          "id": "dc34b2c2-41f0-49a9-994d-3776b73f52db",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e48144c0-22f7-498d-8c3a-7f6f7fdafe3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a2a530-a874-4986-a663-3b5b54538ed0",
        "cursor": {
          "ref": "ed0aaa75-16f5-4991-9c1c-0b5049f899a5",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "765dcfb9-6199-413a-ae7a-c898bcd802d2"
        },
        "item": {
          "id": "13a2a530-a874-4986-a663-3b5b54538ed0",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a334febd-667a-4626-9e99-e350b030dba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c7f3ac-310d-4008-9fd0-87c594ea77f3",
        "cursor": {
          "ref": "687bd111-0acf-4e29-bb21-0504a073bf14",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9b2d6ae2-2326-4b5f-a1ee-0375865f2765"
        },
        "item": {
          "id": "38c7f3ac-310d-4008-9fd0-87c594ea77f3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2acd9684-ef91-48c9-a678-d45a1270473b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398f2b23-adc1-4abc-bcb1-eb5eb24d091c",
        "cursor": {
          "ref": "ad264b5d-32d6-47dd-971e-a0d8640f9bdd",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "cfc94507-1b59-45a1-9464-840c5f971ca8"
        },
        "item": {
          "id": "398f2b23-adc1-4abc-bcb1-eb5eb24d091c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "540b4d5c-0ed4-4723-b83b-94b1256a13fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4177cf8d-d0db-46bb-aa1d-ea3654498501",
        "cursor": {
          "ref": "8200053e-6176-4e21-b3a2-aa7d825bbe8e",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "edb4fafe-a8aa-4c71-a591-45cb2f5876e8"
        },
        "item": {
          "id": "4177cf8d-d0db-46bb-aa1d-ea3654498501",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a74dac52-1444-4db2-816a-5d1e684fbb43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f258779c-0dd7-48bb-8351-1c99da453554",
        "cursor": {
          "ref": "676a51f2-ebe4-41c6-a432-5915d426d789",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d621bb11-72d8-42a4-98a2-d23172b033a3"
        },
        "item": {
          "id": "f258779c-0dd7-48bb-8351-1c99da453554",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e1d27b3a-b654-4944-b3b3-f3b961833839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5106493b-8fad-43c3-9395-eb5c9cb61f99",
        "cursor": {
          "ref": "7a87cc8e-52f8-47b3-abda-f8e85f7681ef",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "939ff605-cb39-4819-b6b8-a7d912cb5bc2"
        },
        "item": {
          "id": "5106493b-8fad-43c3-9395-eb5c9cb61f99",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "75bd989d-5698-457a-961e-40f129d95c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7436ce61-6dad-4696-8cf2-33ac9cf9927d",
        "cursor": {
          "ref": "9542ef0b-d0b3-4d3c-84ae-c4e0bb3d839b",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f3c8b568-d5aa-4c6e-a0e2-14e70a8a7ce7"
        },
        "item": {
          "id": "7436ce61-6dad-4696-8cf2-33ac9cf9927d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1a7248cb-9dc8-4be9-b703-eb93c39dad35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea30d8b-5345-4540-a083-09417830dc8e",
        "cursor": {
          "ref": "9b5a2978-c869-4204-9364-d8c2686aa28d",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "299ec9ab-361c-4d1e-a977-a8b846ae9771"
        },
        "item": {
          "id": "fea30d8b-5345-4540-a083-09417830dc8e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4a79539e-3e15-47c2-a346-390d6d269006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220f881f-9839-49af-88b4-a11780786fcf",
        "cursor": {
          "ref": "1cb22fea-87dc-4243-bc47-8acb4c979c05",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "41976859-4c06-4ecc-826a-4e49af03168f"
        },
        "item": {
          "id": "220f881f-9839-49af-88b4-a11780786fcf",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b2c7e30d-455f-4215-996c-94caf4569986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8f1981-db3c-457c-a54e-d205baabcf1e",
        "cursor": {
          "ref": "f06310a1-3a53-40cc-87ce-8b36b3ae42f1",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "912ed1dd-98e6-402c-a304-e99aca0f586a"
        },
        "item": {
          "id": "9c8f1981-db3c-457c-a54e-d205baabcf1e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f879edb9-3dfd-4a1c-abbe-c06246812b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10bcc0f7-2137-427d-8551-2ebf9bc71abb",
        "cursor": {
          "ref": "7c33a512-580c-4ea3-b06d-96f3d96290fc",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3a4eda76-7771-4f1b-a750-f6735e722d34"
        },
        "item": {
          "id": "10bcc0f7-2137-427d-8551-2ebf9bc71abb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4746c08a-d49c-4746-b873-83c57cfb97fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0bdeb6-42c6-40bf-8e94-21141a8d0bd0",
        "cursor": {
          "ref": "a1cd5fdf-4509-4568-8725-aea5c080744e",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b81de94f-3436-4e91-95fb-466eeb8bb14b"
        },
        "item": {
          "id": "2e0bdeb6-42c6-40bf-8e94-21141a8d0bd0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ace28b61-1ef9-41b0-aeca-4591abec9ec1",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "857caac6-9ee8-4c3d-8ae0-7297c8cb94cf",
        "cursor": {
          "ref": "1173c6aa-f308-42c1-8d10-51f1981f2284",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "46251681-3126-4c8b-be34-52ecb8f6d000"
        },
        "item": {
          "id": "857caac6-9ee8-4c3d-8ae0-7297c8cb94cf",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "676aca5d-b863-4978-a422-faa65bcd6af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc77171-8bf1-4269-8eee-16a7f184507e",
        "cursor": {
          "ref": "4d840b18-001b-4e8f-9c69-fd0c5507c25a",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "52eb0805-b052-408a-9235-675b631a9d62"
        },
        "item": {
          "id": "5dc77171-8bf1-4269-8eee-16a7f184507e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ad4397c8-6556-46f2-8229-198c75c8f6bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4e0908-4d5c-4eff-899c-4608df1e0c85",
        "cursor": {
          "ref": "87b55bbb-5f29-490d-8acf-6ed6ee92fb14",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "05363129-8269-4d2f-b62b-280c55d4dc87"
        },
        "item": {
          "id": "5c4e0908-4d5c-4eff-899c-4608df1e0c85",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d7fdd6db-eb75-431f-a69c-c8eb832fa149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9f57df-ee50-4037-b860-eb35d631be61",
        "cursor": {
          "ref": "b199469c-2cb2-4863-a4cd-77d945f0f5d8",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f446bcb9-898b-42ba-9daa-a5e6cf0b0328"
        },
        "item": {
          "id": "0f9f57df-ee50-4037-b860-eb35d631be61",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "05226e0b-fa81-4ec8-af39-96365419ffab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ef93dd-b73e-4f6e-9aff-1924c7517e91",
        "cursor": {
          "ref": "c00cfdd5-0d4f-423d-a9f6-dcbd66959451",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "894564ad-0d1c-48ef-ae3d-9b04a774effd"
        },
        "item": {
          "id": "75ef93dd-b73e-4f6e-9aff-1924c7517e91",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "48e26bf8-1f6e-49e5-bc13-1dbca02c2f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2094fecc-fc74-40e9-86c5-443f2625b4e4",
        "cursor": {
          "ref": "d69d7aa4-bb7c-44f3-bf31-e9ab5362d56f",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ee01fad0-4e7d-48cf-93ad-31f3798a2d84"
        },
        "item": {
          "id": "2094fecc-fc74-40e9-86c5-443f2625b4e4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "db96e7fc-dd65-44e7-9f48-f25b92f26f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296e0cd0-2dfd-4235-8e95-ec5106f3a91c",
        "cursor": {
          "ref": "ae7aec21-ce87-4f6a-babe-769898ae3569",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4d74d4b4-cd9f-425a-a418-3bd8d7c8d902"
        },
        "item": {
          "id": "296e0cd0-2dfd-4235-8e95-ec5106f3a91c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c5f42bed-a312-4fb8-ac07-8bbbf27d69df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be07ca6-e58a-4059-ad1f-09c656f7db95",
        "cursor": {
          "ref": "a28a2d84-67d1-4143-a9a1-ac7c5a7b04dd",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "559669c6-fa2d-4005-9d39-83fef99d1cf9"
        },
        "item": {
          "id": "4be07ca6-e58a-4059-ad1f-09c656f7db95",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "994e7d90-c46b-4022-8904-0fb9725e66f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd361d4-5f62-4663-bc1d-e592b96d5d4c",
        "cursor": {
          "ref": "7afb9dca-6885-42c8-8de7-96b7a76f6f7c",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "09bf5788-2b62-4444-83b9-f7c172dc6d62"
        },
        "item": {
          "id": "fdd361d4-5f62-4663-bc1d-e592b96d5d4c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9f72f0e3-a3f2-4655-92dd-e492d5cb0231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c5808d-d8ca-464b-8e4a-348b7c16c153",
        "cursor": {
          "ref": "40a6df31-9dce-4ba0-ad68-765d32bfdab8",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f77a8f9a-bd74-455a-873c-605048c593c0"
        },
        "item": {
          "id": "23c5808d-d8ca-464b-8e4a-348b7c16c153",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4094a0cb-ede9-4106-bf34-5880900680c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78cbf0b-f747-400e-8894-665abd92923a",
        "cursor": {
          "ref": "0db400d3-b7fe-492e-b137-f1de6164287a",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d7c60649-912d-4b13-bd75-a62fe43b46b5"
        },
        "item": {
          "id": "c78cbf0b-f747-400e-8894-665abd92923a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e709d0e3-ddde-4c4c-b036-678a43fc0127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72ef641-9157-4b43-9b3c-0af217cbf90a",
        "cursor": {
          "ref": "3d8d924d-757d-45b3-965b-f00c4d284d2a",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a79b8cb5-71f0-43f3-8b45-c7d2124ddd48"
        },
        "item": {
          "id": "c72ef641-9157-4b43-9b3c-0af217cbf90a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3b58c638-1ed2-41a6-ae58-f4a71e23a54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ca06c0-4a40-4da3-9b96-8a10fa684308",
        "cursor": {
          "ref": "9976f436-e881-4ba5-93e9-97ca5abccb90",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e3d4762b-e9af-4949-a2eb-8027355b6d86"
        },
        "item": {
          "id": "f5ca06c0-4a40-4da3-9b96-8a10fa684308",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2780a9aa-d6d4-43bd-a202-9ba982be042e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ada2445-d7a4-4837-a67e-01b49f880ffd",
        "cursor": {
          "ref": "b43cea53-08ac-4699-8f3d-ec01c2f2ca9e",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "aa76d741-80ef-4539-bbf3-e1a9befdb40b"
        },
        "item": {
          "id": "1ada2445-d7a4-4837-a67e-01b49f880ffd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "77e817ce-8a8f-4377-a949-eda06a637de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5372ec-4376-4979-862b-d8ec6a2db015",
        "cursor": {
          "ref": "50ef3c72-9c5f-44d9-8406-2d029d1166d7",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c10ef5c7-2e89-4c7a-bdde-08a08983c7a3"
        },
        "item": {
          "id": "9b5372ec-4376-4979-862b-d8ec6a2db015",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ca862346-c365-49b0-8362-d8035f7502eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8541f9-5cd9-40a2-b7dc-c13a296b6bfa",
        "cursor": {
          "ref": "9fdbf4a1-970f-4230-8817-852adb674ba3",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "965cac18-da82-4b36-967b-33e5b2050a2c"
        },
        "item": {
          "id": "1e8541f9-5cd9-40a2-b7dc-c13a296b6bfa",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fbbc5e63-9213-4eb5-897e-4c88d5d4fe12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12dd52db-f32c-4971-9f74-45524590b3e3",
        "cursor": {
          "ref": "5c68d415-cce7-4f2f-84be-e03c9cb27d65",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9be86aca-a3b4-44ed-b817-277def3eafa8"
        },
        "item": {
          "id": "12dd52db-f32c-4971-9f74-45524590b3e3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5dfd05db-8be5-4c80-a954-7bf29392826b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e17ef60-185e-442e-9e07-005dcf1871c4",
        "cursor": {
          "ref": "bb284e44-ba1d-4cce-8a87-e1586b7eb2bb",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9fb10b5b-aff8-4141-b961-781b215d5b87"
        },
        "item": {
          "id": "4e17ef60-185e-442e-9e07-005dcf1871c4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c1892733-c1da-48a9-8f35-6ec779d82df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52378c4-c3dd-49b4-a4c6-7ee0ed302dc3",
        "cursor": {
          "ref": "ef344ed8-5d01-4a52-b33b-fcd36ea0ed1b",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9109fcaa-5cca-4728-8e1f-7b74ababa305"
        },
        "item": {
          "id": "c52378c4-c3dd-49b4-a4c6-7ee0ed302dc3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e669f507-811d-4984-8438-33177f1a5614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb319e5-8be7-4ce9-bc30-82771cc60ab6",
        "cursor": {
          "ref": "e0ea1a3c-fdf0-4000-a10a-9d2c13db4ced",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "bc8cc423-b640-4008-a3a7-13203bc911e0"
        },
        "item": {
          "id": "efb319e5-8be7-4ce9-bc30-82771cc60ab6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d732e457-56ca-43e2-990b-da39aaef1385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0786257f-9ddf-48ed-908f-6a662033c503",
        "cursor": {
          "ref": "49a0a3e7-addb-49c1-8d76-e565c0c9403c",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2a80ef21-7c8b-4e43-bbff-8f4416b4d34d"
        },
        "item": {
          "id": "0786257f-9ddf-48ed-908f-6a662033c503",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "66fefe43-874d-4586-a047-e9c337f9b564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f977e483-d8a2-416c-b25b-a153b4fcde8f",
        "cursor": {
          "ref": "8395b2cb-80c8-4810-ba00-53cd330dd49c",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9a2479ea-7416-47fe-880b-d8c9ca1ac15e"
        },
        "item": {
          "id": "f977e483-d8a2-416c-b25b-a153b4fcde8f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8ca096ac-9936-420e-bcfb-9b27ef3bad84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b74abca-063f-4c76-ba9f-db9c7a3f5bf4",
        "cursor": {
          "ref": "f64dadf0-47a8-4817-bb95-c9725adc37d7",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1dd3a760-26a1-47ce-9211-4af440b2fb60"
        },
        "item": {
          "id": "6b74abca-063f-4c76-ba9f-db9c7a3f5bf4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7e0f9e36-1f59-4d1d-8c2a-6700eb609fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44ba6b3-b175-4d5c-a3fe-381cafc90425",
        "cursor": {
          "ref": "bb49110c-3884-497f-ac9e-692637f7a693",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d3dc1ec7-c782-4e06-8263-913601ff976a"
        },
        "item": {
          "id": "b44ba6b3-b175-4d5c-a3fe-381cafc90425",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "264250fd-c49f-4ab8-bccb-88af6a4b8199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144e9626-9d41-4115-b25c-22a36b4be684",
        "cursor": {
          "ref": "3e403002-c29c-4892-acb4-a2b384988469",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "83680a6c-4e78-4601-ac12-5771f321d919"
        },
        "item": {
          "id": "144e9626-9d41-4115-b25c-22a36b4be684",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "65826543-3d0e-4449-b8b4-fb363e8d191c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b33caba-c041-4f64-834c-0487c2b560be",
        "cursor": {
          "ref": "ad292034-b20e-4ae5-9842-f8d355848c27",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b3f5079a-c6ae-43e4-999f-133b8fb9858d"
        },
        "item": {
          "id": "4b33caba-c041-4f64-834c-0487c2b560be",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3adbb022-2ac9-457b-9e6e-e7e869daa3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce396e20-1759-4ac4-9eb4-a9b1d7f983b8",
        "cursor": {
          "ref": "bfcaa647-a644-4d5b-a48c-17123c8cf298",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "909ae457-589b-4826-995f-47be26887d01"
        },
        "item": {
          "id": "ce396e20-1759-4ac4-9eb4-a9b1d7f983b8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a0ddf57f-56b7-41b9-a673-34513ef61196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e7a1c1-2df7-412f-a473-4bfc0dd5662b",
        "cursor": {
          "ref": "5bc80784-4bed-46df-aebc-542ffd7b554b",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3243f66f-48ac-466a-8448-79e93a1249f8"
        },
        "item": {
          "id": "c6e7a1c1-2df7-412f-a473-4bfc0dd5662b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5095ff74-89c2-4d89-851e-d8376aa96793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6944dcba-b656-4ee6-a35f-6b5d2421fd5d",
        "cursor": {
          "ref": "07be3787-9b26-4767-a06a-033ba2bcfd2c",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c6186fc3-961f-414f-81e7-897fe1cd2362"
        },
        "item": {
          "id": "6944dcba-b656-4ee6-a35f-6b5d2421fd5d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "73ae8952-9304-4ea2-a84d-ff8dc779f783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e9984b-25a5-4bc9-875f-1e7e34acc1d5",
        "cursor": {
          "ref": "ef4a0a6d-b9e1-4b48-ab65-8f0f7b12c3e0",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a165571b-7847-4783-9aad-c9e679c8d6f3"
        },
        "item": {
          "id": "93e9984b-25a5-4bc9-875f-1e7e34acc1d5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a08c04eb-ce87-4e09-93d7-527d7530d984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2596c4d-323f-42eb-8c53-618660db0001",
        "cursor": {
          "ref": "257a08eb-f54f-477b-ac0f-f2e69f0bc70e",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9be43e0d-486f-4f09-bfd0-287f158864ab"
        },
        "item": {
          "id": "d2596c4d-323f-42eb-8c53-618660db0001",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "20da8a4d-ba84-47d2-b6e8-cb654437f43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa84d2a-4299-413f-a074-793a028c68a6",
        "cursor": {
          "ref": "68fdbb30-e79d-421a-a699-0425a6f97b8d",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1ca12f0a-048f-4694-8f47-5ffa58745c2a"
        },
        "item": {
          "id": "7aa84d2a-4299-413f-a074-793a028c68a6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6deed3b8-f7e2-484b-be23-ce2a00038864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b46d9a4-00a6-489f-ab5e-cb1a5f035986",
        "cursor": {
          "ref": "72c9e622-27d1-4ec5-8ef1-a79960de00a9",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4e379970-78e1-4403-b2ce-67f3e1bfdcfe"
        },
        "item": {
          "id": "1b46d9a4-00a6-489f-ab5e-cb1a5f035986",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1686d8de-0a9c-4611-8187-138eb6275026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3755456a-d051-4998-b335-3fab93b1afe0",
        "cursor": {
          "ref": "bb71607e-2dd7-4f08-b44a-2f3c2466775b",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2901e36b-de5b-4a4c-8570-95598c884e85"
        },
        "item": {
          "id": "3755456a-d051-4998-b335-3fab93b1afe0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "100d2162-fbff-461f-8ef9-1c4422d9f86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ac74c7-b0aa-4138-9258-03b0a333c242",
        "cursor": {
          "ref": "c802c757-efae-421a-b3a3-41717a74c39c",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d7bf003c-b29f-4fe2-b3b1-1dfae7665c9a"
        },
        "item": {
          "id": "14ac74c7-b0aa-4138-9258-03b0a333c242",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "61c93d08-65d7-44d5-952f-9e95edf842c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163dd20b-f9e2-4bf2-830e-6dfa52fc74ff",
        "cursor": {
          "ref": "3d255754-eead-4665-b35e-6692845edd2e",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "675c67db-7215-419c-95bd-55b43c8f5f5c"
        },
        "item": {
          "id": "163dd20b-f9e2-4bf2-830e-6dfa52fc74ff",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cec727d0-8186-4569-834d-0e364d65e126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce622c5-caa3-4ce2-8904-a085900f8bf3",
        "cursor": {
          "ref": "d02e4c15-9871-465b-890b-235b5d22d2c2",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a47ae900-3ed1-42ca-82b2-86b13ad3d1fe"
        },
        "item": {
          "id": "8ce622c5-caa3-4ce2-8904-a085900f8bf3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "93800f39-e2a6-4704-8da2-67bb113da706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd9d01a-74d4-4cad-8092-569d7a31c64b",
        "cursor": {
          "ref": "1c218b65-0937-429d-ad25-aa7b9676b8a4",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f3370bdf-4ec1-4dc3-9921-7e92fc5cd175"
        },
        "item": {
          "id": "ecd9d01a-74d4-4cad-8092-569d7a31c64b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "24df32f6-00e3-4025-a994-e70371a52e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5156459-2517-429f-87ce-6ff606a9c452",
        "cursor": {
          "ref": "8c469425-dbe6-4d8b-b263-25c3d78d1923",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d2086880-12ba-4d09-bf47-ab1954b4f316"
        },
        "item": {
          "id": "f5156459-2517-429f-87ce-6ff606a9c452",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a1d9d06a-21a3-4b57-946e-ce7fb2d5770d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02a0423-ff8d-4e79-a689-3b0edbaa29d7",
        "cursor": {
          "ref": "395e96f2-2ddd-4d65-9db8-31517ebdf53a",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "75807299-ea0a-4d61-a0b8-051e50c55031"
        },
        "item": {
          "id": "c02a0423-ff8d-4e79-a689-3b0edbaa29d7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "56afdbfd-498c-4300-87ce-de7003e146a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40273b7c-f8bd-48b6-8434-66ee0a853085",
        "cursor": {
          "ref": "2c17e5a2-2ec5-40a0-a33e-2179377ad7e0",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3aa18eaf-7912-4beb-be99-55bee572bae8"
        },
        "item": {
          "id": "40273b7c-f8bd-48b6-8434-66ee0a853085",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "31608e07-1cc5-4920-a070-bc8399dca756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c540c4-4dc0-4786-b56b-d81c840f681c",
        "cursor": {
          "ref": "d03406f8-001a-4739-ad18-8232013ff6cf",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0c0122f7-ed6a-4be6-8b85-c79fd0304fdb"
        },
        "item": {
          "id": "f4c540c4-4dc0-4786-b56b-d81c840f681c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4ba25565-405f-426f-9d83-99bf41a5d2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a99d460-c009-4f3b-b8e4-65e3048f3f11",
        "cursor": {
          "ref": "5da1c905-f5f0-4f55-b67e-89a540eedc27",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "eff3909e-a865-4824-8f09-91ac3fd302db"
        },
        "item": {
          "id": "3a99d460-c009-4f3b-b8e4-65e3048f3f11",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "bc2166a4-a107-413e-8826-6056075af592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e43ff2-a860-4073-802e-096b5f3f77ec",
        "cursor": {
          "ref": "cf55bba3-90d8-4971-b50c-50ecf021f321",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f6726f5f-cf11-46f4-b695-c3c2687b327a"
        },
        "item": {
          "id": "76e43ff2-a860-4073-802e-096b5f3f77ec",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "87559627-9e7c-465c-b726-80064d5a6ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132195f9-0faa-4dbc-a50c-82d7101c23fd",
        "cursor": {
          "ref": "eb3bba77-81ee-4efe-9099-7f8a033d47a8",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3b751b74-02f2-436d-b7c6-51ddf05d609e"
        },
        "item": {
          "id": "132195f9-0faa-4dbc-a50c-82d7101c23fd",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "278561e4-6b48-4454-baac-8ed6e4ea6c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc8b3f8-316b-4625-b7ff-696d0a988bde",
        "cursor": {
          "ref": "8a981a4e-2759-4fa6-891c-aabe61f024a5",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f71638e5-79c3-470b-a4f6-6959746c256e"
        },
        "item": {
          "id": "5fc8b3f8-316b-4625-b7ff-696d0a988bde",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ae79eab4-632b-43e9-9ce1-a1992cd0a8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb38dc04-9617-4028-af74-ecc9e4ac9a68",
        "cursor": {
          "ref": "087316bf-4818-4af4-9a0b-c1ea7386a440",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "06c25644-09b4-4714-b6da-2fc859316bcb"
        },
        "item": {
          "id": "cb38dc04-9617-4028-af74-ecc9e4ac9a68",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6a4dfc4e-f755-457a-92fd-2382deb20129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ef49ae-cd7e-43a6-a46d-7af25d8e35e4",
        "cursor": {
          "ref": "b3e2e19a-2d5d-45ac-8927-d3ae23943645",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a3e285be-9b18-47de-91ee-8c77b98c75d3"
        },
        "item": {
          "id": "50ef49ae-cd7e-43a6-a46d-7af25d8e35e4",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "38f19cee-9c02-46a4-9a3c-a9bdd9b1b796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afb3a4b-74a7-429b-b76c-c072b9a5a2b4",
        "cursor": {
          "ref": "2dede705-536d-4adc-96da-fade2080b8d1",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f01d330f-3d04-45b4-be14-7425fc9f545e"
        },
        "item": {
          "id": "0afb3a4b-74a7-429b-b76c-c072b9a5a2b4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9ea3053c-2e32-44ff-acc5-62216f494018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac11208-63a9-42b8-9692-485217e3c15a",
        "cursor": {
          "ref": "1d52b53c-45dc-4c45-8a3d-610be6f44334",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6da17ba5-0234-42e5-a7d0-85a945f628cc"
        },
        "item": {
          "id": "eac11208-63a9-42b8-9692-485217e3c15a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3f020c60-4879-425e-aef1-79b7bb9d2b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4434e1-1459-4015-9066-31b49709a54b",
        "cursor": {
          "ref": "ec04fb6b-01f0-4754-a119-bbdc31550cef",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6380b2cb-de5d-4092-962f-9c0a40140476"
        },
        "item": {
          "id": "5b4434e1-1459-4015-9066-31b49709a54b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "74838496-b4ea-463a-b303-2e66e1546bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd4b800-edd4-482a-81d7-a8a2d0c5f6d2",
        "cursor": {
          "ref": "96f9523f-ffbe-4b91-ba40-c113a9c98eeb",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "83bd67c6-b81b-4955-9d1c-60890ef6ab91"
        },
        "item": {
          "id": "cdd4b800-edd4-482a-81d7-a8a2d0c5f6d2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "478a05bd-b0ea-4e61-bfdc-785f2173c44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa730ee7-e728-4f54-8edc-51b4782b3f1b",
        "cursor": {
          "ref": "6ba9939b-1b0d-4d26-9f65-40496cd1df2c",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "41fb7651-e889-4fe5-8ac7-ec787e61946c"
        },
        "item": {
          "id": "aa730ee7-e728-4f54-8edc-51b4782b3f1b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "86b90d00-69cb-4b60-a168-09f559e318da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f5e3ab-2c11-4ca9-a015-878d0fc4e628",
        "cursor": {
          "ref": "dba925d4-8423-4de1-a350-06c37a29a6ff",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d7bd0c73-2fee-4781-b2c9-d4d7f0183ee2"
        },
        "item": {
          "id": "d2f5e3ab-2c11-4ca9-a015-878d0fc4e628",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9ee10515-98e4-4b2a-af5d-4ceb93ae36a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1885c6b5-d269-4f77-bb80-30a61befccce",
        "cursor": {
          "ref": "ff345f3f-2f93-4cae-842d-3bec378cc29c",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ae110cfb-d678-43c4-9e65-43a149d634fd"
        },
        "item": {
          "id": "1885c6b5-d269-4f77-bb80-30a61befccce",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f55ec5ea-c613-49ab-a6d8-51026ff95630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c4855c-9a26-4c99-8c3e-0437898b5aaf",
        "cursor": {
          "ref": "baf503f0-2653-49f4-ba58-a63165ca0122",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0ec48bc7-26e8-4bec-ab33-5a269df524f6"
        },
        "item": {
          "id": "d1c4855c-9a26-4c99-8c3e-0437898b5aaf",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2b85b993-52d8-4c6a-80e8-c5adb09020e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26509933-0c59-4596-8d6a-868c335a2813",
        "cursor": {
          "ref": "8780bc13-1383-4c98-a064-eb4e0793b808",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d8556df0-9d8d-4a0d-b8d0-a0ed81915557"
        },
        "item": {
          "id": "26509933-0c59-4596-8d6a-868c335a2813",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0b1d84e0-cc6f-49df-85b4-214924db9858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69359ae9-e54d-4de3-8725-ef1b66dd23fc",
        "cursor": {
          "ref": "3eebea0b-c3c3-4c28-931b-5351b7627162",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "8d066ada-ef0c-45fa-808b-cf357cabc466"
        },
        "item": {
          "id": "69359ae9-e54d-4de3-8725-ef1b66dd23fc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c2c071f8-3ce5-4358-9d10-b3d3744d7ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a93beee-1be6-4279-a313-68f4cc792aea",
        "cursor": {
          "ref": "00fb3486-9d57-4554-aa7b-617e9f5889dc",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "ba04057c-1092-41b9-86bd-3021868e13af"
        },
        "item": {
          "id": "2a93beee-1be6-4279-a313-68f4cc792aea",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2d4a54c8-438c-4cbd-928e-da70e60c608d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef09e69c-1958-4f88-a912-449225f94905",
        "cursor": {
          "ref": "f1d288ff-84ea-4bbc-be99-6801e6f16802",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "9803f5d7-22ce-4bd6-8e36-581187a02c35"
        },
        "item": {
          "id": "ef09e69c-1958-4f88-a912-449225f94905",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "cbfe3643-3012-4c8b-8f9c-6998a39681d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d8f715-1541-4cd8-b129-717c26837931",
        "cursor": {
          "ref": "ae947466-2b72-4cc8-b05a-009e1380a815",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "610e6ae5-388f-4fd7-b8eb-5c9225ed4e0b"
        },
        "item": {
          "id": "60d8f715-1541-4cd8-b129-717c26837931",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2db3e672-0892-438c-97a3-0287026821a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93655423-f444-4e48-8758-12cf61a87567",
        "cursor": {
          "ref": "f45b173a-fa77-4bfb-91a9-268eb980ec7a",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "17a8ea34-a438-4bf3-8be0-c33f971125ce"
        },
        "item": {
          "id": "93655423-f444-4e48-8758-12cf61a87567",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "27ca3a50-6a87-4bf3-952b-25acc1f93ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa97265e-d42d-426b-ba43-6732d9a9c2f3",
        "cursor": {
          "ref": "e0b0db46-3f9d-4f59-99a3-6ad28f81241f",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "674d7b5d-b516-40b5-9288-79605aeda776"
        },
        "item": {
          "id": "fa97265e-d42d-426b-ba43-6732d9a9c2f3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "818e05d9-602f-48d6-9fb8-5d7c5c097042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936991a0-b6f3-43ac-83fb-80b3e6151f5b",
        "cursor": {
          "ref": "283adf55-7cfa-4c27-9989-cafa2f9cda30",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "55cfb962-2176-4f0c-aa83-64280089ad72"
        },
        "item": {
          "id": "936991a0-b6f3-43ac-83fb-80b3e6151f5b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "92a7e576-8f8d-4489-b074-ba75433b3795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151abd4a-eec8-4ca2-81f2-474f1527920d",
        "cursor": {
          "ref": "4c2cb806-dea5-435f-8c16-1e506075483f",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7da855d5-b0e0-4ed1-8db9-4cac71dfa73c"
        },
        "item": {
          "id": "151abd4a-eec8-4ca2-81f2-474f1527920d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fcd4a95f-5445-4a66-85b3-97fcc2d8be53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8daab3-792a-4df4-a3a1-d67d60ce3a88",
        "cursor": {
          "ref": "28f659cc-79e3-4061-b7dc-2deb68676bf7",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4cb3099f-bc09-4706-bb68-473345719f2d"
        },
        "item": {
          "id": "5e8daab3-792a-4df4-a3a1-d67d60ce3a88",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3bcd5c87-ad5e-4654-a0f6-d0a83039a94e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32216910-14c5-4ed9-a55d-9a5ba3bfe803",
        "cursor": {
          "ref": "10e119bd-eb74-4430-b896-20cc8a91830e",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "2cb4851c-7c11-4f7c-b498-e1abcdbc2084"
        },
        "item": {
          "id": "32216910-14c5-4ed9-a55d-9a5ba3bfe803",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "71c20f79-8337-4de9-93ff-a145e30857df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f5652c-462a-4768-af75-b97510443b96",
        "cursor": {
          "ref": "b5a7068d-2cd0-487f-933d-c52a3f3eeff7",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "20bea6d9-f877-45c0-b552-9ecc262bdfad"
        },
        "item": {
          "id": "f3f5652c-462a-4768-af75-b97510443b96",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2da513bc-17b3-416f-89f3-c7341a44e288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38caeed4-e748-4156-a134-cf648818276d",
        "cursor": {
          "ref": "fb100300-778c-4130-896a-d319ae3e6a79",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "ab7a9cca-9aaf-4925-b5d3-0f5a08f1e54b"
        },
        "item": {
          "id": "38caeed4-e748-4156-a134-cf648818276d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e4058b6c-40dd-416d-8b1e-78c5dab6536f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13410c43-8ea9-4d25-8e09-e076741b08e0",
        "cursor": {
          "ref": "61781482-cb1c-4346-a5f7-6046f416e682",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8c518d13-4ebb-4893-894f-428adbd70350"
        },
        "item": {
          "id": "13410c43-8ea9-4d25-8e09-e076741b08e0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5fb82a76-2a0f-4a6c-8cd9-544d042aacf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1447e4c1-51da-491f-b4e0-9af35e47ea63",
        "cursor": {
          "ref": "cfdd44a6-772b-4dcc-876b-82ec851eba6a",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f2bead37-be5b-409b-a30c-ea7d150e601d"
        },
        "item": {
          "id": "1447e4c1-51da-491f-b4e0-9af35e47ea63",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4ae83d63-2a37-44eb-a5c3-873998bdaea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6774dace-b69f-44c5-982b-0b5c7c6a56f3",
        "cursor": {
          "ref": "4800ea40-1088-45aa-91b4-59143442b692",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "848c1b2b-9b64-49c4-87d8-eabad33ac8ad"
        },
        "item": {
          "id": "6774dace-b69f-44c5-982b-0b5c7c6a56f3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "fb8082f1-d866-4945-926c-c9fa69ce9fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49513336-8df8-4355-b888-8b13e760770e",
        "cursor": {
          "ref": "46c239e2-6718-4dca-a005-537459ad41bc",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1558792d-7c47-43ea-8764-18964719dc73"
        },
        "item": {
          "id": "49513336-8df8-4355-b888-8b13e760770e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6bdc98df-9b0f-4c18-9945-9b9941ee340c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab695cc-1f64-4e4a-9b36-9942d1187b09",
        "cursor": {
          "ref": "e7a86bae-f6d0-40e7-8506-e32b35cb046e",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "deadb0bd-63cc-495b-97ab-e2467ee0743a"
        },
        "item": {
          "id": "1ab695cc-1f64-4e4a-9b36-9942d1187b09",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "61e1e986-9e0a-4808-8085-5ac14cc9d5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bae0583-d4b2-4901-a740-f26648d021a9",
        "cursor": {
          "ref": "25ae1063-5506-4c49-b563-7f8b1e482d63",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "a57cc9c1-1636-4f8a-905e-0f2b16ed1ac8"
        },
        "item": {
          "id": "9bae0583-d4b2-4901-a740-f26648d021a9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1c1801f6-0e8b-4960-a4a9-124af2ae0b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48bf394c-ac21-48b5-8345-fc1ce99594c4",
        "cursor": {
          "ref": "3723f43d-f6ed-47c9-a683-6f864a0420b8",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "012f1d51-b81b-4f33-8387-2336f17e90d1"
        },
        "item": {
          "id": "48bf394c-ac21-48b5-8345-fc1ce99594c4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "bcfd383d-3d21-4b41-a8ba-4ca5a8f8454e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45049614-11dd-4fe9-8097-2a3a0f99446e",
        "cursor": {
          "ref": "f6a716e3-2709-4a13-a998-afeeefa671b8",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "05a85fc5-74f8-4264-a9a9-a3c4286b1353"
        },
        "item": {
          "id": "45049614-11dd-4fe9-8097-2a3a0f99446e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a61cd6d2-18f8-40fb-9fe5-813905ada158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897dd8a2-1c2e-4090-8ed2-bbf1423cef81",
        "cursor": {
          "ref": "9bc11a61-8533-4204-92b7-13f5889be555",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "98ded19e-765b-42cc-805f-957df15587c2"
        },
        "item": {
          "id": "897dd8a2-1c2e-4090-8ed2-bbf1423cef81",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1b311a56-5646-4923-a80d-b37a058df336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfcc1d8-47ff-4edd-a39a-7af4c263a76c",
        "cursor": {
          "ref": "f1edaef7-6310-45ff-9579-ac8b1005b3da",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f55e26bb-80d2-4d28-a2e9-8122342687c8"
        },
        "item": {
          "id": "2bfcc1d8-47ff-4edd-a39a-7af4c263a76c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cd0d9e44-dbec-4c6b-8195-56462cad5b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a8636c-e3c2-4122-974e-0a1cff27eb53",
        "cursor": {
          "ref": "f40828c5-9edb-4091-858f-586bde924f87",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "46f3c3f8-1114-40af-95d7-893420bdaa8a"
        },
        "item": {
          "id": "06a8636c-e3c2-4122-974e-0a1cff27eb53",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2969ba20-263e-4b38-bc13-8b05603b83da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b141468-39e3-4944-93e8-642a9991731a",
        "cursor": {
          "ref": "74ada57a-002f-4e5f-a5e7-1ad0e819165f",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "17e46ac1-b639-48a0-92ef-bd22a58fba54"
        },
        "item": {
          "id": "8b141468-39e3-4944-93e8-642a9991731a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4873049d-95c0-4a81-89fb-d669f9e93fdb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d89dad-b1c4-44b9-9d0d-407e508f654d",
        "cursor": {
          "ref": "16e75995-7df7-4f3c-b1a5-ec09e375cf88",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c7ad116c-c382-4aae-9a0e-3b603c2ca4ca"
        },
        "item": {
          "id": "a5d89dad-b1c4-44b9-9d0d-407e508f654d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b9e6f99c-1054-404a-9a71-e2145ba9aeae",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "58553be4-06f9-4f43-943b-49122684560f",
        "cursor": {
          "ref": "d842a353-8cea-4f76-beba-9db89496bbb8",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "1cc722e5-6bcf-41b0-b5ee-58e989a994c2"
        },
        "item": {
          "id": "58553be4-06f9-4f43-943b-49122684560f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "593579a3-7e79-4fd6-aa38-77368dff9291",
          "status": "OK",
          "code": 200,
          "responseTime": 3247,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "71cfe466-935a-426e-af23-8133a3c632c4",
        "cursor": {
          "ref": "f52cff30-a32c-40f2-b96f-1285de990fe4",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "536daa8c-2436-4540-9cf5-d898754bfff6"
        },
        "item": {
          "id": "71cfe466-935a-426e-af23-8133a3c632c4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fdace32d-573b-426a-a7c5-d90a1165bc53",
          "status": "OK",
          "code": 200,
          "responseTime": 1882,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "65979608-abd6-4ec7-8431-b1a744c3b889",
        "cursor": {
          "ref": "6528f095-0e71-49dc-9960-c551a162e5f1",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0a01a3e7-c8a0-4051-90fc-a033f4dd5ebb"
        },
        "item": {
          "id": "65979608-abd6-4ec7-8431-b1a744c3b889",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f7e575b4-cde6-4d9e-9fcd-2da06ea01817",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65979608-abd6-4ec7-8431-b1a744c3b889",
        "cursor": {
          "ref": "6528f095-0e71-49dc-9960-c551a162e5f1",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0a01a3e7-c8a0-4051-90fc-a033f4dd5ebb"
        },
        "item": {
          "id": "65979608-abd6-4ec7-8431-b1a744c3b889",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f7e575b4-cde6-4d9e-9fcd-2da06ea01817",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fa6c09-b534-4b78-bf39-f8167e5ed101",
        "cursor": {
          "ref": "291b035c-ee52-463b-8930-39d3c35900e0",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c4dd0d7e-c335-46a4-8af0-3a244071892e"
        },
        "item": {
          "id": "b0fa6c09-b534-4b78-bf39-f8167e5ed101",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "96130af2-250a-4161-8ea6-20935fa17500",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88b4439-629d-45e1-b4ae-67d1809e9e8c",
        "cursor": {
          "ref": "38f9e063-e008-4138-931c-806d545daacc",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "42f4c250-542e-425a-b10d-0f05d5e92ad3"
        },
        "item": {
          "id": "e88b4439-629d-45e1-b4ae-67d1809e9e8c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8c300649-022e-418e-a722-8280fde8b5dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}