{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "98fa2578-60c8-424d-a356-1bcc9a3a1e08",
        "name": "Clear Cache",
        "item": [
          {
            "id": "69bb78f3-5292-4099-bdd4-49ee5173aaa1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "484b6bf4-3a4f-4aad-819e-0a3f169d4a8d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "76ef58f3-efcd-4632-b7c5-812c40c765fa"
                }
              }
            ]
          },
          {
            "id": "c61a043b-7a2b-4f39-84dd-d86306ac78a1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bafcc86f-52f7-408a-bbad-6bf4986bc34e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8c3ea857-c6dd-48be-bfdd-bcba55eed299"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a8c2b1ea-e6ab-45dd-8bbc-afad8bba9b07",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e0df42d4-6c24-4255-97f0-a7ca4d21ff15",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bb12a23c-27fd-43cb-a4fd-6a20566a8789",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1098d32-5d19-4248-98eb-481135712ecb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7e95975-c947-46a7-8c7a-d9c23ea641eb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "589f8cd3-a61e-4133-b4c8-5b71280d6dd8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "925c31ef-0d37-47c4-ae7d-27516ed23233"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "515988f5-3ef8-492f-a841-a290406eaf5c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8389498d-2b46-404f-bb2c-fecff53a2243"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bedb0b04-c331-4d7b-8426-10b148f8efd8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2b81aa73-f853-461a-8bce-7cd320892b20"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23c0e438-22f6-421b-ab12-3c19200cd31c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d05b5e7-01d9-4a74-a0ff-c80a18346b66"
            }
          }
        ]
      },
      {
        "id": "15784662-5cf3-4a43-9372-812fbff7c2ab",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c02ceeae-239f-4653-bf7b-267ce070f289",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ed65ba3c-bb40-47b2-82db-e332d0436213",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3755e829-9e28-45cf-ac9d-d322ced73b70",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64de4229-592e-4d78-b7f1-c8b1092fa380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fdfd126a-6dd8-4123-aadb-a69f3faf3fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2f3c1e-925b-48b1-a199-5fbda1b5609c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bfb4af7-02cb-4f9a-9cd3-f7dbbddde43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c1ba48c-7bd5-4e12-a59f-38e1ec0ac818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b796f6-941e-407c-b40e-140c02049ede",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faad676c-a422-4300-ab38-0648b493cca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4a73487-a1ce-42a5-99b0-9e554283171e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eabd6b7e-be3e-436c-98e3-5d802ac88ce7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8647da16-3c8d-4daf-b215-e3793d6ab063",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67edc5b9-6908-436e-81e1-f27361bec329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b682f158-f3b4-462e-a067-efc51de338b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7d2b5c-d832-421d-87b3-b80d2854369f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5a58cbd-65e8-4619-9d4e-095a20e4d6a5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3357decb-880b-4cf4-93cd-374621e0c173",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8a1717e4-42b4-4db4-b63a-ee7d0af5ee04",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1bc92c35-5cce-4a11-b784-fe8b77129ece",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c0573e1f-756b-41ad-8151-9fde46a08f56"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1cee1f49-2381-4150-ba33-750061974439",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "65c09a19-3d46-44f6-9523-7490234e3a7a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad82de36-8f35-4e6f-84d8-f2021653d2ac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff492838-0103-48d4-aed0-cbb4520ec7ed"
            }
          }
        ]
      },
      {
        "id": "014f39b5-d122-4382-8c85-054d56d1418d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fa0e1b00-fd8e-4029-aa8b-602b8c0b08d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0f73087b-84f5-4c10-ac99-92d13185d2d1",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f8976196-e4e2-4f95-922f-47be9f5f400c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0a0076-bc79-4aa6-b69e-1a2ad8c01e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee3b4e1-4841-4982-9f0d-aec819969fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b57d077-f6dd-45ff-8ae5-2118c969fba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee32250e-8bae-4952-b520-e5c13c33f8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdb2284-9182-470c-8a5a-edc43ffd5afe",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d471cf-ceef-4b80-a7da-eaf8171e06a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc16de57-f776-4b92-bcc9-c724c6939210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9616e4-ab5d-4b0f-bae0-10904e5b2ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b803b6b-e382-4fe4-8b7c-5b4fd6eec1e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54da1e7-77ab-43af-9ae3-f528694ab4f4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93885024-d59b-4da6-b7dd-eda82bb1725b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1327f7d-b468-4e98-89c5-4ed71ad097a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52367cfa-980d-4e6d-b799-cc70bdf7948b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "129ec811-ba5c-49a6-b33a-887619a7c2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af69d748-7d01-455e-9e0b-c4aadd8ed441",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4bc675-e736-45e1-8a51-59133e841ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b442f7-12c0-4c70-af5c-a45276523066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ef16ef-efbc-4a1f-8f78-0a42430f860f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a49cd26f-9501-4d1f-8b9e-bf57e711cb5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "984a9629-46b3-4132-8b34-476c7bf967d0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c76fef0-e972-4018-9b38-3f0148542b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e8e61e-ab45-4fd8-84d7-4915d32450da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55709ab-40c2-425b-bb12-9fcb09c67983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8583430b-ee26-4733-a5b8-0e13b249d2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d73dab-461b-486a-ba09-11b524caa04d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d66dc2-8600-4051-bfa6-de7c7dca046d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d2355e9-3efa-4383-800c-f49105a02e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e41fcb-20d1-420b-9f7c-49ec48c47664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "427b850c-e9ac-4476-818b-84c4224442a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3020d87-6ab0-42eb-8119-0d6c16165ebf",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf90be01-b18e-491f-9e80-154bdcbc3ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4d05fb-85d9-42f2-bfc7-9d2776a403de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca08b05-4cd8-4f0d-8b5f-399bd6868ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21440400-3ee3-456a-8475-0dbc485db68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9706c1cc-b9d8-435b-b662-8b096062df70",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ebe8cac-9544-4ffd-9060-a29b1d9d51e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7fad638-9e8b-4568-accd-77b63d0cdaf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e47409-3741-47d8-a741-e30dd10ca206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca2cb182-c875-4758-a14d-75319c772bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1131dd3-0f15-4f47-b9db-97f757af7375",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e032a9af-0817-4034-a5c0-456bb98ed1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7d74be4-ceb9-4934-a967-b7871c94d618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14fae8b-a046-4f2e-b815-370f5b8582b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c97ba8c7-a6e0-4041-b405-f8c4e89dda78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7bf3da0-0ae1-4357-8a40-3c4b8e0014c2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca86414-7361-4b43-b9b5-4e434314a4f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c2ca2d-e240-4dba-a83d-8e4fca7fef38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0519ce13-0113-4ea5-8fa4-541e59555746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8f2a386-306b-45ba-99a3-2ce980e15496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4aa6d74-9432-4f21-a1c4-44290c4fc18b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad5462e-5bc8-42b9-b34a-772056056740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff240fee-c65f-4820-8a6f-8399a350d9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a872275b-1df6-4672-a036-63dc68f49d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46fb958d-8c4c-4e22-91ac-62b825e24c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152da2d8-4d5c-4378-be42-837bad06276d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7949d4a-d7d5-45ee-982c-bd582cbe6383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22110111-a208-4316-969c-8a163d5648e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8f07b1-b713-4271-91b8-9a67994bb50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45575dc9-2be5-47eb-8b54-000fae68a19c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4a73f6-6f50-43f4-b7ec-4f42678312c7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5657709f-4903-49ca-a2dd-054ae959a7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b9466b5-9dbf-48ac-b3d6-6ad80cfa0510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd7863e-1275-4e62-b341-500fe62beabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95d50803-f3ef-4491-8cc5-dba020eaa1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38536319-7254-4754-8f4d-f04f793ec3ee",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc2da92-bc61-4ac5-9873-b63b1110150b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d5c98b2-f6b5-4420-8e0c-2aaa7b590e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27c3abe-8ccb-41d2-a874-b004dc3a50ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34ff147a-d47f-498f-b154-28862dd03e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fde06f9-ad57-4eae-a604-cbc0a9d42aee",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01b7169-c57d-4356-9740-1e8b16f3571c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dd639d4-3609-4020-89e3-1e79bec3d91f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf682f0-e1e0-469a-9ea1-dd8072a877d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f80b67b-4980-4c21-aadb-0d25b791354b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9e04a7-508a-4492-ac26-3889f2e24ad6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac900648-6044-4a4c-ac0f-17563ce8f52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd3ac2f7-bf81-4aca-9207-f87b42e66a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5a43c9-d6cf-43a9-8ca5-38027afb24e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35bec721-afce-4124-9e7c-20993af2130e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3917b9c-bb5a-4bed-9644-6314a6cabd19",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5311e204-08f0-4e6b-9f6e-b98c25fbd106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c56a300b-d5c0-4c49-8e43-d24a45991145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71de64a-6be2-403b-8f39-74f10878d2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b395d85-8c01-4f1b-a2cc-bc9274b710f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc39c06-0696-4a88-bebf-4b4a09321c26",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca25a3dc-f38e-4ab4-8b31-7867c754ed1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03067e6b-f987-4a22-9a4c-ccbe5afe4b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e0202e-db45-4294-9708-1f213ad63be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "abe5356d-0484-4cd4-9e1c-0242f62c548b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9366b4d4-41ed-416c-a93a-4e49386925f2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09bd3c39-3ae3-462e-bc73-9ce36936686f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "560a0f69-83ff-4aef-89da-7c948325ccce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e6d520-5643-49c3-8310-77eea2091ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbcb20d1-ae2a-495f-9d7f-23393bbc9387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3abc6c-766e-4eb6-826c-7a8303de1b69",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1716bab0-1ff6-43d4-9c7a-95e3ec3d410f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcef848d-a9e5-46be-9395-05271d0e50ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64472d27-75c1-41e8-8e65-348f2ce0fda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "920fb007-60e2-4cbd-8c50-52cf2534ae77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aff6784-aeb8-43a8-834b-31c8a474242f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824a5cbb-2047-40c9-ad74-f64321a84d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ec11fb-cb72-4867-9abf-f18c6fb8b410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeed770b-9dad-404a-a7e7-b498965b9018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40eb310f-4aee-42e6-b8b3-3684376cf3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b597f2-cbf0-4bda-b227-be1b355c4429",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47cccb02-392b-4642-a3be-ecc9ada87f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55061cc7-08af-42bd-9579-2a0852ffc324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01d84e6-a65c-4ddb-a214-3b755a136019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "53970fdb-14cd-45e9-a237-435f7ac1547b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece072a5-fc7b-4427-a04d-795ce7122854",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54023d65-b24c-4fc1-bf58-029656077ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bbd11db-c493-4287-9179-ab555b3993b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a6bc11-7822-41f5-ad75-af300690def3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf5a6df-097b-4bf2-93a3-7af075e9d96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93360a5-f432-4556-9e10-fbbda6177910",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "877a84a8-a814-48f1-a0cf-1ab4d812b6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fbc73b5-f7a9-4d19-9ee0-da6bbe4660a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d774426-a52c-4889-86f3-0b0f4e617a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "98a746be-82a3-48a7-b9f1-58691ec3ae52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28165736-9dba-4413-9093-2c99ea48e1c6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114ad264-39d4-42a2-94c2-e2b21c6b6745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b05c36d-e229-4663-b2af-0bcd5391a63d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422ba1a0-1a86-48cf-9229-870bb9d6514f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d99dbc7-8602-4c10-88b0-48e5dd8a308b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae6d8f3-2cd5-474c-900a-c7956c7a02d3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44acd89d-d921-4c29-a30f-1acecb44e38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d1e4ff4-5792-47f8-92b3-459d6c661b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3f6ec8-e896-458b-9de6-0e1666e9a71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "099abea0-0900-44d2-8974-ac402f3ca5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222f34aa-09fe-4612-a31c-0bd1ebca02cc",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b187519-5ffa-4575-8b32-cce896093a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f549b347-93c0-404b-b452-42ff13c23277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7a2bd8-38c1-4c5e-8696-724e9a29da7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "87f7bc66-0234-4c95-ae5a-322d9e819a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa543259-abff-4df6-acdc-ed61e2df0855",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d503274b-edbd-463e-b227-c4807e9e6e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d9982a-5812-4c92-99a0-6c940b071e1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b5299c-0da0-48e8-bb45-a537be8a35fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "81a594d9-56ec-49fd-8760-e109c5eb3ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56668982-4a84-4ebe-81cf-e6dea8fed089",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b155796e-5cab-41bb-827c-46bcc9619900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc60fb1-003a-4344-9b07-de064bcfe18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8b47b5-1a2b-49f6-9247-4ccab6e767a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "57c5c767-b6a9-4605-943d-7a73cb763e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0a2030-052b-448e-af19-057d9416c548",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c884b3-4917-4ebc-8043-9aa28beac5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcecc207-1640-4914-ad39-3b31a766fbe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04259ffe-d290-403b-b913-3804e94c7fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a588a90-c7b8-40d3-a496-e5b7dc0d23b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088ae01f-a9cc-4ef8-af6b-03aa2ef4c7db",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313e45e6-2277-4613-8c21-ff8f0afbb471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f487027-169e-49b8-8fc5-7fef8a62de2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10805644-fe70-4a2e-b36a-432f63649109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfc5d4e2-e30c-4199-a14e-e5e951827ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671da380-0fb0-4b44-a77b-94324fedb9af",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4aae59-050b-4455-a479-6f85db2ec769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348a9c33-9246-4d2e-905a-c76a61bbd66b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9caeb14-2483-4b5a-bd4a-744c0012ade1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5df230-0de4-4976-aea4-812224380d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01558629-ae3c-475c-9b66-b929a4458762",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8224e800-d1a6-4eef-8f1e-b317be416769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "571dd192-83e9-4484-9cfc-d037e3bfd1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f01d5f-11e8-46cd-83ec-00e41ac5e1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d925a9fa-955d-4eca-97af-9e5da2a13e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ded4210-3e4b-4fd2-99a6-7324d9e3956d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faaf3f31-744f-467f-96d1-27dacb4aea3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fff1865-cc5c-441d-b622-f2edc25984c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e48cadd-fd2e-4bda-94d5-42d2d0d44abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "787f45d3-a296-4604-84b5-dae43ea9f3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bd158b-f672-4e24-a6c0-5be9f4eceeb6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556922fa-bf63-406a-9791-3bc799bf9110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8bc38f9-e4bb-429a-b7ee-812718d6363a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16814eeb-caec-466d-a2bb-df29340583e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8e704d2c-d6ba-4206-bcdb-779e22db16ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5856a6cf-3182-44f1-9220-746998a32b65",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de581491-1673-4706-a914-7450e0b6a3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4afae937-0e8d-489e-8ed4-8447be634332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88509c6d-c963-4da2-b0bc-2cb163a3facf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91c3c7ed-43bf-428f-b546-913e7f0fefcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2514bf-171a-4c11-a317-89894894d404",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a1dc6a-f36f-4868-8ef3-c6a374d088b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db7450c-be4c-4932-9185-6d6925e8229b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5519f004-0ae8-44f1-9c6f-a08405ec9c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6253b88-81ef-4c66-a6d6-43e1dae303ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf466687-7c25-431d-bf07-73a07c71418a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0a865b-75d0-4d86-8c76-c83b4b00e729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "588abee3-fa94-4141-98d6-7711072e18b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912aa69a-fe8a-4cd9-864f-661efe76ec78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba7c487-b5a0-43f2-b8ec-c1dc6cf57fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88a26a9-f358-4430-8542-60e9943bcd71",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1b6e69-eb4d-46e2-a80b-c2dd5796da2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "565c5107-ef63-4a76-87ff-f58a103d0a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6616a93e-f6e9-4c5d-b71d-049b1391c2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f85241a3-25ca-49a0-b6c3-343ed34d07c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a89ab6b-6bf6-45f8-b67d-3429863c7975",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b37759-7630-4d95-bff9-a5b89023e7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38928f57-b401-448f-9f04-c94c5d50c2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7700f7c9-9484-4c53-b275-ff6197c6c9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "78dd2aa3-2523-4eb8-9cbe-9c35576e0a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56bb3f8-3464-4dbe-8169-a3672154793f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658219c6-d547-4228-a2a1-6c7c468a4476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8487d804-0a38-40c5-9247-b775e1112899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f927c091-86f8-454d-9140-f3a64bbfcc8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3bcf0d3-4ab4-4507-9454-7d9f023f395c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ee2591-ee57-4df2-a1a9-f8b5bf826c5e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "667b5597-2d4a-4833-8196-a3acb4ae917b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a71a820-1912-4ca1-b276-e6c847ce770f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba93bdb-d9cd-411c-a35e-1cd989de3cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1f6c34d9-2a64-4b0f-9891-debeb9cae7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d2def6-a255-4798-bac5-24292a3b738a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a38062-de05-4d5b-92f5-d9b31e2113c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f2eb1da-eef9-4bc7-9721-2c7896a6d148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eeaefe8-5733-4e6b-a4a2-75dbfa6bacd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c8f3253-5160-4ca5-94bd-9d5598ea3059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113a3b3f-5e16-4414-bff7-55a7da3b46d8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a488017-f317-4b1e-9df4-3e02fd504136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52783306-71c4-4a88-b77a-b37c6921499b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e809a7a-f339-45d7-92b9-3d946fa02545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a214b7-da8e-4d89-ad51-a44604a0b3e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787c9cba-f503-4292-aaea-108d10787d54",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6b523b-9aa0-4c05-8e75-51fdce236c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b98a91-7822-4704-86be-248a2cd6887a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db10176f-a794-463a-ba70-2172a53c002e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "983f5eef-562a-415b-9e4d-30ecc0fca9c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c471d4d9-084f-4418-a6ed-f690b09668ce",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df106c90-b814-487d-864e-df159f12bdd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b39606d-e046-433d-8832-f8d1ebb88db8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47b65b1-dda4-41b5-8bab-632c81396bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be68aadb-f894-48ec-8121-c539a659104d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e1e507-8f5a-4515-92af-9457bbb55a67",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfec4ff-ca0b-4b86-b438-14acfe685dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a3f1d0-c53e-4fbd-b1a8-55505704fbfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a99d8b-e765-4407-a251-5ddca3790f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c190b21b-1337-4835-bf9d-690593117e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4317103-f466-4658-b2e4-180932b1332f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ac6334-14e3-4cfa-a4af-960f85c03245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e63290cd-d0dd-4e61-9535-11ed10954be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d54e95-d81a-4894-9ef6-b3b6b20a81d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fcb927e-652d-4f1b-8f78-e746cc589fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95b38c3-3f2f-4329-ba2f-84b00b4433a0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7c49ff-25cc-478e-a5d1-c746657a939c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451b8b54-8e3a-4d6e-8056-f35570a5cc9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe0815e-4657-4b75-b039-0b7547d13e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab66dacd-b8f1-499d-8368-99f58959235a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e39a1b8-b2eb-4509-912f-106f4cea3f3c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de81bddc-7c96-4f10-83a7-5d5f298e1079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3069d0ba-634f-4b9a-87fe-c7ef74dd044d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08bf0285-4817-429a-9623-4ae576e51abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a16a9028-4a75-418a-bc20-78cf9cf32ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2524808f-10f6-4caf-b677-1e3bbcc2b2a7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b988fe7f-f8ea-418b-aba7-bf24095dfafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db4b891f-1d1c-46d8-a0c9-21e532d39cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea237c55-32c0-4797-9b14-e488b23c9239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "59bb66fb-2cf0-4f5c-8b34-6e161f988986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521aa2b6-b1ca-49e9-9788-64f102be4e05",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee869ea0-5e2b-4643-aa76-3f3e4aabc2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc374fa6-b423-4b12-8ddd-fca787e783f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff8ee1e-73e1-484a-8c38-fd89e25374c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "74b69075-8915-421e-8d6d-e89366df07db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e6ce1b-ee5c-4537-a0d1-779299027543",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91617d20-8cd5-4ae3-b1f0-100acde803c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43e4b93-2233-4f3f-a384-89223e268e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21667401-3516-4b4f-98ed-e69e74003302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09ff9965-1301-43b0-94d5-4dcc919d1b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533812ed-d732-41bd-a6a4-0483b226b534",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ea73d5-9fe5-4a60-a4d2-a3c25bc14f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7cca732-ec75-4e1d-99e6-28dfaa05f3d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0495c5-842a-4ca6-8e53-8a8842011e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d24123-fb53-42d1-8f8f-052e62b593c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71bee62-0caf-4b13-9ba3-e1b3e2ac4c03",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f1fdff-bb26-4c13-8257-6d7c2f650573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42b4d31-2833-48d8-b9cf-17ecd3fd9504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6aa4664-eabc-4d95-8117-3e63744136ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c675b1d-7390-4943-8df8-701ad1154132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c18248f-39be-4ef2-8601-4fcb3e18ac54",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfa03fa-22c0-4710-915d-4c49c9054f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14d421b-e70d-49af-a486-6a997d28d36f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d62cd05-1a0a-4aaf-a166-9f749c8765e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e38c9d03-aedf-4642-b02d-7b93bae7d408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ba7788-f9bf-42e0-bcd9-f7ffd7a55ea0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce53604-cbe2-4aed-9276-3e61c3f969f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b799c9-2192-4077-94d3-9c1e16c8b463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a718cd5-2587-45ec-8cb7-42a0d8bb020d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7a4ef9c-b28e-415d-b699-3c979f3e87d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af593c4-900c-4b9c-99bc-f4219efbaab7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50728a6-e2ad-45ed-b2be-b14c965493cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84718b05-3f84-4c19-a56d-e6396b778b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41072ba3-10c2-4840-96db-df934742374d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8a2ea8d-4577-4774-815f-235082ea5097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be39ba9-728f-488c-8d13-9d88e63065f2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d2bfb5-645b-4a20-b535-feb05a546d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d334735-4cf1-4237-9125-8f49fed7f002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8011288-a497-4bdb-8448-d0857cc0c0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "978b16b2-13ad-4e62-992d-087764e7c438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f28925-af0c-4c23-8dbe-e207ad6cc1c7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb03d66-dd02-412e-a1c6-0e4454980869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc240847-9ed5-4407-aba2-ba0256446bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c49794-ed89-48d4-b09d-a1dd84a79c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6bc45cf-2ac2-44cd-a3f6-347c824a1c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd53657-8b65-437f-b196-5d3e918abad6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae10290c-c6a7-403e-8f91-ca3afec4d268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee6b80b-15b0-4e65-b73b-768034ef2a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5dd68f-4dab-4314-bf92-707bd77b115a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f079c96b-8822-4318-93c5-5b4e7bf91fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c988163-400c-496e-bab5-11a287bd3e4a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4c53c7-73c0-4715-aa55-9fad8996af6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4711c98b-c796-45aa-8214-8229be315a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07300bb-4064-4e5f-82f4-47d1a4f374d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f81e84eb-c333-4682-96b9-fcd2255df061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acacc63-2b4e-4848-8dec-a1c13162c61e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "472a03cd-0db2-4d0b-95c8-e65bb5fe5ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a3d4b96-8d63-4842-8c14-8d14794337e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab20922-ae79-4768-9c2e-7f7bb57ff697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b95cce32-b42e-431d-81d6-2b0717a4b739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee61031d-4ae0-4e38-9542-4f95ad170a27",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3009f6da-c282-4ba9-81a9-aaaf61859a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e24ef724-0be2-4630-a42e-d36fa8ccba7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f0d73a-bc60-491c-83cc-d7d0f67755a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1380b8a9-2d46-4936-8e68-996b07b17070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa52e68-744d-4fbb-916d-1e4a216fa628",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "245feea6-2974-46ab-92cf-ed4bdb001e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4768ccc-5f6d-4457-a167-b86c8fbdb214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53301c8b-0a76-4568-947d-c47db2ac2f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b36ed1f-89e7-4fe4-8e5d-fe54cf35634e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b84530-2d7e-49ca-8b18-83d39eb60859",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9536b290-85c0-4217-9c32-5225694252be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272b36d8-2ca9-4f79-9737-966a1c41a247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f2d89b-5371-4a74-86b2-579cfda418df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c253a922-8502-443e-988b-0e6827b0b49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68d141d-948d-4afb-bc49-427f1096ca89",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540f4c5d-0c95-4976-a4ac-b807b314661d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37456210-2747-426e-ba57-a7a7fda67088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81d0f20-7894-4667-b2c8-826d908216c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2bfe9489-058b-4e99-b2d7-7802aa97ed73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63077d07-797f-4268-9b04-0653055041f1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2952cec-748f-4665-b9a5-1142f4ca6a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5e2776-0715-4e33-b395-b4795521ccf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68dd9d0-7ba3-4db5-8b10-f30223f71446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c196dbd4-4617-4fc0-8d25-b33eb4948d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a2b225-c1a8-4951-a6de-4f43cdcbf4ab",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d07a9b2-f84c-46a7-b9bb-6890d3458da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1c4560-30b5-4c74-822b-93d56839e3b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34da5088-7126-4af6-b4c2-a59729e8436c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ac3f8de-4adc-4372-9541-cf030ebc0bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e39cef0-f2e8-47bf-ba8f-14f0587b7b8f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc80f935-a825-4567-a4d9-b10cba36b693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2d2a84f-69cb-4d9a-b0fe-cdb77aea9639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3343d9-4f0a-42e8-a7a5-0b496b0c2293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ab8a9f-d802-4d14-86c8-4bf260909113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302378a1-5e96-4730-be42-bbdbf28f76e5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9adc7946-8354-477c-bb91-8e490eee17cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d9afd1-5f6e-4b73-8f12-a0366d3e26a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158a0eb6-1b58-4cd0-8f45-a12b0e37ca3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "346bc0c1-f3af-49ad-a6f5-267ed0281150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f2a3e4-a16d-40c9-a915-a9c48b26f907",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd16a805-dece-48d3-a79a-b3f0249b2a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef73bbb-fe25-46bb-80db-50bdc8cca16f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bb7728-aa9e-450e-954c-531c22f2cdd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2095945-b8cf-4227-b9e8-dc21a75762fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52337aed-1ee4-406d-b60a-bb28bf122b06",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "668e5ee6-fed9-4ed9-95a9-352c38c13f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c29dd7fd-66cc-42ae-9a49-094bba85e9a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b89600-e6fb-4e89-8540-5c472ee157da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c39050-1357-4d72-aad1-10ce158397fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47de397b-4c83-4811-a2f2-f8c76aca48d5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3ea5b4-b86c-4a66-a406-dce520d4b297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f064df-d29b-4a38-8577-d79d73f62a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4afefadd-44e5-4fc4-b127-a480e47122c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a966d48f-e934-4937-847e-a620dd16f9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8a7013-10b7-4cee-8ed1-a73eb08a2f1c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3903bf-a5ab-46e0-b9e2-2751cb883522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e87658-7512-4e54-89c9-57c5907e9c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3fe4674-4c4d-4769-b883-efbd36ccc2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3987e120-773f-4e39-8029-26938cd2dba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43caff7c-556b-4d14-a046-cd4c6cc79678",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01cdca70-94a1-423d-8619-a1b2c3fb02cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ac9dda-5b73-4a58-bc06-527ed0d2c251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620fb2c4-79f2-4b4e-83be-dfd0b2ea445d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ab59222-50c8-40e3-9300-44255ac3077e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ff7b40-a467-4174-a5e5-2129e09fcf4a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b0f5fe-9e2a-46c1-b848-95c03a81d1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce25095a-de70-4bf4-b0e8-5a104392d23b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c70d181-a174-48fb-b3c4-24d2a3abfa4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e926a83f-fa15-47c1-8384-669d1a19b4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1543382c-7ff5-4df2-bc33-805f88da5a3c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e29a49-882a-4689-9378-251f09d117b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b9d63b2-913e-4d32-84c8-03b5164ec78d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0217037f-02f2-4b00-83c3-2392074391b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf58ac4f-bd92-4ed4-88d5-1d4535dbc6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd60756-b9eb-4a45-8ba7-512e461b7fe6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76a64f5-4bb9-4a3d-917a-5efb6a2e9a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97e11289-ce20-4564-8dd2-e7341f4acfb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e07f21-3efb-4d13-82aa-2ddf05d0ffb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c24b85fb-9218-4ada-bbb0-0d5a1f60027e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619c2038-17a2-466d-aa99-e17e7113f393",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "789b840b-749c-44ba-8df4-f9e984aa9072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f263f8bf-1b09-4b9c-ae5e-13d1f7aa726a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4553c971-19a9-40c1-b4f2-c132680ea345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "76fa142d-bff1-4e51-955f-b06b2cb714a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a26be2-6ab8-4acc-ab17-4af23a372ab7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c0eec9-c336-41fe-8fee-b51833e1b22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3738cfab-212f-43cd-81c3-e5f2f968d0a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8439b2-2cc4-4e0b-9c82-eacf632c04a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b114a5-adbf-4c38-a8fd-fe96a02203d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d18acf-d568-4230-8170-50765b31b9d7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c41a619-b3f0-4e4a-a166-4ec392fc3571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448794b5-aa25-4b90-a7a7-ce9c1d53b7bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4586765-dddd-4cdf-83f2-3029bcb7566b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64138a2e-5bfb-42d8-bad5-72beb0fb074e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874fdce0-c0fb-455d-9ed4-90d67e4c6d3f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e36fc93-f1a2-4636-8bf5-624a1b11ab6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fdf9493-05ff-4fb0-81e3-d7514516faab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2499a2d-4c5b-41fd-b8cb-1959eb03851b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b280d68a-fca7-442b-b897-f02e5c61f349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5142b06c-4c61-4545-bf80-4f52c5d24ac7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a0efb7-89f9-400d-9be0-e4fc44baf67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03baf8db-6775-4700-94b0-8df0f43f4600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f704b5d7-ad6a-431a-be98-8a98de364cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57cec637-a0e9-4f56-8bfb-26b0a445f4a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086403f6-bbda-48a2-950d-135ea0436a6a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84921352-a4ca-45d8-8365-157e20f502b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf9df6b-827d-4248-963d-483cbcefa17c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17726f1-7c7a-4ea8-9a6d-a6676b46cd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "532ee7a0-35e2-47cb-b1fc-63475ce7ab9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2dab34-cabd-4fe5-84e3-44f5d54c2f4f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e50f54-7017-412b-b22c-debf20266024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b7931b-41f3-4112-89d4-7326d0ddbbbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65532d20-e7d2-4b75-a923-694911ceaa30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "79eed9f6-4c04-4fe5-9200-3c1bddb86943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884f2c32-a9fe-42b5-8fcf-f5b0886c70cc",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825b0ee9-776c-4f9c-b1a7-0c8ab9ddf289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e1ffa3-b51c-4d2e-902e-b2e24b51b8a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b802244-4799-4c78-b424-bba9b0aca235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c5b212c-34d3-45a0-ac36-5cd6a5427a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70576d2c-3e8e-46a1-a73b-bf866daf7946",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff54247-b5f2-4855-91ce-6a88bbfec072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a2c7ce-8bbb-4748-93c9-872dafddb671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730caadc-c811-4245-a195-d78efe4af786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2022e8b3-2d47-4db8-ba8f-49d166875138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f993534-b0b9-4d39-98bb-0327e8f2a1a0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed0b4ac-e122-4324-af34-2029e088c8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55959370-2f92-40a0-8333-cb98f1f61a86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35935eb5-d66c-4ad5-b8c4-4dc917a82ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "88526f0c-5a7f-478c-8925-a666de80c3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5880d8e7-6970-4c1a-952e-ff2241c6a880",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebfa75a-4f0c-4047-955b-a6f246e521d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537db3c3-cb7d-49a9-9160-9a31b415f7a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06cd4711-920d-4c7c-b57c-966b332f0855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3112ff54-cf27-4a42-a74e-6eedb036ff17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb90cafb-c8ab-4c1b-8e84-ead82d4f9575",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a61775b-8ec3-4278-8d1a-caf586b808b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b048d6a5-f8f3-41f1-bfb5-66bbb16ab92a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427f9461-ca3e-41fc-b630-0c4ae4319d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f0f04e-b81e-4ff1-a34c-556749f969bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f843a5-eb06-4471-a6d6-7475e10988ae",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecef2c33-f323-45aa-81ae-e2e38565ee50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b7402d52-6cfd-4418-a6f8-6ddffb1c0f9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a47e822-9656-473f-94a8-9fc9d3c5020a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "17953c4f-5c93-4d70-837f-192f9eff532d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3d9bc8c4-44a0-41ba-b9f5-a94fd423f4cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b249d643-5a32-4f8f-b134-325d9d61c740",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8806b7-48c9-4ab7-a79c-8a71002645f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49cfb26b-ddf1-4611-912c-ec783bf3f48e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a63e17-7c97-46d9-bb2d-e9ac641ff8b3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a566bb19-78ed-4eb1-8beb-a135c7f8608f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2902e90f-a645-44bc-90f4-ac58aa252651",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e6c7c21-2b77-4529-a9cc-caaf1b28484b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "87fc1460-2fb4-491d-8d7d-626b3616e849",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd98af19-c4cf-442e-b1bd-c6fc468cdff3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "07a0f8a1-5144-4ce6-b524-94214783002f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2c38c96b-a979-450c-b758-5bbd05f50c77"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f500a000-e0fd-4296-bdc4-86eee227e832",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1bb5ff87-222a-4d79-b1f1-be00b2c06162"
                }
              }
            ]
          },
          {
            "id": "0fbb2e30-c16d-4de1-8403-d729a19564cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b94212fb-146a-45ea-8d5b-9eedfa7be61d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ec45b27-21ae-41fb-9d69-8eab9cc49ba1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80c0e1f6-fa35-4f49-a0f0-b85ea0d30001"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e18010e-5219-4c33-bb98-ae35d745fdf3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6cd098bd-a2b0-4c49-a914-0ae379cd9683"
                    }
                  }
                ]
              },
              {
                "id": "21cebcf7-0cb1-4992-8a3b-0696049d44b6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4236251c-c6ac-494d-805d-9feff47ca707",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "60a01cb4-6652-4eff-8ded-5f6ed50d05df"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab1981f0-7fef-44a3-a89b-9d0e11517fcb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "95c2cfcc-70de-4232-bcd4-9c5598cf3f45"
                    }
                  }
                ]
              },
              {
                "id": "cfbed03f-537c-4b38-ac8b-dffbd65238ef",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82611c97-1a19-4d6e-91f7-a96b42719bf6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8defacf1-e314-49da-9fb5-ade4d44851ab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35480ef6-6198-4f4b-b050-b27571dff4ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "68112e4c-700c-43c2-9d21-8af2d70bdc6f"
                    }
                  }
                ]
              },
              {
                "id": "301fd4f8-03bd-4bba-8ecb-52dfec88770c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "605cb872-eeb4-429b-aa9e-eb33868a9245",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb160513-b7c3-4944-8c68-927e8c3e8c2a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1afe9c05-5b0f-4edf-9784-46cd4e3aa1cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "47abdb4c-dcad-4e41-83aa-3c096fb113d3"
                    }
                  }
                ]
              },
              {
                "id": "8f6a7488-2746-4e55-ada5-d21906b95391",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1bc32f95-3a0b-44ce-99d4-73d3a669643f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd2690fc-bb78-4fbc-b523-9be346c5c0c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2da9dfbe-6741-4502-828b-562b6cd463eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9a9d7f43-e6a6-4ad2-9063-59ab6c7017e0"
                    }
                  }
                ]
              },
              {
                "id": "8d4d52b6-b1c2-4192-a6b9-71a6f8e25b6f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e18e901-0ab4-4b79-a5b2-b70451b8e8a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71aa16be-08d9-4688-b26f-4442ad77ee49"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22f3a4e3-8bef-421e-a586-9df240477f9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b0ca134f-f42b-435d-afd1-88a47818a7ee"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5b37c0c8-f5ed-4ad9-973c-e72168760a8a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3946f331-8fd5-492d-ae6b-ba3762225f8b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "19b23c8a-a982-45a2-ae29-87895fae5afa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c3d3eb0e-2b25-4a32-9f8f-0eb2be1a7aa7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43afde36-4ba2-41b9-a871-c8abce1b0c82",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "60f38e8e-c88a-42d9-9bbe-6249097c604c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95d0be9c-aca4-44bf-a30e-6f868301afd4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd3f9298-1812-47f7-929d-5d30f3a4f671"
            }
          }
        ]
      },
      {
        "id": "7943182d-b6be-47b4-bf53-ecc993dddeea",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4592439e-6700-4a8d-b8fe-47d750e97ecb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e172abb3-1f3a-4db6-bb6f-53a7bb53c601",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "01f5efc8-889f-4bdc-8ce4-e5c082cdcad2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db4f3ef-bd38-4318-a831-29d7c694dfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0924acc-ef8c-4911-bfe1-4ef5fc21ca72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a29666b-bbbd-484e-b65a-ab4d30af2c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "13a381e9-9910-432b-b344-608431fd584c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b18441-4e02-4e9a-888c-703d0326d787",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e96bc6-fafe-4520-bd92-a570b0ac4a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81430394-4521-47e2-ad47-99706efb632f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7787cb-f345-4135-8d91-15b3a34bd782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec77ea3c-0f4e-4fab-bb8c-f9564a93e76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36dcd090-d58e-498d-950e-6d53eac67687",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd0d0eb-7a4d-4cbf-9960-1b23554aebc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c96e3898-5884-46df-8f01-8a3e1ce13acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca650f2-27e3-4d72-a0a6-2bd70af1ccd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df898a28-7d48-4d29-a5f8-6d810fe29eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e6ec6a-5886-443d-a064-fa312a04f68b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34908078-7418-439a-889d-92dfd07b7b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ddcbe1-7590-4da0-8a82-acee894f260a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613a2fd7-7e10-4646-95d9-33003e95f78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12267848-8a40-4f26-828d-ce81366eb24b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e5f915-c169-4b76-a408-ef671b0ba6be",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a040bbb4-7abc-459c-89bb-78a8601c7996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79b691cb-1c8d-4a6e-9548-318a097c7b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49310bc-21c7-4a70-92f0-9849fe720b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13aeef27-08c8-4136-8a76-b708b69f50c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49cfba1d-aaa9-4588-b6f5-7ab5c9174085",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb8fd62-2aaf-4e33-b41b-e800c33b97ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d89369e-5e86-44bf-b654-aeecbeff0718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5fe48e2-d40c-4790-a37d-8358021d5547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f829d7bb-8bfd-4ccf-bd38-ae2d9c692435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8679e0-6da3-42f7-ad8b-325e289867ba",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ee9582-155d-4231-a51c-41c8aa908934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51578a97-670f-41e4-bb35-599a690ed986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5946921-5158-4465-8db6-0ecc8134bc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f252850-d55a-4326-a606-2ae91fbd78a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7d6646-9973-4e40-baf0-dc93b3fcbd1c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a1b083-de57-4252-a3a8-9149b8436b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f5c468-ad93-4c20-bb70-81c00c68ec3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33feaf97-d563-4d42-b4c7-182c9128e45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb1b0773-9fd0-490b-80c9-7ef858f4b4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bafeb96-f690-4397-9798-3a0fb2a0d7ef",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe46685-2742-44c4-816b-8de86d5e405e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c92cd925-ea8d-40da-96de-683151b484b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb04dffb-0ca7-4a99-b9a1-69242da21b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dfa7718-cccf-4946-8654-3fa57d6ab5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5759ed-635a-4781-8ab3-6255e09f4862",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa84ca2-2b21-4e6b-8870-d780d5407d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be0a32a7-c0dc-4b78-9807-c385f003a244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d950841d-eb77-4d80-94a4-7a0bec186adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef1c9de8-e0cd-4d97-b865-9102d1a5c3c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0107a49a-bda7-4f7f-922d-01d03fbfeb05",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e1a82e-becc-4896-8e07-ac2a9ad0cdad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a6cc149-6c86-4d25-81d7-cf3f2c363b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b32c64f-ab7a-4de3-b415-242fd5797bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "801a3a4a-374f-4b38-b6f6-9185d8d55145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb263aa-b598-4ce5-bece-598ba696762f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6433d3f9-7f96-4b14-a267-5c0264ce5de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f87ef4-940f-4a87-b2ac-7ed289ca7f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dff6a26-4592-48f9-8241-e1d203ed1e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8eaa0237-0ac4-447d-a961-91c2480d3f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff46ef93-9e43-47e0-bd25-617ac05403a6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3842905d-eafe-4736-80bb-ed8318689c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd02a74-33ce-4465-a977-47da9ee7b1e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929632fa-2f2e-406c-9de9-1970e5d7c979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0618200c-0f12-4d84-82d5-51620b0dcc01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123eb43d-6c1d-4303-9d20-1cb9af40703b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbf2e9f-4422-469a-a8f5-54e1c8fe700a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfbdfda8-b129-48d2-a56a-254b71b13a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04a5583-56a4-493b-a058-4fad5f6cf803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbfdceb7-9eba-4066-bfbe-0fa49ed36ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e238c1d-78c4-4409-a9a2-f06fac83032c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2958d6f7-4769-465b-87f5-6f79d8cf1dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff329f3-9852-49ed-9279-dc06caca922f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a377fefe-4b01-458b-b7b0-e165b43f6ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0d46399-e3f2-463d-b5ef-eadfbb9bf4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76924a41-e554-489d-8a6a-99044163409d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97649c0c-6631-4581-827b-64269f889d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ea11663-4c0e-4803-929e-deb0432c6d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cffae09-faf1-4b1b-88d2-776e94664fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c2e290a-cebc-42e2-addd-66c744b9e5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c48629-2be7-4c94-bb6d-0344c77a4a34",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b555c832-668e-4a53-bca4-68c7aac4076b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c0aacc-8b50-468b-926f-33f0a3ccbe57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a1f19c-c03c-4b91-80a4-628e39a367ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "28e80d55-8b39-4545-91ab-f3bc6446eb78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3449fce7-8294-47aa-b501-922a19b48af7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09469b60-012c-4d4c-9a61-6d67f6d70e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0dc6228-5478-48c6-8af6-84fa99448135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07605abc-4e34-43b3-ad35-fbb244784141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "877f7a58-ed3d-44b4-8631-3e8166225829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db68a221-35f2-4bf3-b5c7-94cd9c3b11a3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61539c9-9cbd-47b9-b436-30ba4865e868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d38ce12-18c2-4615-9b0f-2092d1af388f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7d35ce-f30a-4734-a8a6-d727b8e47719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca6c390e-f80b-4408-9984-69a8b856cba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409dec30-7e0a-4903-8c49-247552588024",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a81f351-9412-4eae-85db-b46b51a96483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03fefca8-e2d5-4d62-ba66-d1b5708c5ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab03991c-1365-439f-807c-bb3b8317865e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0644cc-e973-4529-a576-f493f0f8ff14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab286b7-8a4b-45de-92b2-4576946dceee",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e81ee1-f26c-4b2b-b589-3f7ae1cafb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30111a2b-4deb-432c-88ce-f8540d076535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d816ce-7f3e-46c6-85a0-0747d6aa9c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c7327b-ef61-4966-9287-6aeedd6c20f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff9be03-f97b-46e3-8682-b4220b0b8f98",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2da45b4-6f8d-4b06-bf15-858692b287f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f20653c8-af65-4970-af7f-f28822f271da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c4cb61-498c-45b7-96d1-3705e4df9f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59d67d90-6701-4ad5-8a37-d6d6cfd9d4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1e40b6-83a2-437c-ba66-66dc0e4ed621",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9b1b6a-0d42-4a1a-8a5f-75613bab1ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eeb6b1e-7664-431a-af23-7f90aa6f60c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae11e1c-e986-4152-8e03-db587c583303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3aa1ca87-1408-401f-8e97-2351dbde4311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c078fc52-7cd6-4ba7-a26e-d483a26c02e2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c1370d-d7dd-49b9-9d6d-acfd46edb203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6985bf2-467e-4889-ace4-eb0927af4862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f291c774-519d-43ba-a126-ffd5bc2dbdfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24c11ac1-8c0d-4170-961c-52a9f7e14ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88454f5-5cd9-4f8f-b485-ac1b0e048cb0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "075b6b3c-393c-41ec-a37e-cc3c4eb84a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3fc895f-3e3d-404f-9c5f-43bb684f867b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83836c0b-8afb-453c-97e5-ca49045fe04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62a290e2-0eab-4746-8dc0-d2cdc7a0a483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0529f8b-374b-4ec5-af5c-f079b0bc4451",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2893211-3627-4dda-96ca-423d232c25d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6ffb5b-7810-4e1c-8de5-c8423caeb17e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfc0ada-637f-45dd-86c7-6a1866e66206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54c9a678-ec08-4e62-8342-bfd7cf32bb1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1606d4b5-5b64-4abc-9448-4af507402726",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f399e1-e4fd-4a2e-86a7-c5630022af42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a10f19e7-a20b-4531-b47e-aea871245764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f2611e-1210-4598-96f9-9fde5cf7b166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbedb77e-56fe-492c-bfaf-3fc4aa675148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b161096c-9fee-4271-9186-de09b94e8539",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9baf02-c035-4f9f-b6ea-38983b6e3af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e5eefc8-1be5-47a1-87d8-6a0fc0dfe48e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1bcbae7-8260-4535-b352-6fb7efed5954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2be4eb6b-b67f-4448-b45e-9c0556b35638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f3e28e-d908-417c-9088-74d0b664ca13",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2abcbc-87ff-4338-a29a-50d6cf2c4ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0aea5d2-9beb-4b34-9a34-5a18f5fc5b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8c61de-bcd1-42a2-91d3-a0e442143b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fee74a43-4930-4eb7-9f71-a640f774336b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dfd8ae2-e2b5-4379-a80a-351032b30ac0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7073b55-063a-41eb-8ef0-30d043ba04db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d47e2565-0e6f-45cc-99b6-0a342ef88e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e392668-2a12-4c34-8b50-f7da686f0a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db85edb8-5eea-4da1-ba55-ada7f1c3d8c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09319945-5d0e-4ccf-88fb-7862e980d3e4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed59939-7ea1-499b-9448-d2a010b1ef30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a7bf51-0ac3-48cb-ab82-572773f2559b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f849c0-d52a-4eee-97c2-503891d00e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd876d97-93bc-45fd-9747-6afb1b0601cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8d8814-0a09-4a5a-99dc-6ec9377ff172",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f7fb18-2765-468b-9754-19fac0c60794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b51fb1-d49f-49a7-bcd7-886e4b8eaec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefdf211-190d-4fd2-a87f-5e8e869222c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d4f28a2-bc40-4405-bec5-07aebc5b5cf7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e8084a72-0406-4da4-9bff-314d50e185b0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "25e2318d-301d-4e0a-b588-2a578bdb2779",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54385b8-e20b-460e-b46c-8f4865d37c3c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "58a909fb-dd14-4748-9004-18e32f79a539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2fbab8a-9731-4fd9-90f5-3525c67c2bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df78f7f9-c0e4-48a5-bcf5-053906bf7fd8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0d82681-1d3a-4dfe-b9d2-c2cf812bf68a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e50b84c1-4ac8-43ce-941d-1afe22b02b2d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea30b0b9-d16a-4ad5-945e-b1137804d619",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8998e4ea-2e22-4fa1-9283-24a601285e67"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3496da2f-80d6-43d1-9b64-a8126fecb7cc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b69d7ac4-a82b-4939-bd2b-fd7c21cc70a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "488170d6-afd2-4917-a0fb-68bb59f7b0c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c63ce209-6c3c-48c6-a52c-8b0601b6b3e3"
            }
          }
        ]
      },
      {
        "id": "26fb31a0-a434-4b6b-a00e-688c11d5d135",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6f237060-b274-4461-b522-08c89c216886",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a716e26d-e7b2-44ac-b2c8-aa94dfa75775",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "36d5c3c1-4fe3-403b-b3f6-cdaefb798021",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe9f101-874f-4588-bd81-0dd99626e93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab0e043-e25e-47c8-9bff-897d1a1dac7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b230f4b5-f35c-4539-8006-be6d9751aa14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "406066b9-192b-4ba2-af33-ce273cda9a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf319629-1a35-4cce-9f22-d1f62d97f449",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92bba8a-aec5-4f41-8d0c-002207a30d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c4b375d-1682-42a7-a98f-fb02fec1fe31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47bb8ba2-288f-4bbd-ad1a-323b40d0b700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f676ee2f-7e1a-48d0-b662-49c4eda76e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ea53ac-d2c7-49e8-9eb0-61d8b7d4e3b2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b969a76-ec34-4c74-93a2-800fbbc33030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4219197-5f1a-401d-be01-ae52bbdf9e18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc97b3fe-fbe7-4cf4-a1b8-69ac79e569c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "11fe309a-b548-4620-9a63-b08f51942f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a894b8-faa7-4c2e-97a4-9a954879ef99",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23167e6-d9d6-40a8-89f1-fa1f15e47f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a6303c4-aca6-49a3-a60e-b90018afa2b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c33469b-c7b2-4b0a-ba2d-1cbfb9c161ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "130dfeae-3bca-4eef-898c-a1e36fca505a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fa1683-9e36-4e58-92e7-f9dfa95f60d8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf5c2b4-61b9-47ac-817e-e1916ec4cddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0031d5e2-5228-4974-9a2c-11e4ff652f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa99f71-274e-4b5f-8e9f-da8a307ce36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5badeb4f-b64f-40b7-8dd9-22a9809bd45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a3d4c3-64b2-485d-b2b2-8f5c96b5708d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03105ec-9d9f-43b1-8fd3-98b09ba7acaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd8fc48e-b344-4698-a60c-3e95322a2061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f6010a-3cd5-4fcd-bffb-2724e8e71912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0edb4ac1-fe66-4a7f-9aa8-a1f779c9e9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf849d5b-cdad-42f8-9034-f68cec0df1a8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eab92f0-02bf-4466-9a15-c5b7e980fb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6acf5ff4-a560-4b7d-b70e-bc90fe21efd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d72a35b-e3eb-4eea-b6ef-700038476162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d4a17b-3e5a-4b0e-a36a-564c5883524b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e6e15b-a545-464d-830c-9583dacd0ab4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4648e9-4a1a-4702-86d8-40c1b32387fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09b4e6e-a031-4e2b-9187-8ad173d600e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc0d908-1139-45cd-9cf8-d0ab6a217ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b7bd5b3-6231-4d14-a6c9-17a6f86a0f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ad333a-530f-4dcf-9e62-4c61180cb18f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae2e731-5d43-41ac-a95e-1e4ecb0bf8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8a3e38-37e7-4f58-91d4-c16af72830c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6016b95f-cf0a-413c-a498-696b58f2657a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7924d57c-e879-461e-8dc4-29beef541227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31710bd0-6284-424e-b9ea-d8a717ace2f4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381f75d9-1587-49b5-a249-473b3171a706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d36fe0b-bfc7-4d09-a801-1ab66b9890e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034e3717-6e34-4568-aee8-6fee6bf5b487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17461686-de88-4e1e-a028-64945c34b4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0f16ed-f5e2-42f4-8a2b-ea06c4863ab3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f758914a-35d0-4d42-a04b-c5a39b3ca058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba797ce-1a90-4190-84d3-11656a53e1a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777295ab-7808-4d44-b0b6-c3504dabc8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8e71b4e7-3dd8-4e65-aa99-e8dbf1d67a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1515c9ac-ad1a-424f-b4b8-1e172049eb2a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a0f8b7-3d12-44dc-93e5-df0e343a0673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a087e52-385e-42c6-9820-24d432dfcca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bad41f-a8eb-4b86-ad89-bbe861e29615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9f8929e5-33d8-4797-9290-e04dffdad460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38afe65-414b-4813-b9a7-dd113a5304bd",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad4b72f-3da3-419b-80c6-35005a2195b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd13869-280a-40f7-ae41-b6cfa4149060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ff6c92-1cc1-4dbf-bbbf-d719ffb1712c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d46c6ff6-3f51-45b5-a424-1275515d1547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f43357-8ae9-429a-8f22-a3cd27278e3c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ff2b3a-f36f-4cf1-9f66-1a51a0e565f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "883c5a36-48a9-4605-936a-d4e88a544e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7703667-2e66-4f67-bbc8-079193d2112f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2683628-557c-47ca-af7b-5b1951cf67e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5d44b9-6c10-4918-8868-a119972c5aac",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eaddda0-ab69-492d-a05e-18f20fed9cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4561252e-598d-40c6-bd89-1abc3a8f9d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ffa57c-cf21-418d-b6de-5a82a33203ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8102a10-0af7-4f47-9609-3a709ca2e205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c8359b-b59e-433e-9656-dbc7bc441405",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7dffd87-72a0-4074-92e4-06a47cc831d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a99ac1-06af-411f-a08b-b7201748233d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0adf9fc6-7c3e-4123-8d44-33121e9024b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d536bb-e758-4e5b-881f-956bb31ffa51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf01b6e-45bd-47bb-922a-ca25a7be11fb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7bcb964-3518-4f62-803e-8bdca7b9e795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c0f2e8-68d4-4d6b-9048-221a85cc1e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28485ba8-6327-4702-a63e-34934babd4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b908508-a764-4e01-9b32-d4066c7c670c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788273b9-27f0-4470-8608-acf2c5bbaa0d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec049226-a539-46d8-9d23-9ff32740a727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b9fc92-4b66-4952-abb8-be37d140cd6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43075031-afec-475d-b45d-5951df7d7af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b49ecca-d37f-41c3-a9a3-8797b3da9bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b79553-f5c8-475e-b22a-1f8f151ad54d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfb2652-210f-4c17-9f8c-48db7b9cdc11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8086c409-fb3b-4543-b28c-eeb602f2d022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d1cf66-bac0-4dd9-aa64-9a0c3e0c086f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "546b45b9-813a-404e-91a8-9a37523d4930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eba6e4e-9884-4e63-a761-d353a4dddc3d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d98dec6-e443-4469-a67d-ee19cf9bba34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f643bc7-6c65-45c0-95cc-635f12e3cd4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06185235-c250-48e5-9ba9-a765789432ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "635e2822-0d7e-4b5a-bd1e-1f747377fabb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a891886f-4fa1-400e-a99d-a0d34dbd69f2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67124114-5e96-4cea-aaa4-56c4641ccd46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d76e594-bb40-44cc-953e-566edb2358c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd83a3ca-8d22-4801-9b3c-ac2ca58ed7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c311f872-4ec9-480b-bd52-b1369b7c2eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f459e8d1-2514-414d-8a24-b390db1fe41a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e805146-9d0b-4d2f-afb0-a46ab3acef36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb85c7c-767d-49cd-87cc-74b00366af6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d855b81-f489-48cd-af6e-21c94f9ee8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55e3e5a0-560f-43d4-bac7-a4eb0e452ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc255f73-5add-4361-8029-43897c359484",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1905b65f-2781-4902-bac5-ab1bebb240e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb597f4-5ee4-481e-b23f-33415951039f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ebc995-39fa-48fe-80f0-b65431d27b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfcef419-6c61-48ae-8ab2-e501c589e049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b28247c-2d7b-4428-839d-8c9154507735",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3beccadd-813f-435a-8837-642e1083865b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d160b54b-6301-4216-a40c-2544fef81f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2709d6cd-5df8-4b98-b5a5-8b401de2d51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d11dfce-3f93-4c1b-a719-6834cb6773b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eaef7a5-5cde-42be-a5d8-98e4d53bb3e0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e07bbc0-e301-438d-b2fa-65ddca31a243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7791ee45-5866-45d2-aff6-472e4efde406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da5a7d7-0682-4a71-a002-b26b68c920a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f0c5a3b-cd03-4135-9516-b0f3e5625f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d337e8-d1a6-4416-a68c-f7b2bb86d68f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b96df4-6b28-4a05-9686-0a172d6f347e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7604ce5-f945-4bb2-b650-a848481ad521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b808a98-e091-4345-92f2-324081d8ec1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b1cf23-bacd-42db-a4c4-7eca1cb18515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0491b9ec-5e0f-4e4e-8fd6-8f22ee10a39f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e328728f-83c0-4960-9261-d095dec57866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e9bbab-9f3b-4eef-8c2e-81e6fafb8cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf930f8-bf96-4cf4-9817-03dee4ed4228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a381b9fe-f7f6-47ae-ac46-64b21bfba313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267629a7-7f76-4382-aa4d-4cb1a37dd508",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef2e33b-b1b0-4c52-915b-958c717f4d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "976c2e04-1a0d-4d19-94d5-b90f3e88d107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f027b926-78ec-419c-9587-10502cfa0b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe691787-6d39-45b3-a519-a987200359a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaada308-8c7d-47e2-841e-5e4400782e07",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "068a0628-b441-468f-a031-d6e4b799d6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e28173-3213-45b0-b4c4-66f81b6e8b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e130e3d-1a0c-4759-a33c-a609b9f5d285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c99b4fff-cef3-419f-af95-ac1db2d729c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc3a675-f14e-41fb-a730-3b3ef667eeb9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c8b851-1cc1-409e-b92e-629e677457d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "185d5488-936d-4092-b99d-03572e940d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b84af4-f1ae-496d-aa3a-05af4a5a7691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f184d2-5071-4813-a72d-d0f4acdab08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763c1d48-0f3c-4e2d-84fe-c31696c73085",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed969da-bc1b-49e1-b91e-f850ab14f0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4434dcc9-09f6-416f-aa79-dcac7cbffc4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94bcedf2-5668-4b4e-b4e4-48fcfb447d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aac3582f-dad9-46da-8ce5-3b59bf516b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beed04c6-4440-4a89-8e5c-295cd496dab5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbdf2dd9-f421-4839-9547-fecd98ddffaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f1384f3-d402-413f-87c3-57df553876b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0ce593-075a-4d21-b871-89e3cdb7d1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49714090-ddd6-4ede-86b5-e7d13e8b91da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e8a3e9-1ac6-44d5-b6fd-cdc36d25f1a1",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72df2545-98c4-4d74-927e-2e679a2dfd76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f31b337-06f4-4800-ae65-26d92be848b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c95f36-e383-40a8-8eaf-d146f42192b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5170e31-0c91-48e3-818f-020ec194c0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201e48b3-b01a-4f4f-a704-0010b50ba1bb",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "638841db-8a67-425b-8f96-4c18ded950d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "565c7606-ab10-431d-a130-8753da474678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329dc02d-cbc9-4293-9036-8a61d9faaf6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd0d176-6038-4a97-addd-2283a2ab3076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04109a73-b9d4-4653-abca-8621809a64d5",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66518715-3414-4ad4-9d9c-c57610d954a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d91ef3-fbdb-4622-b7e2-60531d8a0894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bebaf86-b2d3-40d3-8d8f-d403f3beb1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66dcf068-879b-4551-9f56-760bc4b51249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a910d349-11f3-49e6-a12d-060bd3747fbc",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a93d5ef-ed51-4ccc-8d40-43d80d41441b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d0f5b5-939c-49cd-b492-7538acbdd49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb0946a-54b9-4b16-9b00-48643e261997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8e8621-f01d-4ed0-8922-45f6ea6f0944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d0378d-4bcd-44be-a1d7-f9ceaddd7b4f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f02025-e9f8-459d-a255-0ab75f646330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54aedca8-68c5-4982-9828-5da7d1cdef44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1262f138-4da5-4ce2-8dc6-b841bd904633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e1eaf74-5ae9-40d1-9201-08184a12be61"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "99833b15-9d59-4de8-893e-d1d1e18a65df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a57da3df-35e5-4439-ba2f-416dd243595d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ccd59e0-204e-42f9-9474-ee33963750d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "04bdcef1-25fd-411e-a4eb-ba51336ae110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08fe4e8b-40de-40f8-9769-3809c09aa953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bbc4dcd0-b86a-49ef-a75a-0766eef3e17c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "369df121-51e0-4a92-b3cf-8bbba017228f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bfa2962b-c041-48aa-8660-2bdf32bc3748"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "53c09e96-adb0-4e9c-91f3-d4a1060a1335",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abb879cd-21ab-4495-8779-7b98afa3d49e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28e7109d-d950-419d-b7d8-899842da7b88",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d47931d9-da71-4e07-91f3-bb37433b9b0c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e4b025e-b96d-433c-b02a-44b2e659207f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "00178e01-2c4c-4c46-9245-8c16fd0928f0"
            }
          }
        ]
      },
      {
        "id": "f961f426-2a74-4165-9b17-374794be98b0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5c3f2c75-52ea-430d-b01d-3d266e55fcdb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80ec539f-8366-4dd4-80bc-5dcce1ee6d7d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e20238d3-a425-442f-a07d-4f8139400fa9",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c61d88a-48a9-47cc-b092-76c1f9437a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef41b8f-3f70-45c0-82c6-76e35c13250e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d9191b-99fc-4115-94eb-777874f5e82a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93195e89-d50d-45d5-8789-fb21b8413e8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5efeabe4-4b89-449b-a165-0a35eea9878a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d4956e-664e-4d1b-88b3-9882e174a8fb",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a84b9f-c347-474e-ac51-f319937e3452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a4adb36-298d-48c9-b9cb-068ceac92769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe38fce-0f31-47e6-a25b-2991cd95f982",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ee4ad3-3adf-4d8e-891b-8516be300099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4671698f-cf81-4e1f-853f-0d2de4144e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3170c04-7bd8-424a-b94c-6a352f02928e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1c4f93-7c05-4baf-94e5-01f74e331b06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e5eee77-401a-4854-adc6-561c722e9d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adce2398-7acb-4b02-9f1e-2a8180bbf717",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85422793-9e58-4dff-b935-53afcf7621e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdf2bd27-9bac-4a78-9da8-ea665cacf7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5597a950-7ece-4818-a49c-790e9eff4854",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48743aa-5a50-4f6e-89c1-2fb103672d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff34dd79-04ff-4bc8-aec0-70b967c43d38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d589e32-5365-45e1-a7d5-63559d656ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81372b91-7bce-47c0-ba09-cb8d92a70e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d48775c-7ec3-41c8-8915-1e3676dc9bab",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13fd5382-b780-463c-ba9e-b52c79cfe4d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e175d7d4-59a4-41d4-be89-27d60b6b63bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e91f58c-2e9f-488b-9881-7ad6e9e0b811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20cb0c29-3e04-40f2-a352-64cef331fe7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69935293-b3af-476f-b5f8-4fede07f1f1b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cc3dc2-f1a8-4160-bf66-9cf11cce1eb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b75f9ee-729f-420d-85ab-e472b5b9eae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "477e9807-0f6e-4c02-8925-8babf67ba0ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e783fe7-8f00-4559-9da3-f81d87e4e820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f4225e-791f-4b6a-8e44-b799ee820fc5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56c51d3-17ed-40ad-a277-241f695604bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90c4d96c-cced-4e90-9fc1-cd74e03da216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9054e94-84be-4d12-8ffb-a6f66bc4fc32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a9628ac-552d-4e34-ad60-7af3f17006b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2783c4b6-cc01-494f-a588-fcdf57b22d3a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fe3152-2492-4ca2-9b6b-54db4242b73f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca3a66b-302a-4bf0-94ff-12600a0d9f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41652e6-b9cf-426f-8764-f04569f32f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b8337f-1edd-41e8-8cd7-58920039014e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10f1cf0-9e79-4a4a-8797-42f515414bd0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405e1143-85fe-4aba-b13b-d0c78a644f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75802955-f0ff-4692-bb54-631f0edf6dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee67c13-543c-41a4-bd5a-2a155fe24bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6238c397-55bb-4d3a-bbee-6ffe225e49b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0e4a4b-0f79-45e9-abf1-e4f0f5dac369",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9738c254-7949-4004-aa90-779216f2c03e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e7ed851-5adb-4c0b-9005-701f9ba36d2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d693ad-c6bd-43cb-9ead-f3be3408f53b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cbbb1e9-7542-4501-b30a-251e7cf55809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c85c6c-3c6a-4760-9efc-5d896d323b5e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7597bc2-6637-4996-b914-b7b49f46c7aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b552d5ac-9d42-4cd2-8db7-43df8ed598a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6182b6-f384-4e89-acda-edbb9d5faf80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e262ef3-c964-46db-b106-290c7a65a8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e548c62-76d8-410a-8293-893e2d06ca61",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f943e0-6548-411b-8f94-f9b492994fdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7eae1cf-b7c8-4d47-90df-c5da1a81083e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "399fb132-9f4a-4d7d-931d-d467823ce162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c05a2066-1a13-441b-9a82-3f60c994fc97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54650a8-00f6-4047-944b-af3fd752587b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99de9fe-574c-490b-848a-b39bc1058371",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66c322e9-0d88-460c-a9dc-c564d38ca858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc871590-165c-41bc-9920-90cd96c171e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e493021b-e4ce-4831-8791-dd58f3f04fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc01a24a-2ea3-4677-8baf-30fb661b1db6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785c92a5-79fd-44db-a217-ca57cfe62c49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32209e43-6192-4f8a-a6ac-4dfe311c6b23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ffa539-7a7f-43a5-b310-2d7459b65d8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90953b22-6d78-4722-8258-50ff23e00c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b74a84f-d96b-4a14-87d4-5503e89e9d9d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8586f6-a831-4c93-af97-9890b85f5df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf802dc-a97c-4b77-84ce-cea575d8a6eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0febf3-00cf-4dda-8660-1810a41a0dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55dc829d-492d-4d03-adf0-95a9b8d7ef83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d246272a-19bf-40a4-b2bf-72f43fe1d957",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea381ba-7419-4175-97c1-910e3335ca3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b79df34-ce89-41ef-ac13-b9245b7a9c7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "912c8e36-7570-4ffd-889c-8474bae0bed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a7c19e5-8be3-467d-a93c-682115410477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd7f8f3-1cc0-4195-a73b-c5492fbfc9d6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e18f50b-e348-4452-96b0-8b9cd6beb82b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f63cec01-4d79-43d4-acdf-f41533da0399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e67e1f3c-3551-4f28-88c8-253f70ae428e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078c22db-07e3-4979-9349-05afadcff22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9647a2-daa1-43bd-a6f1-97f586cbbd9a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ff9ffb-7cda-476c-9a51-71065fd92d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "142b2730-46a8-4f73-90f7-c121bc669d15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a72b27-6707-4058-88b4-2e949111a97f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "287b78e7-cd83-4682-8717-390de5c7880a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645d28e1-3cb4-46b1-8e7d-fa61d0875209",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4b593c-b4ca-4af3-9850-865a8cfd03c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "812c8c00-c4fd-4f60-b00c-468eb70f75c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7e4909-0c82-4a47-9d0d-d26dfd4d25c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc11ab0-8e2a-4d2d-b11e-8ca1f3c69440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d08ddf-c749-4ca8-bc8c-eefb06e40d66",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea711971-a43a-4ac7-a200-dbc6974d1d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c404c442-ad16-4825-898b-9cc0ee1bb492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa28cc6-f6ad-41d1-93a2-0019a1d365ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "408816bc-a029-4168-95c4-137279ac72f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97208983-d22f-4f0e-b5d9-fe3c27fcd7c7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5ff616-2a13-4890-8a46-d49496427fbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5dfccc5-f075-45a4-afb6-9131f6a3f9df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4982513e-c893-48a2-8340-c00d2eeaac72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a5b3d3-bfc7-476c-8e70-1c8a33b3c03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4e4968-7de1-41fd-aa41-ad4c45085fcf",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9764fa-ad53-443d-91bf-848da1e7a7ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03b591ab-270d-43ab-a656-926d5785f51b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99cafbd-a4de-4ba6-9a60-a165dbd01001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67912ef0-6bb1-4958-9f47-211e9ed34fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9c2ef5-2605-4520-a6f2-3cda4796d5b3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f5aac3-fb33-45d1-8bb5-590b83e0efb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "426e7c2a-808c-4a73-9327-2b605cc0e5ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9f6bf2-538d-41bc-b361-54f06f66d798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8735d5fb-8891-4432-977d-c7fb7c4ed6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c33c81-7646-43c8-86e3-9407bb0d79ed",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba32d67d-335b-4768-8fab-7cfca98c9f86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3bc7fee-e94f-4323-b6db-f3c33b98baec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3eefb7-0a58-4f9e-aba1-885987f9fddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "142aa37d-34d3-4c3b-9a95-b947da8d6e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47e3af1-596d-4cf2-8739-94292819ca41",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7fcada-54c9-46ea-94e9-d321215e1dc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8123c290-1cc5-4da6-babb-6f29e386658f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3324ad-dbf1-4996-8881-655c30d5bc59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0ab789-9280-4b04-a038-544786e08773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8916b6-38f4-4002-982d-514530ae0b6c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa91c01a-a0e4-411c-94be-c406345b2903",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bf0300f-0208-489e-a6e7-604f1219db97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b62df0-43e0-47a5-9cd9-a258bebf8ad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d31496e9-519f-43d1-aff4-f9d4b9c1e914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314f877e-488f-496b-9b57-953870db53da",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124a806f-2b9d-4df6-b893-36daac9c7e87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53e3ed39-0869-4a62-a820-b9b73d9ed480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3948488d-1e5d-4b7d-9341-586e29f42e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f917c9ad-e80f-4a6b-85d2-aaf14fbc0f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ecd6ea5-17df-4d2d-9a6c-e52d566b69d3",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e781f53e-a4f2-412d-832c-44656d5b2d2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "373768c4-6ea8-4c5c-ad3c-3cfb32ec1de5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df3b792-adaa-4a2e-99e7-cf53d5a3fb64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f593ecec-0e99-48cd-8fcc-c42543883676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98788b7-1fc4-4fa2-92b5-226d60e70ef5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933aebac-bc0b-4247-b608-b0e4d753efdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "807daed6-f617-492b-b817-4915ae5c7908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a542e7c8-530e-455f-917b-d5d33905c184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96806317-8d3b-4d2d-9747-c4b66ee036aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184cdba1-7bcd-48c3-9dfc-5c0df7b7cfd6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2751f3-9773-4303-8f79-5e5677657595",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f11085a-2197-4c60-99ce-4e51e62c884c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e101476b-0f9d-4e39-8ece-8308df3c273b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae63712d-8cfe-4810-9811-4a9b40411012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644080df-893f-4316-9cb3-ab8cde9af5cb",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08600ec0-8a38-4314-9b6d-f464e49241da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5707356c-acbf-4274-b3b4-c38e6a92aba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6c585f-8b6c-46d7-9d15-120af3457678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0faf3140-6516-47b3-b7f4-6fea35ae4246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576ea264-6113-4e8e-addd-2c441d43bfd5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0128cf54-90b9-4cb1-952e-42711015fe78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d8c8bd6-d719-4a65-9038-0ef640c01632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "709fb5c5-ae53-4339-8339-55d0a10a1da4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb1c1fa6-9c45-4be5-be76-683547f2b549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a97242-aa48-4c3d-995f-a416cc8cbd13",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c004bc92-4090-4318-9510-f687cb50124d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df69e6a0-75bd-40ea-8f31-df75ed004212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08176b1d-875d-4783-8333-b8589060f525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d921a4c-6e57-421f-a431-d7d83b8fa408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08780ad-8804-4ee2-b298-9bd1c1c33fe3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a443b4-7682-4384-b0b8-73fcf29e2316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d22ecba-ee23-4e1e-a0fb-454e15d971ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4393a4cb-9b5e-4f4b-ad5d-1d0398ca780d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66a28b1f-8352-48cf-a382-09a0df9d76bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2d92af-f65f-4e98-93a4-bb70fd68a670",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794197d4-f6d0-438d-8e06-72b2c6b8a42c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb5521c-851c-41ff-9c10-c66f6b782225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e753b11c-b443-4e2d-a8b7-9a7c0132a695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9cfba3-e5bd-499e-b272-314e8b566cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed307443-a3c3-4fd6-9e7c-14a124b63a4a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d511b470-468f-4b56-baa1-3f33c8312e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f9fb54-07d2-4fec-9723-ba13402ff46d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4cfe2f-3d9b-4349-b4b6-54a3ca5e5431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10867292-d7ef-4e71-9589-c2ae42e4bc8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4455040-5af9-4852-b898-2c5fa27c1a08",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163e7ef1-09bc-4c51-bfc1-0df19953defd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b35d77-3f1c-4b78-b308-9044561ce7df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a3c006-bdad-442c-ac08-a1b75c59ed17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1f9335-229c-4604-a04e-3956f1b858b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddfdc90d-f65a-4f41-b353-a5444f1c8c45",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cc059e-3774-464a-80c1-e4b52a5038d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746dd62c-0b70-4b4c-8ef8-906a06b2aa83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61f21ad-9f82-41b8-8f7d-e058416e28a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f5c1a6-f4f2-4588-b682-4e51bd567770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb82a881-e494-4c73-a886-dcb85c93729d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb3fd67-5d13-4d63-a115-dc713a2ea149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871e2ac6-b747-485f-a9fb-83ef88d93684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a66103c-7fcf-4d3d-8fb8-f5286182ad87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb57183-71b2-4395-a101-9e0db046b9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab6239d-6005-48a6-b68a-967ee46a21d3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42292120-0d3c-411b-8c2e-9d8c81d88b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e5998b-ed50-4395-a717-eb42741de089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57a16bf-9cc6-4286-8faf-9e9ea13b1c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1969eded-d209-4ce6-9cda-830898c73099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39e6eca-10f1-4bc9-bea2-89bcebeda00c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461a26d1-5638-47a9-9c05-42cc5f70b49a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a95b2a-9dad-4756-bfd2-686139e84c3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8128d5-e69f-4a6c-b8b8-d3a856c29392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c671e16b-b8ea-4597-83fc-bb3f297415f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d496c85b-d38e-481e-8339-fa8b7cc19ec5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7d04fb-c154-4a45-9f1c-dd2f6f218abc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4aa1127-2790-4156-a61b-11b5d8c57330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a0ca10-9ae0-4c84-8af9-d0c960a1b15f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60383334-908e-4c36-ad69-18efed83ea8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd566205-8327-470f-8c89-7d3209d8417b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57431e3-b354-434e-8d29-3ff97180edfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d74b79-82ec-483d-951e-3615ed4a1875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4dc6bd2-79f9-41d0-805d-acd5614523e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f4d8839-9c36-4eac-84f7-f6e59c52a94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed59745a-fbe2-4932-b342-85c8c22cbd3e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe892783-c0cc-46e8-ab76-f1333d50ff72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c87c5d42-500a-4c7c-8630-5304523f63fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1cc515-2e29-48d6-9886-e5a35b7e08c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d6c010a-e4d9-43de-abb1-cccc249f7698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a269d83-72fe-4eeb-bed3-a6e3e73ffaa1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8a332f-fca4-4fe3-aacf-cdf373a21c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468a8938-15d8-42f7-80d3-a739288f80f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39dce62-ed91-4993-a1f9-93d11ca4a056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f920b4f4-246e-4ed3-95ee-79c91d33e584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb91b9cc-8062-4597-9a19-e795a2d05b8c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464bdfd9-5325-47f8-959f-cbdc8c251e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e54880-f25c-4cd3-9a71-1e78b6b34db9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7463bfdf-a929-40b2-a5ff-7654b04dae8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "357983ec-320f-495a-ab64-0e9d1ef1eb60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5258ef4-578a-4e2e-a700-3df99797e5d5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50a921d-4466-4b17-a6d0-35c16640d9a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "038582db-42b5-4b77-a918-9dc061310578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb8b336-d5e1-4e20-a601-6228f6c72042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a4187ed-62d9-474f-876a-a3fdb6a2db13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a069791-4ec9-4e04-b7b7-0c03d0279c71",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66eb2d8-e664-4fa0-abd3-fc9ea9535d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e46a2b7-b406-4788-be35-6d92b35dffac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d738c639-ad91-4ef2-adea-72cace608042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8390d62f-d9e0-4a89-9098-f3d47ce5ecb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f647cbc-a35e-4e7b-a08a-167d9d745361",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e26d8b-5ce0-4ddf-adf4-aeea17f770b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b77e2e-bd9e-46ca-a151-4603e254bd17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "295f7470-5001-4d56-a74f-de92bb6c6d9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c813bf25-8b0c-45d5-a3e5-7d1efa7cd2c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8b8cf9-e4ad-4cc0-99cc-ba40750e1fc7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25888c61-5bc4-4a13-bbdf-4e072b7c580e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d80a88-83d3-41ae-baa2-49b5d0b54749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb2d7d9-43db-41ea-90d7-64a51327cfa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "453fe042-b86a-4012-a4cf-2a4f971a338a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251934d4-f832-480b-b746-6eaca67de677",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d5df6f-ef75-4c21-83bd-0c376f36e40c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a602ff-3fda-464c-984b-b6b21fc52a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db8017c-73fb-4994-9c87-f9b39ce42de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "564011ff-868b-462c-af64-6c393c610a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3fca0fa-4917-4074-8ec7-7e21043e1d65",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73cd7f3-5408-4857-88c1-a9ab0fa569e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f26a45f-62df-4cd9-b5b4-6643d94feb0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcc9247-6c12-4af0-aec5-d562219b0808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54514dc3-853c-43cd-8928-181db7b60700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02dc85b3-ec8b-4a52-a9d8-bc25bf213240",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d778473f-dcbf-458e-87ba-cdc30f862d11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaac98c0-71a1-4355-b7fe-1b5f4c7cc9e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1732506d-753f-4a46-abff-8f0cf1b52d00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b74a2ec-759d-422e-825c-f1c6a45db094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd43e931-166e-46fc-9a6b-8a27000ac73d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6995fce-4a5b-4d81-9a61-1f9691794775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7968a583-e044-4c28-9a3b-2d41c1eb6844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b90a39-da19-4a20-b301-2074e73f641c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac814f7-c9da-4af0-acf2-9c618971ffdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ae159a-2f8a-4ea2-b9d1-55cd8eb3c159",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35327e02-29bc-49d7-b34f-035ab174ccd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85f968e-500c-4ff6-a299-647d28e42d59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa914b0-ad78-4e5a-bb46-b4d12d9cdf55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b56b6849-6a9b-41a0-a959-6dc9f7ee77f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc01533-df02-4e77-835a-1212e7b4072f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c8c67e-f008-4a62-b6ee-120e9075853a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7613d45-8256-4408-8f92-5ff8e3a9b649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4430fe09-3300-4223-84d5-836fd1a5671f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d7afc1-3de4-4344-b7c3-18fa77d7eb15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f599235c-4e76-4d71-b4f7-3e3b6887d92f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08149073-1397-42fd-90bc-7411ac381e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88535f83-16b0-4f8e-8655-2302ea92c9ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af95080-c1ed-4168-94d0-63ce4f1df88c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f693a7cb-5589-4be4-adc3-e700b3b247c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d229761c-02ea-43de-bf7c-ae11b30f6dc9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0dd3dd6-c2cd-487f-a89a-e7f046cbf176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b64d8b9-a949-4c5d-99ca-0f11fa209118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "518f5f79-aac4-48f7-a29d-e8a67092082f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a47934ae-be53-4969-b96c-70e3a00274d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648a7b10-18f0-4a5c-98bd-d24c10499ca6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5847c5e3-f5d8-4d91-929f-6d3b664e0873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2334920-6ce7-45d5-8e24-773884bfe2fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6b40af-eed9-4f61-987c-5c91cbafa371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d817c688-5429-41f8-a910-a86f9dee0664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604de8c1-7548-4131-a0ab-2874a7680972",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbefbb61-27fc-49de-8644-02f96366ebe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef8c46d-f056-4647-9f26-28e4b84e8cd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e2c069-26f7-4e53-998d-637ac01792f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4dfef72-9f60-45e6-9ba1-6b0b7270e581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19b58fd-4f4b-43d8-8bf2-41008b4b7539",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9762f9-2df1-4c2e-9eb1-c16281f4533d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54e2eb17-5de4-4226-b8c1-f7fbca7e62cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b0096b-9a10-44c0-b16f-6da427ceb568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d089e8e1-a449-48c8-bc57-5e6c82e28b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaea3af8-0fc1-4bd8-8008-7d29fa2fc13f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69499a5e-e838-4cee-902f-bdfe929cf105",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d6ea580-aea2-44c7-8f96-f035faffd5e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a99328-8dfe-49b7-80e9-409788b9c211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d232479d-4251-413a-8cf8-b3f4e9a9c409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93b424d-5394-4735-b3a1-6d5b198944c1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45fb6e39-b5a7-477c-86d2-1de29401c6b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e15139d-b2c9-406a-83c0-9e4fb9c1ced4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b0b9db-34c3-4e66-b265-73489c12c84a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61bf991b-410c-4cc5-a7a7-9f69309508c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7e3467-6eb0-4d29-9e7a-63302ee4dff7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10431b5c-6e7d-4a86-a3e5-6a08607c83c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "971c88b4-314c-488e-b309-51d531a8e715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "340bf3bd-495f-4e16-b9e6-d5aa78fc717d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de054fa-c352-4ab6-bd97-4159acd1060e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93191b1e-0742-4f9d-b573-53a38e94967c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff972c6-07e4-4aa9-842c-51199675839b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6672515-aa24-489b-b026-c0d5b4f17290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8836f40-14e7-4945-bbe7-525a3e3dcca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0fddfe5-8b5f-47fe-9701-1b3ba31206af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0504b3b-71d4-4f07-8f51-14d406efdfe6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab0894f-be9a-4b3d-9313-81bf9dfad5c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bd6ee4b-e61f-47c1-ab66-9b5f4304dbe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8582d477-8dea-42bd-bcab-c84256ec1d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "052472df-4b82-4d93-8aa2-6d144a7963e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df1d185-b7fd-4e3f-8b6f-f4adbdd62eb9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0137973f-a9a5-4ad1-905c-1a52db358e4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e004caf-ac3b-4b18-bec9-aaf40d51086b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36b7215-cdfc-4aea-a3b3-b289dfc50c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd984e13-9654-451f-809a-23cafbaf486e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a949703-1edf-499b-8e04-40998cd20648",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b4c038-e978-4c18-88e7-8856f0ffd559",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e9d2d6a-50e7-461d-a97c-21b9cc68a2f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db59a2b6-0aed-461e-8be1-ca53da64798f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba55e982-48aa-4c00-a9c5-e1ae0f8c23a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7012c2c-a12c-41d3-8644-577b4b737225",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4659073-c24e-41b3-aeb8-0caf0ce233ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c170f1b8-4f61-4819-b932-0a46a1bb70f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33ae19d-6489-406c-94e3-2500bc43f128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9841b818-b9f1-4fa4-b63f-c0df991a274c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ec357a-0576-4765-9ff9-fd376c5faa11",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c3f980-9619-4daa-bf3c-aeecc668ffcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "899ff1c5-14ee-41d9-8abf-6840848f2a8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1563b83a-b4e7-4ef3-b31f-bd2497ae4abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18162ba-10af-45e4-8e3e-290eca107b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75b796f-d344-4c1c-aa9f-7e3d4e92a74d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d372e6-6d12-400f-8671-1cca6ceb94fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ff17d9d-2bae-489b-8a5d-d58a3bfc8adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e941d4bd-7bd8-4b97-bdb9-d8068d84f254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba1ac0a-19c5-4736-bfab-153da6994fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d4c4bc-bfe1-46c6-a2c6-ac82df92f8f3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503ef803-db29-4062-bca8-d78805b176c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2e586f6-cce9-4559-9acf-280cd0e2c363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f918d796-393e-4794-8501-e1f13183b67c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c05bf5-c120-407d-a73c-4c87ec1d2465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27302fbd-e2dd-4502-8978-74aa4f703f3f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4dee2f-169a-4a23-a2de-0ab2e7dea733",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69e80f99-4d17-4e58-8220-8f7602c7fe18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f2cea6-6967-49d3-9564-512afc5a2cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7da51a-3b17-4c63-be3f-32d83e44527a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68cdf71b-d2d5-448e-b5bc-f1adfb11ea33",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bfe90f8-40f6-4b18-ac81-37a5f901eac3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28b57e7d-b11b-4b95-9e27-8777975a7176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b20c638-343e-416a-9436-fda4a643db2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "192f4363-34df-4e59-8f41-99dd24fd44a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654a9e8d-cf2e-435d-9a76-5da20f07da6f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c226cd8-6952-4f12-b54a-09f43015a268",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b0c92c8-b1b7-4aec-be6b-c62458544cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5502fdd2-7d96-4275-8d97-87718f88399f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc2caa4-b55b-48d0-a36d-9373bed7a462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f85a31e-45fd-429c-a2f3-3925329c3f02",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0efce3f9-c5e8-43f7-883a-1c6acf6d92e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "738f288e-2bd1-412f-8669-a5c981484c98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a541ec1b-2401-4d5c-a0cf-9d22a575a478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d46bc3e-56ef-4cf0-9f93-d053e59d8e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5c6f38-18a4-4817-bc20-bc5e38c7de3e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f261c3c5-9a19-45a3-8219-d9385f267e52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eacf8b8-306b-4f03-8f38-9e44aaf30859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a41e86-6dfd-45d4-80bc-06c165e02cac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f1f3f8-ce70-494a-8bd8-a9a6b2c3b312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0270660-779b-41e5-ad3c-3f888558f229",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39dbe9b1-25f8-4b26-8175-0b73ffe3446f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "487ba2ab-c58a-4c48-9ac4-4664350d295b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef001ecb-78c1-4284-a746-c2ebb8fdbb9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3032bcd9-4b8a-497e-a291-e6e1b163f1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1a44b0-46b1-4c2f-bae7-4fdf30153529",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062adb24-bf67-4181-8a10-e669ee65d3b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99d1cfcf-2d0e-4c40-bbf0-a582ee43085e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b687fd32-bd1b-492b-adcb-59a4c8787b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb39602f-95fb-4cc2-89f0-8cd124e2ead4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5bb9225-e5d0-45e2-b2f9-ff1dc2d9fb81",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7691a5-f355-4741-98fb-1dece341ba05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "045ba5f2-f2c9-4bef-87b9-0954cc733278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa75a6b-6e80-47d0-858c-21813a6f17f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a6ca37-7868-4c00-97db-b064cdea82bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21a63aa-c7d9-4b84-b3fc-557154a73a8b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba10b9f8-a6f3-4c1c-94b0-dccbd5a280fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9645eed3-1368-428b-b0d0-6f731078f407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "511b1c9e-3cfd-403f-bb1d-6681eb622e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6811fe69-10dc-4512-bc42-ff2cfc826ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643a371a-bdde-4ef3-a4cf-a21e0dbed010",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79e2968-11f4-4351-beed-f777023d0003",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33bcc8fa-a754-4de6-b0c2-87d676c42bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c910f0f-8a73-44ca-a178-830210f36e42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d1210c-fc63-4ee9-8c20-910d4ca5e5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4cbd26-7a23-4048-84d4-c99bdfd5ece1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cabddf2-f035-4b96-85d4-16dcda1a1946",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49e3696d-3446-418a-96fc-30501a6ab1bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0632677c-bf14-495c-b760-b5a7e05c69fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8788090-c862-4b21-975a-65ae4af2dae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c15f18-98d3-4f93-9c98-c871708f9114",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07e506a-b305-4ef8-b1fb-8c0db10b3bca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a412d847-93c1-4ff6-8303-1e06f3f4613c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "196a305b-07bb-48b3-b780-c677a4769b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bad8b4f-65a4-4bb9-bb0d-bef7450c18c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7478d897-cd37-4565-b869-37f49ba1b59e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b64e15-3f15-4b3d-b6c4-f5659c6f636b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10ee5c5d-2ce2-49a2-8c69-3ace082e71c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc43000-5588-4819-8556-03fb46e5b82b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e283e1e5-dcb3-4a47-ab6a-a80a99ae3d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed40f90-95b5-41ad-8266-98050aff4ae5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35e16de-e4ab-4569-ab21-872c68669fd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c4bc2ba-73b6-4010-9cdc-e44b44a54fda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5f0e12-c0f1-4bf5-8c4b-72c6417e31e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39fed40-7ea4-4a71-9888-80b38a4b2cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d3ca63-b872-43df-bffa-b0c9778ff8e4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb81ae3-1bfe-42fc-a4b9-2e7553e51155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a648c67-023f-4118-bf0c-a5e751e25b70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37272ede-8491-4eaf-9320-04b44726d79e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c864c7-d136-4f38-8e83-156decac5714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b963123f-73da-46b6-8d3d-ec08357a9a13",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f998f174-4c01-47c0-aee3-48d59b5a53d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cf1c0f8-e0f5-4db5-b52c-cc8ae54fff6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72aace42-0106-4d2a-86c3-431f5d6d6813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3597a2fa-c655-4e60-8dd5-3c26e1ab8cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e3800b-f1c8-4b2a-a7ec-b07e11f94902",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a4231e-ee7f-469f-a986-537725bdbc15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bba15c5f-a01f-4854-873c-27e2331db3d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebac6759-a91e-4777-be0e-61cfa1c1f062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d722e5-387e-4e66-b29c-d02882a17701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28142fd4-d962-42f9-9c7c-95b5fb1cc630",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8bf189-4e5f-4ac9-8308-f0fc3b3c7c72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63e46041-1783-498f-a725-1959d6b63580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb33ade-2594-4672-9dfc-5a1356740a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "815c77ac-c438-48bf-a6ef-24735c989413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09241d4-8828-4453-abb1-1f05e84e5219",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba33250-8a00-4122-8ba5-4f68ccb4092a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b8f832a-a7c7-44d0-b610-02192e55dad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1497936c-5570-430b-bc0c-5888bc5b85ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f693745-2050-4254-8979-d4aaeec38b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea4722f-f82c-428b-979e-1788e15f2b72",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00493785-0412-4155-86f9-1f81c3a62ecd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1e19194-a930-4c5a-85e9-638a2793f50d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8197e2-af47-4368-80e2-a07007905297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c858339-0804-47b2-88cc-fb9253ef98a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdbef0fd-e7d6-404e-8a8e-b05a485fe564",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077f6302-820b-4ff5-afe6-d3513d489870",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d0b90be-ccd9-4ba8-b2b0-437aa1d65e38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e0fe44-2e6d-4e5c-b76f-92b3342bce8d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6805a00-ac4a-48e1-b272-3c58c33e9ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2735b5-7796-452b-a17b-79a5c9c2fed0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24488f98-ddd9-4216-bcce-b6ffd8ad42b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b178646a-0dcd-4e09-9847-173c34b012f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4421faad-33b3-4d5e-8cc0-532ad0ef0a45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea94ca8b-c45a-4324-9265-34e4993accf2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26988bc1-d08e-4df5-870d-b4bd5a8688cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de513342-a3fa-4bac-8a61-0ac4c8e85db9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "19543fcb-25cf-4890-99a8-2766605c34a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "44ac5ac6-0d8e-4492-be08-82430a131ef5"
                    }
                  }
                ]
              },
              {
                "id": "3164df9c-8965-4c83-85b0-d007213f2fe8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "161a5b6f-7a93-41d9-aa9c-5f9b4425fea0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c2c5a6-ce92-44f9-93c4-3ee8208301ae",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c2b951bb-5a5c-423e-a926-bce8f28850f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3732668a-147d-4d6c-b5a9-44076c377ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "410a2658-435a-4824-be01-ead2e919694a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6db41d57-e715-4471-b41c-698438700025",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ac29282-2d2d-4951-a828-29746f7c92c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "933e282d-e524-4b33-add5-974a77a37824",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9431341c-2b41-4544-8cfc-540088f26053"
                    }
                  }
                ]
              },
              {
                "id": "5b567a2b-d67b-4d42-a984-bbee3d8c3476",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fd26a8e6-259d-42e2-8e4e-18c8cb24f936",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ddeb45-0395-4013-8a0f-eb300823d089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ae37b0da-28e2-41de-a40e-254efb85cda2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e573e4cd-c205-42c7-a2d2-077b6d089004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f18f35f-7de0-4a53-98ac-3352a9e7df7c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7cc97211-9771-4a28-9a6f-3c0a46703ae9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f87a778a-15d8-43a9-86b4-6ac4e0969d0b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fc04414-aa4f-4856-8596-baeaf7026849",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c2db94e2-c4f4-40f0-9b35-fe23edb156a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28f7ec37-3d7d-4d65-bc33-854aed124e01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34a10e26-a4a3-4497-85be-d187f289b646"
                    }
                  }
                ]
              },
              {
                "id": "2bac9900-3f85-4478-bffc-53b2efd7b34a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "18226098-9fab-4856-85c1-f46de8524a74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1dbb459d-104d-4ae6-b34f-156038029c20"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9d4e3d6-4360-431d-ad97-083a7f25133a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df6f9208-fe6d-40a7-b9b0-7f2c8e33d5b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "80cdf494-ed30-4cf8-874b-3196ae1a008b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fafe8baa-632b-4fe5-848f-349bf17a7f73"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d97ca9e-b50e-4b7c-b85e-b8772127f224",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0586c5f8-641c-4e5a-885e-e2d4072ce980"
            }
          }
        ]
      },
      {
        "id": "e6b8bac3-1127-48ec-a7af-451032b21d7d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9197fc75-29aa-4781-824a-113de6186cb6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "17932aca-2a86-4995-87ff-2e64de4db72c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f738a32-33d5-4555-9244-6dfb07a5d89d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7a294c-eef8-4ab6-aa4c-aefc66e6ccf0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f7ec3ce8-5541-4447-b6d9-6e96c552d27d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37997648-39d0-424a-b9c7-01fc9f7e6f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "330482c9-6351-4aeb-9b9a-d24dfe1179c6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4206f215-a11f-4748-a5f5-d0ba719f5d0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "724814ef-d58d-4a06-a133-7ee718e27828"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8f9671e-5a5a-4b90-a4e0-00975a4ae987",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25cbcda4-c1fb-47ea-995a-f30ac642ea1a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7cc2b83-430b-45db-bf24-641a718b624d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "172f5861-e613-46ad-bb56-493c833ba23d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a3a65d62-6f9b-4efd-a9cf-3ffe04bc6897",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a4d6ad84-d7af-443a-a60d-8e92d4c22a82"
            }
          }
        ]
      },
      {
        "id": "0e03bf4b-2dd5-47fc-b5ee-c2bfae0203db",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8c46ac27-b8ee-4b44-b088-fe128506b672",
            "name": "Negative Testing",
            "item": [
              {
                "id": "568ab356-7d85-40ec-b5b1-e4d77ec8ca1f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "67753f1d-ff25-45fd-8390-ce2694990659",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d76fc1-bdfd-4b3e-9942-f1d516bb4636",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7b63829-0ac0-4773-b7a1-cc9dab4fc9e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55307a61-e45b-4e3c-9239-e7baae8385d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a4e89f1-e8d8-4769-afe4-4da4096cfe8d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ae76de5-2c83-4e6f-bca4-3b9877b1738c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d22b7228-7f94-4215-a192-d5f80c4847c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f3a1de8-5b97-4ba4-876e-c3742ce92303",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd2e47b2-3934-4e16-ab82-ba84400b33fe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e561dedd-8aea-4c7a-b58c-6d01d4ef0ef0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4289afa3-1a7c-408f-ae0b-41eace90ef09"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1921f16a-2eef-4ff3-a8dd-8cdb9cbde913",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60b05165-4188-4266-a5ce-6178fff03c0a"
            }
          }
        ]
      },
      {
        "id": "5765d8b1-4f1b-4dd3-b40c-9ba52798149c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a1f038e1-0f32-4546-9ab9-49b8d735d63e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "adb4f659-6b66-4c93-b1e4-b9de2d454958",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "87b39952-fc88-43d4-ba3d-8287259b94c4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb312440-5330-4f13-921e-fab673e0f322",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a697af29-d725-41d2-a5e7-71698ca325c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "352fe040-f66a-4931-a502-b80b47f3e5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f47952c-b4b2-4193-b9d4-e73b867e02d5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "453793a3-3990-4831-a4a5-134832f0025e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e964946c-7285-4a09-b675-8a073c31aa02"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f3e7b20-f02b-41ef-82a7-2deb9a2ec913",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8706931-9467-4759-8a55-0aba6c96bbd1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b94f9efa-33a6-4139-83f2-5be9a562e463",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "46686bc1-f496-4089-890e-94b56bb867b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8884254d-edda-432f-9715-a0c0e22ed632",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f9db4843-f267-4afd-a45e-d8e39f28464c"
            }
          }
        ]
      },
      {
        "id": "323863de-9306-49a5-954d-51634d0ed54f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e611cad8-05d5-4c9e-9312-a9fce1943518",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "759e06de-cb88-4b99-90f0-a21915a5e65f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3c8436ee-1396-4fab-a96b-4298dd60ba5e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c8ce1a6-3935-4269-b75b-a9e5fbd044d8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed078693-e754-4471-b753-2ce41b9e751a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 140.03873239436618,
      "responseMin": 30,
      "responseMax": 15226,
      "responseSd": 975.3265046912867,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692664316382,
      "completed": 1692664367787
    },
    "executions": [
      {
        "id": "69bb78f3-5292-4099-bdd4-49ee5173aaa1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "35a8cb73-5656-4315-8f2f-6ca28d73bf49",
          "httpRequestId": "25bc0644-3a09-4c85-bfa1-21b58a391438"
        },
        "item": {
          "id": "69bb78f3-5292-4099-bdd4-49ee5173aaa1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "db4689d6-ae2f-4824-8fdf-ed5cc3253e0f",
          "status": "OK",
          "code": 200,
          "responseTime": 1088,
          "responseSize": 0
        }
      },
      {
        "id": "c61a043b-7a2b-4f39-84dd-d86306ac78a1",
        "cursor": {
          "ref": "38b45463-927a-47a7-bd47-73e0c32fc940",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9218e2cf-0573-41fc-8375-2f7d27aa1989"
        },
        "item": {
          "id": "c61a043b-7a2b-4f39-84dd-d86306ac78a1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b123465f-aab2-4db1-8d95-bad79c7bfa1b",
          "status": "OK",
          "code": 200,
          "responseTime": 405,
          "responseSize": 0
        }
      },
      {
        "id": "bb12a23c-27fd-43cb-a4fd-6a20566a8789",
        "cursor": {
          "ref": "9f959b5f-55b5-4133-9a3a-27ebcb9df08b",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "25f6f13f-938f-45dc-8478-1ff8f581535d"
        },
        "item": {
          "id": "bb12a23c-27fd-43cb-a4fd-6a20566a8789",
          "name": "did_json"
        },
        "response": {
          "id": "7df22146-e07a-4a7a-b78d-81316ea0a9f3",
          "status": "OK",
          "code": 200,
          "responseTime": 294,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3755e829-9e28-45cf-ac9d-d322ced73b70",
        "cursor": {
          "ref": "11919ce6-7e2b-4819-92cb-d3ac7f7bef9e",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f1668371-53d1-4f6e-85d2-d5ad4bf129e6"
        },
        "item": {
          "id": "3755e829-9e28-45cf-ac9d-d322ced73b70",
          "name": "did:invalid"
        },
        "response": {
          "id": "779d6f09-9c29-4575-ba31-4b1bb5c1eca1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 795,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3755e829-9e28-45cf-ac9d-d322ced73b70",
        "cursor": {
          "ref": "11919ce6-7e2b-4819-92cb-d3ac7f7bef9e",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f1668371-53d1-4f6e-85d2-d5ad4bf129e6"
        },
        "item": {
          "id": "3755e829-9e28-45cf-ac9d-d322ced73b70",
          "name": "did:invalid"
        },
        "response": {
          "id": "779d6f09-9c29-4575-ba31-4b1bb5c1eca1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 795,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2f3c1e-925b-48b1-a199-5fbda1b5609c",
        "cursor": {
          "ref": "9bb7a972-63db-4882-b843-57c7a2b1018b",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "19df5a24-9942-4afd-8a02-38fffe06c16f"
        },
        "item": {
          "id": "3e2f3c1e-925b-48b1-a199-5fbda1b5609c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "28bced03-7269-4edb-8b4a-88ae8fe50b04",
          "status": "Not Found",
          "code": 404,
          "responseTime": 41,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b796f6-941e-407c-b40e-140c02049ede",
        "cursor": {
          "ref": "bdc22db0-183a-4f20-a36b-a8a115e948a8",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f269f599-57fe-4b09-b021-564e4f12f57f"
        },
        "item": {
          "id": "c5b796f6-941e-407c-b40e-140c02049ede",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2f1dd61a-40be-468b-9014-f2d6daeb1583",
          "status": "Not Found",
          "code": 404,
          "responseTime": 117,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8647da16-3c8d-4daf-b215-e3793d6ab063",
        "cursor": {
          "ref": "de20e616-b166-40e2-9fa7-54836a141fbd",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "147b68f3-f8da-48a6-aea0-364b806c89f5"
        },
        "item": {
          "id": "8647da16-3c8d-4daf-b215-e3793d6ab063",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3463078b-f0a3-4fef-98a6-93ab0f14a128",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1717e4-42b4-4db4-b63a-ee7d0af5ee04",
        "cursor": {
          "ref": "e2b1a613-3002-4023-a6a0-df766e6a8f07",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d343a6e1-30d2-4bba-84bd-d310d5f0db79"
        },
        "item": {
          "id": "8a1717e4-42b4-4db4-b63a-ee7d0af5ee04",
          "name": "identifiers"
        },
        "response": {
          "id": "4783c262-e4f0-4009-a41f-709f6b98cfc0",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8976196-e4e2-4f95-922f-47be9f5f400c",
        "cursor": {
          "ref": "7b6babcf-ab99-412d-97e0-7ff241d275c6",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "53c5de85-37a3-427f-93ce-5c5d3b213048"
        },
        "item": {
          "id": "f8976196-e4e2-4f95-922f-47be9f5f400c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ed098289-7f8e-4f2c-99fd-a34964c64806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdb2284-9182-470c-8a5a-edc43ffd5afe",
        "cursor": {
          "ref": "f792f725-7397-493c-9dca-3684b9999f14",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "eb1775be-fc69-4ca4-8b33-396f36bf8df6"
        },
        "item": {
          "id": "2fdb2284-9182-470c-8a5a-edc43ffd5afe",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "716d0489-5321-432e-b897-4081711e1b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54da1e7-77ab-43af-9ae3-f528694ab4f4",
        "cursor": {
          "ref": "2cc2e9e7-dd82-419d-b109-f8cf31a3376e",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4dd4ceab-73dc-497a-8671-d608ffbb9fcd"
        },
        "item": {
          "id": "d54da1e7-77ab-43af-9ae3-f528694ab4f4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9565eecb-258c-436d-935d-c0a6a977c35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af69d748-7d01-455e-9e0b-c4aadd8ed441",
        "cursor": {
          "ref": "5b1878c1-158b-49f6-91b6-5201ecbc7147",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8e815a67-57eb-4c42-876b-5ab6c8e7da47"
        },
        "item": {
          "id": "af69d748-7d01-455e-9e0b-c4aadd8ed441",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "db800fc8-0c9f-4177-95f1-68e413dec515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984a9629-46b3-4132-8b34-476c7bf967d0",
        "cursor": {
          "ref": "3e4bf619-258b-4000-9d86-d1a43231c085",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f68a502d-204f-4353-859b-ddbe69e828a1"
        },
        "item": {
          "id": "984a9629-46b3-4132-8b34-476c7bf967d0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f6015383-4eda-4f25-a2d9-34190126b631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d73dab-461b-486a-ba09-11b524caa04d",
        "cursor": {
          "ref": "624f6f45-1601-4420-b411-2b628df03fb2",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0f271deb-e926-40a2-ac01-5725faf27dce"
        },
        "item": {
          "id": "72d73dab-461b-486a-ba09-11b524caa04d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a3e557ee-d4af-49c0-aa57-08e98b0708d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3020d87-6ab0-42eb-8119-0d6c16165ebf",
        "cursor": {
          "ref": "c7d8a219-6bd6-4bbc-a4fd-ac99588b16e8",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c7587abe-f742-4397-9a06-76d4f5b11fa4"
        },
        "item": {
          "id": "e3020d87-6ab0-42eb-8119-0d6c16165ebf",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a2870002-798e-4971-be9a-29c56d6e5039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9706c1cc-b9d8-435b-b662-8b096062df70",
        "cursor": {
          "ref": "02b919a5-490a-4da5-ab92-1d0b942a523a",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "948021ab-825f-4f6a-ab98-03b10552d167"
        },
        "item": {
          "id": "9706c1cc-b9d8-435b-b662-8b096062df70",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "363abf10-63b4-4570-975d-8f281341cc0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1131dd3-0f15-4f47-b9db-97f757af7375",
        "cursor": {
          "ref": "ae34c3b3-6df1-4f95-8987-924563d5b482",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "50eaeaf5-d713-4e33-a6f6-4d82a4edaf8a"
        },
        "item": {
          "id": "f1131dd3-0f15-4f47-b9db-97f757af7375",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f470eba7-f300-4235-b0c6-a71a663ccd56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7bf3da0-0ae1-4357-8a40-3c4b8e0014c2",
        "cursor": {
          "ref": "ac72b3cc-43d6-42c9-8693-1d9e981fe6fa",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3882d6ec-0dc8-42ff-9b04-623f3fa50eac"
        },
        "item": {
          "id": "e7bf3da0-0ae1-4357-8a40-3c4b8e0014c2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ee0e881c-f0cd-4e5c-ae73-d50c868df684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4aa6d74-9432-4f21-a1c4-44290c4fc18b",
        "cursor": {
          "ref": "4d9239c4-d4e2-4ca4-bc0a-18b10be7a062",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1783a575-0fab-4a2e-bf49-7644e67d4fd4"
        },
        "item": {
          "id": "d4aa6d74-9432-4f21-a1c4-44290c4fc18b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b32febf7-123f-4a06-8636-25f32cc4536f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152da2d8-4d5c-4378-be42-837bad06276d",
        "cursor": {
          "ref": "6f28be43-7d0c-4107-b1c2-8c759a0da410",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "775f9f31-ac43-468b-b9e9-c40fcfdd8147"
        },
        "item": {
          "id": "152da2d8-4d5c-4378-be42-837bad06276d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6a790aee-95a4-4209-9ffc-a78d7dd84496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4a73f6-6f50-43f4-b7ec-4f42678312c7",
        "cursor": {
          "ref": "a005dc19-91a1-4118-8d38-0903a7090fe8",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7535ca95-2ee8-46a3-a1c0-b2938bca6707"
        },
        "item": {
          "id": "6f4a73f6-6f50-43f4-b7ec-4f42678312c7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "09c2dcbd-ca55-4250-a62b-8d3686af41fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38536319-7254-4754-8f4d-f04f793ec3ee",
        "cursor": {
          "ref": "3821c7fd-4d71-4eca-b657-c63499ac7991",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3d3d2126-b654-4bb6-8da1-324122b64b5c"
        },
        "item": {
          "id": "38536319-7254-4754-8f4d-f04f793ec3ee",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "14ff8fe7-7b7f-4c77-bdc9-6cee928cf032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fde06f9-ad57-4eae-a604-cbc0a9d42aee",
        "cursor": {
          "ref": "2c5be7e7-fa6e-496d-833f-9c9b8b4bd652",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "77f89052-5e92-46c9-aab0-0be889bba7bc"
        },
        "item": {
          "id": "8fde06f9-ad57-4eae-a604-cbc0a9d42aee",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "dd3b8633-ae66-4be8-bbf9-5410be17a2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9e04a7-508a-4492-ac26-3889f2e24ad6",
        "cursor": {
          "ref": "3fe18595-bf28-4054-afce-e6df428c643a",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "264bd65f-5011-42d5-8987-a18644ea3af1"
        },
        "item": {
          "id": "2e9e04a7-508a-4492-ac26-3889f2e24ad6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d6b56ff0-d70f-4cda-8c94-7a6985a78bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3917b9c-bb5a-4bed-9644-6314a6cabd19",
        "cursor": {
          "ref": "ac2d70f1-68f5-457a-857d-7955ac243b92",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "40e30001-2d63-4572-8dcb-f0634534caa9"
        },
        "item": {
          "id": "b3917b9c-bb5a-4bed-9644-6314a6cabd19",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "88b5b4c4-fc27-4569-8811-d8d18a9b2ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc39c06-0696-4a88-bebf-4b4a09321c26",
        "cursor": {
          "ref": "99854d06-1351-4fd6-a3a0-ac981712176a",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0a7dffc7-feb5-4066-ae18-836676109fb1"
        },
        "item": {
          "id": "7dc39c06-0696-4a88-bebf-4b4a09321c26",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c5943565-ee66-40c4-a1c9-1c8c05c31973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9366b4d4-41ed-416c-a93a-4e49386925f2",
        "cursor": {
          "ref": "a7e7cd6f-ae13-447d-9bfb-b3cb606d16e1",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4391ec1c-1a76-4044-9603-c91e6a2f689f"
        },
        "item": {
          "id": "9366b4d4-41ed-416c-a93a-4e49386925f2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b0af06db-8f99-4a5c-8f5b-55719a0ab95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3abc6c-766e-4eb6-826c-7a8303de1b69",
        "cursor": {
          "ref": "bae03ffe-a815-437a-80bb-52e8c9aa17bb",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "970999c3-8280-4db9-a870-a166152c5a72"
        },
        "item": {
          "id": "ee3abc6c-766e-4eb6-826c-7a8303de1b69",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ada901a4-8718-4652-b0f6-c68a23b07688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aff6784-aeb8-43a8-834b-31c8a474242f",
        "cursor": {
          "ref": "b45de3f3-0483-4aa2-b154-b32f86410eae",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4cbddcde-f6ed-48a7-8a00-d540fc109a04"
        },
        "item": {
          "id": "0aff6784-aeb8-43a8-834b-31c8a474242f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "92bf43a1-ec33-482c-93e1-482f22c1e84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b597f2-cbf0-4bda-b227-be1b355c4429",
        "cursor": {
          "ref": "8126613e-4012-460c-bdfd-f8ddeb7da687",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3530fca6-8b6d-44a0-9e40-fa7ef844963b"
        },
        "item": {
          "id": "b6b597f2-cbf0-4bda-b227-be1b355c4429",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7f4a721b-e82a-41a2-a1d0-5b240c93bd98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece072a5-fc7b-4427-a04d-795ce7122854",
        "cursor": {
          "ref": "0adb57d9-699e-4ab3-a425-c7d2f8763489",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "aeacc0da-d2ac-4a72-8903-282fffca82e2"
        },
        "item": {
          "id": "ece072a5-fc7b-4427-a04d-795ce7122854",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6f69a500-e512-4fbb-8eb8-3f13a9fb80b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93360a5-f432-4556-9e10-fbbda6177910",
        "cursor": {
          "ref": "d9619a71-c71e-4431-80b7-b34db9dbc64c",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "76a7bb36-d8d0-4fa3-aebe-3512939c73c9"
        },
        "item": {
          "id": "f93360a5-f432-4556-9e10-fbbda6177910",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6212c8a1-535a-4ce9-a0f0-11e120a649d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28165736-9dba-4413-9093-2c99ea48e1c6",
        "cursor": {
          "ref": "72a5b822-d111-4da0-b700-356e94caedcb",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e7ef8e51-e962-4cd9-987a-eda5e63b3bba"
        },
        "item": {
          "id": "28165736-9dba-4413-9093-2c99ea48e1c6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "94471384-bdbe-4928-8df5-9848ecf6feb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae6d8f3-2cd5-474c-900a-c7956c7a02d3",
        "cursor": {
          "ref": "0d0884f4-5e18-4f5c-82f6-7f6cc2fbace0",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "65d4b178-5f78-4b87-94f5-ff6897df32dd"
        },
        "item": {
          "id": "8ae6d8f3-2cd5-474c-900a-c7956c7a02d3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e435dcd9-608b-49ee-b5ef-cc0f124c5b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222f34aa-09fe-4612-a31c-0bd1ebca02cc",
        "cursor": {
          "ref": "16643871-7725-499f-91a6-341d1b30a830",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ca85e5cb-506c-4f76-818d-229373c357e4"
        },
        "item": {
          "id": "222f34aa-09fe-4612-a31c-0bd1ebca02cc",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d5936bfb-2692-41f5-b9a0-7f5704cdcd9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa543259-abff-4df6-acdc-ed61e2df0855",
        "cursor": {
          "ref": "7ae9b297-31a2-4360-a20a-2de0fd8f98c8",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9786c358-aa79-4911-9b1b-1364ff850cb4"
        },
        "item": {
          "id": "fa543259-abff-4df6-acdc-ed61e2df0855",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "63d6fc26-3fad-4967-a466-fed50732b2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56668982-4a84-4ebe-81cf-e6dea8fed089",
        "cursor": {
          "ref": "48c1cae7-b153-413b-b81e-30548dc397eb",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "43e27f12-d192-4f29-ae31-11225324914e"
        },
        "item": {
          "id": "56668982-4a84-4ebe-81cf-e6dea8fed089",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e082f722-3ec2-4ccc-9bbb-4dd807288d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0a2030-052b-448e-af19-057d9416c548",
        "cursor": {
          "ref": "2b24d47f-3ddb-4b83-96bb-c8a49ceb1b35",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1a356d0f-65a3-456b-9e83-f1b16b85d087"
        },
        "item": {
          "id": "1a0a2030-052b-448e-af19-057d9416c548",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e3241098-7eaa-4d8c-bdf1-c61a07727f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088ae01f-a9cc-4ef8-af6b-03aa2ef4c7db",
        "cursor": {
          "ref": "acd72cee-00ea-4618-b3c3-15a54394471d",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3da97a8a-2452-4861-971e-bcd1c42f746e"
        },
        "item": {
          "id": "088ae01f-a9cc-4ef8-af6b-03aa2ef4c7db",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ac662eab-e7d0-4037-9a9f-9cc8c7495727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671da380-0fb0-4b44-a77b-94324fedb9af",
        "cursor": {
          "ref": "da18be63-be87-40af-86a2-80e075c1c7a1",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "421d446e-2651-4678-ab88-fb29adcc4893"
        },
        "item": {
          "id": "671da380-0fb0-4b44-a77b-94324fedb9af",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7c1b6d23-3eff-4b40-8038-dbafcc90eb3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01558629-ae3c-475c-9b66-b929a4458762",
        "cursor": {
          "ref": "7cf61503-aa7a-47f7-bed7-a590b0846af5",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4f11b14e-5942-45bf-b8f6-535c660841a4"
        },
        "item": {
          "id": "01558629-ae3c-475c-9b66-b929a4458762",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bf13b44c-d28b-4710-bdff-25ff22fa7b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ded4210-3e4b-4fd2-99a6-7324d9e3956d",
        "cursor": {
          "ref": "eca76eba-c186-4520-ab57-c53e81222883",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e00487a9-e67b-47dd-908b-b00204662a8c"
        },
        "item": {
          "id": "4ded4210-3e4b-4fd2-99a6-7324d9e3956d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fc2cbace-6f7f-4f30-a16f-a9b0918cc61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bd158b-f672-4e24-a6c0-5be9f4eceeb6",
        "cursor": {
          "ref": "558db3ca-bfea-4e58-aedb-9f5f86f03746",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f5b49e13-eaa4-4b19-9f0c-60824624e2c7"
        },
        "item": {
          "id": "b2bd158b-f672-4e24-a6c0-5be9f4eceeb6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c067640f-a0eb-41df-9198-d75837947dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5856a6cf-3182-44f1-9220-746998a32b65",
        "cursor": {
          "ref": "53a0fc35-c1af-44f1-8cac-6f8a18e67281",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "46f5e725-ed77-456a-b078-16e8f0a7f548"
        },
        "item": {
          "id": "5856a6cf-3182-44f1-9220-746998a32b65",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "474f8014-93de-4357-baef-66ac85faafda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2514bf-171a-4c11-a317-89894894d404",
        "cursor": {
          "ref": "146b7f20-1137-42ce-9324-aaf62d851f76",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f2f82848-35d8-4a43-9d03-3969fad971d9"
        },
        "item": {
          "id": "7b2514bf-171a-4c11-a317-89894894d404",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "31914e3e-082d-4425-a68a-84b70c843841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf466687-7c25-431d-bf07-73a07c71418a",
        "cursor": {
          "ref": "43565001-3d95-4a71-abd3-3fb061729c07",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b502e84f-0e70-4375-b5a8-2f2b3d0f2849"
        },
        "item": {
          "id": "cf466687-7c25-431d-bf07-73a07c71418a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9f144ef3-0e92-45ad-9740-8c8b7fa88f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88a26a9-f358-4430-8542-60e9943bcd71",
        "cursor": {
          "ref": "96471830-20f7-475b-aedb-c817a6644a51",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "77ada1c1-0e0f-40cc-8309-60ad85b81c42"
        },
        "item": {
          "id": "f88a26a9-f358-4430-8542-60e9943bcd71",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "62e06665-0b2b-41ee-903e-b9bef7922c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a89ab6b-6bf6-45f8-b67d-3429863c7975",
        "cursor": {
          "ref": "243bc2c8-a067-4971-a715-6f287186fea7",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c6a856c6-1989-46f7-8169-37ae9652288e"
        },
        "item": {
          "id": "9a89ab6b-6bf6-45f8-b67d-3429863c7975",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a6b77c34-aca9-4f70-9ec4-462bf8a9d19b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56bb3f8-3464-4dbe-8169-a3672154793f",
        "cursor": {
          "ref": "0e179fdb-f6d9-48f4-89d9-753782eaf3d3",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0b4d4bd7-9ee9-4eb6-ba41-d8e445cfa951"
        },
        "item": {
          "id": "d56bb3f8-3464-4dbe-8169-a3672154793f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4e3f9610-72e1-4cbd-89b7-b532a601df58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ee2591-ee57-4df2-a1a9-f8b5bf826c5e",
        "cursor": {
          "ref": "2cac9aff-2054-44f4-9dec-0888777efb9c",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2307ea54-af0e-4a08-9274-0d63a7ee4c5c"
        },
        "item": {
          "id": "b2ee2591-ee57-4df2-a1a9-f8b5bf826c5e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "fd49c068-fe70-41a9-b681-bcc98b6961b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d2def6-a255-4798-bac5-24292a3b738a",
        "cursor": {
          "ref": "71f69da0-555c-4890-ad43-24834b2024d4",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8c6516c0-587b-458c-a248-41445a63c23d"
        },
        "item": {
          "id": "41d2def6-a255-4798-bac5-24292a3b738a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4a6ca566-a8ef-4704-9f57-9565f88945c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113a3b3f-5e16-4414-bff7-55a7da3b46d8",
        "cursor": {
          "ref": "1a47579a-e725-478e-850e-c33ec9966f84",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e86e11bd-21c2-4772-b665-f5f88a89b689"
        },
        "item": {
          "id": "113a3b3f-5e16-4414-bff7-55a7da3b46d8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "59ae7a52-b33b-4d02-894c-fe433d737c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787c9cba-f503-4292-aaea-108d10787d54",
        "cursor": {
          "ref": "e24dc014-3ce7-46d3-a88f-151ebf018d93",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e1cb150b-e4bb-46f2-bd22-7074d9974731"
        },
        "item": {
          "id": "787c9cba-f503-4292-aaea-108d10787d54",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "16577852-e640-4252-9f93-d3b6f3e9df2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c471d4d9-084f-4418-a6ed-f690b09668ce",
        "cursor": {
          "ref": "60fc55af-9c6c-4af6-807c-e86ef394320d",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e7a44d30-2e63-4e65-96d1-cd921fe9a2f1"
        },
        "item": {
          "id": "c471d4d9-084f-4418-a6ed-f690b09668ce",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ff8457b9-8f72-49f3-b3f0-ec3fda913cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e1e507-8f5a-4515-92af-9457bbb55a67",
        "cursor": {
          "ref": "d17db585-e6bc-4724-a17d-57222d756337",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ba92dba3-23b7-4ae9-b99e-5362e2b4a5cb"
        },
        "item": {
          "id": "c9e1e507-8f5a-4515-92af-9457bbb55a67",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0f9e1c72-c457-4d83-90df-7020d3ba5ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4317103-f466-4658-b2e4-180932b1332f",
        "cursor": {
          "ref": "9ab1fd79-7171-4230-8df7-6b072d708166",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b8f44921-52e8-46e6-8759-0f5a5bed6567"
        },
        "item": {
          "id": "e4317103-f466-4658-b2e4-180932b1332f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "813e1fd1-b91c-4524-ac67-426cc0af1b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95b38c3-3f2f-4329-ba2f-84b00b4433a0",
        "cursor": {
          "ref": "fd825050-c06f-49dc-a7d0-f391ae120201",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8e31d457-98a5-4dcc-ba5d-26b9de9886a7"
        },
        "item": {
          "id": "a95b38c3-3f2f-4329-ba2f-84b00b4433a0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e19e546c-6503-48d0-87c3-7ea999139e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e39a1b8-b2eb-4509-912f-106f4cea3f3c",
        "cursor": {
          "ref": "2b8e3459-3f56-4b38-8b49-5f935bdada47",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "27c70bc9-ece1-457a-bd06-50741ed802fd"
        },
        "item": {
          "id": "3e39a1b8-b2eb-4509-912f-106f4cea3f3c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "97c3c7f5-3cd2-4178-a39e-bf0cd3e59d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2524808f-10f6-4caf-b677-1e3bbcc2b2a7",
        "cursor": {
          "ref": "78b99345-a703-4c0d-aa75-03b146556fe4",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f4259397-8f95-4cb4-a55a-e8d368ca8daf"
        },
        "item": {
          "id": "2524808f-10f6-4caf-b677-1e3bbcc2b2a7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a08039a6-5c4d-4d8f-852f-c09a2416a53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521aa2b6-b1ca-49e9-9788-64f102be4e05",
        "cursor": {
          "ref": "f4a63244-b16b-4d56-8187-7f4b348cb4a5",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "bda5d995-71e8-4e7b-9f78-bcac179d528c"
        },
        "item": {
          "id": "521aa2b6-b1ca-49e9-9788-64f102be4e05",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a367ed11-156a-4e7d-a139-327758e3c5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e6ce1b-ee5c-4537-a0d1-779299027543",
        "cursor": {
          "ref": "36242bc1-1f63-4cf8-8958-2b03a05d24e3",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4c5bc2a4-4221-4dda-9514-941337968811"
        },
        "item": {
          "id": "f9e6ce1b-ee5c-4537-a0d1-779299027543",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e69aab83-85ef-4099-ad89-e1696d218160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533812ed-d732-41bd-a6a4-0483b226b534",
        "cursor": {
          "ref": "8d9b6583-a627-4564-82ea-f6cf55d93736",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "123900e6-0379-4e17-addb-3f23520d6d84"
        },
        "item": {
          "id": "533812ed-d732-41bd-a6a4-0483b226b534",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "10aa4639-eab8-4437-9399-6b376e874b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71bee62-0caf-4b13-9ba3-e1b3e2ac4c03",
        "cursor": {
          "ref": "1dfbdcbe-3202-4d48-a061-6642cdc09d31",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3b0ded71-8a88-4ae0-b714-b0136ccb62fe"
        },
        "item": {
          "id": "c71bee62-0caf-4b13-9ba3-e1b3e2ac4c03",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fb8e88fb-b1b0-40c3-a02e-a0a9e1820547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c18248f-39be-4ef2-8601-4fcb3e18ac54",
        "cursor": {
          "ref": "5cdc276b-6cf9-4808-aa21-29ea4449871a",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "36615471-5163-47ec-a824-3cb977546a37"
        },
        "item": {
          "id": "6c18248f-39be-4ef2-8601-4fcb3e18ac54",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "55ddbafc-3a8c-4438-b45d-797037fd8be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ba7788-f9bf-42e0-bcd9-f7ffd7a55ea0",
        "cursor": {
          "ref": "4e62efaa-a277-45be-b56d-3533c28af9c1",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c3436525-c129-42a4-94bb-5325f6392ba2"
        },
        "item": {
          "id": "a7ba7788-f9bf-42e0-bcd9-f7ffd7a55ea0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "af86027e-7c95-421f-89ba-2b1ef75494c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af593c4-900c-4b9c-99bc-f4219efbaab7",
        "cursor": {
          "ref": "c1524f25-76e6-45a9-b953-cbaa4a1a413b",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ac7e663b-7346-4ca4-996e-07ba53d288aa"
        },
        "item": {
          "id": "4af593c4-900c-4b9c-99bc-f4219efbaab7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "dbe26ab9-671f-400f-a0c8-d9b8644c485a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be39ba9-728f-488c-8d13-9d88e63065f2",
        "cursor": {
          "ref": "494658b4-9f8b-402b-9e0c-6c746576f499",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0bd74ea5-12fc-4023-a72c-6316ac919e12"
        },
        "item": {
          "id": "0be39ba9-728f-488c-8d13-9d88e63065f2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1b9010fe-10c5-415d-8af2-73615c2a6af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f28925-af0c-4c23-8dbe-e207ad6cc1c7",
        "cursor": {
          "ref": "428fb2a8-e84c-4e32-8c82-ff21ad82d014",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "431994e2-6a57-45a3-81c2-6af03c0f39a8"
        },
        "item": {
          "id": "b4f28925-af0c-4c23-8dbe-e207ad6cc1c7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "99f09d15-486e-40bb-bf56-12dd3e6b5d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd53657-8b65-437f-b196-5d3e918abad6",
        "cursor": {
          "ref": "f89186fd-6888-4e99-a607-0c194881f03a",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bdd58e8a-e755-40f0-8688-942e55610ba4"
        },
        "item": {
          "id": "7fd53657-8b65-437f-b196-5d3e918abad6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "52e3c529-6865-4115-ac73-5eafaa39ba57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c988163-400c-496e-bab5-11a287bd3e4a",
        "cursor": {
          "ref": "3ce62fac-3b20-4724-8f8b-ea2161d7889d",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d155f429-7155-4251-a546-8d2f64331085"
        },
        "item": {
          "id": "0c988163-400c-496e-bab5-11a287bd3e4a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e401f8dc-74e2-4014-9060-c3d584a487eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acacc63-2b4e-4848-8dec-a1c13162c61e",
        "cursor": {
          "ref": "ac7e3d78-6604-4c76-bfa3-f08d51f77628",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a36a98f2-ae08-4eeb-aa42-ef10fdb10e5f"
        },
        "item": {
          "id": "9acacc63-2b4e-4848-8dec-a1c13162c61e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7a157a41-d7fa-48d6-bc83-607c13081959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee61031d-4ae0-4e38-9542-4f95ad170a27",
        "cursor": {
          "ref": "fe8f1720-9bcc-4a50-a2d7-d9a4256a989c",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "39943d73-7eb3-42e9-90ec-29db6b0f3923"
        },
        "item": {
          "id": "ee61031d-4ae0-4e38-9542-4f95ad170a27",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "eca1b6ac-2eb3-422f-9b47-85a86f638f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa52e68-744d-4fbb-916d-1e4a216fa628",
        "cursor": {
          "ref": "91f703a8-73c2-4ee9-9dd8-a5a5f18a6142",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "309eb099-0dda-45c7-9930-0a0348ca40fd"
        },
        "item": {
          "id": "eaa52e68-744d-4fbb-916d-1e4a216fa628",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f81e79ac-428c-4234-a3d3-fe790bbd9b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b84530-2d7e-49ca-8b18-83d39eb60859",
        "cursor": {
          "ref": "673df4f9-dde7-4f5e-9c7a-73e42a10f947",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "eabce799-d70d-4ba3-9991-28be7deb548b"
        },
        "item": {
          "id": "58b84530-2d7e-49ca-8b18-83d39eb60859",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1ad4cf29-cbf1-45d0-b42c-c25f841f5b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68d141d-948d-4afb-bc49-427f1096ca89",
        "cursor": {
          "ref": "0e12c65d-57be-4f8b-8eff-412b48d1beba",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1a297456-42a7-4ccd-8734-20f1c569c50d"
        },
        "item": {
          "id": "b68d141d-948d-4afb-bc49-427f1096ca89",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f779856b-4a1e-46cc-9339-a86ab1b90439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63077d07-797f-4268-9b04-0653055041f1",
        "cursor": {
          "ref": "1639dd55-9da8-4643-9e29-e2ec1439d655",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "88b5f176-00c0-47fa-a636-a2ac07c02f7a"
        },
        "item": {
          "id": "63077d07-797f-4268-9b04-0653055041f1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "de8bfbcd-8aa0-4edf-b916-d7b47e29c0f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a2b225-c1a8-4951-a6de-4f43cdcbf4ab",
        "cursor": {
          "ref": "93e8a7f3-d6c2-4129-a32f-d019e2658953",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fd2ecc82-3e9b-4111-bcb8-cd1b4dd89a29"
        },
        "item": {
          "id": "25a2b225-c1a8-4951-a6de-4f43cdcbf4ab",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c94a36d9-24b1-4c0b-9cb3-489a7cd2b4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e39cef0-f2e8-47bf-ba8f-14f0587b7b8f",
        "cursor": {
          "ref": "9f3d6456-4856-4b62-9b58-a7073ea722fc",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "cc5f68e0-483c-460c-b72a-8f0e7011ec41"
        },
        "item": {
          "id": "7e39cef0-f2e8-47bf-ba8f-14f0587b7b8f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "43524e4d-bff0-42ed-b2f4-1c1da5d1225a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302378a1-5e96-4730-be42-bbdbf28f76e5",
        "cursor": {
          "ref": "059cb34f-ad53-4b0d-be9c-0238f027ce7d",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f77079bb-fec2-44c0-8ec4-8fe4314658f9"
        },
        "item": {
          "id": "302378a1-5e96-4730-be42-bbdbf28f76e5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9fd0ca60-0f06-4325-8e72-b42feedd6f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f2a3e4-a16d-40c9-a915-a9c48b26f907",
        "cursor": {
          "ref": "fc17ba1d-dafc-42e8-a3b8-54f10e50d2ae",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0d119fcd-3963-43b3-a549-884de67a5978"
        },
        "item": {
          "id": "96f2a3e4-a16d-40c9-a915-a9c48b26f907",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6b7104f8-bc07-41b5-9a9c-1416950ef170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52337aed-1ee4-406d-b60a-bb28bf122b06",
        "cursor": {
          "ref": "72c96291-de57-4e71-9aec-4e21b94a51f9",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c803fa89-6f04-4c21-9b3b-d430800c9ddf"
        },
        "item": {
          "id": "52337aed-1ee4-406d-b60a-bb28bf122b06",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ac8d1258-c9dd-4d73-868a-e2f7a47ceefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47de397b-4c83-4811-a2f2-f8c76aca48d5",
        "cursor": {
          "ref": "98e20dde-18ed-4126-b6ca-888d110e35fb",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4d33acbc-f21b-455d-a4d8-64a158a7602a"
        },
        "item": {
          "id": "47de397b-4c83-4811-a2f2-f8c76aca48d5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6fe4e4aa-d512-4d3a-bee9-514ed972f732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8a7013-10b7-4cee-8ed1-a73eb08a2f1c",
        "cursor": {
          "ref": "216e6861-06a0-46c4-8713-98888c4b1c04",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5b465301-2ce6-44ed-b552-3342a461d594"
        },
        "item": {
          "id": "5e8a7013-10b7-4cee-8ed1-a73eb08a2f1c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6118bdeb-9807-4268-81c6-a3fe62c440ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43caff7c-556b-4d14-a046-cd4c6cc79678",
        "cursor": {
          "ref": "5bc8911a-e9cd-43ed-be2e-1a0bf30bcc77",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "50c69e3f-ecb0-4da4-95ba-a4f9bcf3304c"
        },
        "item": {
          "id": "43caff7c-556b-4d14-a046-cd4c6cc79678",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "182d2048-84ec-4aa9-9867-5e23e89f1472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ff7b40-a467-4174-a5e5-2129e09fcf4a",
        "cursor": {
          "ref": "46e51343-b085-4d26-8562-17f17e86b589",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5eac1c89-d3ff-4c40-ab8e-81378228566a"
        },
        "item": {
          "id": "39ff7b40-a467-4174-a5e5-2129e09fcf4a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "abffc3b9-28e2-4b0c-b1e1-d764b60113af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1543382c-7ff5-4df2-bc33-805f88da5a3c",
        "cursor": {
          "ref": "829ef76b-0d86-4169-8fb5-8fb0ff6c35eb",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "efe837c3-c717-44c0-beee-15e06bbda98a"
        },
        "item": {
          "id": "1543382c-7ff5-4df2-bc33-805f88da5a3c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c0075105-e4c7-4832-846c-81debbc3aef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd60756-b9eb-4a45-8ba7-512e461b7fe6",
        "cursor": {
          "ref": "b25b4c8b-f582-4ba6-a273-37ac0a586053",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b75b1366-91bd-4118-be65-c7226dc162a3"
        },
        "item": {
          "id": "fdd60756-b9eb-4a45-8ba7-512e461b7fe6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3e219c70-80ac-4544-b5ba-590e78329d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619c2038-17a2-466d-aa99-e17e7113f393",
        "cursor": {
          "ref": "688eef43-bcf4-4116-aed4-d0370500bb8c",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7f110d7c-20e6-4d2b-8a79-820d86ab8ae0"
        },
        "item": {
          "id": "619c2038-17a2-466d-aa99-e17e7113f393",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8d3c640b-ffee-486d-80a5-be964c3c9551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a26be2-6ab8-4acc-ab17-4af23a372ab7",
        "cursor": {
          "ref": "381d34b4-f2db-4a37-87ab-2db77e962f73",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "21087dd7-3ec0-4088-bb25-99f4e36824e6"
        },
        "item": {
          "id": "c8a26be2-6ab8-4acc-ab17-4af23a372ab7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7e7bea45-19c8-4535-afff-a55ce90ad036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d18acf-d568-4230-8170-50765b31b9d7",
        "cursor": {
          "ref": "1f45ca73-66d8-4594-a481-729fa956b0d9",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "817b00dd-501b-455a-b1cb-e276bc8c0cd5"
        },
        "item": {
          "id": "31d18acf-d568-4230-8170-50765b31b9d7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "db264779-0deb-48c7-ba3a-d96730145892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874fdce0-c0fb-455d-9ed4-90d67e4c6d3f",
        "cursor": {
          "ref": "21a47295-3447-481a-a235-7694495dba77",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "469206ca-f8a7-4f81-bfac-91dfeb9ac2d9"
        },
        "item": {
          "id": "874fdce0-c0fb-455d-9ed4-90d67e4c6d3f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "14d1d117-f8e7-4251-8e7c-f985b1b0a85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5142b06c-4c61-4545-bf80-4f52c5d24ac7",
        "cursor": {
          "ref": "685b1b12-34ac-4294-8e3c-e0f00e38cf4b",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "95edb9a0-0f28-4372-867a-b678650ef3a1"
        },
        "item": {
          "id": "5142b06c-4c61-4545-bf80-4f52c5d24ac7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4c8e5150-2550-493d-b921-6450ef96f537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086403f6-bbda-48a2-950d-135ea0436a6a",
        "cursor": {
          "ref": "d8046060-2330-4a9a-b776-48489de1b1b5",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "474c0199-9c19-413f-8eb8-df68463162ea"
        },
        "item": {
          "id": "086403f6-bbda-48a2-950d-135ea0436a6a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e96f6880-ccbe-4cea-ac09-9a6324943ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2dab34-cabd-4fe5-84e3-44f5d54c2f4f",
        "cursor": {
          "ref": "a866ed28-325a-484a-a0ac-f1745ce335a8",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5c860844-cd72-41e2-afb5-3c9ce43858be"
        },
        "item": {
          "id": "df2dab34-cabd-4fe5-84e3-44f5d54c2f4f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "60c10adb-b827-49da-abde-00b84a71ce3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884f2c32-a9fe-42b5-8fcf-f5b0886c70cc",
        "cursor": {
          "ref": "f0c79eca-ba1d-4a52-b742-a862dbeb77f0",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ba27c19d-92f9-4942-ac3c-b3e0fa9b902c"
        },
        "item": {
          "id": "884f2c32-a9fe-42b5-8fcf-f5b0886c70cc",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e571d103-0940-4e78-849a-a627e3bf706e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70576d2c-3e8e-46a1-a73b-bf866daf7946",
        "cursor": {
          "ref": "9e790f7b-6bc9-43e2-89fa-5a1c7b5d385c",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "945524ee-75e8-480a-8803-2b6d1d44adf8"
        },
        "item": {
          "id": "70576d2c-3e8e-46a1-a73b-bf866daf7946",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "600b8a14-293d-4925-ad93-4233b4289f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f993534-b0b9-4d39-98bb-0327e8f2a1a0",
        "cursor": {
          "ref": "c3fee233-5ef1-49e4-bf10-c564fcc2d89b",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b88fd657-b736-42c6-922d-f32dfc896d62"
        },
        "item": {
          "id": "9f993534-b0b9-4d39-98bb-0327e8f2a1a0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3f66743f-666b-47b7-814d-9c77507a830b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5880d8e7-6970-4c1a-952e-ff2241c6a880",
        "cursor": {
          "ref": "7db64292-ea69-4106-af08-07b8a44d22bf",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "eb89c227-cf04-40ab-93c7-bb1a43c8c338"
        },
        "item": {
          "id": "5880d8e7-6970-4c1a-952e-ff2241c6a880",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6634029c-27d4-46fb-a0bf-3a8ee2b8cdea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb90cafb-c8ab-4c1b-8e84-ead82d4f9575",
        "cursor": {
          "ref": "41bce933-53f9-4588-a38e-3599502bb7c7",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6a706c34-293f-44c6-bf18-6d8564f0dcc0"
        },
        "item": {
          "id": "cb90cafb-c8ab-4c1b-8e84-ead82d4f9575",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "871edc98-1b83-49ff-b5e8-7c08edcb8ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f843a5-eb06-4471-a6d6-7475e10988ae",
        "cursor": {
          "ref": "6f021060-776d-49a2-ac7b-a30d7156d0fd",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "764ffd22-9f92-4248-9d71-d673e6a7aa5a"
        },
        "item": {
          "id": "44f843a5-eb06-4471-a6d6-7475e10988ae",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7ecd7c95-a2eb-440f-8393-2cceb4db600b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b249d643-5a32-4f8f-b134-325d9d61c740",
        "cursor": {
          "ref": "fa4b553a-5ffc-4fdd-aa88-a42aa12b70f7",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "06c69186-7ba3-4adc-b76a-d848b7fb9ceb"
        },
        "item": {
          "id": "b249d643-5a32-4f8f-b134-325d9d61c740",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "29799a30-c58f-4d1c-8e60-518c184731c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94212fb-146a-45ea-8d5b-9eedfa7be61d",
        "cursor": {
          "ref": "26288d79-2e15-43e0-b1aa-b56beb0f9e25",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "829019ed-bd5c-47ba-a91c-22ff1c36d58f"
        },
        "item": {
          "id": "b94212fb-146a-45ea-8d5b-9eedfa7be61d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5f3076e7-5f27-4ea6-a1bc-900b2527d2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "21cebcf7-0cb1-4992-8a3b-0696049d44b6",
        "cursor": {
          "ref": "997aa40b-f7cc-4f09-bbc8-7743976fe799",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a1a9c86f-9503-4594-8a62-6ed00a956236"
        },
        "item": {
          "id": "21cebcf7-0cb1-4992-8a3b-0696049d44b6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e8dafbf2-5cb3-4c70-be28-02ccc7a38040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "cfbed03f-537c-4b38-ac8b-dffbd65238ef",
        "cursor": {
          "ref": "6b38a270-9474-403b-b676-a1693106121c",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d53de746-1a8f-462b-b1b8-7d14459e02ca"
        },
        "item": {
          "id": "cfbed03f-537c-4b38-ac8b-dffbd65238ef",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "06984f19-907e-416a-b88c-ca3a5e8289c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "301fd4f8-03bd-4bba-8ecb-52dfec88770c",
        "cursor": {
          "ref": "edf4d4e7-9c59-46d3-b47a-f5a96c418da5",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "aab678d2-7240-4633-9ce0-9086fb65407d"
        },
        "item": {
          "id": "301fd4f8-03bd-4bba-8ecb-52dfec88770c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5e274fbf-771e-41db-94a7-779c86d06670",
          "status": "Created",
          "code": 201,
          "responseTime": 15226,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6a7488-2746-4e55-ada5-d21906b95391",
        "cursor": {
          "ref": "b0b7e578-a4c0-41ed-8ff3-0692544d5c61",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bdcc5e56-c15e-4503-96f1-f5b4d0adfd46"
        },
        "item": {
          "id": "8f6a7488-2746-4e55-ada5-d21906b95391",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "47b9e63e-a0f8-4dca-b6a5-caaf6ec3d1ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "8d4d52b6-b1c2-4192-a6b9-71a6f8e25b6f",
        "cursor": {
          "ref": "459b3555-c514-40d0-b7ca-0c13ba78d915",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b9471ad1-9727-4f67-8adf-76a9f08342be"
        },
        "item": {
          "id": "8d4d52b6-b1c2-4192-a6b9-71a6f8e25b6f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "17c1f848-0a28-414f-9cfc-06a3104b4660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "01f5efc8-889f-4bdc-8ce4-e5c082cdcad2",
        "cursor": {
          "ref": "ec4877cf-edd2-455c-84e0-647a03500d4e",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "39ebdd9e-35b0-4eea-87b4-b634ebd57442"
        },
        "item": {
          "id": "01f5efc8-889f-4bdc-8ce4-e5c082cdcad2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "05450c37-d3cc-4a99-af30-0c8baf858242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b18441-4e02-4e9a-888c-703d0326d787",
        "cursor": {
          "ref": "6c0e7c5f-8e20-4ba2-82cf-3f0310644c6a",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6adaf87a-2f61-45ba-8ff5-afe7b12e7936"
        },
        "item": {
          "id": "b1b18441-4e02-4e9a-888c-703d0326d787",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b1c38cce-8d17-4e25-9440-e3bff198ba96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36dcd090-d58e-498d-950e-6d53eac67687",
        "cursor": {
          "ref": "a9298c38-0ee4-46c4-a68f-9b3ea596656c",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ab7f5700-7643-4a4a-ba2e-e6597b2e0709"
        },
        "item": {
          "id": "36dcd090-d58e-498d-950e-6d53eac67687",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "49335e88-ac2b-4272-a920-c761941677a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e6ec6a-5886-443d-a064-fa312a04f68b",
        "cursor": {
          "ref": "8a63de0c-09b5-446f-8a43-8b78060a00c7",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b91329c0-3bef-41ac-a925-4a727f5993c0"
        },
        "item": {
          "id": "92e6ec6a-5886-443d-a064-fa312a04f68b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3d543bf4-e00e-4726-86e8-0aa41bf68776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e5f915-c169-4b76-a408-ef671b0ba6be",
        "cursor": {
          "ref": "ff5d23cc-b999-4219-b52b-a030443a92e7",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "77aedd06-e19b-4e6e-ba2a-28c472e76ed6"
        },
        "item": {
          "id": "c1e5f915-c169-4b76-a408-ef671b0ba6be",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "334b4c4f-3c39-4d03-ab18-689599ca60a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49cfba1d-aaa9-4588-b6f5-7ab5c9174085",
        "cursor": {
          "ref": "44e1d582-5fc3-466a-8035-d388cdd6337b",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e068f5fe-4000-4d2c-a403-6419e89a8872"
        },
        "item": {
          "id": "49cfba1d-aaa9-4588-b6f5-7ab5c9174085",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8f671680-cac5-4c03-8b63-e0830052bc39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8679e0-6da3-42f7-ad8b-325e289867ba",
        "cursor": {
          "ref": "3a4e6ee0-3e1e-41c1-be1f-29e70dca9f5b",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "538cd1b1-1609-4686-9c61-1dd9e219a3bc"
        },
        "item": {
          "id": "fb8679e0-6da3-42f7-ad8b-325e289867ba",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "23aa4be5-a2ed-47d1-b9da-6949dc2d19ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7d6646-9973-4e40-baf0-dc93b3fcbd1c",
        "cursor": {
          "ref": "75b7545a-3d84-498d-9ad7-0432623996de",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b1bddfd5-03c8-4c8b-b16a-efb6f2c7383e"
        },
        "item": {
          "id": "ec7d6646-9973-4e40-baf0-dc93b3fcbd1c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e7a3a547-bab7-4fa7-a362-f3feddad9190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bafeb96-f690-4397-9798-3a0fb2a0d7ef",
        "cursor": {
          "ref": "bb587cef-9cc0-4bd6-96d1-9a6daf217506",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0ab820a6-53af-46b1-b064-09c2dd596818"
        },
        "item": {
          "id": "7bafeb96-f690-4397-9798-3a0fb2a0d7ef",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ff90c4ba-dafd-40c2-841d-a22767b8c3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 155,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5759ed-635a-4781-8ab3-6255e09f4862",
        "cursor": {
          "ref": "02a67746-26b1-4f04-9694-fea118fbf714",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1ee244df-7643-4a9e-81f4-eb356252e455"
        },
        "item": {
          "id": "ec5759ed-635a-4781-8ab3-6255e09f4862",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a8466f98-2940-4d97-af15-3843f64067e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0107a49a-bda7-4f7f-922d-01d03fbfeb05",
        "cursor": {
          "ref": "127db31f-2562-4d0e-8d8a-59198acce8b8",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "aa9ea111-c30b-4172-b370-dba8dcfe166d"
        },
        "item": {
          "id": "0107a49a-bda7-4f7f-922d-01d03fbfeb05",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d326c619-4c8d-45b5-911b-a4da62960bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb263aa-b598-4ce5-bece-598ba696762f",
        "cursor": {
          "ref": "0fa76d13-05e3-47d8-b35b-e5207a0724fc",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9eb54ef4-b395-4666-adaa-fed01bc51dd1"
        },
        "item": {
          "id": "bbb263aa-b598-4ce5-bece-598ba696762f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4f48264a-da22-4314-b8ec-3af8863882b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff46ef93-9e43-47e0-bd25-617ac05403a6",
        "cursor": {
          "ref": "dfe1b7b2-2503-4a0c-8cc4-2e24c5730b8a",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a5ee56d8-c1df-4535-8b45-a305e4a293cb"
        },
        "item": {
          "id": "ff46ef93-9e43-47e0-bd25-617ac05403a6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "36963c1f-f23c-4e8a-95d8-4e9fcaebebb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123eb43d-6c1d-4303-9d20-1cb9af40703b",
        "cursor": {
          "ref": "dafae080-0739-4c1c-8830-e32302845a66",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "503f4097-2988-4ba4-b830-736f4c6936ab"
        },
        "item": {
          "id": "123eb43d-6c1d-4303-9d20-1cb9af40703b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6f3822b4-f666-4e3f-88a6-06f1d0ed8958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e238c1d-78c4-4409-a9a2-f06fac83032c",
        "cursor": {
          "ref": "6c50d440-766d-4b5d-a7cc-159879fab959",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e22250a4-5ffb-48d4-a3ca-1c11abb2083e"
        },
        "item": {
          "id": "1e238c1d-78c4-4409-a9a2-f06fac83032c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "edf35e19-b053-46a5-9e98-ff935e7d5770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76924a41-e554-489d-8a6a-99044163409d",
        "cursor": {
          "ref": "78a87433-c711-4ea5-a5d0-360660a4c930",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "aee9db79-03f8-4b96-b540-f60cb80f8c99"
        },
        "item": {
          "id": "76924a41-e554-489d-8a6a-99044163409d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a6196a22-e590-45f9-add8-290cf86cfcaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c48629-2be7-4c94-bb6d-0344c77a4a34",
        "cursor": {
          "ref": "e298b97b-9196-47f9-817d-4990eb0ef65b",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "be9c09c5-cf43-4964-a7b8-0cf12fc271b4"
        },
        "item": {
          "id": "07c48629-2be7-4c94-bb6d-0344c77a4a34",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d599c3a5-a112-4d48-8c40-fc036ea33779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3449fce7-8294-47aa-b501-922a19b48af7",
        "cursor": {
          "ref": "09b158f6-b8b7-4090-b1b4-f4d132df25cf",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "81b530d9-3483-4987-88e3-261b680ccf44"
        },
        "item": {
          "id": "3449fce7-8294-47aa-b501-922a19b48af7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e4776e9d-1db3-47de-9c2d-914250f011f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db68a221-35f2-4bf3-b5c7-94cd9c3b11a3",
        "cursor": {
          "ref": "29bcd54d-02f1-46f4-b04e-faf322f8ffa7",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "97416b42-1af9-4564-b0b7-f5662a0e13cb"
        },
        "item": {
          "id": "db68a221-35f2-4bf3-b5c7-94cd9c3b11a3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5fb29662-4fd3-4ff0-8ec3-86d8d0f9ac46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409dec30-7e0a-4903-8c49-247552588024",
        "cursor": {
          "ref": "89c48c54-f7af-4c32-8a15-60fb9c870f42",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0b255a3a-e02d-4727-b334-0559cd4a1ab0"
        },
        "item": {
          "id": "409dec30-7e0a-4903-8c49-247552588024",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5d51fd44-4897-4487-a215-1e4e47bca761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab286b7-8a4b-45de-92b2-4576946dceee",
        "cursor": {
          "ref": "b995e364-e8c0-482f-9fc7-8e2e9e5dbb0b",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4e76f2b0-6a55-4622-844c-5ffa04783fc2"
        },
        "item": {
          "id": "2ab286b7-8a4b-45de-92b2-4576946dceee",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a4267c53-ae99-4bb5-8a02-b85b067046bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff9be03-f97b-46e3-8682-b4220b0b8f98",
        "cursor": {
          "ref": "06dc22cd-17fd-4b8f-a4e4-8e41b7b1ed9f",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "28909a4b-cf51-48a0-89d4-5c0598da96fc"
        },
        "item": {
          "id": "0ff9be03-f97b-46e3-8682-b4220b0b8f98",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d4a94556-dfab-4890-9a03-eebef3989667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1e40b6-83a2-437c-ba66-66dc0e4ed621",
        "cursor": {
          "ref": "2de85873-af38-4ad0-bf5c-8b2e6a1c3292",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "800576be-a1b2-4577-a28d-bf772c7acc2d"
        },
        "item": {
          "id": "1f1e40b6-83a2-437c-ba66-66dc0e4ed621",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "93fd4133-8ff2-4b14-b59b-fc463cc7b4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c078fc52-7cd6-4ba7-a26e-d483a26c02e2",
        "cursor": {
          "ref": "f72835e7-49e9-420c-8dc6-52ee85668d5b",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "08928682-cc5a-4f6a-a227-18fb99c7a2ba"
        },
        "item": {
          "id": "c078fc52-7cd6-4ba7-a26e-d483a26c02e2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "39d53a76-5583-4f8a-bcd5-0da7708712b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88454f5-5cd9-4f8f-b485-ac1b0e048cb0",
        "cursor": {
          "ref": "700f95b0-43f5-45e6-bd72-4e79361fd547",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "bc766c5a-b76b-47a7-a0e4-b39af2032e7f"
        },
        "item": {
          "id": "f88454f5-5cd9-4f8f-b485-ac1b0e048cb0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "19611e8a-8672-4b1c-a1ec-fca4dda40c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0529f8b-374b-4ec5-af5c-f079b0bc4451",
        "cursor": {
          "ref": "c2aad6ec-593d-4e16-8254-9a92272c93da",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0c80e60e-d43b-42d9-b5e7-a90c2e5b8fe7"
        },
        "item": {
          "id": "a0529f8b-374b-4ec5-af5c-f079b0bc4451",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f31d9d3e-eee4-4195-8b81-034140107ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1606d4b5-5b64-4abc-9448-4af507402726",
        "cursor": {
          "ref": "1ed909d6-55a1-4660-8728-992246bedd68",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5e7ea793-c4eb-452e-83c0-2c76252c983a"
        },
        "item": {
          "id": "1606d4b5-5b64-4abc-9448-4af507402726",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e26a13c8-8330-4b93-ab17-6cf21b131e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b161096c-9fee-4271-9186-de09b94e8539",
        "cursor": {
          "ref": "cb486978-c738-4756-86d5-176fe2bf2e32",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "462530b8-496a-487d-a708-549c8d76ffa6"
        },
        "item": {
          "id": "b161096c-9fee-4271-9186-de09b94e8539",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "32a2ce42-87ad-4e09-b0ff-ee7d71288f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f3e28e-d908-417c-9088-74d0b664ca13",
        "cursor": {
          "ref": "9538bb60-a000-49e1-a010-00fcd368025b",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0186db35-150e-4a5b-854a-f34125d14f6f"
        },
        "item": {
          "id": "c2f3e28e-d908-417c-9088-74d0b664ca13",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9cb7c707-f25d-4e72-8c97-e6f1e81aaed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dfd8ae2-e2b5-4379-a80a-351032b30ac0",
        "cursor": {
          "ref": "371a5511-2454-4474-b85a-f3d388ad02db",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9c8e64ad-567e-4712-8a5d-faa1e1a9ffe5"
        },
        "item": {
          "id": "8dfd8ae2-e2b5-4379-a80a-351032b30ac0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2737a130-70b5-4734-8cb0-c6b989cbada1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09319945-5d0e-4ccf-88fb-7862e980d3e4",
        "cursor": {
          "ref": "ac29aecd-2d4b-4787-97a9-c2e2c68888e6",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9b28ca55-abab-49ca-9529-5f33cd4e3b9e"
        },
        "item": {
          "id": "09319945-5d0e-4ccf-88fb-7862e980d3e4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f456060a-70cd-404b-8c1c-c62bbace96bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8d8814-0a09-4a5a-99dc-6ec9377ff172",
        "cursor": {
          "ref": "d04c3961-870e-4374-9f9b-61e8b90dbc76",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "11b1c8aa-0d7c-48b6-bc7e-b1ec419a6bff"
        },
        "item": {
          "id": "9a8d8814-0a09-4a5a-99dc-6ec9377ff172",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "22a1195e-0b47-4d07-ad0a-8e7a6130c450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e2318d-301d-4e0a-b588-2a578bdb2779",
        "cursor": {
          "ref": "1f1086da-a7a2-4020-9779-edfc68f40a33",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7a43fe3c-028f-47db-afd5-3c336ae2a47a"
        },
        "item": {
          "id": "25e2318d-301d-4e0a-b588-2a578bdb2779",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cee68bda-7337-40b1-8878-c4a7d92d68ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d5c3c1-4fe3-403b-b3f6-cdaefb798021",
        "cursor": {
          "ref": "a5d7055b-4dfd-46ff-8754-e31ff167fc1f",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3d264e5b-33dd-44a1-9b3b-c5494f910ad7"
        },
        "item": {
          "id": "36d5c3c1-4fe3-403b-b3f6-cdaefb798021",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "600e4efc-bd25-42df-b921-18e88f9ea04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf319629-1a35-4cce-9f22-d1f62d97f449",
        "cursor": {
          "ref": "6b3db720-3e42-4a39-9cf2-2b80473c094b",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "24ae54a4-3c3c-496e-b265-0d493e0db980"
        },
        "item": {
          "id": "bf319629-1a35-4cce-9f22-d1f62d97f449",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c98f28ac-ba68-4d3c-a298-5fd37f3279a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ea53ac-d2c7-49e8-9eb0-61d8b7d4e3b2",
        "cursor": {
          "ref": "19c97c3f-cef5-4e5b-9a1a-36e2d0148de4",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7fdfff8e-359d-4894-b60e-b622588777a5"
        },
        "item": {
          "id": "75ea53ac-d2c7-49e8-9eb0-61d8b7d4e3b2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "196202bd-f0ec-48d5-82b5-fcc497a56813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a894b8-faa7-4c2e-97a4-9a954879ef99",
        "cursor": {
          "ref": "ff729dba-a1ca-411b-9ad0-b512ac3b0e67",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e99a9d28-c22b-430a-b0f3-e99bf2ecc6f5"
        },
        "item": {
          "id": "a1a894b8-faa7-4c2e-97a4-9a954879ef99",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "356c4ef0-ebf2-42df-b6cb-84147a8ed784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fa1683-9e36-4e58-92e7-f9dfa95f60d8",
        "cursor": {
          "ref": "f91cadf6-ae86-4251-a495-143f42fb8c1b",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d1628059-74b3-41aa-96df-6716e2b8cf64"
        },
        "item": {
          "id": "36fa1683-9e36-4e58-92e7-f9dfa95f60d8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "094a6267-3177-4e90-b790-aff885148a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a3d4c3-64b2-485d-b2b2-8f5c96b5708d",
        "cursor": {
          "ref": "1c521901-a92d-4473-898e-7ec445b824f1",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "684ffc47-533e-49e6-8eab-7d78e2d90dcb"
        },
        "item": {
          "id": "23a3d4c3-64b2-485d-b2b2-8f5c96b5708d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bc5581a7-96cf-4f9d-9cba-5ec22c02b856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf849d5b-cdad-42f8-9034-f68cec0df1a8",
        "cursor": {
          "ref": "300736c3-92b3-4461-80e2-123d70b76422",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "65e1eeb5-298a-47c2-b675-f3a4acab1c56"
        },
        "item": {
          "id": "cf849d5b-cdad-42f8-9034-f68cec0df1a8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fc8381bf-882a-48c1-9db2-8a8452744b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e6e15b-a545-464d-830c-9583dacd0ab4",
        "cursor": {
          "ref": "3cbad418-aa04-4f62-8edb-9d8a67a90dde",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c7c06af6-0247-4ef6-84b0-54d38ad2cbc5"
        },
        "item": {
          "id": "43e6e15b-a545-464d-830c-9583dacd0ab4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f7564ef9-3960-4121-bce2-759c4610afae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ad333a-530f-4dcf-9e62-4c61180cb18f",
        "cursor": {
          "ref": "36e628d4-da86-4035-9e07-60be601ca8c6",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4efc1cb7-4287-4236-b69a-64881efece15"
        },
        "item": {
          "id": "63ad333a-530f-4dcf-9e62-4c61180cb18f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a43f5d4c-5dba-4c53-b7e5-d24729deafc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31710bd0-6284-424e-b9ea-d8a717ace2f4",
        "cursor": {
          "ref": "86131a2e-d6d7-49dc-b08c-3097d3587b49",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "49a72dd6-c517-4d7b-8095-7eb59e8ef4ee"
        },
        "item": {
          "id": "31710bd0-6284-424e-b9ea-d8a717ace2f4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0380653e-8bf1-4d9f-a6dc-f1a8bbbca8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0f16ed-f5e2-42f4-8a2b-ea06c4863ab3",
        "cursor": {
          "ref": "5807dd7e-0f53-4173-9aa7-05648e0aea60",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "29c3bc4e-ced1-44a8-b566-c841b964e3e8"
        },
        "item": {
          "id": "5f0f16ed-f5e2-42f4-8a2b-ea06c4863ab3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bdeceb37-2173-41ea-9fd1-2644bee1f994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1515c9ac-ad1a-424f-b4b8-1e172049eb2a",
        "cursor": {
          "ref": "959d3e03-755a-4595-876a-ba96c9f6cafa",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "aeb78ee8-1a69-4c7c-a3fe-e21cb7568810"
        },
        "item": {
          "id": "1515c9ac-ad1a-424f-b4b8-1e172049eb2a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2f14f9c3-c128-42cf-b0e5-64db3e14c1f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38afe65-414b-4813-b9a7-dd113a5304bd",
        "cursor": {
          "ref": "95c9abff-778e-4f91-aba3-4e63ab1ba5c7",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d45af013-cbec-47e0-884f-bbe835feba2a"
        },
        "item": {
          "id": "a38afe65-414b-4813-b9a7-dd113a5304bd",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8dbf3357-2253-4e23-af90-8344e91e3e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f43357-8ae9-429a-8f22-a3cd27278e3c",
        "cursor": {
          "ref": "1a0ec682-cbe0-4db6-885c-7ee40b2a0e20",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "86c6724b-5ee0-4a52-a4e2-ef4ae1bd7301"
        },
        "item": {
          "id": "95f43357-8ae9-429a-8f22-a3cd27278e3c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e075d7ed-6924-4da8-ad75-3449e2c1030e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5d44b9-6c10-4918-8868-a119972c5aac",
        "cursor": {
          "ref": "36a07cea-dce2-4d44-9b5e-0e42dd0a90e1",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d2b61585-b472-4066-b200-fbcb41aa1c07"
        },
        "item": {
          "id": "da5d44b9-6c10-4918-8868-a119972c5aac",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c6a8c309-0f8a-458c-8c2c-b576ddae0a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c8359b-b59e-433e-9656-dbc7bc441405",
        "cursor": {
          "ref": "04deb2c3-dc65-433d-a03d-e8fe948dc77a",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "06386f4d-4d82-445e-9eb1-926d394d5e95"
        },
        "item": {
          "id": "35c8359b-b59e-433e-9656-dbc7bc441405",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d7de9eb4-40ea-424d-b1ad-2286c6777a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf01b6e-45bd-47bb-922a-ca25a7be11fb",
        "cursor": {
          "ref": "84a60bb1-d297-48b7-b133-ce97b7509bbb",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "467e9599-0656-45ec-810e-475211d2e3b2"
        },
        "item": {
          "id": "baf01b6e-45bd-47bb-922a-ca25a7be11fb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "68a92e75-3319-48b2-b30e-1b68790d26ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788273b9-27f0-4470-8608-acf2c5bbaa0d",
        "cursor": {
          "ref": "fbc0398d-2d09-4289-b494-642eceead48c",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2df257a7-f2cb-4930-8a13-507e0e78c7e6"
        },
        "item": {
          "id": "788273b9-27f0-4470-8608-acf2c5bbaa0d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "31a72b4b-425e-4760-af08-231d00b743b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b79553-f5c8-475e-b22a-1f8f151ad54d",
        "cursor": {
          "ref": "e6889165-f72e-48a5-b147-680f9bf4ce1a",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "14d805c2-c0c5-41e7-b7c4-d9407c396e48"
        },
        "item": {
          "id": "86b79553-f5c8-475e-b22a-1f8f151ad54d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "38cb68e5-dd8b-453f-a23d-489559429b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eba6e4e-9884-4e63-a761-d353a4dddc3d",
        "cursor": {
          "ref": "f0e451f4-1454-48b3-a394-a4577478d6be",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b5aa28ee-31a1-48ee-8cc8-192aacb7ede2"
        },
        "item": {
          "id": "3eba6e4e-9884-4e63-a761-d353a4dddc3d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "566257cc-492d-43a6-a207-a506384cc79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a891886f-4fa1-400e-a99d-a0d34dbd69f2",
        "cursor": {
          "ref": "966a7220-151c-49b3-b725-c249e9ab34f8",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9f4307eb-18b1-46b2-b427-3dd67f102e73"
        },
        "item": {
          "id": "a891886f-4fa1-400e-a99d-a0d34dbd69f2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "097548ca-e8de-48dd-9da0-735b1f70169a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f459e8d1-2514-414d-8a24-b390db1fe41a",
        "cursor": {
          "ref": "6c482340-fedb-4281-a7fe-38ff678f4a5d",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a627afe2-d1a9-42c0-b018-3e662720deb2"
        },
        "item": {
          "id": "f459e8d1-2514-414d-8a24-b390db1fe41a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d28d1506-9452-4d75-b144-418980afb0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc255f73-5add-4361-8029-43897c359484",
        "cursor": {
          "ref": "903ff357-7ebf-410d-b611-6b7891684762",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "129f20ac-3a00-422a-9ba1-f3e47488003d"
        },
        "item": {
          "id": "dc255f73-5add-4361-8029-43897c359484",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e256f6bd-4106-48f6-aa60-27f72c0a7b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b28247c-2d7b-4428-839d-8c9154507735",
        "cursor": {
          "ref": "18593d23-dde4-46c0-8dca-14cea808a354",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ffb29f1b-1eaf-46c1-9ca6-0d9fb37fda62"
        },
        "item": {
          "id": "1b28247c-2d7b-4428-839d-8c9154507735",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "98cd6473-7cba-49ea-9e9b-8953dc7f53ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eaef7a5-5cde-42be-a5d8-98e4d53bb3e0",
        "cursor": {
          "ref": "78578fad-d2f3-4996-b747-984e9bf2a8c2",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "87987f72-c564-4b2c-97d3-2c2d62d301a6"
        },
        "item": {
          "id": "7eaef7a5-5cde-42be-a5d8-98e4d53bb3e0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f665ad80-c571-43df-9730-14dcfe321dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d337e8-d1a6-4416-a68c-f7b2bb86d68f",
        "cursor": {
          "ref": "4a0e6954-ce2d-43ad-9be4-6e2316c1247a",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "78c4200d-163d-4565-9710-948549297bc6"
        },
        "item": {
          "id": "c6d337e8-d1a6-4416-a68c-f7b2bb86d68f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a3c391b6-9e74-4ecf-90b7-93ca05ec8f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0491b9ec-5e0f-4e4e-8fd6-8f22ee10a39f",
        "cursor": {
          "ref": "f2f0bd42-074f-46d2-8252-9407b87de6bf",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a88998c1-3f8b-4712-a661-5de79f4dc522"
        },
        "item": {
          "id": "0491b9ec-5e0f-4e4e-8fd6-8f22ee10a39f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1311fe4f-5253-4fc8-a65d-869d22564296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267629a7-7f76-4382-aa4d-4cb1a37dd508",
        "cursor": {
          "ref": "cd7ba350-cd8d-48c1-8480-90074c56c12d",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c84e8d90-cfe4-4199-8557-da9a90a1dc8d"
        },
        "item": {
          "id": "267629a7-7f76-4382-aa4d-4cb1a37dd508",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c0768bd2-cdd1-409e-907e-bd5f6280475c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaada308-8c7d-47e2-841e-5e4400782e07",
        "cursor": {
          "ref": "bf080e89-7887-4d92-9398-e40cff7bf37a",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "39d463af-6d74-4dde-878b-8a893acc3c5f"
        },
        "item": {
          "id": "aaada308-8c7d-47e2-841e-5e4400782e07",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cd2b8d2f-fd21-46f7-a65f-d611758c0fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc3a675-f14e-41fb-a730-3b3ef667eeb9",
        "cursor": {
          "ref": "78229f9a-405e-4ee5-ba2b-3d635e232a40",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f251cac6-c677-4afa-9a7f-a8bb3d30e538"
        },
        "item": {
          "id": "9bc3a675-f14e-41fb-a730-3b3ef667eeb9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d7ed51fb-3864-4922-8324-2389f79cd4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763c1d48-0f3c-4e2d-84fe-c31696c73085",
        "cursor": {
          "ref": "48dd60f2-bc34-46ae-9a88-fa62faba317c",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "00a8d9b3-1728-4bd7-8ad2-c9b530fa9215"
        },
        "item": {
          "id": "763c1d48-0f3c-4e2d-84fe-c31696c73085",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "13092b79-562c-4534-b575-7bef0306e3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beed04c6-4440-4a89-8e5c-295cd496dab5",
        "cursor": {
          "ref": "1e46c92d-1f6b-4c93-b98b-813ffa5e040d",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "95df93b5-247b-445a-92ed-3ddca8b326a7"
        },
        "item": {
          "id": "beed04c6-4440-4a89-8e5c-295cd496dab5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "780db88e-b1cc-4156-a44f-eaf2575da945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e8a3e9-1ac6-44d5-b6fd-cdc36d25f1a1",
        "cursor": {
          "ref": "d5522310-e4a5-4159-a114-afdd18947947",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "036e5452-f3e5-48ea-9a9f-57d49ab5232c"
        },
        "item": {
          "id": "42e8a3e9-1ac6-44d5-b6fd-cdc36d25f1a1",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a6ec0871-6784-4143-8c5d-b7439c2dab3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201e48b3-b01a-4f4f-a704-0010b50ba1bb",
        "cursor": {
          "ref": "9d2917ec-58eb-4fa1-9d26-e2ff17a52bee",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e3fe8454-707d-4d41-bd74-24e421b42be5"
        },
        "item": {
          "id": "201e48b3-b01a-4f4f-a704-0010b50ba1bb",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "76c929d2-8d78-4f5f-a815-46e8a4672a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04109a73-b9d4-4653-abca-8621809a64d5",
        "cursor": {
          "ref": "f138d8a2-53e3-4c1f-960d-39604a507b97",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "39566cd2-1436-44c6-a7b9-e8d141859370"
        },
        "item": {
          "id": "04109a73-b9d4-4653-abca-8621809a64d5",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "714163eb-c487-4cc8-b7d2-aab8b986f69c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a910d349-11f3-49e6-a12d-060bd3747fbc",
        "cursor": {
          "ref": "c2216173-f9a0-486e-ad0f-d59e88842a70",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2aaeb476-b154-455d-a5d0-04c34ed548cb"
        },
        "item": {
          "id": "a910d349-11f3-49e6-a12d-060bd3747fbc",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0b94d87c-9d2a-4651-82d1-9e8ec76591ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d0378d-4bcd-44be-a1d7-f9ceaddd7b4f",
        "cursor": {
          "ref": "cd07bc6d-4798-4a5c-ba68-7b8c972e4a76",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "91ce6bb3-b6f1-4ec1-bed7-eae5369bfb35"
        },
        "item": {
          "id": "62d0378d-4bcd-44be-a1d7-f9ceaddd7b4f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3cd71a5c-f4fb-4755-ae5f-168e7b9940f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57da3df-35e5-4439-ba2f-416dd243595d",
        "cursor": {
          "ref": "b73722ca-7b13-41d8-860f-e84631fe957d",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "04405e34-f34d-4b4d-8c95-316c8387a31a"
        },
        "item": {
          "id": "a57da3df-35e5-4439-ba2f-416dd243595d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "047b7212-b54b-46d5-bbd7-0d1b99b753fb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20238d3-a425-442f-a07d-4f8139400fa9",
        "cursor": {
          "ref": "f7f6351d-aaff-4710-b414-52fe54fe7a72",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b72f13f0-1772-45e1-b5f7-2e9c5559508b"
        },
        "item": {
          "id": "e20238d3-a425-442f-a07d-4f8139400fa9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "de45e87d-20d8-4365-8158-14927305c547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d9191b-99fc-4115-94eb-777874f5e82a",
        "cursor": {
          "ref": "ea4f4c82-c2b5-4e21-acdd-73a116273c8a",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9a3e6ed9-1031-4d06-b023-d80bf6f05274"
        },
        "item": {
          "id": "32d9191b-99fc-4115-94eb-777874f5e82a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b3594c65-969b-4996-b70d-553b99f722b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d4956e-664e-4d1b-88b3-9882e174a8fb",
        "cursor": {
          "ref": "0f79de1f-c773-451a-be61-3181f9031b6b",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a25adbd1-44e6-4642-ade1-6b40d412aaf8"
        },
        "item": {
          "id": "c5d4956e-664e-4d1b-88b3-9882e174a8fb",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "37b8cf9e-1088-49da-8e0b-0c4541ccd872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe38fce-0f31-47e6-a25b-2991cd95f982",
        "cursor": {
          "ref": "366cdfeb-ab60-4ae0-bfbb-fa842e66f4ff",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1046add6-6b0a-489c-9ade-a71f77d04ec6"
        },
        "item": {
          "id": "5fe38fce-0f31-47e6-a25b-2991cd95f982",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9dcb3ee1-92f1-40a6-b9d8-018ef919bbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3170c04-7bd8-424a-b94c-6a352f02928e",
        "cursor": {
          "ref": "e8a220cc-ec0d-4f10-8401-c7f1796ac555",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c846371b-3baa-40c3-abad-dc51bcb6e814"
        },
        "item": {
          "id": "b3170c04-7bd8-424a-b94c-6a352f02928e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "dfefb9c2-e0db-4042-8c7c-71a67821ca86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adce2398-7acb-4b02-9f1e-2a8180bbf717",
        "cursor": {
          "ref": "4aa71904-f495-4d7e-a4b9-bdbeb0e76d99",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "10618b6c-9b88-49ba-a084-42c469c5e78f"
        },
        "item": {
          "id": "adce2398-7acb-4b02-9f1e-2a8180bbf717",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c7884b65-69a8-44ad-b7ba-74eabd3a3eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5597a950-7ece-4818-a49c-790e9eff4854",
        "cursor": {
          "ref": "e0ba4d13-cff7-4cdd-aa9e-e3196019c48c",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d590f976-4b36-4cf2-9634-8f6848cdf27a"
        },
        "item": {
          "id": "5597a950-7ece-4818-a49c-790e9eff4854",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "aa9caa1a-e3a0-4e6f-9cc6-dc1a6844cb76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d48775c-7ec3-41c8-8915-1e3676dc9bab",
        "cursor": {
          "ref": "dfede066-7153-4597-ae14-df3c36692303",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7ebcbdec-a3af-421b-a044-d79e5aab1f97"
        },
        "item": {
          "id": "1d48775c-7ec3-41c8-8915-1e3676dc9bab",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4f4c1544-68fa-4059-92c9-9044d9211fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69935293-b3af-476f-b5f8-4fede07f1f1b",
        "cursor": {
          "ref": "ff9f5178-b3a7-42c0-9e22-e0dfee361afe",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3f63892f-1524-42c0-9669-1763abdf9725"
        },
        "item": {
          "id": "69935293-b3af-476f-b5f8-4fede07f1f1b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "fb8eaa91-ee04-4071-9212-09c7b8c5cd6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f4225e-791f-4b6a-8e44-b799ee820fc5",
        "cursor": {
          "ref": "e4793aec-268a-4165-989b-978f94e35ec3",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8477bc03-e1b6-4c81-80f0-82d4e16a65d4"
        },
        "item": {
          "id": "e3f4225e-791f-4b6a-8e44-b799ee820fc5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8b8a5796-783d-4ded-a290-f65beacb2c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2783c4b6-cc01-494f-a588-fcdf57b22d3a",
        "cursor": {
          "ref": "5e27f606-d93b-4e02-9985-77ad091b3027",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5f515498-1a04-4c80-8247-af2642ad298e"
        },
        "item": {
          "id": "2783c4b6-cc01-494f-a588-fcdf57b22d3a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e43d70ca-435a-4986-81a2-26ffe4143e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10f1cf0-9e79-4a4a-8797-42f515414bd0",
        "cursor": {
          "ref": "b4136872-997b-44a7-ba84-37dbe1903f18",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "569beb15-0bcc-4eb4-a034-d12c773429b3"
        },
        "item": {
          "id": "d10f1cf0-9e79-4a4a-8797-42f515414bd0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "38581c81-6539-4af3-a3f8-79c0c776df63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0e4a4b-0f79-45e9-abf1-e4f0f5dac369",
        "cursor": {
          "ref": "9d77c38b-29f1-42f9-8272-f93fc10dc796",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0de10c8d-1adf-45a0-a9a2-73c0f06aba12"
        },
        "item": {
          "id": "2e0e4a4b-0f79-45e9-abf1-e4f0f5dac369",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "13ad62d2-580b-4ff8-a15b-4cda789d835a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c85c6c-3c6a-4760-9efc-5d896d323b5e",
        "cursor": {
          "ref": "3e74f855-dbe4-42b5-a850-bceeabb94907",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4618964f-2714-42e6-9fc0-d6b926cbcaa3"
        },
        "item": {
          "id": "67c85c6c-3c6a-4760-9efc-5d896d323b5e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6eb37f34-319a-4e63-bb96-b22b4a385a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e548c62-76d8-410a-8293-893e2d06ca61",
        "cursor": {
          "ref": "c5435516-8c78-4c73-bffe-6aa2da3b8f5f",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "beb07e9f-2b72-408f-9afe-73e3b99c3365"
        },
        "item": {
          "id": "6e548c62-76d8-410a-8293-893e2d06ca61",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8a5bd7d3-e489-42f1-a59e-d0b8354055f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54650a8-00f6-4047-944b-af3fd752587b",
        "cursor": {
          "ref": "e0b258fe-9b45-4be1-9867-580a6ad31f1a",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6245aee7-f2b8-4778-896b-9906cab161de"
        },
        "item": {
          "id": "c54650a8-00f6-4047-944b-af3fd752587b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6f7dbd81-f21a-4996-9f69-2a2819a79b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc01a24a-2ea3-4677-8baf-30fb661b1db6",
        "cursor": {
          "ref": "8a47267d-ef8f-4ae7-aa3b-4ada3f3abfdc",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ccfd4ec2-77c2-4f34-acb1-465c11eb0496"
        },
        "item": {
          "id": "cc01a24a-2ea3-4677-8baf-30fb661b1db6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "77ec90f7-831f-41fd-98a0-3075a8651648",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "9b74a84f-d96b-4a14-87d4-5503e89e9d9d",
        "cursor": {
          "ref": "38a4f721-f747-4f37-b1d6-71cc08959fa4",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f4403b8f-d310-44d0-8f97-aa9311dd027f"
        },
        "item": {
          "id": "9b74a84f-d96b-4a14-87d4-5503e89e9d9d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "da2762b8-63dd-4fb9-9b9a-e8ceaa153b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d246272a-19bf-40a4-b2bf-72f43fe1d957",
        "cursor": {
          "ref": "44177d4b-ea7a-4380-9f7b-c35c38ad53d3",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2105f7eb-e283-49e9-a411-19b4ec8a6a78"
        },
        "item": {
          "id": "d246272a-19bf-40a4-b2bf-72f43fe1d957",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b53a8116-d38c-4eb9-a0c8-84f1e1507cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd7f8f3-1cc0-4195-a73b-c5492fbfc9d6",
        "cursor": {
          "ref": "1171d347-06f6-4454-b8ac-e12a824b854f",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "aa78320d-827c-4dad-94ff-073ee0d5fcd3"
        },
        "item": {
          "id": "8cd7f8f3-1cc0-4195-a73b-c5492fbfc9d6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "076a8f90-efe5-4307-8851-c6a0c166f7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9647a2-daa1-43bd-a6f1-97f586cbbd9a",
        "cursor": {
          "ref": "b70029bd-d7b9-4fae-a17a-952d692c8e67",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "bea1e123-6d4b-422e-99a9-52ca0452d6b4"
        },
        "item": {
          "id": "ac9647a2-daa1-43bd-a6f1-97f586cbbd9a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5930ab12-76e5-4384-aac9-99bc1949c251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645d28e1-3cb4-46b1-8e7d-fa61d0875209",
        "cursor": {
          "ref": "45888ca5-49ef-4f37-bea1-a2a62be5b174",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6e37139e-8de3-4985-8b33-6175fa3e83ca"
        },
        "item": {
          "id": "645d28e1-3cb4-46b1-8e7d-fa61d0875209",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "bf7167e1-3b01-4e99-88d8-c8219e936c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d08ddf-c749-4ca8-bc8c-eefb06e40d66",
        "cursor": {
          "ref": "c30c46dc-4194-40f0-8f4d-82a06f3a4b60",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "aa846cd4-2bac-43c1-a861-edfc79b19dc4"
        },
        "item": {
          "id": "88d08ddf-c749-4ca8-bc8c-eefb06e40d66",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9096972b-ef72-42c9-a8e0-d9356e74051a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97208983-d22f-4f0e-b5d9-fe3c27fcd7c7",
        "cursor": {
          "ref": "02de0178-be1f-448d-830d-e6c4b83cdbaa",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "553ace6c-38b4-4529-906b-96ecd7a05272"
        },
        "item": {
          "id": "97208983-d22f-4f0e-b5d9-fe3c27fcd7c7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f1aed0e7-6602-4117-a915-ca7b3369b5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4e4968-7de1-41fd-aa41-ad4c45085fcf",
        "cursor": {
          "ref": "5f740ee6-7a26-4377-9a44-5cad6323a4a3",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d0986203-b90f-4212-93b9-14e3019f1d1b"
        },
        "item": {
          "id": "7d4e4968-7de1-41fd-aa41-ad4c45085fcf",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8d83f3fe-706b-4bf7-ae27-5a17c091be86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9c2ef5-2605-4520-a6f2-3cda4796d5b3",
        "cursor": {
          "ref": "3d4daf00-d063-4f4a-848d-a60d55a7d543",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "39676d8c-7f20-44f8-bd67-3ae1c23491e7"
        },
        "item": {
          "id": "8f9c2ef5-2605-4520-a6f2-3cda4796d5b3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1ff0dec6-a2ec-4147-bb2f-8d98819ddf32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c33c81-7646-43c8-86e3-9407bb0d79ed",
        "cursor": {
          "ref": "44215670-2e5e-459c-a1e6-c95c805dc886",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e8806296-6320-4e85-bd37-c5538f856fe8"
        },
        "item": {
          "id": "a5c33c81-7646-43c8-86e3-9407bb0d79ed",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "281287e4-bfc6-411a-8ef5-c7739f063999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47e3af1-596d-4cf2-8739-94292819ca41",
        "cursor": {
          "ref": "9a9b9c1f-e32e-440f-a9c4-3c0786caf03d",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "58f50145-6dc5-4fe1-a5d8-72e6e1f4670e"
        },
        "item": {
          "id": "f47e3af1-596d-4cf2-8739-94292819ca41",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cbad1452-416d-4a88-b1e9-c72146872cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8916b6-38f4-4002-982d-514530ae0b6c",
        "cursor": {
          "ref": "bac0bbd4-3372-40a7-961c-17b2f31b8ac4",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ca2c5bd0-c79f-4621-8637-f6b0aec0c476"
        },
        "item": {
          "id": "2d8916b6-38f4-4002-982d-514530ae0b6c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "363ac890-646a-4155-9be3-727e86a0ad6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314f877e-488f-496b-9b57-953870db53da",
        "cursor": {
          "ref": "ac963c02-3642-4aff-9175-20b12be90bc1",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c3ff6964-fd06-44e3-a637-02cc1da5ba13"
        },
        "item": {
          "id": "314f877e-488f-496b-9b57-953870db53da",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f7c86970-9588-4259-b096-4e3414585a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ecd6ea5-17df-4d2d-9a6c-e52d566b69d3",
        "cursor": {
          "ref": "76f06e27-bf6d-4be0-ab8d-0c2ba494be0b",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "81515ac3-f4d5-4fef-b8f8-d25a031adb8e"
        },
        "item": {
          "id": "5ecd6ea5-17df-4d2d-9a6c-e52d566b69d3",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "26c67efa-371a-4be2-bd35-66278c4d3805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98788b7-1fc4-4fa2-92b5-226d60e70ef5",
        "cursor": {
          "ref": "8154a29b-77c4-47f7-ba3b-ef16fc2b3b75",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c1ff9e4c-5526-4d80-b71f-208528f34d60"
        },
        "item": {
          "id": "a98788b7-1fc4-4fa2-92b5-226d60e70ef5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "26f2a081-dd35-4f03-8eef-983a9290247b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184cdba1-7bcd-48c3-9dfc-5c0df7b7cfd6",
        "cursor": {
          "ref": "6a3c6ca8-2878-49ab-9839-e91129444c06",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9ab998c8-00be-40ce-83ec-21c785468faf"
        },
        "item": {
          "id": "184cdba1-7bcd-48c3-9dfc-5c0df7b7cfd6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ceda0b67-94f7-4cee-9678-9d120c6fbd65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644080df-893f-4316-9cb3-ab8cde9af5cb",
        "cursor": {
          "ref": "6af1c822-4cd5-4ebc-84d3-74fad1cc3bfe",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0fa01d4a-48e3-46ca-a53e-f6d81510c697"
        },
        "item": {
          "id": "644080df-893f-4316-9cb3-ab8cde9af5cb",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "20e33d5d-908e-45d9-bbc2-6ac3fdfc37b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576ea264-6113-4e8e-addd-2c441d43bfd5",
        "cursor": {
          "ref": "1c817a94-9248-4974-82ae-b4e918e06ca1",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a6f16efd-5211-4aec-9d74-34a2c2d47161"
        },
        "item": {
          "id": "576ea264-6113-4e8e-addd-2c441d43bfd5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "06acd704-80fb-4ed6-9659-08e5f4c06521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a97242-aa48-4c3d-995f-a416cc8cbd13",
        "cursor": {
          "ref": "91f8f65a-8472-402f-9a1e-16553ab8da79",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1c005def-dceb-46aa-a13e-cfa97c4667ff"
        },
        "item": {
          "id": "62a97242-aa48-4c3d-995f-a416cc8cbd13",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a71fc425-98e5-4ff7-867d-b34e2525c0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08780ad-8804-4ee2-b298-9bd1c1c33fe3",
        "cursor": {
          "ref": "a540ed0f-9379-43a7-85eb-18ccc2712a9b",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e631c034-008f-4dec-9ece-d2f61a505d37"
        },
        "item": {
          "id": "e08780ad-8804-4ee2-b298-9bd1c1c33fe3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "aec03485-3098-4b88-8d6b-c3a3910f6b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2d92af-f65f-4e98-93a4-bb70fd68a670",
        "cursor": {
          "ref": "a73a4c7c-4a57-435d-bbee-3e00aead0371",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "15add648-94de-45d3-9f7d-05f1a3ee69d3"
        },
        "item": {
          "id": "8c2d92af-f65f-4e98-93a4-bb70fd68a670",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e3483ac7-430a-4f2d-bd6e-7f4521840a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed307443-a3c3-4fd6-9e7c-14a124b63a4a",
        "cursor": {
          "ref": "c6bb3118-ac57-4fed-a34b-9bafdce329a6",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "61b6ca92-66b8-4f66-8398-17236d8c12cf"
        },
        "item": {
          "id": "ed307443-a3c3-4fd6-9e7c-14a124b63a4a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "479ed280-8fe4-4fc8-ae30-302fa105e54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4455040-5af9-4852-b898-2c5fa27c1a08",
        "cursor": {
          "ref": "88111ff9-3710-4a30-ab89-48c54e5fc2a7",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "aacfef45-37d4-45d0-9879-5667d7a90791"
        },
        "item": {
          "id": "f4455040-5af9-4852-b898-2c5fa27c1a08",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e7b07bcf-5861-4608-b742-996b4941710a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddfdc90d-f65a-4f41-b353-a5444f1c8c45",
        "cursor": {
          "ref": "af4372c5-1a20-4c93-9bc6-2b24333422ce",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "708989ad-1e5a-4e72-9a53-4abe3727f1eb"
        },
        "item": {
          "id": "ddfdc90d-f65a-4f41-b353-a5444f1c8c45",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "cfd4ef00-2e4f-4476-bc60-e5af36e8e5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb82a881-e494-4c73-a886-dcb85c93729d",
        "cursor": {
          "ref": "f2b08a18-cd74-4084-9795-76ae21454bd8",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7bb717f7-fcda-488c-9c38-6f7e43e8dc4e"
        },
        "item": {
          "id": "bb82a881-e494-4c73-a886-dcb85c93729d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "805a65d3-a9b3-4e19-993d-b443b41379d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab6239d-6005-48a6-b68a-967ee46a21d3",
        "cursor": {
          "ref": "e6d80463-3bb9-48e5-8bfd-f07dfa9b2744",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6a91ea44-9c68-49fc-ac92-5570ef3329cc"
        },
        "item": {
          "id": "3ab6239d-6005-48a6-b68a-967ee46a21d3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4e20a4e8-5add-4c49-8592-197a63b9c406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39e6eca-10f1-4bc9-bea2-89bcebeda00c",
        "cursor": {
          "ref": "b626a61d-fc6a-4e16-bfda-0b0875a540a2",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e50fd831-f1a9-4c85-a1b9-283e3f6e9c4e"
        },
        "item": {
          "id": "d39e6eca-10f1-4bc9-bea2-89bcebeda00c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1ba49e1f-4f5b-4b72-aa36-439a2c63f71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d496c85b-d38e-481e-8339-fa8b7cc19ec5",
        "cursor": {
          "ref": "2eaef877-6bc4-469c-a0e2-66afd6666e3f",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6bf24eed-15c1-417b-ba6d-a1be5ad5f5b5"
        },
        "item": {
          "id": "d496c85b-d38e-481e-8339-fa8b7cc19ec5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "65bfaf9b-c8d4-49bd-9dce-4cd9f1efbea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd566205-8327-470f-8c89-7d3209d8417b",
        "cursor": {
          "ref": "bd63cc3f-79a5-4ab1-9849-6aa5f311247e",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f7eeb737-296f-479e-8f21-eedcb3c0d38b"
        },
        "item": {
          "id": "dd566205-8327-470f-8c89-7d3209d8417b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "454ed8aa-d29c-44e0-a7da-32a6ff6ea2c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed59745a-fbe2-4932-b342-85c8c22cbd3e",
        "cursor": {
          "ref": "31d35d06-670a-4c23-b73f-b9fa49843913",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "105ddc34-4e85-4f44-83d0-c99034e94df3"
        },
        "item": {
          "id": "ed59745a-fbe2-4932-b342-85c8c22cbd3e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "108ab6ed-c6e9-4781-a18b-abd40d2c2853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a269d83-72fe-4eeb-bed3-a6e3e73ffaa1",
        "cursor": {
          "ref": "28ed54ed-9b35-43be-ac4c-ebcb3f15c086",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fee66bae-a86d-4350-ae71-4dbee154b295"
        },
        "item": {
          "id": "6a269d83-72fe-4eeb-bed3-a6e3e73ffaa1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "dc875e48-3a41-4155-9a68-a0318bd62ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb91b9cc-8062-4597-9a19-e795a2d05b8c",
        "cursor": {
          "ref": "7d048bf8-93f4-45e9-a562-32399316955b",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ae3712e7-fc24-4580-8067-19abd75b64d8"
        },
        "item": {
          "id": "eb91b9cc-8062-4597-9a19-e795a2d05b8c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1e325357-b819-422b-bbb5-a3e2d2b0de6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5258ef4-578a-4e2e-a700-3df99797e5d5",
        "cursor": {
          "ref": "db19d5bd-4f3a-47db-b913-31b32a48873a",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "87b4449a-301d-4d51-97a4-1df23f507d21"
        },
        "item": {
          "id": "b5258ef4-578a-4e2e-a700-3df99797e5d5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "85d1718b-09d8-4a48-9d75-dce35df11be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a069791-4ec9-4e04-b7b7-0c03d0279c71",
        "cursor": {
          "ref": "418ec895-7555-4171-8cb1-25f20856756d",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5383e7a5-aa9f-4103-a97a-62f4597bc00b"
        },
        "item": {
          "id": "7a069791-4ec9-4e04-b7b7-0c03d0279c71",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "82752596-eb18-49de-b4bb-1ac42bcb5e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f647cbc-a35e-4e7b-a08a-167d9d745361",
        "cursor": {
          "ref": "7d959e82-ab67-4432-a4f4-663d0b0f153a",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f577d52d-f7f7-4d7e-9b9c-00da7845b061"
        },
        "item": {
          "id": "7f647cbc-a35e-4e7b-a08a-167d9d745361",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6437418b-b699-46c8-bdb9-55bcb717acca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8b8cf9-e4ad-4cc0-99cc-ba40750e1fc7",
        "cursor": {
          "ref": "27520970-159c-4423-b1b1-e2e043ffe024",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7b07d6a1-69bf-44c6-b39c-34a6f890be64"
        },
        "item": {
          "id": "3d8b8cf9-e4ad-4cc0-99cc-ba40750e1fc7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f2e453b4-0a1f-4349-84df-1f1e6cca57aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251934d4-f832-480b-b746-6eaca67de677",
        "cursor": {
          "ref": "d8face10-8f36-4c2c-a7a2-1adb14d8cf2f",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "bbe30806-3f0e-4abd-b49a-cf83c6953c44"
        },
        "item": {
          "id": "251934d4-f832-480b-b746-6eaca67de677",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "364f4b61-a205-403a-994d-061106b283dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fca0fa-4917-4074-8ec7-7e21043e1d65",
        "cursor": {
          "ref": "dd62d5c2-cb27-4ab2-8fec-b51049d6c591",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0a3a0363-aa12-4e6c-802a-c9d8d131e2a9"
        },
        "item": {
          "id": "b3fca0fa-4917-4074-8ec7-7e21043e1d65",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "55c151c4-203c-4d34-8d04-2dad4bf95e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02dc85b3-ec8b-4a52-a9d8-bc25bf213240",
        "cursor": {
          "ref": "25e2acde-895d-4925-bccc-295c9594a7ab",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bf22eda0-b12c-460d-ab9d-11d770747f50"
        },
        "item": {
          "id": "02dc85b3-ec8b-4a52-a9d8-bc25bf213240",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "aa06fb4f-cd46-40c0-bdde-56c2335c8bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd43e931-166e-46fc-9a6b-8a27000ac73d",
        "cursor": {
          "ref": "11cacdcd-f40f-4067-ab78-9318064367b8",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d5af0599-7fca-469d-9edd-b0c9103fec6e"
        },
        "item": {
          "id": "fd43e931-166e-46fc-9a6b-8a27000ac73d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ffb18c18-ce67-4cdb-aefe-920af80f2e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ae159a-2f8a-4ea2-b9d1-55cd8eb3c159",
        "cursor": {
          "ref": "fde98ad3-0680-4188-8dd8-a45de852f7e4",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6c116f55-4e33-46db-a90e-a7f14263cb38"
        },
        "item": {
          "id": "59ae159a-2f8a-4ea2-b9d1-55cd8eb3c159",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6db44de3-181a-405f-bd37-3366d8c6757c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc01533-df02-4e77-835a-1212e7b4072f",
        "cursor": {
          "ref": "174ddabc-71a0-4eaa-8a8e-90b5e2a56d6d",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "590acf7e-f3ae-4356-8191-0281b7400cc4"
        },
        "item": {
          "id": "abc01533-df02-4e77-835a-1212e7b4072f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f9c2f023-5d99-496e-8811-ecb07571b001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f599235c-4e76-4d71-b4f7-3e3b6887d92f",
        "cursor": {
          "ref": "1d54cc94-34e3-441a-b6f1-2466c5da797e",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cce21fdd-8349-459f-adc5-e9f15157f741"
        },
        "item": {
          "id": "f599235c-4e76-4d71-b4f7-3e3b6887d92f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4be8189d-80dc-4fa3-ba49-0a540ac608e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d229761c-02ea-43de-bf7c-ae11b30f6dc9",
        "cursor": {
          "ref": "422537d9-6661-4b54-bdd1-6b255b7fabe7",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9f19a43e-7c2e-43e7-8e9f-9ab4b9f316eb"
        },
        "item": {
          "id": "d229761c-02ea-43de-bf7c-ae11b30f6dc9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0dc3c732-3343-443f-9573-1ab7217893bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648a7b10-18f0-4a5c-98bd-d24c10499ca6",
        "cursor": {
          "ref": "6f8ccb77-6404-41d3-ad8a-f85a60711abe",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a32c1b55-5658-4d74-b242-979dd20f858b"
        },
        "item": {
          "id": "648a7b10-18f0-4a5c-98bd-d24c10499ca6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c5470f83-7691-40f8-ab95-efc0b847377c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604de8c1-7548-4131-a0ab-2874a7680972",
        "cursor": {
          "ref": "773d627d-bdcc-4e3c-ba36-25adb19fa82f",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9cf78129-951f-4255-bdc2-0e2ec6010a81"
        },
        "item": {
          "id": "604de8c1-7548-4131-a0ab-2874a7680972",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6a5b3539-88d0-4eb4-bf61-777cc18c5578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19b58fd-4f4b-43d8-8bf2-41008b4b7539",
        "cursor": {
          "ref": "611ef14e-a4a3-4ec4-befb-53f7dc94fbb5",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2c133d11-588f-4a19-a470-33df7b054b05"
        },
        "item": {
          "id": "e19b58fd-4f4b-43d8-8bf2-41008b4b7539",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c85eb3a2-a31e-4009-bb35-2e56d785fb46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaea3af8-0fc1-4bd8-8008-7d29fa2fc13f",
        "cursor": {
          "ref": "26cc338d-4aec-4222-ae15-e2b23f61a556",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c579a13f-fca6-4402-92c9-0c04b023ec3a"
        },
        "item": {
          "id": "aaea3af8-0fc1-4bd8-8008-7d29fa2fc13f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "32020b0f-151f-4d0c-be75-b0b47c53bb65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93b424d-5394-4735-b3a1-6d5b198944c1",
        "cursor": {
          "ref": "36ae166c-dc25-4db7-8a16-90d1140b6ca9",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2dbb6ba2-2a36-40d2-b7db-a104f2d27b7b"
        },
        "item": {
          "id": "c93b424d-5394-4735-b3a1-6d5b198944c1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "80d6b076-7495-46e1-a390-f9c68f049396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7e3467-6eb0-4d29-9e7a-63302ee4dff7",
        "cursor": {
          "ref": "0e84bec7-1d0b-4d77-b103-fa7c8715f20a",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "df6c5022-8a3e-481b-9f00-5f982c27dc5b"
        },
        "item": {
          "id": "eb7e3467-6eb0-4d29-9e7a-63302ee4dff7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cc227f95-69a2-4fa0-9ded-09e372cfac8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93191b1e-0742-4f9d-b573-53a38e94967c",
        "cursor": {
          "ref": "1833c4db-f771-4f58-addc-d615ba7373b4",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "889891e9-5080-47a5-8708-e6adb70ceceb"
        },
        "item": {
          "id": "93191b1e-0742-4f9d-b573-53a38e94967c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c9fee38e-9ae9-43b5-8ff5-4ab154917b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0504b3b-71d4-4f07-8f51-14d406efdfe6",
        "cursor": {
          "ref": "2662d8b5-b76a-44c1-b068-f2e334344d9f",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "84ab4c25-4998-44a6-a175-e54e269b48ee"
        },
        "item": {
          "id": "f0504b3b-71d4-4f07-8f51-14d406efdfe6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9b6d4981-d855-426f-90f5-a622e8be2999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df1d185-b7fd-4e3f-8b6f-f4adbdd62eb9",
        "cursor": {
          "ref": "dfb550d4-97a1-4418-8eaa-45bbdd65e19a",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "eb1138cb-dd71-4003-ac7c-28c9266d379f"
        },
        "item": {
          "id": "0df1d185-b7fd-4e3f-8b6f-f4adbdd62eb9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3411af65-2849-497c-8113-cf9a1457137c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a949703-1edf-499b-8e04-40998cd20648",
        "cursor": {
          "ref": "753404de-aaf4-4376-8620-e96f5ded8182",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e5ba4375-f032-4536-905c-f13cc5b7f898"
        },
        "item": {
          "id": "9a949703-1edf-499b-8e04-40998cd20648",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f8c0038e-8659-406f-8c74-e2c586b4df46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7012c2c-a12c-41d3-8644-577b4b737225",
        "cursor": {
          "ref": "257a67f3-2f45-47e8-931a-7db9814268df",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d111ea16-847a-471e-8cf6-16b3e817e99c"
        },
        "item": {
          "id": "b7012c2c-a12c-41d3-8644-577b4b737225",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e61a0aa5-0b6e-4452-82dd-6c01459a8c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ec357a-0576-4765-9ff9-fd376c5faa11",
        "cursor": {
          "ref": "6cf871a4-dd82-4289-b626-253ffef75648",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ad539b5e-a8aa-40e4-a8d0-945fd3ea9ce1"
        },
        "item": {
          "id": "68ec357a-0576-4765-9ff9-fd376c5faa11",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e192f2fb-eb7f-4ca9-8b3f-54f7ea20c080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75b796f-d344-4c1c-aa9f-7e3d4e92a74d",
        "cursor": {
          "ref": "214457c8-e0c0-4115-83f6-7d23c15aee93",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "3a0e1e3e-a436-4b2a-8c37-33a76e9b2985"
        },
        "item": {
          "id": "b75b796f-d344-4c1c-aa9f-7e3d4e92a74d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "45f23d15-c765-4647-86b8-706413e45264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d4c4bc-bfe1-46c6-a2c6-ac82df92f8f3",
        "cursor": {
          "ref": "03735c46-264c-4d94-8e54-494ad9f05e3b",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7929e36e-5430-4194-bea2-275509ba783c"
        },
        "item": {
          "id": "e0d4c4bc-bfe1-46c6-a2c6-ac82df92f8f3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9f3167cf-21cd-4ad2-b125-543e3a7641bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27302fbd-e2dd-4502-8978-74aa4f703f3f",
        "cursor": {
          "ref": "e0a28e62-14f2-4359-8d14-bcf9e26088f0",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "bbdfee1d-1e6b-4b49-b404-a94b58a5da7b"
        },
        "item": {
          "id": "27302fbd-e2dd-4502-8978-74aa4f703f3f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "214d62c9-bec5-4c94-9738-c91e9802e4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68cdf71b-d2d5-448e-b5bc-f1adfb11ea33",
        "cursor": {
          "ref": "dedcfd3d-9e5d-4401-bde5-338d32ce73dd",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "68f6f2f0-d66a-471a-b12a-8c5adca57282"
        },
        "item": {
          "id": "68cdf71b-d2d5-448e-b5bc-f1adfb11ea33",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c5f4080c-6ac7-4b32-a409-b1fec8141bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654a9e8d-cf2e-435d-9a76-5da20f07da6f",
        "cursor": {
          "ref": "528954f9-9d29-41fa-9c86-674ed37c8bc0",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "7268c133-9e30-4b71-8cf1-ab76455e50be"
        },
        "item": {
          "id": "654a9e8d-cf2e-435d-9a76-5da20f07da6f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b193d3fd-9032-4c5e-af24-369f2dbc885c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f85a31e-45fd-429c-a2f3-3925329c3f02",
        "cursor": {
          "ref": "17f9badb-715f-4ed4-bccd-4714114e998f",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c9a4f4f9-5c8b-48ce-99f9-ecdce5fde32f"
        },
        "item": {
          "id": "7f85a31e-45fd-429c-a2f3-3925329c3f02",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6853328a-741a-4a88-9f26-c27d3fb30032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5c6f38-18a4-4817-bc20-bc5e38c7de3e",
        "cursor": {
          "ref": "e8c7eeef-d898-4ba0-bcd2-0dd662c8f408",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c19ab9fe-4a8b-4f66-907e-2b74be154d57"
        },
        "item": {
          "id": "1a5c6f38-18a4-4817-bc20-bc5e38c7de3e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6a5168ce-e488-4ac5-b228-86ea68baae90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0270660-779b-41e5-ad3c-3f888558f229",
        "cursor": {
          "ref": "5b5409c5-e72a-4670-b779-4463589d3dee",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "0e649d1a-1b52-40bc-9a89-51eb41ca98a7"
        },
        "item": {
          "id": "e0270660-779b-41e5-ad3c-3f888558f229",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "104fb90e-f426-4995-8590-620f4d87c19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1a44b0-46b1-4c2f-bae7-4fdf30153529",
        "cursor": {
          "ref": "0662fc3d-ffd3-440c-8e23-ec6cde88ae05",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "7afb7449-b2b1-4450-892e-cfb268cf2987"
        },
        "item": {
          "id": "5f1a44b0-46b1-4c2f-bae7-4fdf30153529",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6fe8d6d2-1a05-4711-a65e-63ca03e221f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5bb9225-e5d0-45e2-b2f9-ff1dc2d9fb81",
        "cursor": {
          "ref": "89c2d31b-c6d3-4ac2-ad60-c882516af74b",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7ada0b7e-6ece-4e67-9426-0bbeef269fd8"
        },
        "item": {
          "id": "b5bb9225-e5d0-45e2-b2f9-ff1dc2d9fb81",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5ed73a32-b749-4eb2-a0ae-0ecb102821e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21a63aa-c7d9-4b84-b3fc-557154a73a8b",
        "cursor": {
          "ref": "2a340a57-1788-49b8-a7c8-1f5f8893ec77",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "af1a10a7-af97-48c7-8471-3b51a8441699"
        },
        "item": {
          "id": "b21a63aa-c7d9-4b84-b3fc-557154a73a8b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7b27c509-a1aa-4af1-a721-8bcf315cea3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643a371a-bdde-4ef3-a4cf-a21e0dbed010",
        "cursor": {
          "ref": "193b19c2-f4a5-4245-bb0c-b7935e15206b",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "c92a8641-7b5f-449e-84f0-da3ad7859ff4"
        },
        "item": {
          "id": "643a371a-bdde-4ef3-a4cf-a21e0dbed010",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d79ee8c3-280e-4e97-b0c1-e4b1b2ba4596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4cbd26-7a23-4048-84d4-c99bdfd5ece1",
        "cursor": {
          "ref": "0e054cdf-daf2-4ba9-920d-3dba55ae092d",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "3984fc94-314f-4177-8786-be31dfd14488"
        },
        "item": {
          "id": "2e4cbd26-7a23-4048-84d4-c99bdfd5ece1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ee23b0bd-55e9-4c35-9582-dcf8dc1c39eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c15f18-98d3-4f93-9c98-c871708f9114",
        "cursor": {
          "ref": "1b328e97-c0e8-4d17-8cec-e50572f983b1",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "1b12f274-20cf-45de-bc61-733f81d2a573"
        },
        "item": {
          "id": "d5c15f18-98d3-4f93-9c98-c871708f9114",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "08b3865c-83b7-4a1b-ac76-e1ba4a38ecc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7478d897-cd37-4565-b869-37f49ba1b59e",
        "cursor": {
          "ref": "65a568d7-c683-4e60-aebc-14e438a90d01",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "21171b41-2a2f-409e-bfb5-b387fd9c7dae"
        },
        "item": {
          "id": "7478d897-cd37-4565-b869-37f49ba1b59e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2c89bc8e-8c07-4af4-8ca4-178f8d01f92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed40f90-95b5-41ad-8266-98050aff4ae5",
        "cursor": {
          "ref": "ba98b615-d4a2-4f56-911b-46c7e8b15bdd",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "62920b7d-ad33-4ab1-8f90-1e10e036f488"
        },
        "item": {
          "id": "eed40f90-95b5-41ad-8266-98050aff4ae5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d96e7b81-e3aa-4e41-bb8f-c1c9758ea299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d3ca63-b872-43df-bffa-b0c9778ff8e4",
        "cursor": {
          "ref": "422be785-1d15-447d-a7f7-22cd8277f083",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "25e9c5ce-f911-4301-b230-644043cea342"
        },
        "item": {
          "id": "11d3ca63-b872-43df-bffa-b0c9778ff8e4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9db55bec-e838-4b17-ba03-e1ad0a0c4bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b963123f-73da-46b6-8d3d-ec08357a9a13",
        "cursor": {
          "ref": "1e5e6fff-3966-4167-b098-c9e905a9d99b",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "4996ed35-cba9-4239-8f01-d6099f1d49fc"
        },
        "item": {
          "id": "b963123f-73da-46b6-8d3d-ec08357a9a13",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d48e6e59-cd49-4ec4-afc7-8abbe304c4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e3800b-f1c8-4b2a-a7ec-b07e11f94902",
        "cursor": {
          "ref": "5ec179fc-1ac9-47e9-8c81-fd46df96906b",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "6bd52d66-6e98-43b3-9340-0621ce9c9f58"
        },
        "item": {
          "id": "53e3800b-f1c8-4b2a-a7ec-b07e11f94902",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c8365dfd-fa39-4db9-a101-d860d875d1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28142fd4-d962-42f9-9c7c-95b5fb1cc630",
        "cursor": {
          "ref": "2a21c4f5-e17b-4f2e-bfe0-1cc519829453",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "427dea53-80e0-47ab-82e9-e3473aea3aca"
        },
        "item": {
          "id": "28142fd4-d962-42f9-9c7c-95b5fb1cc630",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c1841066-d049-41ab-8693-c75f4b3ecfe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09241d4-8828-4453-abb1-1f05e84e5219",
        "cursor": {
          "ref": "49e3bde7-bfb2-48d0-ad99-00cbe61fbbfd",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "64bc47d1-304c-4d99-89aa-ee6f5757ba88"
        },
        "item": {
          "id": "c09241d4-8828-4453-abb1-1f05e84e5219",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "db1b8eb5-ecc4-4d66-bfd8-deafcbcd8ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea4722f-f82c-428b-979e-1788e15f2b72",
        "cursor": {
          "ref": "a1dc27cf-a2a9-44d0-8d71-1f6fb50e3123",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ffc9d05d-4280-452c-b08c-1bf4ec34cc00"
        },
        "item": {
          "id": "cea4722f-f82c-428b-979e-1788e15f2b72",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6e2b634a-9efd-4ebd-b686-05356e75d742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbef0fd-e7d6-404e-8a8e-b05a485fe564",
        "cursor": {
          "ref": "bc58bd29-6c45-4173-bf8b-b26cf8113cf6",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "21782a24-2048-42c5-88d9-e1637d34edf0"
        },
        "item": {
          "id": "bdbef0fd-e7d6-404e-8a8e-b05a485fe564",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "dc503369-f1b0-44d9-926a-cf50d3c4c538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2735b5-7796-452b-a17b-79a5c9c2fed0",
        "cursor": {
          "ref": "7490aa3d-b6f3-439a-a6c6-f227766f4473",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1b9a89bb-2d2a-4ee7-ac8e-775ccf34f18e"
        },
        "item": {
          "id": "2a2735b5-7796-452b-a17b-79a5c9c2fed0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9edb303a-26f7-43ec-bff9-5b104d623296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161a5b6f-7a93-41d9-aa9c-5f9b4425fea0",
        "cursor": {
          "ref": "5a80b441-6c11-42cb-a00b-95c71ba64a6a",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "eb4c8a13-254b-4313-9e37-f5551f620b30"
        },
        "item": {
          "id": "161a5b6f-7a93-41d9-aa9c-5f9b4425fea0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9f26f7a5-14f7-4910-aee6-048e23590ced",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd26a8e6-259d-42e2-8e4e-18c8cb24f936",
        "cursor": {
          "ref": "16af31ec-d065-4c9a-ba4f-b94d517a1dc9",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "d6fa6272-a1df-4184-a915-d3b8b82b2530"
        },
        "item": {
          "id": "fd26a8e6-259d-42e2-8e4e-18c8cb24f936",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0e0e7f49-7e5a-4888-86f6-4f0d6a9191d2",
          "status": "OK",
          "code": 200,
          "responseTime": 133,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87a778a-15d8-43a9-86b4-6ac4e0969d0b",
        "cursor": {
          "ref": "c4014a05-d9b4-453c-b923-b58755de2200",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "69ce7105-7304-4e7d-b813-9605b001c588"
        },
        "item": {
          "id": "f87a778a-15d8-43a9-86b4-6ac4e0969d0b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c04523fe-cd24-44be-85d7-fe6db3603a4a",
          "status": "OK",
          "code": 200,
          "responseTime": 5953,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bac9900-3f85-4478-bffc-53b2efd7b34a",
        "cursor": {
          "ref": "3ba16fc8-2ddf-492c-a7e8-0517246571f3",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8f1eff31-771b-4786-973a-6955a66290f2"
        },
        "item": {
          "id": "2bac9900-3f85-4478-bffc-53b2efd7b34a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "cc20d4fc-e522-4b52-bdbf-c27b58f0bd42",
          "status": "OK",
          "code": 200,
          "responseTime": 2141,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f738a32-33d5-4555-9244-6dfb07a5d89d",
        "cursor": {
          "ref": "42157a3a-5059-4c49-ba28-59f2bd3c3cfb",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b3c5d554-c3b2-4454-bd01-352d3e678318"
        },
        "item": {
          "id": "7f738a32-33d5-4555-9244-6dfb07a5d89d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3df593b1-3062-44c3-9228-f92fe47c13e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f738a32-33d5-4555-9244-6dfb07a5d89d",
        "cursor": {
          "ref": "42157a3a-5059-4c49-ba28-59f2bd3c3cfb",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b3c5d554-c3b2-4454-bd01-352d3e678318"
        },
        "item": {
          "id": "7f738a32-33d5-4555-9244-6dfb07a5d89d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3df593b1-3062-44c3-9228-f92fe47c13e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67753f1d-ff25-45fd-8390-ce2694990659",
        "cursor": {
          "ref": "e1c313bf-ebf3-4400-8a28-ed3d974f18c9",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "df925ed3-7302-42cf-95bb-b147aec968aa"
        },
        "item": {
          "id": "67753f1d-ff25-45fd-8390-ce2694990659",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "341b6811-cf2a-4ff1-8193-14e907ad61fc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b39952-fc88-43d4-ba3d-8287259b94c4",
        "cursor": {
          "ref": "482c5a05-07a5-4907-ae61-6b2c5cb75acf",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "27da676f-7e36-42af-bd61-79a89d485f11"
        },
        "item": {
          "id": "87b39952-fc88-43d4-ba3d-8287259b94c4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "08874468-a3e4-4e12-be4b-e819c908e3c6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}